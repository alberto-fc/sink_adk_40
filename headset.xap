	MODULE	crt0
	.ENHANCED
	.LARGE	       ; Not really, but we need the space for DEBUG

	INCLUDE native_if.inc

; Define the segment layout

	.SEG	VAREND
	.PACK	{INIT, VAR, VAREND}, {H'500, H'900}
	.PACK	{CONST, INITC}, {H'7400, H'D400}

; This segment holds stabs debug info and doesn't make it onto bluecore

	.CSEG	DEBUG
	ORG	H'10000

; Put labels at selected positions so
; we can deduce segment size and placement

	.SEG	INIT
INIT:
	.SEG	VAR
VAR:
	.SEG	VAREND
VAREND:
	.SEG	CONST
CONST:
	.SEG	INITC
INITC:

$XAP_AH  EQU H'ffe0
$XAP_AL  EQU H'ffe1
$XAP_UXH EQU H'ffe2
$XAP_UXL EQU H'ffe3
$XAP_UY	 EQU H'ffe4

; Logical address of native globals and stack
; Should these be derived instead?
NATIVE_GLOBALS_LOGICAL_ADDRESS    EQU	H'0500
NATIVE_STACK_LOGICAL_ADDRESS      EQU	H'0100

; Stack cover for Assisted mode
$ASSISTED_STACK_COVER   CEQU   SHARED_STACK_COVER

; Put the version number at the start of the CONST segment

	.SEG	CONST
	DC	12800 ; updated by Makefile from syscalls

; ****************************************************************************
; Startup code
; ****************************************************************************

	.CODE
	ORG	H'0000
	
	ld    al,#VAR-INIT  ; Size of INIT segment
	beq   skip_init
	ld    ah,#INITC ; Start of const. 
	ld    x,#NATIVE_GLOBALS_LOGICAL_ADDRESS ; Start of globals

init_vars:
        ; Copy any/all const into globals
	st    x,@(-1,y)
	st    ah,@(-2,y)
	ld    x,@$XAP_AH    ; Source (const) address
	ld    ah,@(0,x)     ; Load the contents of the source address
	ld    x,@(-1,y)     ; Destination (globals) address
	st    ah,@(0,x)

	;Increment source and destination
	ld    ah,@(-2,y)
	add   ah,#1
	ld    x,@(-1,y)
	add   x,#1
      
	sub   al,#1
	bne   init_vars
skip_init:
	

	; AL is now zero
	ld    ah,#VAREND-VAR  ; Size of BSS segment
	beq   skip_zero
	ld    x,#VAR
loop_zero:
	st    al,@(0,x)
	add   x,#1
	sub   ah,#1
	bne   loop_zero
skip_zero:

	; call init code, normally empty
	bsr   $__init

	; pause waiting for the debugger, if appropriate
	bsr $_NativePauseForDebug

	ld    ah,#0
	ld    al,#0
	bsr   $_main

	; Main may exit by returning or by explicitly calling $exit.
	; In either case exit code will be in AL
	; Note 'real' programs are unlikely to exit.
	bra   $_exit

$_abort:
	; Exit abnormally
	ld    al,#1
	bra   $_exit

;.import _exit
	ENDMOD
	MODULE	malloc
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_malloc:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#0
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	malloc
	MODULE	free
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_free:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#1
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	free
	MODULE	realloc
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_realloc:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#2
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	realloc
	MODULE	memmove
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_memmove:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#3
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	memmove
	MODULE	exit
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_exit:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#4
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	exit
	MODULE	Panic
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_Panic:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#6
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	Panic
	MODULE	PanicNull
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PanicNull:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#7
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PanicNull
	MODULE	PanicNotNull
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PanicNotNull:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#8
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PanicNotNull
	MODULE	PanicUnlessMalloc
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PanicUnlessMalloc:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#9
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PanicUnlessMalloc
	MODULE	UtilCompare
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_UtilCompare:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#10
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	UtilCompare
	MODULE	UtilFind
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_UtilFind:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#11
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	UtilFind
	MODULE	UtilGetNumber
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_UtilGetNumber:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#12
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	UtilGetNumber
	MODULE	UtilHash
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_UtilHash:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#13
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	UtilHash
	MODULE	UtilRandom
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_UtilRandom:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#14
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	UtilRandom
	MODULE	MessageSendLater
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageSendLater:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#16
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageSendLater
	MODULE	MessageCancelFirst
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageCancelFirst:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#17
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageCancelFirst
	MODULE	MessageSendConditionally
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageSendConditionally:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#19
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageSendConditionally
	MODULE	MessageFlushTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageFlushTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#21
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageFlushTask
	MODULE	MessageSystemTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageSystemTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#22
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageSystemTask
	MODULE	PsStore
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsStore:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#23
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PsStore
	MODULE	PsRetrieve
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsRetrieve:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#24
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PsRetrieve
	MODULE	PsFlood
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsFlood:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#25
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PsFlood
	MODULE	PsFreeCount
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsFreeCount:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#26
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PsFreeCount
	MODULE	PsFullRetrieve
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsFullRetrieve:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#27
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PsFullRetrieve
	MODULE	BootGetMode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_BootGetMode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#28
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	BootGetMode
	MODULE	BootSetMode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_BootSetMode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#29
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	BootSetMode
	MODULE	MessagePioTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessagePioTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#48
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessagePioTask
	MODULE	PioDebounce32
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PioDebounce32:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#49
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PioDebounce32
	MODULE	PioGet32
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PioGet32:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#50
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PioGet32
	MODULE	PioSet32
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PioSet32:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#51
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PioSet32
	MODULE	PioSetDir32
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PioSetDir32:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#53
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PioSetDir32
	MODULE	PioSetMapPins32
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PioSetMapPins32:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#57
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	PioSetMapPins32
	MODULE	NativePauseForDebug
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_NativePauseForDebug:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#60
	bra $common_trap_code
trapset_24	EQU	$trapset_24
	ENDMOD	NativePauseForDebug
	MODULE	MessageSinkTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageSinkTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#61
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	MessageSinkTask
	MODULE	MessageSinkGetTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageSinkGetTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#62
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	MessageSinkGetTask
	MODULE	SinkSlack
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkSlack:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#63
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkSlack
	MODULE	SinkClaim
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkClaim:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#64
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkClaim
	MODULE	SinkMap
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkMap:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#65
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkMap
	MODULE	SinkFlush
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkFlush:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#66
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkFlush
	MODULE	SourceSize
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceSize:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#68
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceSize
	MODULE	SourceMap
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceMap:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#70
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceMap
	MODULE	SourceDrop
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceDrop:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#72
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceDrop
	MODULE	SourceBoundary
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceBoundary:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#73
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceBoundary
	MODULE	StreamMove
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamMove:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#74
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamMove
	MODULE	StreamConnect
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamConnect:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#75
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamConnect
	MODULE	StreamConnectDispose
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamConnectDispose:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#76
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamConnectDispose
	MODULE	StreamDisconnect
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamDisconnect:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#77
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamDisconnect
	MODULE	StreamConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#78
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamConfigure
	MODULE	SourceConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#79
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceConfigure
	MODULE	SinkConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#80
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkConfigure
	MODULE	StreamSourceFromSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamSourceFromSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#81
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamSourceFromSink
	MODULE	StreamSinkFromSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamSinkFromSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#82
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamSinkFromSource
	MODULE	SourceClose
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceClose:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#83
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceClose
	MODULE	SinkClose
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkClose:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#84
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkClose
	MODULE	SinkSynchronise
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkSynchronise:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#86
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkSynchronise
	MODULE	SourceSynchronise
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SourceSynchronise:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#87
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SourceSynchronise
	MODULE	TransformStart
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformStart:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#88
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	TransformStart
	MODULE	TransformStop
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformStop:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#89
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	TransformStop
	MODULE	TransformDisconnect
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformDisconnect:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#90
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	TransformDisconnect
	MODULE	TransformFromSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformFromSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#93
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	TransformFromSink
	MODULE	TransformConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#94
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	TransformConfigure
	MODULE	StreamRegionSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamRegionSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#95
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamRegionSource
	MODULE	TransformAdpcmDecode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformAdpcmDecode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#98
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	TransformAdpcmDecode
	MODULE	StreamRingtoneSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamRingtoneSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#106
	bra $common_trap_code
trapset_10	EQU	$trapset_10
	ENDMOD	StreamRingtoneSource
	MODULE	StreamAudioSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamAudioSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#107
	bra $common_trap_code
trapset_10	EQU	$trapset_10
	ENDMOD	StreamAudioSource
	MODULE	StreamAudioSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamAudioSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#108
	bra $common_trap_code
trapset_10	EQU	$trapset_10
	ENDMOD	StreamAudioSink
	MODULE	StreamScoSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamScoSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#110
	bra $common_trap_code
trapset_10	EQU	$trapset_10
	ENDMOD	StreamScoSink
	MODULE	SinkGetScoHandle
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkGetScoHandle:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#111
	bra $common_trap_code
trapset_10	EQU	$trapset_10
	ENDMOD	SinkGetScoHandle
	MODULE	VmSendRfcommPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmSendRfcommPrim:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#114
	bra $common_trap_code
trapset_12	EQU	$trapset_12
	ENDMOD	VmSendRfcommPrim
	MODULE	StreamRfcommSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamRfcommSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#115
	bra $common_trap_code
trapset_12	EQU	$trapset_12
	ENDMOD	StreamRfcommSink
	MODULE	SinkGetRfcommConnId
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkGetRfcommConnId:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#116
	bra $common_trap_code
trapset_12	EQU	$trapset_12
	ENDMOD	SinkGetRfcommConnId
	MODULE	VmSendL2capPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmSendL2capPrim:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#117
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmSendL2capPrim
	MODULE	VmSendDmPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmSendDmPrim:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#118
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmSendDmPrim
	MODULE	VmSendSdpPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmSendSdpPrim:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#119
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmSendSdpPrim
	MODULE	VmGetHandleFromPointer
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmGetHandleFromPointer:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#120
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmGetHandleFromPointer
	MODULE	VmGetPointerFromHandle
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmGetPointerFromHandle:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#121
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmGetPointerFromHandle
	MODULE	MessageBlueStackTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageBlueStackTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#122
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	MessageBlueStackTask
	MODULE	StreamL2capSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamL2capSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#123
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	StreamL2capSink
	MODULE	SinkGetL2capCid
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkGetL2capCid:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#124
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	SinkGetL2capCid
	MODULE	SinkGetBdAddr
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_SinkGetBdAddr:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#125
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	SinkGetBdAddr
	MODULE	StreamSinksFromBdAddr
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamSinksFromBdAddr:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#126
	bra $common_trap_code
trapset_9	EQU	$trapset_9
	ENDMOD	StreamSinksFromBdAddr
	MODULE	FileFind
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_FileFind:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#131
	bra $common_trap_code
trapset_18	EQU	$trapset_18
	ENDMOD	FileFind
	MODULE	StreamFileSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamFileSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#134
	bra $common_trap_code
trapset_18	EQU	$trapset_18
	ENDMOD	StreamFileSource
	MODULE	StreamKalimbaSink
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_StreamKalimbaSink:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#135
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	StreamKalimbaSink
	MODULE	KalimbaLoad
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_KalimbaLoad:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#136
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	KalimbaLoad
	MODULE	KalimbaPowerOff
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_KalimbaPowerOff:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#137
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	KalimbaPowerOff
	MODULE	KalimbaSendMessage
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_KalimbaSendMessage:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#138
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	KalimbaSendMessage
	MODULE	KalimbaSendLongMessage
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_KalimbaSendLongMessage:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#139
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	KalimbaSendLongMessage
	MODULE	MessageKalimbaTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageKalimbaTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#140
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	MessageKalimbaTask
	MODULE	TransformRtpSbcEncode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpSbcEncode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#143
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	TransformRtpSbcEncode
	MODULE	TransformRtpSbcDecode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpSbcDecode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#144
	bra $common_trap_code
trapset_17	EQU	$trapset_17
	ENDMOD	TransformRtpSbcDecode
	MODULE	TransformRtpMp3Encode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpMp3Encode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#145
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	TransformRtpMp3Encode
	MODULE	TransformRtpMp3Decode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpMp3Decode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#146
	bra $common_trap_code
trapset_17	EQU	$trapset_17
	ENDMOD	TransformRtpMp3Decode
	MODULE	TransformRtpAacDecode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpAacDecode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#147
	bra $common_trap_code
trapset_17	EQU	$trapset_17
	ENDMOD	TransformRtpAacDecode
	MODULE	I2cTransfer
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_I2cTransfer:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#149
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	I2cTransfer
	MODULE	PsuGetVregEn
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsuGetVregEn:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#164
	bra $common_trap_code
trapset_23	EQU	$trapset_23
	ENDMOD	PsuGetVregEn
	MODULE	PsuConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PsuConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#165
	bra $common_trap_code
trapset_23	EQU	$trapset_23
	ENDMOD	PsuConfigure
	MODULE	ChargerConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_ChargerConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#166
	bra $common_trap_code
trapset_6	EQU	$trapset_6
	ENDMOD	ChargerConfigure
	MODULE	MessageChargerTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageChargerTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#168
	bra $common_trap_code
trapset_25	EQU	$trapset_25
	ENDMOD	MessageChargerTask
	MODULE	ChargerDebounce
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_ChargerDebounce:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#169
	bra $common_trap_code
trapset_25	EQU	$trapset_25
	ENDMOD	ChargerDebounce
	MODULE	MicbiasConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MicbiasConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#170
	bra $common_trap_code
trapset_21	EQU	$trapset_21
	ENDMOD	MicbiasConfigure
	MODULE	LedConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_LedConfigure:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#171
	bra $common_trap_code
trapset_22	EQU	$trapset_22
	ENDMOD	LedConfigure
	MODULE	PioSetFunction
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_PioSetFunction:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#179
	bra $common_trap_code
trapset_33	EQU	$trapset_33
	ENDMOD	PioSetFunction
	MODULE	VmGetResetSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmGetResetSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#180
	bra $common_trap_code
trapset_34	EQU	$trapset_34
	ENDMOD	VmGetResetSource
	MODULE	VmSendAttPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmSendAttPrim:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#181
	bra $common_trap_code
trapset_35	EQU	$trapset_35
	ENDMOD	VmSendAttPrim
	MODULE	VmClearAdvertisingReportFilter
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmClearAdvertisingReportFilter:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#183
	bra $common_trap_code
trapset_35	EQU	$trapset_35
	ENDMOD	VmClearAdvertisingReportFilter
	MODULE	VmAddAdvertisingReportFilter
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmAddAdvertisingReportFilter:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#184
	bra $common_trap_code
trapset_35	EQU	$trapset_35
	ENDMOD	VmAddAdvertisingReportFilter
	MODULE	VmGetPowerSource
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmGetPowerSource:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#190
	bra $common_trap_code
trapset_34	EQU	$trapset_34
	ENDMOD	VmGetPowerSource
	MODULE	MessageAttTask
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageAttTask:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#197
	bra $common_trap_code
trapset_35	EQU	$trapset_35
	ENDMOD	MessageAttTask
	MODULE	VmGetBdAddrtFromCid
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmGetBdAddrtFromCid:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#200
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmGetBdAddrtFromCid
	MODULE	TransformRtpEncode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpEncode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#208
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	TransformRtpEncode
	MODULE	TransformRtpDecode
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TransformRtpDecode:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#209
	bra $common_trap_code
trapset_17	EQU	$trapset_17
	ENDMOD	TransformRtpDecode
	MODULE	LoaderModeEnter
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_LoaderModeEnter:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#210
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	LoaderModeEnter
	MODULE	VmGetPublicAddress
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmGetPublicAddress:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#226
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmGetPublicAddress
	MODULE	putchar
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_putchar:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#5
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	putchar
	MODULE	MessageWait
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageWait:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#18
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageWait
	MODULE	MessageFree
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_MessageFree:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#20
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	MessageFree
	MODULE	TestPerform_
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_TestPerform_:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#151
	bra $common_trap_code
trapset_2	EQU	$trapset_2
	ENDMOD	TestPerform_
	MODULE	trapset_0
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_0:
	ENDMOD	trapset_0
	MODULE	trapset_1
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_1:
	ENDMOD	trapset_1
	MODULE	trapset_6
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_6:
	ENDMOD	trapset_6
	MODULE	trapset_9
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_9:
	ENDMOD	trapset_9
	MODULE	trapset_10
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_10:
	ENDMOD	trapset_10
	MODULE	trapset_12
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_12:
	ENDMOD	trapset_12
	MODULE	trapset_14
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_14:
	ENDMOD	trapset_14
	MODULE	trapset_15
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_15:
	ENDMOD	trapset_15
	MODULE	trapset_16
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_16:
	ENDMOD	trapset_16
	MODULE	trapset_17
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_17:
	ENDMOD	trapset_17
	MODULE	trapset_18
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_18:
	ENDMOD	trapset_18
	MODULE	trapset_21
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_21:
	ENDMOD	trapset_21
	MODULE	trapset_22
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_22:
	ENDMOD	trapset_22
	MODULE	trapset_23
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_23:
	ENDMOD	trapset_23
	MODULE	trapset_24
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_24:
	ENDMOD	trapset_24
	MODULE	trapset_25
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_25:
	ENDMOD	trapset_25
	MODULE	trapset_33
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_33:
	ENDMOD	trapset_33
	MODULE	trapset_34
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_34:
	ENDMOD	trapset_34
	MODULE	trapset_35
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_35:
	ENDMOD	trapset_35
	MODULE	common_trap_code
       .LARGE
       .ENHANCED
       .CODE

	INCLUDE native_if.inc

$common_trap_code:

	st	x,@(0,y) 
	ld	x,@SHARED_TRAP_HANDLER_ASSISTED_HWRD
	st	x,@(-1,y)
	ld	xh,@(-1,y)
	bra	@SHARED_TRAP_HANDLER_ASSISTED_LWRD

	ENDMOD 
	MODULE	VmPutChar
	.ENHANCED
	.CSEG	CODE
	.LARGE

	INCLUDE native_if.inc

$_VmPutChar:
	enterl  #SHARED_TRAP_HANDLER_STACK_USAGE
	ld    x,#32
	bra $common_trap_code
trapset_0	EQU	$trapset_0
	ENDMOD	VmPutChar
	MODULE	trapset_2
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_2:
	ENDMOD	trapset_2
	MODULE	e_t_c

	.ALL
e_t_c:
	ENDMOD
	MODULE	main
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleCLMessage:
	enterl	#7
?LBB_handleCLMessage:
?LBB2:
	ld	AL,#-H'5000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'006A)
	bcc	?L1
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE47,X)
	brxl
	.SEG	CONST
?JTBASE47:
	.CODE
?L47:
	.SEG	CONST
	dc	lwrd(?L3-?L47)
	dc	lwrd(?L25-?L47)
	dc	lwrd(?L24-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L20-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L8-?L47)
	dc	lwrd(?L7-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L23-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L28-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L18-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L9-?L47)
	dc	lwrd(?L10-?L47)
	dc	lwrd(?L16-?L47)
	dc	lwrd(?L15-?L47)
	dc	lwrd(?L11-?L47)
	dc	lwrd(?L12-?L47)
	dc	lwrd(?L13-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L17-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L6-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L30-?L47)
	dc	lwrd(?L31-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L40-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L1-?L47)
	dc	lwrd(?L43-?L47)
	dc	lwrd(?L44-?L47)
	dc	lwrd(?L1-?L47)
	.CODE
?L3:
	ld	X,@(H'0007,Y)
	tst	@(0,X)
	bne	?L4
	bsr	_sinkInitCodecTask
	bra	(?L1)
?L4:
	bsr	$_Panic
	bra	(?L1)
?L6:
	ld	AL,#($_theSink)
	bsr	$_ConnectionReadInquiryTx
	bra	(?L1)
?L7:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	ld	AL,@$_theSink+H'0038
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@$_theSink+H'0038
	ld	AL,#($_theSink)
	bsr	$_ConnectionReadLocalName
	bra	(?L1)
?L8:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkWriteEirData
	bra	(?L1)
?L9:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'0001
	asl	#H'0002
	ld	AH,@$_theSink+H'0036
	and	AH,#-H'0005
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0036
	bra	(?L1)
?L10:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandlePinCodeInd
	bra	(?L1)
?L11:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleUserConfirmationInd
	bra	(?L1)
?L12:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleUserPasskeyInd
	bra	(?L1)
?L13:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleUserPasskeyNotificationInd
	bra	(?L1)
?L15:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleRemoteIoCapabilityInd
	bra	(?L1)
?L16:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleIoCapabilityInd
	bra	(?L1)
?L17:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleAuthoriseInd
	bra	(?L1)
?L18:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkHandleAuthenticateCfm
	bra	(?L1)
?L20:
	ld	AL,@(H'0007,Y)
	bsr	$_inquiryHandleResult
	bra	(?L1)
?L23:
	ld	AL,@(H'0007,Y)
	bsr	$_DutHandleLocalAddr
	bra	(?L1)
?L24:
	ld	AL,@(H'0007,Y)
	bsr	$_linkPolicyHandleRoleInd
	bra	(?L1)
?L25:
	ld	AL,@(H'0007,Y)
	bsr	$_linkPolicyHandleRoleCfm
	bra	(?L1)
?L28:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L1
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0003,Y)
	bsr	$_sinkAvrcpAclClosed
	bra	(?L1)
?L30:
	ld	AL,@(H'0007,Y)
	bsr	$_bleHandleScanResponse
	bra	(?L1)
?L31:
	ld	AL,@(H'0007,Y)
	bsr	$_bleHandleSetAdvertisingData
	bra	(?L1)
?L40:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkBleGapAddDeviceWhiteListCfm
	bra	(?L1)
?L43:
	ld	X,@(H'0007,Y)
?LBB3:
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UXL
	bsr	$_ConnectionDmBleAcceptConnectionParUpdateResponse
?LBE3:
	bra	(?L1)
?L44:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkBleSimplePairingCompleteInd
?L1:
?LBE2:
?LBE_handleCLMessage:
	leavel	#7
_handleUEMessage:
	enterl	#15
?LBB_handleUEMessage:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB4:
	bsr	$_stateManagerGetState
	st	AL,@(H'0007,Y)
	ld	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	AL,@(H'0006,Y)
	cmp	AL,#(H'0001+H'46FF)
	bcc	?L49
	ld	X,@$_theSink+H'0005
	tst	@(H'0006,X)
	beq	?L50
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4707
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0006,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4707
	bsr	$_MessageSendLater
?L50:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4741
	bsr	$_MessageCancelAll
	bsr	$_LEDManagerCheckTimeoutState
	ld	AL,@(H'0006,Y)
	add	AL,#-H'400D
	cmp	AL,#(H'0001+H'0001)
	bcc	?L49
	ld	AL,@$_theSink+H'0037
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L49
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'400D
	bne	?L52
	ld	AL,#H'400E
	st	AL,@(H'0006,Y)
	bra	(?L49)
?L52:
	ld	AH,#H'400D
	st	AH,@(H'0006,Y)
?L49:
	ld	AL,@(H'0006,Y)
	add	AL,#-H'4001
	cmp	AL,#(H'0001+H'0797)
	bcc	?L54
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE460,X)
	brxl
	.SEG	CONST
?JTBASE460:
	.CODE
?L460:
	.SEG	CONST
	dc	lwrd(?L58-?L460)
	dc	lwrd(?L65-?L460)
	dc	lwrd(?L112-?L460)
	dc	lwrd(?L72-?L460)
	dc	lwrd(?L77-?L460)
	dc	lwrd(?L82-?L460)
	dc	lwrd(?L89-?L460)
	dc	lwrd(?L96-?L460)
	dc	lwrd(?L98-?L460)
	dc	lwrd(?L99-?L460)
	dc	lwrd(?L100-?L460)
	dc	lwrd(?L102-?L460)
	dc	lwrd(?L105-?L460)
	dc	lwrd(?L107-?L460)
	dc	lwrd(?L217-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L221-?L460)
	dc	lwrd(?L222-?L460)
	dc	lwrd(?L223-?L460)
	dc	lwrd(?L133-?L460)
	dc	lwrd(?L103-?L460)
	dc	lwrd(?L104-?L460)
	dc	lwrd(?L213-?L460)
	dc	lwrd(?L210-?L460)
	dc	lwrd(?L355-?L460)
	dc	lwrd(?L242-?L460)
	dc	lwrd(?L243-?L460)
	dc	lwrd(?L244-?L460)
	dc	lwrd(?L245-?L460)
	dc	lwrd(?L384-?L460)
	dc	lwrd(?L246-?L460)
	dc	lwrd(?L333-?L460)
	dc	lwrd(?L331-?L460)
	dc	lwrd(?L255-?L460)
	dc	lwrd(?L254-?L460)
	dc	lwrd(?L256-?L460)
	dc	lwrd(?L131-?L460)
	dc	lwrd(?L132-?L460)
	dc	lwrd(?L259-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L325-?L460)
	dc	lwrd(?L329-?L460)
	dc	lwrd(?L330-?L460)
	dc	lwrd(?L326-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L136-?L460)
	dc	lwrd(?L358-?L460)
	dc	lwrd(?L359-?L460)
	dc	lwrd(?L363-?L460)
	dc	lwrd(?L364-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L275-?L460)
	dc	lwrd(?L276-?L460)
	dc	lwrd(?L277-?L460)
	dc	lwrd(?L293-?L460)
	dc	lwrd(?L296-?L460)
	dc	lwrd(?L297-?L460)
	dc	lwrd(?L299-?L460)
	dc	lwrd(?L300-?L460)
	dc	lwrd(?L301-?L460)
	dc	lwrd(?L302-?L460)
	dc	lwrd(?L303-?L460)
	dc	lwrd(?L311-?L460)
	dc	lwrd(?L312-?L460)
	dc	lwrd(?L313-?L460)
	dc	lwrd(?L314-?L460)
	dc	lwrd(?L315-?L460)
	dc	lwrd(?L316-?L460)
	dc	lwrd(?L317-?L460)
	dc	lwrd(?L294-?L460)
	dc	lwrd(?L295-?L460)
	dc	lwrd(?L304-?L460)
	dc	lwrd(?L307-?L460)
	dc	lwrd(?L309-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L334-?L460)
	dc	lwrd(?L336-?L460)
	dc	lwrd(?L338-?L460)
	dc	lwrd(?L340-?L460)
	dc	lwrd(?L55-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L274-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L353-?L460)
	dc	lwrd(?L373-?L460)
	dc	lwrd(?L375-?L460)
	dc	lwrd(?L377-?L460)
	dc	lwrd(?L378-?L460)
	dc	lwrd(?L379-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L349-?L460)
	dc	lwrd(?L344-?L460)
	dc	lwrd(?L352-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L215-?L460)
	dc	lwrd(?L216-?L460)
	dc	lwrd(?L188-?L460)
	dc	lwrd(?L211-?L460)
	dc	lwrd(?L360-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L298-?L460)
	dc	lwrd(?L183-?L460)
	dc	lwrd(?L185-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L287-?L460)
	dc	lwrd(?L291-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L368-?L460)
	dc	lwrd(?L369-?L460)
	dc	lwrd(?L365-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L290-?L460)
	dc	lwrd(?L292-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L413-?L460)
	dc	lwrd(?L418-?L460)
	dc	lwrd(?L420-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L437-?L460)
	dc	lwrd(?L438-?L460)
	dc	lwrd(?L441-?L460)
	dc	lwrd(?L444-?L460)
	dc	lwrd(?L439-?L460)
	dc	lwrd(?L440-?L460)
	dc	lwrd(?L442-?L460)
	dc	lwrd(?L443-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L414-?L460)
	dc	lwrd(?L308-?L460)
	dc	lwrd(?L310-?L460)
	dc	lwrd(?L320-?L460)
	dc	lwrd(?L321-?L460)
	dc	lwrd(?L458-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L322-?L460)
	dc	lwrd(?L323-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L324-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L115-?L460)
	dc	lwrd(?L128-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L152-?L460)
	dc	lwrd(?L166-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L227-?L460)
	dc	lwrd(?L193-?L460)
	dc	lwrd(?L194-?L460)
	dc	lwrd(?L191-?L460)
	dc	lwrd(?L218-?L460)
	dc	lwrd(?L220-?L460)
	dc	lwrd(?L197-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L233-?L460)
	dc	lwrd(?L233-?L460)
	dc	lwrd(?L241-?L460)
	dc	lwrd(?L224-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L112-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L101-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L251-?L460)
	dc	lwrd(?L251-?L460)
	dc	lwrd(?L251-?L460)
	dc	lwrd(?L251-?L460)
	dc	lwrd(?L267-?L460)
	dc	lwrd(?L227-?L460)
	dc	lwrd(?L134-?L460)
	dc	lwrd(?L150-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L341-?L460)
	dc	lwrd(?L264-?L460)
	dc	lwrd(?L265-?L460)
	dc	lwrd(?L266-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L142-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L138-?L460)
	dc	lwrd(?L141-?L460)
	dc	lwrd(?L137-?L460)
	dc	lwrd(?L270-?L460)
	dc	lwrd(?L271-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L382-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L58-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L343-?L460)
	dc	lwrd(?L319-?L460)
	dc	lwrd(?L370-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L109-?L460)
	dc	lwrd(?L262-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L318-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L386-?L460)
	dc	lwrd(?L395-?L460)
	dc	lwrd(?L383-?L460)
	dc	lwrd(?L412-?L460)
	dc	lwrd(?L415-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L445-?L460)
	dc	lwrd(?L446-?L460)
	dc	lwrd(?L420-?L460)
	dc	lwrd(?L418-?L460)
	dc	lwrd(?L416-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	dc	lwrd(?L54-?L460)
	.CODE
?L55:
	ld	X,#H'0000
	ld	AH,@$_theSink+H'0036
	lsr	#H'0002
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L56
	ld	X,#H'0001
?L56:
	st	X,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'0001
	bsr	$_ConnectionSmSecModeConfig
	bra	(?L54)
?L58:
	bsr	$_stateManagerGetState
	ld	AL,@(H'0006,Y)
	bsr	_IndicateEvent
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bsr	$_stateManagerPowerOn
	bsr	$_configManagerReadSessionData
	ld	AL,@$_theSink+H'0037
	or	AL,#H'0040
	st	AL,@$_theSink+H'0037
	ld	X,@$_theSink+H'0005
	tst	@(H'000F,X)
	beq	?L61
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000F,X)
	umult	#-H'15A0
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4737
	bsr	$_MessageSendLater
?L61:
	ld	AH,@$_theSink+H'0017
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L62
	ld	AL,@$_theSink+H'0036
	and	AL,#H'7FFF
	st	AL,@$_theSink+H'0036
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0009,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4720
	bsr	$_MessageSendLater
	bra	(?L63)
?L62:
	ld	AL,@$_theSink+H'0036
	or	AL,#-H'8000
	st	AL,@$_theSink+H'0036
?L63:
	ld	X,@$_theSink+H'0005
	tst	@(H'001A,X)
	beq	?L64
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'001A,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendLater
?L64:
	bsr	$_sinkBlePowerOnEvent
	bra	(?L54)
?L65:
	tst	@(H'0007,Y)
	bne	?L66
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
?L66:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L67
	bsr	$_configManagerWriteSessionData
	bsr	$_configManagerWriteDspData
	bsr	$_stateManagerEnterLimboState
	bsr	$_AuthResetConfirmationFlags
	ld	AL,#H'0000
	bsr	$_VolumeUpdateMuteStatusAllOutputs
	ld	AL,#H'0000
	ld	AH,#H'000A
	bsr	$_VolumeSetHfpMicrophoneGain
	bsr	$_sinkClearQueueudEvent
	ld	X,@$_theSink+H'0005
	tst	@(H'000F,X)
	beq	?L68
	ld	AL,#($_theSink)
	ld	AH,#H'4737
	bsr	$_MessageCancelAll
?L68:
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'4784
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageCancelAll
	bsr	$_sinkBlePowerOffEvent
	bra	(?L54)
?L67:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L72:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L73
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L74
	ld	AL,#H'0001
	bsr	$_sinkCancelVoiceDial
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L54)
?L74:
	ld	AL,#H'0001
	bsr	$_sinkInitiateVoiceDial
	bra	(?L54)
?L73:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L77:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L78
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L79
	ld	AL,#H'0002
	bsr	$_sinkCancelVoiceDial
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L54)
?L79:
	ld	AL,#H'0002
	bsr	$_sinkInitiateVoiceDial
	bra	(?L54)
?L78:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L82:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L83
	ld	AH,@$_theSink+H'001A
	lsr	#H'0002
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L84
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L85
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4004
	bsr	$_MessageSend
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bra	(?L54)
?L85:
	ld	AL,#H'0001
	bsr	$_sinkInitiateLNR
	bra	(?L54)
?L84:
	ld	AL,#H'0001
	bsr	$_sinkInitiateLNR
	bra	(?L54)
?L83:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L89:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L90
	ld	AH,@$_theSink+H'001A
	lsr	#H'0002
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L91
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L92
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4004
	bsr	$_MessageSend
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bra	(?L54)
?L92:
	ld	AL,#H'0002
	bsr	$_sinkInitiateLNR
	bra	(?L54)
?L91:
	ld	AL,#H'0002
	bsr	$_sinkInitiateLNR
	bra	(?L54)
?L90:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L96:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0005
	beq	?L97
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
?L97:
	ld	AL,#H'0001
	bsr	$_sinkAnswerOrRejectCall
	bra	(?L54)
?L98:
	ld	AL,#H'0000
	bsr	$_sinkAnswerOrRejectCall
	bra	(?L54)
?L99:
	bsr	$_sinkHangUpCall
	bra	(?L54)
?L100:
	ld	AL,@(H'0006,Y)
	bsr	$_sinkTransferToggle
	bra	(?L54)
?L101:
	bsr	$_sinkCheckForAudioTransfer
	bra	(?L54)
?L102:
	ld	AL,#H'0002
	bsr	$_VolumeToggleMute
	bra	(?L54)
?L103:
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
	bra	(?L54)
?L104:
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_VolumeUpdateMuteState
	bra	(?L54)
?L105:
	ld	AL,#H'0000
	bsr	$_VolumeModifyAndUpdateRoutedAudioMainVolume
	ld	X,@$_theSink+H'0005
	tst	@(H'0017,X)
	beq	?L54
	ld	AL,#($_theSink)
	ld	AH,#H'4766
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0017,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4766
	bsr	$_MessageSendLater
	bra	(?L54)
?L107:
	ld	AL,#H'0001
	bsr	$_VolumeModifyAndUpdateRoutedAudioMainVolume
	ld	X,@$_theSink+H'0005
	tst	@(H'0017,X)
	beq	?L54
	ld	AL,#($_theSink)
	ld	AH,#H'4766
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0017,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4766
	bsr	$_MessageSendLater
	bra	(?L54)
?L109:
	ld	X,@$_theSink+H'0005
	tst	@(H'0017,X)
	beq	?L54
	bsr	$_storeCurrentSinkVolume
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L112:
	tst	@(H'0007,Y)
	beq	?L113
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0002
	beq	?L113
	ld	AL,@$_theSink+H'0033
	and	AL,#H'7FFF
	st	AL,@$_theSink+H'0033
	ld	AL,#H'0001
	bsr	$_stateManagerEnterConnDiscoverableState
	bra	(?L54)
?L113:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bra	(?L54)
?L115:
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0007
	beq	?L116
	ld	AH,@$_theSink+H'0018
	lsr	#H'0006
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L118
	cmp	AH,#H'0001
	ble	?L124
	cmp	AH,#H'0002
	beq	?L119
	bra	(?L124)
?L118:
	ld	AL,#H'0000
	bra	(?L465)
?L119:
	bsr	$_ConnectionTrustedDeviceListSize
	cmp	AL,#H'0000
	bne	?L124
?L465:
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4002
	bsr	$_MessageSend
	bra	(?L116)
?L124:
	ld	AH,@$_theSink+H'0017
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L116
	ld	AL,#H'0001
	bsr	$_stateManagerEnterConnectableState
?L116:
	ld	AL,@$_theSink+H'0037
	and	AL,#-H'0041
	st	AL,@$_theSink+H'0037
	bra	(?L54)
?L128:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0002
	bne	?L54
	ld	AL,#H'0000
	bsr	$_stateManagerEnterConnectableState
	bra	(?L54)
?L131:
	bsr	$_sinkPairingAcceptRes
	bra	(?L54)
?L132:
	bsr	$_sinkPairingRejectRes
	bra	(?L54)
?L133:
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0081
	st	AL,@$_theSink+H'0036
?L134:
	bsr	$_slcEstablishSLCRequest
	bsr	$_stateManagerGetState
	cmp	AL,#H'0001
	bne	?L54
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4734
	bsr	$_MessageSend
	bra	(?L54)
?L136:
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_inquiryPair
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L137:
	bsr	$_inquiryResume
	bra	(?L54)
?L138:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L139
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473D
	bsr	$_MessageSendLater
	bra	(?L54)
?L139:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bra	(?L54)
?L141:
	bsr	$_inquiryTimeout
	bra	(?L54)
?L142:
?LBB5:
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
?L149:
	ld	X,@(H'0009,Y)
	add	X,#H'0001
	st	X,@(H'000A,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_HfpLinkGetSlcSink
	cmp	AL,#H'0000
	beq	?L145
	tst	@(H'0003,Y)
	beq	?L145
	ld	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_HfpLinkGetAudioSink
	ld	AL,@(H'0004,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	bne	?L145
	ld	AL,@(H'0003,Y)
	bsr	$_ConnectionSmEncryptionKeyRefreshSink
?L145:
	ld	AH,@(H'0009,Y)
	add	AH,#H'0001
	st	AH,@(H'0009,Y)
	cmp	AH,#H'0001
	bcz	?L149
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'000F,X)
	umult	#-H'15A0
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4737
	bsr	$_MessageSendLater
?LBE5:
	bra	(?L54)
?L150:
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	beq	?L54
	bsr	$_sinkDisableConnectable
	bra	(?L54)
?L152:
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'4002
	beq	?L156
	cmp	AL,#H'408F
	bne	?L153
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471C
	bsr	$_MessageSend
	ld	AH,@$_theSink+H'0017
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L153
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L153
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4002
	bsr	$_MessageSend
	bra	(?L153)
?L156:
	bsr	$_configManagerDefragCheck
	cmp	AL,#H'0000
	beq	?L157
	ld	AL,#H'0001
	bsr	$_configManagerDefrag
?L157:
	ld	AH,@$_theSink+H'001A
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L153
	bsr	$_BootGetMode
	bsr	$_BootSetMode
?L153:
	ld	AH,@$_theSink+H'0019
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L162
	ld	X,@$_theSink+H'0003
	tst	@(H'0076,X)
	beq	?L163
	bsr	$_LedManagerIndicateQueuedEvent
	bra	(?L54)
?L163:
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
	bra	(?L54)
?L162:
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
	bra	(?L54)
?L166:
	bsr	$_gattClientHasNoClients
	cmp	AL,#H'0000
	beq	?L54
	bsr	$_gattServerIsFullyDisconnected
	cmp	AL,#H'0000
	beq	?L54
	ld	X,@(H'0007,Y)
	cmp	X,#(H'0001+H'000C)
	bcc	?L54
	ld	X,@(?JTBASE182,X)
	brxl
	.SEG	CONST
?JTBASE182:
	.CODE
?L182:
	.SEG	CONST
	dc	lwrd(?L172-?L182)
	dc	lwrd(?L172-?L182)
	dc	lwrd(?L172-?L182)
	dc	lwrd(?L174-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	dc	lwrd(?L54-?L182)
	.CODE
?L172:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4002
	bsr	$_MessageSend
	bra	(?L54)
?L174:
	bsr	$_deviceManagerNumConnectedDevs
	st	AL,@(H'000B,Y)
	bsr	$_deviceManagerNumConnectedPeerDevs
	ld	AH,@(H'000B,Y)
	cmp	AH,@$XAP_AL
	bne	?L54
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4002
	bsr	$_MessageSend
	bra	(?L54)
?L183:
	tst	@(H'0007,Y)
	bne	?L54
	bsr	$_stateManagerUpdateLimboState
	bra	(?L54)
?L185:
	tst	@(H'0007,Y)
	bne	?L54
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageCancelAll
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0007,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageSendLater
	bra	(?L54)
?L188:
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L189
	bsr	$_sinkDisconnectAllSlc
	ld	AL,#H'0001
	bsr	$_disconnectAllA2dpAvrcp
?L189:
	bsr	$_deviceManagerRemoveAllDevices
	ld	X,@$_theSink+H'0006
	ld	AL,@(H'0018,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L54
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4034
	bsr	$_MessageSend
	bra	(?L54)
?L191:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0007
	beq	?L54
	bsr	$_stateManagerUpdateLimboState
	bra	(?L54)
?L193:
	ld	AL,@$_theSink+H'003A
	and	AL,#-H'0061
	st	AL,@$_theSink+H'003A
	ld	AL,#($_theSink)
	ld	AH,#H'4719
	bsr	$_MessageCancelAll
	bra	(?L54)
?L194:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L195
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
?L195:
	ld	AH,@$_theSink+H'003A
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0000
	bne	?L54
	ld	AL,@$_theSink+H'003B
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L54
	st	AH,@(0,Y)
	smult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageSendLater
	bra	(?L54)
?L197:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'000B,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471B
	bsr	$_MessageSendLater
	bsr	$_VolumePlayMuteToneQuery
	cmp	AL,#H'0000
	bne	?L54
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L210:
	bsr	$_stateManagerEnterTestModeState
	bra	(?L54)
?L211:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0007
	beq	?L212
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'401C
	bsr	$_MessageSend
?L212:
	bsr	$_enterDutMode
	bra	(?L54)
?L213:
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'0007
	beq	?L214
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'401C
	bsr	$_MessageSend
?L214:
	bsr	$_enterTxContinuousTestMode
	bra	(?L54)
?L215:
	ld	AL,@$_theSink+H'0037
	and	AL,#-H'0002
	st	AL,@$_theSink+H'0037
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L216:
	ld	AL,@$_theSink+H'0037
	or	AL,#H'0001
	st	AL,@$_theSink+H'0037
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L217:
	ld	AL,@$_theSink+H'0037
	ld	AH,@$XAP_AL
	and	AH,#H'0001
	xor	AH,#H'0001
	and	AL,#-H'0002
	or	AL,@$XAP_AH
	st	AL,@$_theSink+H'0037
	bra	(?L54)
?L218:
	ld	X,@$_theSink+H'0005
	tst	@(H'0008,X)
	beq	?L54
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4719
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0008,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4719
	bsr	$_MessageSendLater
	bra	(?L54)
?L220:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4719
	bsr	$_MessageCancelAll
	bra	(?L54)
?L221:
	bsr	$_LedManagerToggleLEDS
	bra	(?L54)
?L222:
	bsr	$_LedManagerEnableLEDS
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L223:
	bsr	$_LedManagerDisableLEDS
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L224:
	bsr	$_LedManagerResetLEDIndications
	bra	(?L54)
?L227:
	bsr	$_sinkRecallQueuedEvent
	bra	(?L54)
?L233:
	tst	@(H'0007,Y)
	bne	?L54
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L241:
	ld	AL,@$_theSink+H'0036
	or	AL,#-H'8000
	st	AL,@$_theSink+H'0036
	bra	(?L54)
?L242:
	bsr	$_sinkPlaceIncomingCallOnHold
	bra	(?L54)
?L243:
	bsr	$_sinkAcceptHeldIncomingCall
	bra	(?L54)
?L244:
	bsr	$_sinkRejectHeldIncomingCall
	bra	(?L54)
?L245:
	ld	AL,#H'0000
	bsr	$_BootSetMode
	bra	(?L54)
?L246:
	bsr	$_enterServiceMode
	bra	(?L54)
?L251:
	tst	@$_theSink+H'0024
	beq	?L54
?LBB6:
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'000C,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#-H'4728
	ld	X,@(H'000C,Y)
	st	AL,@(0,X)
	ld	AL,#H'0004
	ld	AH,@$XAP_UXL
	bsr	$_AudioSetMode
	cmp	AL,#H'0000
	bne	?L54
	ld	AL,@(H'000C,Y)
	bsr	$_free
?LBE6:
	bra	(?L54)
?L254:
	bsr	$_sinkUpdateStoredNumber
	bra	(?L54)
?L255:
	bsr	$_sinkDialStoredNumber
	bra	(?L54)
?L256:
	bsr	$_configManagerRestoreDefaults
	bra	(?L54)
?L259:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L260
	bsr	$_AudioPromptSelectLanguage
	bra	(?L54)
?L260:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bra	(?L54)
?L262:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L54
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L264:
	ld	AL,@(H'0007,Y)
	bsr	$_LEDManagerIndicateState
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0073,X)
	and	AL,#-H'0002
	st	AL,@(H'0073,X)
	bra	(?L54)
?L265:
	ld	AL,@$_theSink+H'0037
	or	AL,#H'0020
	st	AL,@$_theSink+H'0037
	bra	(?L54)
?L266:
	ld	AL,@$_theSink+H'0037
	and	AL,#-H'0021
	st	AL,@$_theSink+H'0037
	bra	(?L54)
?L267:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0002
	beq	?L54
	bsr	$_slcContinueEstablishSLCRequest
	bra	(?L54)
?L270:
	bsr	$_linkPolicyCheckRoles
	bra	(?L54)
?L271:
	ld	X,@$_theSink+H'0005
	tst	@(H'0012,X)
	beq	?L54
	ld	AL,@(H'0005,Y)
	ld	AH,#H'4741
	bsr	$_MessageCancelAll
	ld	AH,@$_theSink+H'0039
	lsr	#H'0008
	ld	AL,@$XAP_AH
	add	AL,#-H'0001
	asl	#H'0008
	ld	AH,@$_theSink+H'0039
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0039
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L54
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0012,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4741
	bsr	$_MessageSendLater
	bra	(?L54)
?L274:
	bsr	$_CreateAudioConnection
	bra	(?L54)
?L275:
	ld	AL,@$_theSink+H'0038
	or	AL,#H'2000
	st	AL,@$_theSink+H'0038
	ld	AL,#H'0005
	bsr	$_AudioSetPower
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L276:
	ld	AL,@$_theSink+H'0038
	and	AL,#-H'2001
	st	AL,@$_theSink+H'0038
	ld	AL,#H'0005
	bsr	$_AudioSetPower
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L277:
	ld	AH,@$_theSink+H'0038
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L278
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4043
	bsr	$_MessageSend
	bra	(?L54)
?L278:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4042
	bsr	$_MessageSend
	bra	(?L54)
?L287:
	ld	AH,@$_theSink+H'0019
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L288
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0018,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageSendLater
	bra	(?L54)
?L288:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L54)
?L290:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L54)
?L291:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L54)
?L292:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L54)
?L293:
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageCancelAll
	bsr	$_sinkAvrcpPlayPause
	bra	(?L54)
?L294:
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageCancelAll
	bsr	$_sinkAvrcpPlay
	bra	(?L54)
?L295:
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageCancelAll
	bsr	$_sinkAvrcpPause
	bra	(?L54)
?L296:
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageCancelAll
	bsr	$_sinkAvrcpStop
	bra	(?L54)
?L297:
	bsr	$_sinkAvrcpSkipForward
	bra	(?L54)
?L298:
	ld	AL,#H'0002
	bsr	$_BootSetMode
	bra	(?L54)
?L299:
	bsr	$_sinkAvrcpSkipBackward
	bra	(?L54)
?L300:
	bsr	$_sinkAvrcpFastForwardPress
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'05DC
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageSendLater
	bra	(?L54)
?L301:
	ld	AL,#($_theSink)
	ld	AH,#H'4049
	bsr	$_MessageCancelAll
	bsr	$_sinkAvrcpFastForwardRelease
	bra	(?L54)
?L302:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'05DC
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageSendLater
	bsr	$_sinkAvrcpRewindPress
	bra	(?L54)
?L303:
	ld	AL,#($_theSink)
	ld	AH,#H'404B
	bsr	$_MessageCancelAll
	bsr	$_sinkAvrcpRewindRelease
	bra	(?L54)
?L304:
	bsr	$_sinkAvrcpGetNumberConnections
	cmp	AL,#H'0001
	bcz	?L305
	bsr	$_sinkAvrcpToggleActiveConnection
	bra	(?L54)
?L305:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L307:
	bsr	$_sinkAvrcpNextGroupPress
	bra	(?L54)
?L308:
	bsr	$_sinkAvrcpNextGroupRelease
	bra	(?L54)
?L309:
	bsr	$_sinkAvrcpPreviousGroupPress
	bra	(?L54)
?L310:
	bsr	$_sinkAvrcpPreviousGroupRelease
	bra	(?L54)
?L311:
	ld	AL,#H'0001
	bsr	$_sinkAvrcpShuffle
	bra	(?L54)
?L312:
	ld	AL,#H'0002
	bsr	$_sinkAvrcpShuffle
	bra	(?L54)
?L313:
	ld	AL,#H'0003
	bsr	$_sinkAvrcpShuffle
	bra	(?L54)
?L314:
	ld	AL,#H'0001
	bsr	$_sinkAvrcpRepeat
	bra	(?L54)
?L315:
	ld	AL,#H'0002
	bsr	$_sinkAvrcpRepeat
	bra	(?L54)
?L316:
	ld	AL,#H'0003
	bsr	$_sinkAvrcpRepeat
	bra	(?L54)
?L317:
	ld	AL,#H'0004
	bsr	$_sinkAvrcpRepeat
	bra	(?L54)
?L318:
	ld	AL,@(H'000F,Y)
	bsr	$_sinkAvrcpSetActiveConnectionFromBdaddr
	bra	(?L54)
?L319:
?LBB7:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	ld	AL,@$_theSink+H'0031
	ld	X,@(H'000F,Y)
	ld	AH,@(0,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'002B,X)
?LBE7:
	bra	(?L54)
?L320:
	bsr	$_handleAvrcpQualificationVolumeUp
	bra	(?L54)
?L321:
	bsr	$_handleAvrcpQualificationVolumeDown
	bra	(?L54)
?L322:
	bsr	$_handleAvrcpQualificationSetAbsoluteVolume
	bra	(?L54)
?L323:
	bsr	$_handleAvrcpQualificationPlayTrack
	bra	(?L54)
?L324:
	bsr	$_handleAvrcpQualificationConfigureDataSize
	bra	(?L54)
?L325:
?LBB8:
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0002
	st	AL,@(H'0046,X)
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0004
	bsr	$_AudioSetMode
?LBE8:
	bra	(?L54)
?L326:
	ld	AH,@$_theSink+H'0038
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L327
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4031
	bsr	$_MessageSend
	bra	(?L54)
?L327:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4030
	bsr	$_MessageSend
	bra	(?L54)
?L329:
	ld	AL,@$_theSink+H'0038
	or	AL,#H'1000
	st	AL,@$_theSink+H'0038
	bra	(?L54)
?L330:
	ld	AL,@$_theSink+H'0038
	and	AL,#-H'1001
	st	AL,@$_theSink+H'0038
	bra	(?L54)
?L331:
	ld	AL,@$_theSink+H'0036
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L332
	ld	AL,@(H'0006,Y)
	bsr	$_TonesPlayEvent
?L332:
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0011
	st	AL,@$_theSink+H'0036
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L333:
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0010
	st	AL,@$_theSink+H'0036
	bsr	$_configManagerWriteSessionData
	bra	(?L54)
?L334:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0007
	beq	?L335
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'401C
	bsr	$_MessageSend
?L335:
	bsr	$_enterAudioTestMode
	bra	(?L54)
?L336:
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'0007
	beq	?L337
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'401C
	bsr	$_MessageSend
?L337:
	bsr	$_enterToneTestMode
	bra	(?L54)
?L338:
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0007
	beq	?L339
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'401C
	bsr	$_MessageSend
?L339:
	bsr	$_enterKeyTestMode
	bra	(?L54)
?L340:
	bsr	$_configManagerFillPs
	bra	(?L54)
?L341:
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_connectA2dpStream
	bra	(?L54)
?L343:
	ld	AL,@(H'000F,Y)
	bsr	$_deviceManagerDelayedUpdateAttributes
	bra	(?L54)
?L344:
	tst	@(H'0007,Y)
	beq	?L345
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#(H'0001+H'0001)
	bcc	?L346
	ld	AL,@$_theSink+H'0033
	or	AL,#-H'8000
	st	AL,@$_theSink+H'0033
	ld	AL,#H'0000
	bsr	$_stateManagerEnterConnDiscoverableState
	bra	(?L54)
?L346:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471D
	bsr	$_MessageSend
	bra	(?L54)
?L345:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L349:
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#(H'0001+H'0001)
	bcc	?L350
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_inquiryPair
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L350:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471D
	bsr	$_MessageSend
	bra	(?L54)
?L352:
	bsr	$_disconnectAllA2dpPeerDevices
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L353:
	bsr	$_audioSwapMediaChannel
	cmp	AL,#H'0000
	bne	?L54
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L54)
?L355:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0047,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L356
	ld	AL,#H'0080
	ld	AH,#H'0000
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L356:
	ld	AL,#H'0080
	ld	AH,#H'0001
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L358:
	ld	AL,#H'0080
	ld	AH,#H'0001
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L359:
	ld	AL,#H'0080
	ld	AH,#H'0000
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L360:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0047,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L361
	ld	AL,#H'0040
	ld	AH,#H'0000
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L361:
	ld	AL,#H'0040
	ld	AH,#H'0001
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L363:
	ld	AL,#H'0040
	ld	AH,#H'0001
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L364:
	ld	AL,#H'0040
	ld	AH,#H'0000
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L365:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0047,X)
	and	AL,#H'0100
	cmp	AL,#H'0000
	beq	?L366
	ld	AL,#H'0100
	ld	AH,#H'0000
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L366:
	ld	AL,#H'0100
	ld	AH,#H'0001
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L368:
	ld	AL,#H'0100
	ld	AH,#H'0001
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L369:
	ld	AL,#H'0100
	ld	AH,#H'0000
	bsr	$_sinkAudioSetEnhancement
	bra	(?L54)
?L370:
	ld	AL,#($_theSink)
	ld	AH,#H'4757
	bsr	$_MessageCancelAll
	bsr	$_IsAudioBusy
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L371
	tst	@$_theSink+H'0024
	bne	?L371
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0037,X)
	and	AL,#H'00FF
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
	bra	(?L54)
?L371:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4757
	bsr	$_MessageSendLater
	bra	(?L54)
?L373:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0048,X)
	and	AL,#-H'0007
	or	AL,#H'0004
	st	AL,@(H'0048,X)
	tst	@$_theSink+H'0024
	beq	?L54
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0004
	bsr	$_AudioSetMode
	bra	(?L54)
?L375:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0048,X)
	and	AL,#-H'0007
	or	AL,#H'0002
	st	AL,@(H'0048,X)
	tst	@$_theSink+H'0024
	beq	?L54
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0004
	bsr	$_AudioSetMode
	bra	(?L54)
?L377:
	ld	AL,@$_theSink+H'003A
	or	AL,#H'0080
	st	AL,@$_theSink+H'003A
	bra	(?L54)
?L378:
	ld	AL,@$_theSink+H'003A
	and	AL,#-H'0081
	st	AL,@$_theSink+H'003A
	bra	(?L54)
?L379:
	bsr	$_stateManagerGetState
	cmp	AL,#(H'0001+H'0002)
	bcc	?L380
	ld	AL,#H'0001
	bsr	$_stateManagerEnterConnDiscoverableState
	bra	(?L54)
?L380:
	bsr	$_sinkCheckForAudioTransfer
	bra	(?L54)
?L382:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	bra	(?L54)
?L383:
	ld	AL,#H'0000
	bsr	$_stateManagerAmpPowerControl
	bra	(?L54)
?L384:
	bsr	$_LoaderModeEnter
	bra	(?L54)
?L386:
	tst	@$_theSink+H'0024
	beq	?L387
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink+H'0024)
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendConditionally
	bra	(?L54)
?L387:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L389
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendConditionally
	bra	(?L54)
?L389:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'001A,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendLater
	bra	(?L54)
?L395:
	tst	@$_theSink+H'0024
	beq	?L396
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink+H'0024)
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendConditionally
	bra	(?L54)
?L396:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L398
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendConditionally
	bra	(?L54)
?L398:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'001A,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4783
	bsr	$_MessageSendLater
	bra	(?L54)
?L412:
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	bsr	$_LEDManagerIndicateState
	bra	(?L54)
?L413:
	bsr	$_sinkBleBondableEvent
	bra	(?L54)
?L414:
	bsr	$_sinkBleDeleteMarkedDevices
	bra	(?L54)
?L415:
	bsr	$_sinkBleBondablePairingTimeoutEvent
	bra	(?L54)
?L416:
	bsr	$_sinkBleBondableConnectionTimeoutEvent
	bra	(?L54)
?L418:
	bsr	$_sinkBleSwitchPeripheralEvent
	bra	(?L54)
?L420:
	bsr	$_sinkBleSwitchCentralEvent
	bra	(?L54)
?L437:
	ld	AL,#H'0000
	bsr	$_VolumeModifyAndUpdateRoutedAudioAuxVolume
	bra	(?L54)
?L438:
	ld	AL,#H'0001
	bsr	$_VolumeModifyAndUpdateRoutedAudioAuxVolume
	bra	(?L54)
?L439:
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
	bra	(?L54)
?L440:
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_VolumeUpdateMuteState
	bra	(?L54)
?L441:
	ld	AL,#H'0001
	bsr	$_VolumeToggleMute
	bra	(?L54)
?L442:
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
	bra	(?L54)
?L443:
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_VolumeUpdateMuteState
	bra	(?L54)
?L444:
	ld	AL,#H'0000
	bsr	$_VolumeToggleMute
	bra	(?L54)
?L445:
	bsr	$_BootGetMode
	bsr	$_BootSetMode
	bra	(?L54)
?L446:
	bsr	$_sinkBleRoleTimeoutEvent
	bra	(?L54)
?L458:
	bsr	$_audioA2dpStartStream
?L54:
	tst	@(H'0008,Y)
	beq	?L48
	ld	AL,@(H'0006,Y)
	bsr	_IndicateEvent
?L48:
?LBE4:
?LBE_handleUEMessage:
	leavel	#15
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
_handleHFPMessage:
	enterl	#5
?LBB_handleHFPMessage:
?LBB9:
	ld	AL,#-H'5A00
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'002B)
	bcc	?L487
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE546,X)
	brxl
	.SEG	CONST
?JTBASE546:
	.CODE
?L546:
	.SEG	CONST
	dc	lwrd(?L489-?L546)
	dc	lwrd(?L499-?L546)
	dc	lwrd(?L497-?L546)
	dc	lwrd(?L503-?L546)
	dc	lwrd(?L504-?L546)
	dc	lwrd(?L533-?L546)
	dc	lwrd(?L532-?L546)
	dc	lwrd(?L537-?L546)
	dc	lwrd(?L505-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L508-?L546)
	dc	lwrd(?L522-?L546)
	dc	lwrd(?L506-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L517-?L546)
	dc	lwrd(?L517-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L516-?L546)
	dc	lwrd(?L515-?L546)
	dc	lwrd(?L519-?L546)
	dc	lwrd(?L520-?L546)
	dc	lwrd(?L509-?L546)
	dc	lwrd(?L526-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L541-?L546)
	dc	lwrd(?L542-?L546)
	dc	lwrd(?L543-?L546)
	dc	lwrd(?L544-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	dc	lwrd(?L487-?L546)
	.CODE
?L489:
?LBB10:
	ld	AL,#H'0000
	ld	X,@$XAP_UY
	add	X,#H'0001
	st	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	bsr	$_InitEarlyUserFeatures
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_PsFullRetrieve
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'0000
	bne	?L490
	cmp	AL,#H'0000
	bne	?L490
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L491
	ld	AL,#H'0418
	ld	AH,#H'0024
	bra	(?L547)
?L491:
	ld	AL,#H'0404
	ld	AH,#H'0020
	bra	(?L547)
?L490:
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
?L547:
	bsr	$_ConnectionWriteClassOfDevice
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L487
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	bne	?L495
	ld	AL,@$XAP_UXL
	bsr	$_sinkInitComplete
	bra	(?L487)
?L495:
	bsr	$_Panic
?LBE10:
	bra	(?L487)
?L497:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L487
	ld	AL,@(H'0005,Y)
	bsr	$_sinkHandleSlcConnectInd
	bra	(?L487)
?L499:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L500
	ld	X,@(H'0005,Y)
	tst	@(H'0007,X)
	bne	?L487
	bsr	$_sinkDisconnectAllSlc
	bra	(?L487)
?L500:
	ld	AL,@(H'0005,Y)
	bsr	$_sinkHandleSlcConnectCfm
	bra	(?L487)
?L503:
	ld	AL,@(H'0005,Y)
	bsr	$_slcHandleLinkLossInd
	bra	(?L487)
?L504:
	ld	AL,@(H'0005,Y)
	bsr	$_sinkHandleSlcDisconnectInd
	bra	(?L487)
?L505:
	ld	AL,@(H'0005,Y)
	bsr	$_indicatorsHandleServiceInd
	bra	(?L487)
?L506:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L487
	ld	AL,@(H'0005,Y)
	bsr	$_sinkHandleCallInd
	bra	(?L487)
?L508:
	ld	AL,@(H'0005,Y)
	bsr	$_sinkHandleRingInd
	bra	(?L487)
?L509:
	ld	AL,@(H'0005,Y)
	bsr	$_sinkWriteStoredNumber
	bra	(?L487)
?L515:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'0003
	asl	#H'0005
	ld	AH,@$_theSink+H'003A
	and	AH,#-H'0061
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003A
	bra	(?L487)
?L516:
	ld	X,@(H'0005,Y)
	tst	@(H'0001,X)
	beq	?L517
	ld	AL,@$_theSink+H'003A
	and	AL,#-H'0061
	st	AL,@$_theSink+H'003A
?L517:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	_handleHFPStatusCFM
	bra	(?L487)
?L519:
?LBB11:
	ld	AL,@(H'0005,Y)
	bsr	$_VolumeHandleSpeakerGainInd
?LBE11:
	bra	(?L487)
?L520:
?LBB12:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L487
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_VolumeSetHfpMicrophoneGainCheckMute
?LBE12:
	bra	(?L487)
?L522:
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AH
?LBB13:
	add	AH,@(H'0004,X)
	add	AH,#H'0006
	ld	AL,@(H'0005,X)
	bsr	$_AudioPromptPlayCallerName
	cmp	AL,#H'0000
	bne	?L487
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AH
	add	AH,@(H'0002,X)
	add	AH,#H'0006
	ld	AL,@(H'0003,X)
	bsr	$_AudioPromptPlayCallerNumber
?LBE13:
	bra	(?L487)
?L526:
	ld	AL,@(H'0005,Y)
	bsr	$_sinkHandleUnrecognisedATCmd
	bra	(?L487)
?L532:
	ld	AL,@(H'0005,Y)
	bsr	$_audioHandleSyncConnectInd
	bra	(?L487)
?L533:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L534
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0008
	bne	?L487
	ld	AL,@(H'0003,X)
	ld	AH,#H'0013
	bsr	$_ConnectionSyncDisconnect
	bra	(?L487)
?L534:
	ld	AL,@(H'0005,Y)
	bsr	$_audioHandleSyncConnectCfm
	bra	(?L487)
?L537:
	ld	AL,@(H'0005,Y)
	bsr	$_audioHandleSyncDisconnectInd
	bra	(?L487)
?L541:
	bsr	$_csr2csrHandleTxtInd
	bra	(?L487)
?L542:
	bsr	$_csr2csrHandleSmsInd
	bra	(?L487)
?L543:
	bsr	$_csr2csrHandleSmsCfm
	bra	(?L487)
?L544:
	bsr	$_csr2csrHandleAgBatteryRequestInd
?L487:
?LBE9:
?LBE_handleHFPMessage:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
_handleCodecMessage:
	enterl	#2
?LBB_handleCodecMessage:
	cmp	AH,#H'7200
	bne	?L550
	ld	X,@(H'0002,Y)
	tst	@(0,X)
	bne	?L552
	bsr	$_sinkHfpInit
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@$_theSink+H'0023
	bra	(?L550)
?L552:
	bsr	$_Panic
?L550:
?LBE_handleCodecMessage:
	leavel	#2
_handleAudioPluginMessage:
	enterl	#3
?LBB_handleAudioPluginMessage:
	ld	X,@(H'0003,Y)
	cmp	AH,#H'7301
	beq	?L555
	cmp	AH,#(H'0001+H'7301)
	bcc	?L569
	cmp	AH,#H'7300
	beq	?L557
	bra	(?L555)
?L569:
	cmp	AH,#H'7302
	beq	?L565
	cmp	AH,#H'7305
	beq	?L566
	bra	(?L555)
?L557:
	ld	AL,@(0,X)
	cmp	AL,#H'7070
	bne	?L558
	ld	AL,@(H'0002,X)
	bsr	$_handleA2DPStoreClockMismatchRate
	bra	(?L555)
?L558:
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L560
	ld	AL,@(H'0002,X)
	bsr	$_handleA2DPStoreCurrentEqBank
	bra	(?L555)
?L560:
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L555
	ld	AL,@(H'0003,X)
	xor	AL,#-H'0001
	and	AL,#H'09C0
	bsr	$_handleA2DPStoreEnhancements
	bra	(?L555)
?L565:
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPLatencyReport
	bra	(?L555)
?L566:
	bsr	$_VolumeUpdateRoutedAudioMainAndAuxVolume
?L555:
?LBE_handleAudioPluginMessage:
	leavel	#3
_app_handler:
	enterl	#3
?LBB_app_handler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'4000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'079C)
	bcc	?L578
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleUEMessage
	bra	(?L577)
?L578:
	cmp	AH,#-H'7FC3
	beq	?L577
	ld	AL,#-H'5000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'006B)
	bcc	?L582
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleCLMessage
	bra	(?L577)
?L582:
	ld	AL,#-H'5A00
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'002F)
	bcc	?L584
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleHFPMessage
	bra	(?L577)
?L584:
	ld	AL,#-H'7200
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0002)
	bcc	?L586
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleCodecMessage
	bra	(?L577)
?L586:
	ld	AL,#-H'7800
	add	AL,@$XAP_AH
	cmp	AL,#H'0005
	bcz	?L577
	ld	AL,#-H'5E00
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0052)
	bcc	?L590
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkAvrcpHandleMessage
	bra	(?L577)
?L590:
	ld	AL,#-H'5D00
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0014)
	bcc	?L592
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_handleA2DPMessage
	bra	(?L577)
?L592:
	ld	AL,#-H'7300
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0006)
	bcc	?L577
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleAudioPluginMessage
?L577:
?LBE_app_handler:
	leavel	#3
$__init:
	enterl	#2
?LBB__init:
	ld	AH,#hwrd(_app_handler)
	ld	AL,#lwrd(_app_handler)
	st	AH,@$_theSink
	st	AL,@$_theSink+1
	ld	AL,@$_theSink+H'0036
	or	AL,#H'4000
	st	AL,@$_theSink+H'0036
	bsr	$_configManagerPioMap
?LBE__init:
	leavel	#2
_sinkConnectionInit:
	enterl	#4
?LBB_sinkConnectionInit:
?LBB14:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#H'0007
	ld	AH,@(H'0001,Y)
	bsr	$_ConfigRetrieve
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'0000
	bsr	$_ConnectionInitEx2
	ld	AL,@(H'0001,Y)
	bsr	$_free
?LBE14:
?LBE_sinkConnectionInit:
	leavel	#4
	.SEG	CONST
?LC0:
	dc	H'50
	dc	H'44
	dc	H'4C
	dc	H'53
	dc	H'69
	dc	H'7A
	dc	H'65
	dc	H'5B
	dc	H'25
	dc	H'64
	dc	H'5D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_main:
	enterl	#3
?LBB_main:
	ld	AL,#(?LC2)
	st	AL,@(0,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_configManagerSetVersionNo
	bsr	$_configManagerInitMemory
	bsr	$_LedManagerMemoryInit
	bsr	$_AuthResetConfirmationFlags
	ld	AL,#H'0001
	bsr	$_PioSetPowerPin
	bsr	$_BootGetMode
	cmp	AL,#(H'0001+H'0003)
	bcc	?L614
	cmp	AL,#H'0001
	bcc	?L614
	ld	AL,#H'0000
	bsr	$_configManagerInit
	ld	AL,#H'4021
	bsr	$_LEDManagerIndicateEvent
	bra	(?L608)
?L614:
	bsr	_sinkConnectionInit
?L608:
	bsr	$_VolumeSetInitialMuteState
	bsr	$_MessageLoop
	ld	AL,#H'0000
?LBE_main:
	leavel	#3
	.SEG	CONST
?LC2:
	dc	H'31
	dc	H'37
	dc	H'3A
	dc	H'30
	dc	H'38
	dc	H'3A
	dc	H'30
	dc	H'31
	dc	H'00
?LC1:
	dc	H'4D
	dc	H'61
	dc	H'69
	dc	H'6E
	dc	H'20
	dc	H'5B
	dc	H'25
	dc	H'73
	dc	H'5D
	dc	H'0A
	dc	H'00
	.CODE
_sinkInitCodecTask:
	enterl	#2
?LBB_sinkInitCodecTask:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'0007
	ld	AH,#($_theSink)
	bsr	$_CodecInitCsrInternal
?LBE_sinkInitCodecTask:
	leavel	#2
_handleHFPStatusCFM:
	enterl	#3
?LBB_handleHFPStatusCFM:
	cmp	AL,#H'0000
	beq	?L619
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471D
	bsr	$_MessageSend
?L619:
?LBE_handleHFPStatusCFM:
	leavel	#3
_IndicateEvent:
	enterl	#3
?LBB_IndicateEvent:
	st	AL,@(0,Y)
	cmp	AL,#H'4706
	beq	?L623
	bsr	$_LEDManagerIndicateEvent
?L623:
	ld	AL,@(0,Y)
	bsr	$_TonesPlayEvent
	ld	AL,@(0,Y)
	bsr	$_ATCommandPlayEvent
?LBE_IndicateEvent:
	leavel	#3
	.SEG	VAR
$_theSink:
	DS	61
	ENDMOD

;# Function pattern *movqi2 used[0] = 173 used[1] = 65 total = 238
;# Function pattern *movqi3 used[0] = 523 total = 523
;# Function pattern *movhi used[2] = 3 used[3] = 16 total = 19
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 14 used[2] = 11 total = 25
;# Function pattern *andqi3 used[0] = 55 total = 55
;# Function pattern *iorqi3 used[0] = 18 total = 18
;# Function pattern *xorqi3 used[0] = 1 total = 1
;# Function pattern *mulqihi3_const used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 14 total = 14
;# Function pattern *lshrqi3 used[0] = 29 total = 29
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 264 total = 264
;# Function pattern *call1 used[0] = 282 total = 282
;# Function pattern *call_value1 used[0] = 90 total = 90
;# Function pattern tablejump_1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 58 used[1] = 29 total = 87
;# Function pattern movstrqi+4 used[1] = 18 total = 18
;# Function pattern movstrqi+5 used[0] = 34 total = 34
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	sink_a2dp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_sbc_sep_snk:
	dc	H'0001
	dc	H'0001
	dc	H'1800
	dc	H'0000
	dc	H'0010
	dc	$_sbc_caps_sink
_codecList:
	dc	H'FF05
	dc	_sbc_sep_snk
	dc	$_csr_sbc_decoder_plugin
	.CODE
_getCodecIncludeMask:
; leaf function with empty stack frame
?LBB_getCodecIncludeMask:
	ld	AL,#H'0001
?LBE_getCodecIncludeMask:
	rts
$_findCurrentA2dpSource:
	enterl	#6
?LBB_findCurrentA2dpSource:
	st	AL,@(0,Y)
?LBB2:
	tst	@$_theSink+H'0030
	beq	?L3
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L19:
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0001,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L6
?LBB4:
	ld	AL,@(H'0017,X)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0019,X)
	st	X,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_A2dpMediaGetState
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'0004)
	bcc	?L6
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_A2dpMediaGetRole
	cmp	AL,#H'0001
	bne	?L6
	tst	@(0,Y)
	beq	?L16
	ld	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	st	AL,@(0,X)
?L16:
	ld	AL,#H'0001
	bra	(?L2)
?L6:
	ld	AL,@(H'0001,Y)
?LBE4:
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bcz	?L19
?L3:
?LBE3:
	ld	AL,#H'0000
?L2:
?LBE2:
?LBE_findCurrentA2dpSource:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
_updateA2dpLinkLossManagement:
	enterl	#7
?LBB_updateA2dpLinkLossManagement:
	st	AL,@(H'0004,Y)
?LBB5:
	tst	@$_theSink+H'0030
	beq	?L23
?LBB6:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetBdaddr
	cmp	AL,#H'0000
	beq	?L27
	ld	AL,@(H'0004,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,@$XAP_UY
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L26
?L27:
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetBdaddr
	cmp	AL,#H'0000
	beq	?L25
	ld	AL,@(H'0004,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,@$XAP_UY
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L25
?L26:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0004,Y)
	ld	AL,@(H'0017,X)
	ld	AH,#H'0000
	bra	(?L29)
?L25:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0004,Y)
	ld	AL,@(H'0017,X)
	ld	AH,#H'0001
?L29:
	bsr	$_A2dpDeviceManageLinkloss
?L23:
?LBE6:
?LBE5:
?LBE_updateA2dpLinkLossManagement:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_a2dpSetSuspendState:
	enterl	#2
?LBB_a2dpSetSuspendState:
	st	AL,@H'fff8
	cmp	AH,#H'0000
	bne	?L31
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	bra	(?L34)
?L31:
	ld	AL,@$_theSink+H'0030
	ld	X,@H'fff8
	add	X,@$XAP_AL
	tst	@(H'0013,X)
	bne	?L30
?L34:
	st	AH,@(H'0013,X)
?L30:
?LBE_a2dpSetSuspendState:
	leavel	#2
$_a2dpPauseNonRoutedSource:
; leaf function with empty stack frame
?LBB_a2dpPauseNonRoutedSource:
?LBE_a2dpPauseNonRoutedSource:
	rts
$_InitA2dp:
	enterl	#10
?LBB_InitA2dp:
?LBB7:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'007A
	bsr	$_malloc
	st	AL,@$_theSink+H'0030
	ld	AH,#H'007A
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$_theSink+H'000A
	ld	X,@$_theSink+H'0030
	add	AL,#H'003C
	st	AL,@(H'0035,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0048,X)
	and	AL,#-H'0007
	or	AL,#H'0002
	st	AL,@(H'0048,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0048,X)
	or	AL,#H'0001
	st	AL,@(H'0048,X)
	ld	X,@$_theSink+H'0030
	ld	AH,@$_theSink+H'001D
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0005
	ld	AH,@(H'0048,X)
	and	AH,#-H'0061
	or	AH,@$XAP_AL
	st	AH,@(H'0048,X)
	ld	X,@$_theSink+H'0030
	ld	AH,@$_theSink+H'001D
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0003
	ld	AH,@(H'0048,X)
	and	AH,#-H'0019
	or	AH,@$XAP_AL
	st	AH,@(H'0048,X)
	ld	X,@$_theSink+H'0030
	ld	AL,#H'00FF
	st	AL,@(H'0017,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0019,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0018,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'001A,X)
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L36
?LBB8:
	bsr	_getCodecIncludeMask
	st	AL,@H'fff9
	ld	X,#H'0000
	st	X,@H'fff8
?L45:
	ld	AL,@H'fff8
	smult	#H'0003
	ld	X,@$XAP_AL
	tst	@(_codecList+H'0001,X)
	beq	?L40
	ld	AH,@(_codecList,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	and	AL,@H'fff9
	cmp	AL,#H'0000
	beq	?L40
	lsr	#H'0008
	ld	X,@$XAP_AH
	cmp	AH,#H'00FF
	beq	?L44
	ld	AH,@$_theSink+H'001C
	lsr	#H'0005
	and	AH,#H'001F
	asr	@$XAP_UXL
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L40
?L44:
	ld	AL,@(H'0006,Y)
	add	AL,@$XAP_AL
	add	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0007,Y)
	ld	AL,@H'fff8
	smult	#H'0003
	ld	X,@$XAP_AL
	ld	AL,@(_codecList+H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0001,X)
	and	AL,#H'3FFF
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
?L40:
	ld	X,#H'0001
	add	X,@H'fff8
	st	X,@H'fff8
	cmp	X,#H'0000
	beq	?L45
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0014,X)
	st	AL,@(H'0003,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'0002
	bsr	$_A2dpInit
?L36:
?LBE8:
?LBE7:
?LBE_InitA2dp:
	leavel	#10
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_getA2dpIndex:
	enterl	#2
?LBB_getA2dpIndex:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB9:
	ld	AH,#H'0000
?L56:
	ld	AL,@$_theSink+H'0030
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L52
	ld	AL,@(H'0017,X)
	cmp	AL,@H'fff8
	bne	?L52
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	AL,#H'0001
	bra	(?L49)
?L52:
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L56
	ld	AL,#H'0000
?L49:
?LBE9:
?LBE_getA2dpIndex:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_getA2dpIndexFromPlugin:
	enterl	#5
?LBB_getA2dpIndexFromPlugin:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB10:
	cmp	AL,#H'0000
	beq	?L74
	tst	@$_theSink+H'0030
	bne	?L62
	bra	(?L74)
?L73:
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L61)
?L62:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L70:
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L66
	tst	@(H'001B,X)
	beq	?L66
	ld	AL,@(H'001B,X)
	bsr	$_getA2dpPlugin
	cmp	AL,@(0,Y)
	beq	?L73
?L66:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bcz	?L70
?L74:
	ld	AL,#H'0000
?L61:
?LBE10:
?LBE_getA2dpIndexFromPlugin:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_getA2dpIndexFromSink:
	enterl	#5
?LBB_getA2dpIndexFromSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB11:
	cmp	AL,#H'0000
	beq	?L92
	tst	@$_theSink+H'0030
	bne	?L78
	bra	(?L92)
?L91:
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L77)
?L78:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L87:
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L82
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingGetSink
	cmp	AL,@(0,Y)
	beq	?L91
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	cmp	AL,@(0,Y)
	beq	?L91
?L82:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bcz	?L87
?L92:
	ld	AL,#H'0000
?L77:
?LBE11:
?LBE_getA2dpIndexFromSink:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_getA2dpStreamData:
	enterl	#4
?LBB_getA2dpStreamData:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	tst	@$_theSink+H'0030
	beq	?L96
	ld	AL,@$_theSink+H'0030
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L96
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetState
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
?L96:
?LBE_getA2dpStreamData:
	leavel	#4
$_getA2dpStreamRole:
	enterl	#3
?LBB_getA2dpStreamRole:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	AL,#H'0002
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	tst	@$_theSink+H'0030
	beq	?L99
	ld	AL,@$_theSink+H'0030
	ld	X,@H'fff8
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L99
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetRole
	ld	X,@(0,Y)
	st	AL,@(0,X)
?L99:
?LBE_getA2dpStreamRole:
	leavel	#3
$_getA2dpPlugin:
	enterl	#2
?LBB_getA2dpPlugin:
	st	AL,@H'fff9
?LBB12:
	ld	AL,#H'0000
	st	AL,@H'fff8
?L108:
	ld	AL,@H'fff8
	smult	#H'0003
	ld	AH,#(_codecList)
	add	AH,@$XAP_AL
	ld	X,@$XAP_AH
	tst	@(H'0001,X)
	beq	?L105
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@H'fff9
	bne	?L105
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bra	(?L102)
?L105:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L108
	bsr	$_Panic
	ld	AL,#H'0000
?L102:
?LBE12:
?LBE_getA2dpPlugin:
	leavel	#2
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_openStream:
	enterl	#4
?LBB_openStream:
	st	AL,@H'fff8
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'0020
	cmp	AL,#H'0000
	bne	?L113
	cmp	AH,#H'0000
	beq	?L114
	ld	X,@$_theSink+H'0030
	add	X,@H'fff8
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,#H'0001
	bra	(?L116)
?L114:
	ld	X,@$_theSink+H'0030
	add	X,@H'fff8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,#H'0000
?L116:
	bsr	$_A2dpMediaOpenRequest
	bra	(?L112)
?L113:
	ld	AL,#H'0000
?L112:
?LBE_openStream:
	leavel	#4
$_sinkA2dpSetLinkRole:
	enterl	#4
?LBB_sinkA2dpSetLinkRole:
	st	AH,@(H'0001,Y)
?LBB13:
	ld	AH,@$XAP_UY
	bsr	$_getA2dpIndexFromSink
	cmp	AL,#H'0000
	beq	?L117
	tst	@(H'0001,Y)
	bne	?L119
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,#H'0002
	bra	(?L121)
?L119:
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,#H'0001
?L121:
	st	AL,@(H'0011,X)
?L117:
?LBE13:
?LBE_sinkA2dpSetLinkRole:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_sinkA2dpInitComplete:
	enterl	#2
?LBB_sinkA2dpInitComplete:
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L122
	bsr	$_Panic
?L122:
?LBE_sinkA2dpInitComplete:
	leavel	#2
$_issueA2dpSignallingConnectResponse:
	enterl	#4
?LBB_issueA2dpSignallingConnectResponse:
	st	AL,@(0,Y)
?LBB14:
	tst	@$_theSink+H'0030
	beq	?L125
?LBB15:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L132:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L129
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0030
	add	AH,#H'0021
	ld	AL,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L129
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AL,@(H'0017,X)
	ld	AH,#H'0001
	bsr	$_A2dpSignallingConnectResponse
	ld	AL,@(0,Y)
	bsr	$_sinkAvrcpCheckManualConnectReset
?L129:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bcz	?L132
?L125:
?LBE15:
?LBE14:
?LBE_issueA2dpSignallingConnectResponse:
	leavel	#4
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_handleA2DPSignallingConnectInd:
	enterl	#2
?LBB_handleA2DPSignallingConnectInd:
	st	AL,@H'fff9
?LBB16:
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0001
	st	AL,@(0,X)
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L136
	ld	X,@$_theSink+H'0030
	tst	@(H'0001,X)
	beq	?L137
	tst	@(H'0002,X)
	bne	?L136
?L137:
?LBB17:
	ld	X,@$_theSink+H'0030
	ld	X,@(H'0001,X)
	st	X,@H'fff8
	cmp	X,#H'0000
	beq	?L138
	ld	AL,#H'0001
	st	AL,@H'fff8
?L138:
	ld	X,@$_theSink+H'0030
	add	X,@H'fff8
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	ld	X,@$_theSink+H'0030
	add	X,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0017,X)
	ld	AL,@H'ffff
	ld	AL,@H'fff8
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0021,X)
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@H'fffa
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@H'fffa
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@H'fffa
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@$_theSink+H'0030
	add	X,@H'fff8
	ld	AL,#H'0000
	st	AL,@(H'001F,X)
	ld	AL,@H'fff9
	ld	AH,#H'0001
	bsr	$_A2dpSignallingConnectResponse
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sinkAvrcpCheckManualConnectReset
?LBE17:
	bra	(?L135)
?L136:
	ld	AL,@H'fff9
	ld	AH,#H'0000
	bsr	$_A2dpSignallingConnectResponse
?L135:
?LBE16:
?LBE_handleA2DPSignallingConnectInd:
	leavel	#2
$_handleA2DPSignallingConnected:
	enterl	#22
?LBB_handleA2DPSignallingConnected:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
?LBB18:
	ld	X,@$_theSink+H'0030
	tst	@(0,X)
	bne	?L141
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AH,#H'0000
	ld	AL,@(H'0011,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageSendLater
	bra	(?L142)
?L141:
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0000
	st	AL,@(0,X)
?L142:
	tst	@(H'000E,Y)
	beq	?L143
	ld	AL,@(H'000E,Y)
?LBB19:
	cmp	AL,#H'0007
	beq	?L144
	cmp	AL,#H'000D
	beq	?L144
	ld	AL,#H'0000
	st	AL,@(H'0010,Y)
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0021
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L146
	ld	AL,#H'0001
	st	AL,@(H'0010,Y)
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0025
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L144
?L146:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'0007,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'000B,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'000D,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'0001,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	ld	AL,#H'00FF
	st	AL,@(H'0017,X)
	ld	AL,@(H'0010,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	st	AL,@(-1,Y)
	ld	AH,#H'0021
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0021,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'001F,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'0015,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0010,Y)
	st	AL,@(H'0011,X)
?L144:
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_sinkAvrcpCheckManualConnectReset
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'2000
	cmp	AL,#-H'6000
	bne	?L140
	bsr	$_inquiryStop
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_inquiryPair
?LBE19:
	bra	(?L140)
?L143:
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'4740
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4740
	bsr	$_MessageSendConditionally
	ld	X,@$_theSink+H'0030
	tst	@(H'0001,X)
	beq	?L151
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L152
?L151:
	ld	X,@$_theSink+H'0030
	tst	@(H'0002,X)
	beq	?L149
	ld	AH,#H'0025
	add	AH,@$XAP_UXL
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L152
?L149:
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0021
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L154
	ld	AL,@$_theSink+H'0030
	add	AL,#H'0021
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L153
	ld	X,@$_theSink+H'0030
	tst	@(H'0001,X)
	bne	?L153
?L154:
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0001
	st	AL,@(H'0001,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0017,X)
	ld	AH,@$_theSink+H'0030
	ld	AL,@(H'0016,Y)
	ld	X,@$XAP_AH
	st	AL,@(H'0021,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0022,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0023,X)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0024,X)
	ld	AL,@$_theSink+H'0030
	st	AL,@(H'0011,Y)
	ld	AL,@H'fff8
	bsr	$_deviceManagerSetPriority
	ld	X,@(H'0011,Y)
	st	AL,@(H'001F,X)
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'001D,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0015,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'000B,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'000D,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0007,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0011,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'000F,X)
	bra	(?L152)
?L153:
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0025
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L157
	ld	AL,@$_theSink+H'0030
	add	AL,#H'0025
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L152
	ld	X,@$_theSink+H'0030
	tst	@(H'0002,X)
	bne	?L152
?L157:
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0001
	st	AL,@(H'0002,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0018,X)
	ld	AH,@$_theSink+H'0030
	ld	AL,@(H'0016,Y)
	ld	X,@$XAP_AH
	st	AL,@(H'0025,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0026,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0027,X)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0028,X)
	ld	AL,@$_theSink+H'0030
	st	AL,@(H'0012,Y)
	ld	AL,@H'fff8
	bsr	$_deviceManagerSetPriority
	ld	X,@(H'0012,Y)
	st	AL,@(H'0020,X)
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'001E,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0016,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'000C,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'000E,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0008,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0012,X)
	ld	X,@$_theSink+H'0030
	st	AL,@(H'0010,X)
?L152:
	ld	AL,@(H'000F,Y)
	bsr	$_A2dpSignallingGetSink
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	bsr	$_ConnectionSmEncrypt
	ld	AL,@(H'000F,Y)
	bsr	$_A2dpSignallingGetSink
	ld	AH,#H'1F80
	bsr	$_ConnectionSetLinkSupervisionTimeout
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L158
	ld	AL,@(H'000F,Y)
	bsr	$_A2dpSignallingDisconnectRequest
	bra	(?L140)
?L158:
?LBB20:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0001
	bsr	$_deviceManagerGetDefaultAttributes
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	add	AH,#H'0016
	bsr	$_deviceManagerGetAttributes
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4742
	bsr	$_MessageSend
	ld	AL,@(H'000F,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000D
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L160
	ld	X,@(H'000D,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'000D,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0029,X)
	bsr	$_stateManagerGetState
	cmp	AL,#(H'0001+H'0002)
	bcc	?L161
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L161
	bsr	$_stateManagerEnterConnectedState
?L161:
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	or	AH,#H'0002
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	add	AH,#H'0016
	bsr	$_deviceManagerStoreAttributes
	ld	AL,@(H'000D,Y)
	bsr	_updateA2dpLinkLossManagement
	ld	X,@$_theSink+H'0030
	add	X,@(H'000D,Y)
	ld	AL,@(H'0013,X)
	cmp	AL,#H'0001
	beq	?L163
	ld	AH,@$_theSink+H'001C
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L160
?L163:
	ld	AL,@(H'000D,Y)
	ld	AH,#H'1388
	bsr	$_connectA2dpStream
?L160:
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L164
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L166
	bsr	$_ConnectionTrustedDeviceListSize
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	X,@$XAP_AH
	bcs	?L164
?L166:
	bsr	$_inquiryStop
?L164:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L140
	ld	AL,@$_theSink+H'0031
	st	AL,@(H'0013,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'000A,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L168
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0027,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0016
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@(H'0013,Y)
	st	AL,@(H'0028,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@(H'0013,Y)
	st	AL,@(H'0029,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@(H'0013,Y)
	st	AL,@(H'002A,X)
?L168:
	ld	AL,@(H'000D,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,#H'07D0
	bsr	$_sinkAvrcpConnect
?L140:
?LBE20:
?LBE18:
?LBE_handleA2DPSignallingConnected:
	leavel	#22
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_connectA2dpStream:
	enterl	#7
?LBB_connectA2dpStream:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB21:
	cmp	AH,#H'0000
	bne	?L176
	tst	@$_theSink+H'0030
	beq	?L175
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0003,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L175
	ld	AL,@(H'0017,X)
	ld	AH,#H'0000
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0000
	bne	?L175
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	_openStream
	bra	(?L175)
?L176:
?LBB22:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0004,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4732
	bsr	$_MessageSendLater
?L175:
?LBE22:
?LBE21:
?LBE_connectA2dpStream:
	leavel	#7
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_handleA2DPOpenInd:
	enterl	#4
?LBB_handleA2DPOpenInd:
	st	AL,@(H'0001,Y)
?LBB23:
	ld	AH,#H'0001
	bsr	$_A2dpMediaOpenResponse
	cmp	AL,#H'0000
	beq	?L180
?LBB24:
	ld	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L180
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0017,X)
?L180:
?LBE24:
?LBE23:
?LBE_handleA2DPOpenInd:
	leavel	#4
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_handleA2DPOpenCfm:
	enterl	#12
?LBB_handleA2DPOpenCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB25:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	tst	@(H'000D,Y)
	bne	?L183
?LBB26:
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_A2dpDeviceGetBdaddr
	cmp	AL,#H'0000
	beq	?L183
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	bsr	$_getA2dpIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L183
	ld	X,@$_theSink+H'0030
	add	X,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0017,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0019,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'001B,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0006,Y)
	bsr	$_A2dpSignallingGetSink
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_linkPolicyUseA2dpSettings
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0005,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0013,X)
	cmp	AL,#H'0001
	bne	?L183
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	beq	?L183
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
?L192:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0009,Y)
	tst	@(H'0011,X)
	beq	?L189
	ld	AL,@(H'0005,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0009,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L189
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0001
	bsr	$_sinkAvrcpPlayPauseRequest
	st	AL,@(H'0008,Y)
	bra	(?L188)
?L189:
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0001
	bcz	?L192
?L188:
	tst	@(H'0008,Y)
	bne	?L193
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_A2dpMediaStartRequest
?L193:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
?L183:
?LBE26:
?LBE25:
?LBE_handleA2DPOpenCfm:
	leavel	#12
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
_handleA2DPClose:
	enterl	#7
?LBB_handleA2DPClose:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0007,Y)
?LBB27:
	cmp	AL,#H'0000
	beq	?L201
	cmp	AL,#H'000B
	bne	?L199
?L201:
?LBB28:
	ld	AL,@(H'0002,Y)
	bsr	$_A2dpSignallingGetSink
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_linkPolicyUseA2dpSettings
	bsr	$_stateManagerGetState
	cmp	AL,#H'000D
	bne	?L202
	bsr	$_stateManagerEnterConnectedState
?L202:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4743
	bsr	$_MessageSend
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L199
?LBB29:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L199
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,#H'0000
	bsr	$_sinkAvrcpSetPlayStatus
?L199:
?LBE29:
?LBE28:
?LBE27:
?LBE_handleA2DPClose:
	leavel	#7
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
$_handleA2DPSignallingDisconnected:
	enterl	#7
?LBB_handleA2DPSignallingDisconnected:
	st	AL,@(H'0003,Y)
?LBB30:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AH,@$_theSink+H'003A
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0000
	bne	?L209
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageCancelAll
?L209:
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L208
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	tst	@(H'0003,X)
	beq	?L211
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
?L211:
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_deviceManagerUpdateAttributes
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'0007,X)
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'000B,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	bne	?L212
	st	AL,@(H'000B,X)
?L212:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'000D,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	st	AL,@(-1,Y)
	ld	AH,#H'0021
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0021,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,#H'00FF
	st	AL,@(H'0017,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'0019,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'001F,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'001B,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'0015,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'000F,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	st	AL,@(H'002B,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_deviceManagerDeviceDisconnectedInd
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L213
	bsr	$_linkPolicyCheckRoles
	bsr	$_sinkEnableMultipointConnectable
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L213
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	bne	?L213
	ld	AL,#H'0000
	bsr	$_stateManagerEnterConnectableState
?L213:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L215
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_sinkAvrcpDisconnect
?L215:
	tst	@(H'0004,Y)
	beq	?L208
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_A2dpSignallingConnectRequest
?L208:
?LBE30:
?LBE_handleA2DPSignallingDisconnected:
	leavel	#7
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_handleA2DPSignallingLinkloss:
	enterl	#4
?LBB_handleA2DPSignallingLinkloss:
?LBB31:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L217
	bsr	$_linkPolicyCheckRoles
	ld	X,@$_theSink+H'0005
	tst	@(H'0014,X)
	bne	?L219
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
?L219:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	ld	AH,@$_theSink+H'001A
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L221
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	bne	?L220
?L221:
	bsr	$_sinkEnableConnectable
	ld	AL,#($_theSink)
	ld	AH,#H'472F
	bsr	$_MessageCancelAll
?L220:
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageSend
?L217:
?LBE31:
?LBE_handleA2DPSignallingLinkloss:
	leavel	#4
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_handleA2DPStartInd:
	enterl	#3
?LBB_handleA2DPStartInd:
	ld	X,#H'0001
	st	X,@(0,Y)
	bsr	$_A2dpMediaStartResponse
?LBE_handleA2DPStartInd:
	leavel	#3
$_handleA2DPStartStreaming:
	enterl	#7
?LBB_handleA2DPStartStreaming:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB32:
	tst	@(H'0007,Y)
	bne	?L224
?LBB33:
	bsr	$_A2dpMediaGetSink
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L224
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpPauseNonRoutedSource
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bsr	$_stateManagerEnterA2dpStreamingState
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_linkPolicyUseA2dpSettings
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0019,X)
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L227
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,#H'0001
	bsr	$_sinkAvrcpSetPlayStatus
?L227:
	ld	AL,@$_theSink+H'0024
	cmp	AL,@(H'0004,Y)
	bne	?L224
	ld	X,@(H'0001,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	tst	@(0,X)
	bne	?L229
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
?L229:
	ld	X,@(H'0001,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	tst	@(H'0001,X)
	bne	?L230
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
?L230:
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0004
	bsr	$_AudioSetMode
?L224:
?LBE33:
?LBE32:
?LBE_handleA2DPStartStreaming:
	leavel	#7
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_handleA2DPSuspendStreaming:
	enterl	#7
?LBB_handleA2DPSuspendStreaming:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB34:
	bsr	$_A2dpMediaGetSink
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'000A
	bne	?L235
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_A2dpMediaCloseRequest
	bra	(?L234)
?L235:
?LBB35:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L234
	bsr	$_stateManagerGetState
	cmp	AL,#H'000D
	bne	?L238
	bsr	$_stateManagerEnterConnectedState
?L238:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_a2dpSetSuspendState
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_linkPolicyUseA2dpSettings
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L234
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,#H'0002
	bsr	$_sinkAvrcpSetPlayStatus
?L234:
?LBE35:
?LBE34:
?LBE_handleA2DPSuspendStreaming:
	leavel	#7
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
$_SuspendA2dpStream:
	enterl	#5
?LBB_SuspendA2dpStream:
	st	AL,@(0,Y)
?LBB36:
	tst	@$_theSink+H'0030
	beq	?L242
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	beq	?L242
?LBB37:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_a2dpSetSuspendState
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L250:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	tst	@(H'0011,X)
	beq	?L246
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L246
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L246
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	bne	?L245
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_sinkAvrcpPlayPauseRequest
	st	AL,@(H'0001,Y)
	bra	(?L245)
?L246:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bcz	?L250
?L245:
	tst	@(H'0001,Y)
	bne	?L251
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaSuspendRequest
	cmp	AL,#H'0000
	bne	?L251
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaCloseRequest
?L251:
	bsr	$_stateManagerGetState
	cmp	AL,#H'000D
	bne	?L242
	bsr	$_stateManagerEnterConnectedState
?L242:
?LBE37:
?LBE36:
?LBE_SuspendA2dpStream:
	leavel	#5
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_a2dpSuspended:
	enterl	#2
?LBB_a2dpSuspended:
	tst	@$_theSink+H'0030
	bne	?L260
	ld	AL,#H'0000
	bra	(?L259)
?L260:
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AL,@(H'0013,X)
?L259:
?LBE_a2dpSuspended:
	leavel	#2
$_ResumeA2dpStream:
	enterl	#6
?LBB_ResumeA2dpStream:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB38:
	tst	@$_theSink+H'0030
	beq	?L261
	ld	AL,@$_theSink+H'0030
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	beq	?L261
?LBB39:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingGetState
	cmp	AL,#H'0002
	bne	?L263
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0005
	bne	?L264
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L270:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	tst	@(H'0011,X)
	beq	?L267
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L267
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0003,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L285
?L267:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L270
?L266:
	tst	@(H'0002,Y)
	bne	?L261
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaStartRequest
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
	bra	(?L261)
?L285:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_sinkAvrcpPlayPauseRequest
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
	bra	(?L266)
?L264:
	ld	AL,@(H'0001,Y)
	cmp	AL,#(H'0001+H'0004)
	bcc	?L273
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_connectA2dpStream
	bra	(?L261)
?L286:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_sinkAvrcpPlayPauseRequest
	bra	(?L277)
?L273:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L261
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L281:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	tst	@(H'0011,X)
	beq	?L278
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L278
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0003,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L286
?L278:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L281
?L277:
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
	ld	AL,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_A2dpRouteAudio
	bra	(?L261)
?L263:
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	bsr	$_A2dpSignallingConnectRequest
?L261:
?LBE39:
?LBE38:
?LBE_ResumeA2dpStream:
	leavel	#6
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_getA2dpVolume:
	enterl	#5
?LBB_getA2dpVolume:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB40:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L300:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	tst	@(H'0001,X)
	beq	?L296
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L296
	ld	X,@(H'0002,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L293)
?L296:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bcz	?L300
	ld	AL,#H'0000
?L293:
?LBE40:
?LBE_getA2dpVolume:
	leavel	#5
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
$_setA2dpVolume:
	enterl	#8
?LBB_setA2dpVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB41:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L316:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0003,Y)
	tst	@(H'0001,X)
	beq	?L307
	ld	AL,@(H'0003,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,@(H'0001,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L307
	ld	X,@(H'0003,Y)
?LBB42:
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	ld	X,@(0,X)
	st	X,@(H'0004,Y)
	ld	X,@$_theSink+H'000A
	ld	AL,@(0,X)
	add	AL,#-H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0005,Y)
	bcz	?L311
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
?L311:
	ld	X,@(H'0003,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	tst	@$_theSink+H'0024
	beq	?L312
	ld	X,@$_theSink+H'0030
	add	X,@(H'0003,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	ld	AH,@$_theSink+H'0024
	cmp	AH,@$XAP_AL
	bne	?L312
	ld	AL,@(H'0004,Y)
	cmp	AL,@(H'0002,Y)
	beq	?L313
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0005,Y)
	bne	?L314
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4744
	bsr	$_MessageSend
?L314:
	tst	@(H'0002,Y)
	bne	?L313
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4745
	bsr	$_MessageSend
?L313:
	ld	AL,@(H'0003,Y)
	add	AL,@$XAP_AL
	add	AL,@$_theSink+H'000D
	ld	AH,@(H'0004,Y)
	bsr	$_VolumeSetNewMainVolume
?L312:
	ld	AL,#H'0001
	bra	(?L304)
?L307:
	ld	AL,@(H'0003,Y)
?LBE42:
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L316
	ld	AL,#H'0000
?L304:
?LBE41:
?LBE_setA2dpVolume:
	leavel	#8
;.stabn	192,0,0,?LBB41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;.stabn	224,0,0,?LBE41
$_handleA2DPStoreClockMismatchRate:
	enterl	#8
?LBB_handleA2DPStoreClockMismatchRate:
	st	AL,@(H'0005,Y)
?LBB43:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_getA2dpStreamData
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_getA2dpStreamData
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L325
	ld	AL,@(H'0002,Y)
	cmp	AL,@$_theSink+H'0024
	bne	?L325
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0029,X)
	bra	(?L324)
?L325:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0007
	bne	?L324
	ld	AL,@(H'0004,Y)
	cmp	AL,@$_theSink+H'0024
	bne	?L324
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0005,Y)
	st	AL,@(H'002A,X)
?L324:
?LBE43:
?LBE_handleA2DPStoreClockMismatchRate:
	leavel	#8
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_handleA2DPStoreCurrentEqBank:
	enterl	#2
?LBB_handleA2DPStoreCurrentEqBank:
?LBB44:
	ld	AH,#H'0003
	add	AH,@$XAP_AL
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0046,X)
	cmp	AL,@$XAP_AH
	beq	?L333
	st	AH,@(H'0046,X)
	bsr	$_configManagerWriteSessionData
?L333:
?LBE44:
?LBE_handleA2DPStoreCurrentEqBank:
	leavel	#2
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
$_handleA2DPStoreEnhancements:
	enterl	#3
?LBB_handleA2DPStoreEnhancements:
	st	AL,@H'fff8
	ld	AL,@$_theSink+H'0030
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0047,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'8000
	or	AL,@H'fff8
	cmp	AH,@$XAP_AL
	beq	?L336
	st	AL,@(H'0047,X)
	bsr	$_configManagerWriteSessionData
?L336:
?LBE_handleA2DPStoreEnhancements:
	leavel	#3
$_handleA2DPUserEqBankUpdate:
	enterl	#6
?LBB_handleA2DPUserEqBankUpdate:
?LBB45:
	tst	@$_theSink+H'0035
	beq	?L339
?LBB46:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'002E
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	ld	AL,#H'002E
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0016
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0100
	st	AL,@(H'0001,X)
	ld	AL,#H'0005
	st	AL,@(H'0002,X)
	ld	AL,#H'0101
	st	AL,@(H'0003,X)
	ld	X,@$_theSink+H'0035
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0004,X)
?L345:
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000D
	add	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000C
	st	AL,@(-1,Y)
	add	AL,#H'0110
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$_theSink+H'0035
	add	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0006,X)
	ld	AH,#H'0111
	add	AH,@(-1,Y)
	st	AH,@(H'0007,X)
	ld	X,@$_theSink+H'0035
	add	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0008,X)
	ld	AH,#H'0112
	add	AH,@(-1,Y)
	st	AH,@(H'0009,X)
	ld	X,@$_theSink+H'0035
	add	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AH,@(H'000A,X)
	ld	AH,#H'0113
	add	AH,@(-1,Y)
	st	AH,@(H'000B,X)
	ld	X,@$_theSink+H'0035
	add	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'000C,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0004
	bcz	?L345
	ld	AL,#H'0001
	ld	X,@(H'0001,Y)
	st	AL,@(H'002D,X)
	st	X,@(0,Y)
	ld	AL,#H'121B
	ld	AH,#H'002E
	bsr	$_KalimbaSendLongMessage
	ld	AL,@(H'0001,Y)
	bsr	$_free
?L339:
?LBE46:
?LBE45:
?LBE_handleA2DPUserEqBankUpdate:
	leavel	#6
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
$_getA2dpIndexFromBdaddr:
	enterl	#4
?LBB_getA2dpIndexFromBdaddr:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L356:
	tst	@$_theSink+H'0030
	beq	?L352
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L352
	ld	AL,#H'0001
	bra	(?L349)
?L352:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(0,X)
	cmp	AL,#H'0001
	bcz	?L356
	ld	AL,#H'0000
?L349:
?LBE_getA2dpIndexFromBdaddr:
	leavel	#4
$_disconnectAllA2dpAvrcp:
	enterl	#4
?LBB_disconnectAllA2dpAvrcp:
	st	AL,@(0,Y)
?LBB47:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L361
	ld	AL,@(0,Y)
	bsr	$_sinkAvrcpDisconnectAll
?L361:
	tst	@$_theSink+H'0030
	beq	?L360
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L370:
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0001,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L365
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	bne	?L369
	tst	@(0,Y)
	beq	?L365
?L369:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingDisconnectRequest
?L365:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bcz	?L370
?L360:
?LBE47:
?LBE_disconnectAllA2dpAvrcp:
	leavel	#4
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
$_disconnectAllA2dpPeerDevices:
	enterl	#3
?LBB_disconnectAllA2dpPeerDevices:
?LBB48:
	ld	AH,#H'0000
	tst	@$_theSink+H'0030
	beq	?L375
	st	AH,@(0,Y)
?L381:
	ld	AL,@$_theSink+H'0030
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L378
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	bne	?L378
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingDisconnectRequest
	ld	AH,#H'0001
?L378:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0001
	bcz	?L381
?L375:
?LBE48:
	ld	AL,@$XAP_AH
?LBE_disconnectAllA2dpPeerDevices:
	leavel	#3
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
$_handleA2DPSyncDelayInd:
	enterl	#7
?LBB_handleA2DPSyncDelayInd:
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_AH
?LBB49:
	bsr	$_getA2dpPlugin
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L385
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB50:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_AudioGetLatency
	cmp	AL,#H'0000
	beq	?L385
	ld	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L385
	ld	X,@$_theSink+H'0030
	add	X,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'001B,X)
	bsr	$_A2dpMediaAvSyncDelayResponse
?L385:
?LBE50:
?LBE49:
?LBE_handleA2DPSyncDelayInd:
	leavel	#7
;.stabn	192,0,0,?LBB49
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	224,0,0,?LBE49
$_handleA2DPLatencyReport:
	enterl	#5
?LBB_handleA2DPLatencyReport:
	st	AH,@(H'0002,Y)
?LBB51:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_getA2dpIndexFromPlugin
	cmp	AL,#H'0000
	beq	?L388
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	st	AH,@(H'001D,X)
	tst	@(H'0002,Y)
	beq	?L390
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'001B,X)
	bsr	$_A2dpMediaAvSyncDelayResponse
	bra	(?L388)
?L390:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'001B,X)
	bsr	$_A2dpMediaAvSyncDelayRequest
?L388:
?LBE51:
?LBE_handleA2DPLatencyReport:
	leavel	#5
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
$_handleA2DPMessage:
	enterl	#7
?LBB_handleA2DPMessage:
	ld	AL,#-H'5D00
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0013)
	bcc	?L392
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE414,X)
	brxl
	.SEG	CONST
?JTBASE414:
	.CODE
?L414:
	.SEG	CONST
	dc	lwrd(?L394-?L414)
	dc	lwrd(?L395-?L414)
	dc	lwrd(?L396-?L414)
	dc	lwrd(?L397-?L414)
	dc	lwrd(?L410-?L414)
	dc	lwrd(?L398-?L414)
	dc	lwrd(?L399-?L414)
	dc	lwrd(?L401-?L414)
	dc	lwrd(?L402-?L414)
	dc	lwrd(?L403-?L414)
	dc	lwrd(?L404-?L414)
	dc	lwrd(?L405-?L414)
	dc	lwrd(?L406-?L414)
	dc	lwrd(?L392-?L414)
	dc	lwrd(?L392-?L414)
	dc	lwrd(?L408-?L414)
	dc	lwrd(?L392-?L414)
	dc	lwrd(?L392-?L414)
	dc	lwrd(?L392-?L414)
	dc	lwrd(?L392-?L414)
	.CODE
?L394:
	ld	AL,@(H'0007,Y)
	bsr	$_sinkA2dpInitComplete
	bra	(?L392)
?L395:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_handleA2DPSignallingConnectInd
	bra	(?L392)
?L396:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_handleA2DPSignallingConnected
	bra	(?L392)
?L397:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPSignallingDisconnected
	bra	(?L392)
?L398:
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPOpenInd
	bra	(?L392)
?L399:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPOpenCfm
	bra	(?L392)
?L401:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bra	(?L416)
?L402:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
?L416:
	bsr	_handleA2DPClose
	bra	(?L392)
?L403:
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPStartInd
	bra	(?L392)
?L404:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPStartStreaming
	bra	(?L392)
?L405:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	bra	(?L415)
?L406:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
?L415:
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPSuspendStreaming
	bra	(?L392)
?L408:
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_handleA2DPSyncDelayInd
	bra	(?L392)
?L410:
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	bsr	$_handleA2DPSignallingLinkloss
?L392:
?LBE_handleA2DPMessage:
	leavel	#7
$_a2dpAudioSinkMatch:
	enterl	#3
?LBB_a2dpAudioSinkMatch:
	st	AH,@(0,Y)
?LBB52:
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	tst	@(H'0001,X)
	beq	?L418
	bsr	$_A2dpMediaGetSink
	cmp	AL,@(0,Y)
	bne	?L418
	ld	AL,#H'0001
	bra	(?L417)
?L418:
	ld	AL,#H'0000
?L417:
?LBE52:
?LBE_a2dpAudioSinkMatch:
	leavel	#3
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
$_a2dpA2dpAudioIsRouted:
	enterl	#3
?LBB_a2dpA2dpAudioIsRouted:
?LBB53:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L428:
	ld	AL,@$_theSink+H'0030
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L424
	tst	@$_theSink+H'0024
	beq	?L424
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	ld	AH,@$_theSink+H'0024
	cmp	AH,@$XAP_AL
	bne	?L424
	ld	AL,#H'0001
	bra	(?L421)
?L424:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0001
	bcz	?L428
	ld	AL,#H'0000
?L421:
?LBE53:
?LBE_a2dpA2dpAudioIsRouted:
	leavel	#3
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
$_a2dpGetRoutedInstanceIndex:
	enterl	#3
?LBB_a2dpGetRoutedInstanceIndex:
?LBB54:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L440:
	ld	AL,@$_theSink+H'0030
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L436
	tst	@$_theSink+H'0024
	beq	?L436
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	ld	AH,@$_theSink+H'0024
	cmp	AH,@$XAP_AL
	bne	?L436
	ld	AL,@(0,Y)
	bra	(?L433)
?L436:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0001
	bcz	?L440
	ld	AL,#H'00FF
?L433:
?LBE54:
?LBE_a2dpGetRoutedInstanceIndex:
	leavel	#3
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
	ENDMOD

;# Function pattern *movqi2 used[0] = 368 used[1] = 84 used[3] = 1 total = 453
;# Function pattern *movqi3 used[0] = 537 total = 537
;# Function pattern *movqi8 used[0] = 54 total = 54
;# Function pattern *movhi used[3] = 2 total = 2
;# Function pattern *addqi4 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 40 total = 40
;# Function pattern *addqi2 used[0] = 154 used[2] = 33 total = 187
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 7 total = 7
;# Function pattern *mulqi3_const used[0] = 28 total = 28
;# Function pattern *lshrqi3 used[0] = 18 total = 18
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2_1 used[1] = 1 total = 1
;# Function pattern jump used[0] = 48 total = 48
;# Function pattern *call1 used[0] = 72 total = 72
;# Function pattern *call_value1 used[0] = 114 total = 114
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 68 used[1] = 68 total = 136
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 60 total = 60
	MODULE	sink_anc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_at_commands
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
?LC0:
	dc	H'2B
	dc	H'4D
	dc	H'49
	dc	H'43
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'00
_mic_test_string:
	dc	?LC0
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'4D
	dc	H'49
	dc	H'43
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'3D
	dc	H'31
	dc	H'0D
	dc	H'00
_mic_test_string_res_success:
	dc	?LC1
?LC2:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'4D
	dc	H'49
	dc	H'43
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'3D
	dc	H'30
	dc	H'0D
	dc	H'00
_mic_test_string_res_fail:
	dc	?LC2
?LC3:
	dc	H'2B
	dc	H'4F
	dc	H'55
	dc	H'54
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'00
_output_test_string:
	dc	?LC3
?LC4:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'4F
	dc	H'55
	dc	H'54
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'3D
	dc	H'31
	dc	H'0D
	dc	H'00
_output_test_string_res_success:
	dc	?LC4
?LC5:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'4F
	dc	H'55
	dc	H'54
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'3D
	dc	H'30
	dc	H'0D
	dc	H'00
_output_test_string_res_fail:
	dc	?LC5
_battery_scaling_2:
	dc	H'0000
	dc	H'0001
	dc	H'0003
	dc	H'0005
	dc	H'0007
	dc	H'0009
	.CODE
_sinkAtCommandsCheckAndProcessAtCommandMicTest:
	enterl	#5
?LBB_sinkAtCommandsCheckAndProcessAtCommandMicTest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@_mic_test_string
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@_mic_test_string
	bsr	$_strncmp
	cmp	AL,#H'0000
	bne	?L1
	bsr	$_audioHandleMicSwitch
	cmp	AL,#H'0000
	beq	?L3
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@_mic_test_string_res_success
	bra	(?L5)
?L3:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@_mic_test_string_res_fail
?L5:
	bsr	$_HfpAtCmdRequest
?L1:
?LBE_sinkAtCommandsCheckAndProcessAtCommandMicTest:
	leavel	#5
_sinkAtCommandsCheckAndProcessAtCommandOutputIncrement:
	enterl	#5
?LBB_sinkAtCommandsCheckAndProcessAtCommandOutputIncrement:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@_output_test_string
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@_output_test_string
	bsr	$_strncmp
	cmp	AL,#H'0000
	bne	?L6
	bsr	$_audioHandleOutputSwitch
	cmp	AL,#H'0000
	beq	?L8
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@_output_test_string_res_success
	bra	(?L10)
?L8:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@_output_test_string_res_fail
?L10:
	bsr	$_HfpAtCmdRequest
?L6:
?LBE_sinkAtCommandsCheckAndProcessAtCommandOutputIncrement:
	leavel	#5
_sinkAtCommandsCheckAndProcessProductionTestCommands:
	enterl	#4
?LBB_sinkAtCommandsCheckAndProcessProductionTestCommands:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_sinkAtCommandsCheckAndProcessAtCommandMicTest
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_sinkAtCommandsCheckAndProcessAtCommandOutputIncrement
?LBE_sinkAtCommandsCheckAndProcessProductionTestCommands:
	leavel	#4
$_sinkHandleUnrecognisedATCmd:
	enterl	#7
?LBB_sinkHandleUnrecognisedATCmd:
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB2:
	add	AH,@(H'0001,X)
	add	AH,#H'0002
	add	X,#H'0002
	st	X,@(H'0002,Y)
	cmp	X,@$XAP_AH
	bcc	?L14
?L19:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002B
	beq	?L14
	cmp	AL,#H'002D
	beq	?L14
	add	X,#H'0001
	st	X,@(H'0002,Y)
	cmp	X,@$XAP_AH
	bcs	?L19
?L14:
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	cmp	X,@$XAP_AH
	bcc	?L21
	tst	@(0,X)
	beq	?L21
?L27:
	ld	X,@(H'0002,Y)
	add	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	beq	?L26
	cmp	AL,#H'000A
	bne	?L22
?L26:
	ld	X,@(H'0002,Y)
	add	X,@H'fff8
	ld	AL,#H'0000
	st	AL,@(0,X)
?L22:
	ld	X,#H'0001
	add	X,@H'fff8
	st	X,@H'fff8
	ld	X,@(H'0002,Y)
	add	X,@H'fff8
	cmp	X,@$XAP_AH
	bcc	?L21
	tst	@(0,X)
	bne	?L27
?L21:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkAtCommandsCheckAndProcessProductionTestCommands
	tst	@$_theSink+H'0007
	beq	?L12
	ld	AH,@$_theSink+H'0007
	add	AH,#H'0010
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	tst	@(0,X)
	beq	?L12
?L33:
?LBB3:
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002B
	bne	?L32
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_strncmp
	cmp	AL,#H'0000
	bne	?L32
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	bsr	$_HfpAtCmdRequest
	bra	(?L12)
?L32:
	ld	AL,@(H'0004,Y)
	bsr	$_strlen
	ld	AH,@(H'0004,Y)
	add	AH,@$XAP_AL
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
?LBE3:
	tst	@(0,X)
	bne	?L33
?L12:
?LBE2:
?LBE_sinkHandleUnrecognisedATCmd:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_sinkSendATCmd:
	enterl	#7
?LBB_sinkSendATCmd:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	tst	@$_theSink+H'0007
	beq	?L46
	ld	AL,@$_theSink+H'0007
	add	AL,#H'0010
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L49
?L52:
	ld	AH,@(H'0002,Y)
	cmp	AH,@(H'0001,Y)
	beq	?L49
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	ld	X,@(H'0003,Y)
	add	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0002,Y)
	tst	@(0,X)
	bne	?L52
?L49:
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0001,Y)
	bne	?L46
?LBB5:
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	add	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_memset
	tst	@(H'0004,Y)
	beq	?L54
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_strcpy
?L54:
	ld	X,#H'0000
	st	X,@H'fff8
	ld	X,@(H'0004,Y)
	tst	@(0,X)
	beq	?L70
?L66:
	ld	X,@(H'0004,Y)
	add	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0081
	bcs	?L57
	cmp	AL,#H'0082
	bcz	?L61
	cmp	AL,#H'0083
	beq	?L63
	bra	(?L57)
?L61:
?LBB6:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0001
	ld	AL,@$XAP_AH
	ld	X,@(H'0004,Y)
	add	X,@H'fff8
	ld	X,@(0,X)
	ld	AH,#-H'0080
	add	AH,@$XAP_UXL
	and	AL,#H'0007
	ld	X,@$XAP_AH
	smult	@$XAP_UXL
	cmp	AL,#H'0009
	bcz	?L71
	ld	AL,#H'0009
	bra	(?L71)
?L63:
?LBE6:
?LBB7:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0001
	ld	X,@$XAP_AH
	and	X,#H'0007
	ld	AL,@(_battery_scaling_2,X)
?L71:
	ld	X,@(H'0004,Y)
	add	X,@H'fff8
	add	AL,#H'0030
	st	AL,@(0,X)
?L57:
?LBE7:
	ld	AH,#H'0001
	add	AH,@H'fff8
	st	AH,@H'fff8
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AH
	tst	@(0,X)
	bne	?L66
?L70:
	tst	@(H'0004,Y)
	beq	?L46
	ld	AL,#H'0001
	ld	AH,@(H'0004,Y)
	bsr	$_HfpAtCmdRequest
	ld	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_HfpAtCmdRequest
	ld	AL,@(H'0004,Y)
	bsr	$_free
?L46:
?LBE5:
?LBE4:
?LBE_sinkSendATCmd:
	leavel	#7
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_ATCommandPlayEvent:
	enterl	#5
?LBB_ATCommandPlayEvent:
	st	AL,@(0,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	tst	@$_theSink+H'0007
	beq	?L78
	ld	AL,@(0,Y)
	add	AL,#-H'470D
	st	AL,@(H'0002,Y)
?L92:
	ld	AL,@(H'0001,Y)
	add	AL,@$XAP_AL
	ld	X,@$_theSink+H'0007
	add	X,@$XAP_AL
	ld	AL,@(0,Y)
	cmp	AL,@(0,X)
	bne	?L84
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	bsr	$_sinkSendATCmd
?L84:
	ld	X,@(H'0001,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'0007
	ld	AL,@(0,X)
	cmp	AL,#H'470D
	beq	?L86
	cmp	AL,#H'4711
	beq	?L88
	bra	(?L82)
?L86:
	ld	AL,@(H'0002,Y)
	bra	(?L95)
?L88:
	ld	AL,@(0,Y)
	add	AL,#-H'4711
?L95:
	cmp	AL,#(H'0001+H'0003)
	bcc	?L82
	ld	X,@(H'0001,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'0007
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	bsr	$_sinkSendATCmd
?L82:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bcz	?L92
?L78:
?LBE8:
?LBE_ATCommandPlayEvent:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
	ENDMOD

;# Function pattern *movqi2 used[0] = 40 used[1] = 21 total = 61
;# Function pattern *movqi3 used[0] = 55 total = 55
;# Function pattern *movqi8 used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 30 used[2] = 4 total = 34
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *mulqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 11 total = 11
;# Function pattern *call_value1 used[0] = 16 total = 16
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 13 total = 18
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 19 total = 19
	MODULE	sink_audio
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_gCsrPlugins:
	dc	$_csr_cvsd_no_dsp_plugin
	dc	H'0000
$_multipoint_params:
	dc	H'0000
	dc	H'1F40
	dc	H'0007
	dc	H'0000
	dc	H'0001
	.CODE
$_getScoPriorityFromHfpPriority:
	enterl	#2
?LBB_getScoPriorityFromHfpPriority:
	ld	AH,@$XAP_AL
	xor	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@$XAP_AH
	xor	AL,#H'0003
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0022
	bra	(?L3)
?L2:
	ld	X,#H'0027
?L3:
	ld	AL,@($_theSink,X)
?LBE_getScoPriorityFromHfpPriority:
	leavel	#2
$_setScoPriorityFromHfpPriority:
	enterl	#2
?LBB_setScoPriorityFromHfpPriority:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	cmp	AL,#H'0000
	beq	?L4
	xor	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,@$XAP_UXL
	xor	AL,#H'0003
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0022
	bra	(?L7)
?L6:
	ld	X,#H'0027
?L7:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@($_theSink,X)
	ld	AL,@H'ffff
?L4:
?LBE_setScoPriorityFromHfpPriority:
	leavel	#2
$_audioGetLinkPriority:
	enterl	#3
?LBB_audioGetLinkPriority:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	cmp	AL,#H'0000
	bne	?L9
	ld	AL,@(0,Y)
	bsr	$_HfpLinkPriorityWithActiveCall
?L9:
	cmp	AL,#H'0000
	bne	?L10
	bsr	$_HfpGetFirstIncomingCallPriority
?L10:
	cmp	AL,#H'0000
	bne	?L11
	ld	AL,#H'0001
?L11:
?LBE2:
?LBE_audioGetLinkPriority:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_audioSwapMediaChannel:
	enterl	#7
?LBB_audioSwapMediaChannel:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB3:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_getA2dpStreamData
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_getA2dpStreamData
	ld	AL,@$_theSink+H'0024
	cmp	AL,@(H'0002,Y)
	bne	?L13
	tst	@(H'0004,Y)
	beq	?L13
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0007
	bne	?L13
	bsr	$_AudioDisconnect
	ld	AL,#H'0001
	ld	AH,@(H'0004,Y)
	bra	(?L16)
?L13:
	ld	AL,@$_theSink+H'0024
	cmp	AL,@(H'0004,Y)
	bne	?L14
	tst	@(H'0002,Y)
	beq	?L14
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L14
	bsr	$_AudioDisconnect
	ld	AL,#H'0000
	ld	AH,@(H'0002,Y)
?L16:
	bsr	$_A2dpRouteAudio
	ld	AL,#H'0001
	bra	(?L12)
?L14:
	ld	AL,#H'0000
?L12:
?LBE3:
?LBE_audioSwapMediaChannel:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_audioGetSettings:
	enterl	#4
?LBB_audioGetSettings:
	st	AH,@(H'0001,Y)
?LBB4:
	cmp	AL,#H'0001
	bne	?L22
	ld	X,#H'0002
	bra	(?L23)
?L22:
	ld	X,#H'0001
?L23:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L24
	ld	AH,@$_theSink+H'001B
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L24
	ld	AL,@$XAP_UXL
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L24
	ld	AL,#H'03CC
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#($_multipoint_params)
	bra	(?L21)
?L24:
	ld	AL,@$_theSink+H'0011
	and	AL,#H'03FF
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AH,@$_theSink+H'0011
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L25
	ld	AL,#($_theSink+H'0012)
	bra	(?L21)
?L25:
	ld	AL,#H'0000
?L21:
?LBE4:
?LBE_audioGetSettings:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_audioHandleSyncConnectInd:
	enterl	#8
?LBB_audioHandleSyncConnectInd:
	st	AL,@(H'0004,Y)
?LBB5:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	_audioGetSettings
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0038
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L28
	ld	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L28:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	st	X,@(H'0002,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_HfpAudioConnectResponse
?LBE5:
?LBE_audioHandleSyncConnectInd:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_audioHandleSyncConnectCfm:
	enterl	#8
?LBB_audioHandleSyncConnectCfm:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB6:
	tst	@(0,X)
	beq	?L30
	ld	AH,@(0,X)
	add	AH,#-H'0001
	st	AH,@(H'0004,Y)
	bra	(?L31)
?L30:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L31:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L32
	ld	AH,#H'0002
	st	AH,@(H'0005,Y)
	bra	(?L33)
?L32:
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L33:
	ld	X,@(H'0003,Y)
	tst	@(H'0001,X)
	bne	?L29
?LBB7:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetSlcSink
	cmp	AL,#H'0000
	beq	?L35
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,Y)
	bsr	$_linkPolicyUseHfpSettings
?L35:
	ld	AL,@(H'0004,Y)
	smult	#H'0005
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	ld	X,@H'fff8
	st	AH,@($_theSink+H'0028,X)
	st	AL,@($_theSink+H'0029,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	asl	#H'000E
	ld	X,@H'fff8
	ld	AH,@($_theSink+H'002A,X)
	and	AH,#H'3FFF
	or	AL,@$XAP_AH
	st	AL,@H'fff9
	st	AL,@($_theSink+H'002A,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'003F
	asl	#H'0008
	ld	AH,@H'fff9
	and	AH,#-H'3F01
	or	AH,@$XAP_AL
	ld	X,@H'fff8
	st	AH,@($_theSink+H'002A,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4702
	bsr	$_MessageSend
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L36
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0008)
	bcc	?L51
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE52,X)
	brxl
	.SEG	CONST
?JTBASE52:
	.CODE
?L52:
	.SEG	CONST
	dc	lwrd(?L38-?L52)
	dc	lwrd(?L41-?L52)
	dc	lwrd(?L41-?L52)
	dc	lwrd(?L46-?L52)
	dc	lwrd(?L43-?L52)
	dc	lwrd(?L41-?L52)
	dc	lwrd(?L43-?L52)
	dc	lwrd(?L49-?L52)
	dc	lwrd(?L49-?L52)
	.CODE
?L38:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
	bra	(?L55)
?L41:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bra	(?L55)
?L43:
	ld	AL,@(H'0005,Y)
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0005
	beq	?L56
	bra	(?L51)
?L46:
	ld	AL,@(H'0005,Y)
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0005
	bne	?L51
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
	bra	(?L51)
?L49:
	tst	@$_theSink+H'0024
	beq	?L36
?L56:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0004
	bra	(?L55)
?L51:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
?L55:
	bsr	$_setScoPriorityFromHfpPriority
?L36:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bsr	$_stateManagerGetState
	cmp	AL,#H'000C
	bne	?L29
	bsr	$_stateManagerEnterActiveCallState
?L29:
?LBE7:
?LBE6:
?LBE_audioHandleSyncConnectCfm:
	leavel	#8
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_audioHandleSyncDisconnectInd:
	enterl	#6
?LBB_audioHandleSyncDisconnectInd:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L62
	ld	AL,#H'0002
	st	AL,@(H'0003,Y)
	bra	(?L63)
?L62:
	ld	X,#H'0001
	st	X,@(H'0003,Y)
?L63:
	ld	X,@(H'0002,Y)
	tst	@(H'0001,X)
	bne	?L61
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4703
	bsr	$_MessageSend
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,@(H'0003,Y)
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0004
	bne	?L65
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
?L65:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bsr	$_stateManagerGetState
	cmp	AL,#H'0006
	bne	?L66
	bsr	$_stateManagerEnterActiveCallState
?L66:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetSlcSink
	cmp	AL,#H'0000
	beq	?L61
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,Y)
	bsr	$_linkPolicyUseHfpSettings
?L61:
?LBE8:
?LBE_audioHandleSyncDisconnectInd:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_audioHfpGetPlugin:
	enterl	#2
?LBB_audioHfpGetPlugin:
?LBB9:
	add	AL,#($_gCsrPlugins-H'0001)
	cmp	AL,#H'0000
	beq	?L72
	cmp	AH,#(H'0001+H'0001)
	bcc	?L72
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	ld	AL,@(0,X)
	bra	(?L71)
?L72:
	ld	AL,#H'0000
?L71:
?LBE9:
?LBE_audioHfpGetPlugin:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_audioHfpConnectAudio:
	enterl	#17
?LBB_audioHfpConnectAudio:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB10:
	cmp	AL,#H'0000
	beq	?L74
	add	AL,#-H'0001
	bra	(?L75)
?L74:
	ld	AL,#H'0000
?L75:
	smult	#H'0005
	st	AL,@(H'000E,Y)
	ld	X,@$XAP_AL
	ld	AH,@($_theSink+H'002A,X)
	lsr	#H'0008
	and	AH,#H'003F
	cmp	AH,#H'0000
	beq	?L73
	ld	AH,@(H'000C,Y)
	st	AH,@$_theSink+H'0024
	ld	AH,@($_theSink+H'002A,X)
	lsr	#H'0008
	ld	X,@$XAP_AH
	ld	AH,@$_theSink+H'001A
	lsr	#H'0008
	ld	AL,@$XAP_UXL
	and	AL,#H'003F
	and	AH,#H'000F
	bsr	$_audioHfpGetPlugin
	st	AL,@H'fff8
	ld	X,@(H'000E,Y)
	ld	AH,@($_theSink+H'002A,X)
	lsr	#H'0001
	and	AH,#H'007F
	add	AH,@$XAP_AH
	ld	X,@$_theSink+H'000A
	add	X,@$XAP_AH
	ld	X,@(H'0014,X)
	and	X,#H'00FF
	st	X,@(H'000D,Y)
	ld	X,@(H'000E,Y)
	ld	AH,@($_theSink+H'002A,X)
	lsr	#H'000E
	st	AH,@(0,Y)
	ld	AL,@$_theSink+H'0023
	st	AL,@(H'0001,Y)
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@($_theSink+H'0028,X)
	ld	AL,@($_theSink+H'0029,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0004
	st	AL,@(H'0006,Y)
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	ld	AL,#H'0005
	st	AL,@(H'0008,Y)
	ld	AL,#($_theSink+H'000F)
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'000C,Y)
	bsr	$_AudioConnect
	ld	AL,#H'0001
	bsr	$_audioControlLowPowerCodecs
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolume
	ld	AH,@$XAP_AL
	ld	AL,@$_theSink+H'0023
	st	AL,@(0,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_AudioSetVolume
	ld	X,@(H'000E,Y)
	ld	AL,@($_theSink+H'002A,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L77
	ld	AH,#H'000A
	bra	(?L78)
?L77:
	ld	AH,#H'0000
?L78:
	ld	AL,@(H'000B,Y)
	bsr	$_VolumeSetHfpMicrophoneGain
?L73:
?LBE10:
?LBE_audioHfpConnectAudio:
	leavel	#17
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_audioIndicateCodec:
	enterl	#3
?LBB_audioIndicateCodec:
	cmp	AL,#H'0002
	beq	?L82
	cmp	AL,#(H'0001+H'0002)
	bcc	?L87
	cmp	AL,#H'0001
	beq	?L81
	bra	(?L79)
?L87:
	cmp	AL,#H'0003
	beq	?L83
	cmp	AL,#H'0005
	beq	?L84
	bra	(?L79)
?L81:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4758
	bra	(?L88)
?L82:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4759
	bra	(?L88)
?L83:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'475A
	bra	(?L88)
?L84:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'475B
?L88:
	bsr	$_MessageSend
?L79:
?LBE_audioIndicateCodec:
	leavel	#3
$_A2dpRouteAudio:
	enterl	#18
?LBB_A2dpRouteAudio:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB11:
	cmp	AH,#H'0000
	beq	?L93
?LBB12:
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpCodecGetSettings
	st	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L95
	ld	X,@(H'000B,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	tst	@(0,X)
	bne	?L96
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
?L96:
	ld	X,@(H'000B,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	tst	@(H'0001,X)
	bne	?L97
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_VolumeUpdateMuteState
?L97:
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L98
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0039,X)
	and	AL,#H'000F
	or	AL,#H'0960
	st	AL,@(H'0039,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'003A,X)
	and	AL,#H'00FF
	or	AL,#H'1E00
	st	AL,@(H'003A,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0039,X)
	and	AL,#-H'0010
	or	AL,#H'0002
	st	AL,@(H'0039,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'003A,X)
	and	AL,#-H'0100
	or	AL,#H'0005
	bra	(?L101)
?L98:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'003A,X)
	and	AL,#-H'0100
?L101:
	st	AL,@(H'003A,X)
	ld	AH,@$_theSink+H'0030
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0007,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0030,X)
	ld	AH,@$_theSink+H'0030
	st	AH,@(H'000F,Y)
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0005,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0002
	ld	X,@(H'000F,Y)
	ld	AH,@(H'003B,X)
	and	AH,#-H'0005
	or	AH,@$XAP_AL
	st	AH,@(H'003B,X)
	ld	AH,@$_theSink+H'0030
	ld	X,@(H'000B,Y)
	add	X,@$XAP_AH
	ld	AL,@(H'0029,X)
	ld	X,@$XAP_AH
	st	AL,@(H'002D,X)
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0046
	add	AL,@$XAP_UXL
	st	AL,@(H'0034,X)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0003,X)
	bsr	$_audioIndicateCodec
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0003,X)
	bsr	$_getA2dpPlugin
	st	AL,@(H'000E,Y)
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolumeInDb
	ld	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@$_theSink+H'0023
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'000D,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0004
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'0005
	st	AL,@(H'0008,Y)
	ld	AL,@$_theSink+H'0030
	add	AL,#H'002D
	st	AL,@(H'0009,Y)
	ld	AL,#($_theSink)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_AudioConnect
	ld	AL,@(H'000B,Y)
	add	AL,@$XAP_AL
	add	AL,@$_theSink+H'000D
	bsr	$_VolumeSetAndUpdateMainAndAuxVolume
	ld	AL,#H'0000
	bsr	$_audioControlLowPowerCodecs
	ld	AL,@(H'000D,Y)
	bsr	$_free
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L95
?LBB13:
	ld	AL,#H'0004
	bsr	$_malloc
	st	AL,@H'fff8
	ld	AL,@(H'000B,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	ld	AL,@(H'0021,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#($_theSink)
	ld	AH,#H'476C
	bsr	$_MessageSend
?L95:
	ld	AH,@(H'000C,Y)
?LBE13:
	st	AH,@$_theSink+H'0024
?L93:
?LBE12:
?LBE11:
?LBE_A2dpRouteAudio:
	leavel	#18
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_audioControlLowPowerCodecs:
	enterl	#6
?LBB_audioControlLowPowerCodecs:
	st	AL,@(H'0002,Y)
?LBB14:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L102
	ld	AH,@$_theSink+H'0019
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L105
	tst	@(H'0002,Y)
	bne	?L104
?L105:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	bra	(?L107)
?L104:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L107:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'030B
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AL,@(H'0003,Y)
	bsr	$_SinkClose
?L102:
?LBE14:
?LBE_audioControlLowPowerCodecs:
	leavel	#6
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_audioHandleMicSwitch:
	enterl	#2
?LBB_audioHandleMicSwitch:
	tst	@$_theSink+H'0024
	beq	?L109
	bsr	$_AudioMicSwitch
	ld	AL,#H'0001
	bra	(?L108)
?L109:
	ld	AL,#H'0000
?L108:
?LBE_audioHandleMicSwitch:
	leavel	#2
$_audioHandleOutputSwitch:
	enterl	#2
?LBB_audioHandleOutputSwitch:
	tst	@$_theSink+H'0024
	beq	?L112
	bsr	$_AudioOutputSwitch
	ld	AL,#H'0001
	bra	(?L111)
?L112:
	ld	AL,#H'0000
?L111:
?LBE_audioHandleOutputSwitch:
	leavel	#2
$_sinkTransferToggle:
	enterl	#6
?LBB_sinkTransferToggle:
?LBB15:
	ld	AL,#H'0000
	bsr	$_audioGetLinkPriority
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	_audioGetSettings
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_HfpAudioTransferRequest
?LBE15:
?LBE_sinkTransferToggle:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_sinkCheckForAudioTransfer:
	enterl	#7
?LBB_sinkCheckForAudioTransfer:
?LBB16:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0005
	beq	?L122
	cmp	AL,#H'0005
	bcs	?L115
	add	AL,#-H'0008
	cmp	AL,#(H'0001+H'0004)
	bcc	?L115
?L122:
?LBB17:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0004
	bne	?L123
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,#H'0001
	bra	(?L129)
?L123:
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L124
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0004
	bne	?L124
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L124
	ld	AL,#H'0002
?L129:
	st	AL,@(H'0004,Y)
?L124:
	tst	@(H'0004,Y)
	beq	?L115
?LBB18:
	ld	AL,@$_theSink+H'0011
	and	AL,#H'03FF
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_HfpAudioTransferRequest
?L115:
?LBE18:
?LBE17:
?LBE16:
?LBE_sinkCheckForAudioTransfer:
	leavel	#7
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_CreateAudioConnection:
	enterl	#4
?LBB_CreateAudioConnection:
?LBB19:
	ld	AL,@$_theSink+H'0011
	and	AL,#H'03FF
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_HfpAudioTransferRequest
?LBE19:
?LBE_CreateAudioConnection:
	leavel	#4
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_sinkAudioSetEnhancement:
	enterl	#7
?LBB_sinkAudioSetEnhancement:
	st	AL,@H'fff8
?LBB20:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0047,X)
	or	AL,#-H'8000
	st	AL,@(H'0047,X)
	ld	X,@$_theSink+H'0030
	ld	X,@(H'0047,X)
	cmp	AH,#H'0000
	beq	?L136
	ld	AL,@$XAP_UXL
	or	AL,@H'fff8
	bra	(?L142)
?L136:
	ld	AL,@H'fff8
	xor	AL,#-H'0001
	and	AL,@$XAP_UXL
?L142:
	st	AL,@H'fff9
	ld	AH,@$_theSink+H'0030
	ld	X,@$XAP_AH
	ld	AL,@(H'0047,X)
	cmp	AL,@H'fff9
	beq	?L138
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0047,X)
	ld	AL,@H'ffff
	bsr	$_configManagerWriteSessionData
?L138:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_getA2dpStreamData
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_getA2dpStreamData
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L141
	ld	AL,@(H'0002,Y)
	cmp	AL,@$_theSink+H'0024
	beq	?L140
?L141:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0007
	bne	?L135
	ld	AL,@(H'0004,Y)
	cmp	AL,@$_theSink+H'0024
	bne	?L135
?L140:
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0004
	bsr	$_AudioSetMode
?L135:
?LBE20:
?LBE_sinkAudioSetEnhancement:
	leavel	#7
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
	ENDMOD

;# Function pattern *movqi2 used[0] = 124 used[1] = 29 used[3] = 3 total = 156
;# Function pattern *movqi3 used[0] = 236 total = 236
;# Function pattern *movhi used[2] = 3 used[3] = 3 total = 6
;# Function pattern *addqi0 used[0] = 17 total = 17
;# Function pattern *addqi2 used[0] = 16 used[2] = 6 total = 22
;# Function pattern *andqi3 used[0] = 25 total = 25
;# Function pattern *iorqi3 used[0] = 9 total = 9
;# Function pattern *xorqi3 used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 12 total = 12
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 29 total = 29
;# Function pattern *call1 used[0] = 35 total = 35
;# Function pattern *call_value1 used[0] = 35 total = 35
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 29 used[1] = 12 total = 41
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 25 total = 25
	MODULE	sink_audio_prompts
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AudioPromptPlay:
	enterl	#11
?LBB_AudioPromptPlay:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@$_theSink+H'0036
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L1
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0037,X)
	and	AL,#H'00FF
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bsr	$_PioSetPio
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4757
	bsr	$_MessageSendLater
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolume
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0037
	lsr	#H'000C
	st	AH,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$_theSink+H'0023
	st	AL,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#($_theSink)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_AudioPlayAudioPrompt
?L1:
?LBE_AudioPromptPlay:
	leavel	#11
$_AudioPromptConfigure:
	enterl	#3
?LBB_AudioPromptConfigure:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0037
	lsr	#H'0008
	and	AH,#H'000F
	st	AH,@(0,Y)
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,@$XAP_UXL
	bsr	$_AudioVoicePromptsInit
?LBE_AudioPromptConfigure:
	leavel	#3
$_AudioPromptPlayEvent:
	enterl	#9
?LBB_AudioPromptPlayEvent:
	st	AL,@(H'0002,Y)
?LBB2:
	st	AL,@(H'0003,Y)
	bsr	$_stateManagerGetState
	ld	X,@$XAP_AL
	ld	AL,#H'0001
	asl	@$XAP_UXL
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	tst	@$_theSink+H'0008
	beq	?L5
	ld	X,@$_theSink+H'0008
	st	X,@(H'0005,Y)
	bra	(?L7)
?L5:
	ld	AL,#H'0000
	bra	(?L4)
?L18:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0003,Y)
	bne	?L10
	ld	AH,@(H'0002,X)
	ld	AL,@$XAP_AH
	and	AL,#H'3FFF
	and	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L10
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L11
	tst	@$_theSink+H'0024
	beq	?L11
	ld	AL,@(H'0004,Y)
	and	AL,#H'2000
	cmp	AL,#H'0000
	beq	?L10
?L11:
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'471B
	beq	?L15
	cmp	AL,#H'471B
	bcs	?L16
	add	AL,#-H'4751
	cmp	AL,#(H'0001+H'0001)
	bcc	?L16
?L15:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	st	AL,@(-1,Y)
	ld	AL,#H'0000
	bra	(?L19)
?L16:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	st	AL,@(-1,Y)
	ld	AL,#H'0001
?L19:
	st	AL,@(0,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	st	AH,@(H'0001,Y)
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,@(-1,Y)
	bsr	$_AudioPromptPlay
?L10:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@(H'0005,Y)
?L7:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	cmp	AL,#H'00FF
	bne	?L18
	ld	AL,@(H'0006,Y)
?L4:
?LBE2:
?LBE_AudioPromptPlayEvent:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_AudioPromptPlayNumString:
	enterl	#6
?LBB_AudioPromptPlayNumString:
	st	AL,@(H'0001,Y)
?LBB3:
	cmp	AL,#H'0000
	beq	?L24
?LBB4:
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	cmp	AL,@(H'0001,Y)
	bcc	?L24
?L44:
	ld	X,@(H'0002,Y)
	add	X,@(H'0003,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0030
	cmp	AL,#(H'0001+H'0009)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE43,X)
	brxl
	.SEG	CONST
?JTBASE43:
	.CODE
?L43:
	.SEG	CONST
	dc	lwrd(?L32-?L43)
	dc	lwrd(?L33-?L43)
	dc	lwrd(?L34-?L43)
	dc	lwrd(?L35-?L43)
	dc	lwrd(?L36-?L43)
	dc	lwrd(?L37-?L43)
	dc	lwrd(?L38-?L43)
	dc	lwrd(?L39-?L43)
	dc	lwrd(?L40-?L43)
	dc	lwrd(?L41-?L43)
	.CODE
?L32:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'476D
	bra	(?L46)
?L33:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'476E
	bra	(?L46)
?L34:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'476F
	bra	(?L46)
?L35:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4770
	bra	(?L46)
?L36:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4771
	bra	(?L46)
?L37:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4772
	bra	(?L46)
?L38:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4773
	bra	(?L46)
?L39:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4774
	bra	(?L46)
?L40:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4775
	bra	(?L46)
?L41:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4776
?L46:
	bsr	$_MessageSend
?L28:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,@(H'0001,Y)
	bcs	?L44
?L24:
?LBE4:
?LBE3:
?LBE_AudioPromptPlayNumString:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_AudioPromptPlayNumber:
	enterl	#12
?LBB_AudioPromptPlayNumber:
?LBB5:
	ld	X,#(?LC0)
	st	X,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_strlen
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_AudioPromptPlayNumString
?LBE5:
?LBE_AudioPromptPlayNumber:
	leavel	#12
	.SEG	CONST
?LC0:
	dc	H'25
	dc	H'30
	dc	H'36
	dc	H'6C
	dc	H'64
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_AudioPromptPlayCallerNumber:
	enterl	#2
?LBB_AudioPromptPlayCallerNumber:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AL,@$_theSink+H'001B
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L51
	ld	AH,@$_theSink+H'0036
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L51
	cmp	X,#H'0000
	beq	?L51
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0003
	st	AL,@$_theSink+H'0036
	ld	AL,@$XAP_UXL
	ld	AH,@H'fff8
	bsr	$_AudioPromptPlayNumString
	ld	AL,#H'0001
	bra	(?L50)
?L51:
	ld	AL,#H'0000
?L50:
?LBE_AudioPromptPlayCallerNumber:
	leavel	#2
$_AudioPromptPlayCallerName:
; leaf function with empty stack frame
?LBB_AudioPromptPlayCallerName:
	ld	AL,#H'0000
?LBE_AudioPromptPlayCallerName:
	rts
$_AudioPromptTerminate:
	enterl	#2
?LBB_AudioPromptTerminate:
?LBB6:
	ld	AH,@$_theSink+H'0018
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L54
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'7009
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'476D
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'476E
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'476F
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4770
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4771
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4772
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4773
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4774
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4775
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'4776
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	bsr	$_AudioStopAudioPrompt
?L54:
?LBE6:
?LBE_AudioPromptTerminate:
	leavel	#2
$_AudioPromptSelectLanguage:
	enterl	#6
?LBB_AudioPromptSelectLanguage:
?LBB7:
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0015,X)
	st	AL,@(H'0003,Y)
	ld	AH,@$_theSink+H'0037
	lsr	#H'000C
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	asl	#H'000C
	ld	AH,@$_theSink+H'0037
	and	AH,#H'0FFF
	or	AL,@$XAP_AH
	st	AL,@H'fff8
	st	AL,@$_theSink+H'0037
	ld	AH,@$XAP_AL
	lsr	#H'000C
	ld	X,@$XAP_AH
	ld	AH,@H'fff8
	lsr	#H'0008
	and	AH,#H'000F
	cmp	X,@$XAP_AH
	blt	?L57
	ld	AL,@H'fff8
	and	AL,#H'0FFF
	st	AL,@$_theSink+H'0037
?L57:
	tst	@(H'0003,Y)
	beq	?L56
	ld	AL,#($_theSink)
	ld	AH,#H'4767
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4767
	bsr	$_MessageSendLater
?L56:
?LBE7:
?LBE_AudioPromptSelectLanguage:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 58 used[1] = 21 total = 79
;# Function pattern *movqi3 used[0] = 100 total = 100
;# Function pattern *movhi used[3] = 2 total = 2
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 6 total = 6
;# Function pattern *andqi3 used[0] = 17 total = 17
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 10 total = 10
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 16 total = 16
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 9 used[1] = 3 total = 12
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	sink_audio_routing
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_isAudioGated:
	enterl	#2
?LBB_isAudioGated:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'003B
	lsr	#H'0008
	and	AH,@$XAP_UXL
	cmp	AH,#H'0000
	beq	?L2
	ld	AH,#H'0001
?L2:
	ld	AL,@$XAP_AH
?LBE_isAudioGated:
	leavel	#2
$_audioGateAudio:
	enterl	#2
?LBB_audioGateAudio:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'003B
	lsr	#H'0008
	ld	AL,@$XAP_AH
	or	AL,@$XAP_UXL
	asl	#H'0008
	ld	AH,@$_theSink+H'003B
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003B
	lsr	#H'0008
	ld	AL,@$XAP_AH
?LBE_audioGateAudio:
	leavel	#2
$_audioUngateAudio:
	enterl	#2
?LBB_audioUngateAudio:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'003B
	lsr	#H'0008
	xor	X,#-H'0001
	ld	AL,@$XAP_AH
	and	AL,@$XAP_UXL
	asl	#H'0008
	ld	AH,@$_theSink+H'003B
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003B
	lsr	#H'0008
	ld	AL,@$XAP_AH
?LBE_audioUngateAudio:
	leavel	#2
$_audioHandleRouting:
	enterl	#5
?LBB_audioHandleRouting:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,@$_theSink+H'0024
	bsr	$_audioGetStatus
	st	AL,@(H'0002,Y)
	ld	AH,@$_theSink+H'0036
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L6
	ld	AL,@(H'0002,Y)
	bsr	$_free
	ld	AL,#H'0000
	bra	(?L5)
?L6:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0007
	beq	?L8
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L7
?L8:
	bsr	$_dutDisconnect
?L7:
	ld	AL,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	_audioHeadsetRouting
	st	AL,@(H'0001,Y)
	ld	AL,@$_theSink+H'0024
	ld	AH,@(H'0002,Y)
	bsr	$_audioUpdateDisplayAmp
	ld	AL,@(H'0002,Y)
	bsr	$_free
	ld	AL,@(H'0001,Y)
?L5:
?LBE2:
?LBE_audioHandleRouting:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_audioHeadsetRouting:
	enterl	#9
?LBB_audioHeadsetRouting:
	st	AH,@(H'0005,Y)
?LBB3:
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_audioRouteActiveCallScoIfAvailable
	cmp	AL,#H'0000
	beq	?L13
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetBdaddr
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_deviceManagerGetAttributeHfpVolume
	cmp	AL,#H'0000
	beq	?L12
	tst	@(H'0006,Y)
	beq	?L15
	ld	AL,@(H'0006,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L16)
?L15:
	ld	X,#H'002A
?L16:
	ld	AL,@(H'0004,Y)
	and	AL,#H'007F
	asl	#H'0001
	ld	AH,@($_theSink,X)
	and	AH,#-H'00FF
	or	AH,@$XAP_AL
	st	AH,@($_theSink,X)
	bra	(?L12)
?L13:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_audioRouteA2dpStreamIfAvailable
	cmp	AL,#H'0000
	bne	?L12
	ld	AL,@(H'0005,Y)
	bsr	$_audioRouteScoIfAvailable
	cmp	AL,#H'0000
	bne	?L12
	ld	AL,@(H'0005,Y)
	bsr	$_audioRouteAncIfAvailable
	cmp	AL,#H'0000
	bne	?L12
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	beq	?L12
	bsr	$_audioDisconnectActiveSink
?L12:
	bsr	$_VolumeApplySoftMuteStates
?LBE3:
	ld	AL,#H'0001
?LBE_audioHeadsetRouting:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_audioRouteSource:
	enterl	#4
?LBB_audioRouteSource:
	st	AH,@(0,Y)
?LBB4:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L27
	cmp	AL,#H'0005
	beq	?L33
	cmp	AL,#H'0005
	bcz	?L44
	cmp	AL,#H'0006
	beq	?L37
	bra	(?L44)
?L33:
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_audioRouteActiveCallScoIfAvailable
	cmp	AL,#H'0000
	bne	?L34
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_audioRouteA2dpStreamIfAvailable
	cmp	AL,#H'0000
	beq	?L44
	bra	(?L38)
?L34:
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	bra	(?L44)
?L37:
	ld	AL,@(0,Y)
	ld	AH,#H'0002
	bsr	$_audioRouteActiveCallScoIfAvailable
	cmp	AL,#H'0000
	bne	?L38
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_audioRouteA2dpStreamIfAvailable
	cmp	AL,#H'0000
	beq	?L44
	bra	(?L46)
?L38:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	bra	(?L44)
?L27:
	ld	X,@(0,Y)
	tst	@(0,X)
	beq	?L44
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L46:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
?L44:
?LBE4:
	ld	AL,@(H'0001,Y)
?LBE_audioRouteSource:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_audioRouteActiveCallScoIfAvailable:
	enterl	#5
?LBB_audioRouteActiveCallScoIfAvailable:
	st	AL,@(0,Y)
?LBB5:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AL,#H'0001
	bsr	_isAudioGated
	cmp	AL,#H'0000
	beq	?L51
	ld	X,@(0,Y)
	tst	@(0,X)
	beq	?L67
	ld	AL,@(0,X)
	cmp	AL,@(H'0001,X)
	beq	?L53
	cmp	AL,@(H'0002,X)
	bne	?L67
?L53:
	ld	AL,@(0,Y)
	bsr	$_audioSuspendDisconnectSource
	bra	(?L67)
?L51:
	ld	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L54
	tst	@(H'0003,X)
	beq	?L54
	tst	@(H'0002,X)
	beq	?L54
	tst	@(H'0004,X)
	beq	?L54
	ld	AL,#H'0002
	bsr	$_getScoPriorityFromHfpPriority
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	bsr	$_getScoPriorityFromHfpPriority
	ld	AH,@(H'0002,Y)
	cmp	AH,@$XAP_AL
	beq	?L73
	bcc	?L62
?L73:
	bra	(?L59)
?L54:
	ld	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L58
	tst	@(H'0003,X)
	bne	?L59
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L58
?L59:
	ld	X,@(0,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0005
	bra	(?L70)
?L58:
	ld	X,@(0,Y)
	tst	@(H'0002,X)
	beq	?L61
	tst	@(H'0004,X)
	bne	?L62
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L61
?L62:
	ld	X,@(0,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0006
?L70:
	st	AL,@(H'0006,X)
	bra	(?L57)
?L61:
	ld	X,@(0,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L65
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0001
	bne	?L57
?L65:
	ld	X,@(0,Y)
	tst	@(0,X)
	beq	?L68
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
	bra	(?L68)
?L57:
	tst	@(H'0001,Y)
	beq	?L67
	ld	AH,@(H'0001,Y)
	ld	X,@(0,Y)
	cmp	AH,@(0,X)
	beq	?L68
	tst	@(0,X)
	beq	?L69
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L69:
	ld	AL,@(H'0001,Y)
	bsr	$_HfpLinkPriorityFromAudioSink
	ld	AH,@(H'0001,Y)
	bsr	$_audioConnectScoSink
?L68:
	ld	AL,#H'0001
	bra	(?L50)
?L67:
	ld	AL,#H'0000
?L50:
?LBE5:
?LBE_audioRouteActiveCallScoIfAvailable:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_audioRelaySourceStream:
; leaf function with empty stack frame
?LBB_audioRelaySourceStream:
	ld	AL,#H'0000
?LBE_audioRelaySourceStream:
	rts
$_audioRouteA2dpStreamIfAvailable:
	enterl	#10
?LBB_audioRouteA2dpStreamIfAvailable:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,#H'0004
	bsr	_isAudioGated
	cmp	AL,#H'0000
	beq	?L79
	ld	X,@(H'0001,Y)
	tst	@(0,X)
	beq	?L80
	ld	AL,@(0,X)
	cmp	AL,@(H'0005,X)
	beq	?L81
	cmp	AL,@(H'0006,X)
	bne	?L80
?L81:
	ld	AL,@(H'0001,Y)
	bsr	$_audioSuspendDisconnectSource
?L80:
	ld	AL,#H'0000
	bra	(?L78)
?L79:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bne	?L82
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	cmp	AL,#H'0007
	bne	?L82
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0007
	bne	?L82
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0001
	bne	?L82
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0001
	bne	?L82
	ld	AL,@(H'0005,X)
	cmp	AL,@(0,X)
	beq	?L83
	ld	AL,@(H'0006,X)
	cmp	AL,@(0,X)
	bne	?L82
?L83:
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AH,#H'0001
	ld	AL,@$_theSink+H'001B
	and	AL,#H'0240
	cmp	AL,#H'0240
	bne	?L90
	ld	X,@$_theSink+H'0031
	tst	@(H'0011,X)
	beq	?L85
	ld	X,@(H'0023,X)
	st	X,@(H'0007,Y)
?L85:
	ld	X,@$_theSink+H'0031
	tst	@(H'0012,X)
	beq	?L86
	ld	AH,@(H'0024,X)
?L86:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0001
	beq	?L88
	cmp	X,#H'0008
	beq	?L88
	cmp	X,#H'0010
	bne	?L87
?L88:
	cmp	AH,#H'0001
	beq	?L87
	cmp	AH,#H'0008
	beq	?L87
	cmp	AH,#H'0010
	beq	?L87
	ld	AL,#H'0000
	bra	(?L111)
?L87:
	cmp	AH,#H'0001
	beq	?L91
	cmp	AH,#H'0008
	beq	?L91
	cmp	AH,#H'0010
	bne	?L90
?L91:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0001
	beq	?L90
	cmp	X,#H'0008
	beq	?L90
	cmp	X,#H'0010
	beq	?L90
	ld	AL,#H'0001
	bra	(?L111)
?L90:
	ld	AL,#H'0001
	bra	(?L78)
?L111:
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0006,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L93
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L93:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0006,Y)
	tst	@(H'0011,X)
	beq	?L94
	ld	AL,@(H'0005,Y)
	bra	(?L112)
?L94:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	tst	@(H'0005,Y)
	bne	?L82
	ld	AL,#H'0001
?L112:
	st	AL,@(H'0004,Y)
?L82:
	ld	AL,@(H'0004,Y)
?LBE7:
	cmp	AL,#H'0001
	beq	?L97
	ld	AL,#H'0000
	bsr	$_a2dpSuspended
	cmp	AL,#H'0001
	bne	?L97
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0001
	bne	?L97
	tst	@(0,X)
	beq	?L98
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L98:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0007,X)
	bra	(?L113)
?L97:
	tst	@(H'0004,Y)
	beq	?L100
	ld	AL,#H'0001
	bsr	$_a2dpSuspended
	cmp	AL,#H'0001
	bne	?L100
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0001
	bne	?L100
	tst	@(0,X)
	beq	?L101
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L101:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0008,X)
?L113:
	bsr	$_ResumeA2dpStream
	bra	(?L108)
?L100:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	beq	?L103
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	add	AL,#-H'0006
	cmp	AL,#(H'0001+H'0001)
	bcc	?L103
	ld	AL,#H'0000
	bsr	$_a2dpSuspended
	cmp	AL,#H'0000
	bne	?L103
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0001
	bne	?L103
	ld	AL,@(0,X)
	cmp	AL,@(H'0005,X)
	beq	?L108
	cmp	AL,#H'0000
	beq	?L105
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L105:
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0005,X)
	bsr	$_A2dpRouteAudio
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0005
	bra	(?L114)
?L103:
	tst	@(H'0004,Y)
	beq	?L99
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	add	AL,#-H'0006
	cmp	AL,#(H'0001+H'0001)
	bcc	?L99
	ld	AL,#H'0001
	bsr	$_a2dpSuspended
	cmp	AL,#H'0000
	bne	?L99
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0001
	bne	?L99
	ld	AL,@(0,X)
	cmp	AL,@(H'0006,X)
	beq	?L108
	cmp	AL,#H'0000
	beq	?L109
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L109:
	ld	AL,#H'0001
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	bsr	$_A2dpRouteAudio
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0006
?L114:
	st	AL,@(H'0006,X)
?L108:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L99:
	ld	AL,@(H'0003,Y)
?L78:
?LBE6:
?LBE_audioRouteA2dpStreamIfAvailable:
	leavel	#10
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_audioRouteScoIfAvailable:
	enterl	#4
?LBB_audioRouteScoIfAvailable:
	st	AL,@(0,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0040
	bsr	_isAudioGated
	cmp	AL,#H'0000
	beq	?L148
	ld	X,@(0,Y)
	tst	@(0,X)
	beq	?L154
	ld	AL,@(0,X)
	cmp	AL,@(H'0001,X)
	beq	?L150
	cmp	AL,@(H'0002,X)
	bne	?L154
?L150:
	ld	AL,@(0,Y)
	bsr	$_audioSuspendDisconnectSource
	bra	(?L154)
?L148:
	ld	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L151
	ld	AL,@(H'0001,X)
	bra	(?L157)
?L151:
	ld	X,@(0,Y)
	tst	@(H'0002,X)
	beq	?L152
	ld	AL,@(H'0002,X)
?L157:
	st	AL,@(H'0001,Y)
?L152:
	tst	@(H'0001,Y)
	beq	?L154
	ld	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	cmp	AL,@(0,X)
	beq	?L155
	tst	@(0,X)
	beq	?L156
	ld	AL,@$XAP_UXL
	bsr	$_audioSuspendDisconnectSource
?L156:
	ld	AL,@(H'0001,Y)
	bsr	$_HfpLinkPriorityFromAudioSink
	ld	AH,@(H'0001,Y)
	bsr	$_audioConnectScoSink
?L155:
	ld	AL,#H'0001
	bra	(?L147)
?L154:
	ld	AL,#H'0000
?L147:
?LBE8:
?LBE_audioRouteScoIfAvailable:
	leavel	#4
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_audioSuspendDisconnectSource:
	enterl	#3
?LBB_audioSuspendDisconnectSource:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,@(0,X)
	cmp	AL,@(H'0005,X)
	bne	?L162
	ld	AH,@$_theSink+H'001C
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L164
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L164
	tst	@(H'0003,X)
	beq	?L165
	tst	@(H'0004,X)
	bne	?L165
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	beq	?L164
?L165:
	ld	X,@(0,Y)
	tst	@(H'0004,X)
	beq	?L166
	tst	@(H'0003,X)
	bne	?L166
	ld	AL,#H'0000
	ld	AH,#H'0002
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	beq	?L164
?L166:
	ld	AH,@$_theSink+H'001D
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L168
	tst	#H'0000
	beq	?L168
?L164:
	ld	AL,#H'0000
	bra	(?L175)
?L162:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0006,X)
	bne	?L168
	ld	AH,@$_theSink+H'001C
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L170
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L170
	tst	@(H'0003,X)
	beq	?L171
	tst	@(H'0004,X)
	bne	?L171
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	beq	?L170
?L171:
	ld	X,@(0,Y)
	tst	@(H'0004,X)
	beq	?L172
	tst	@(H'0003,X)
	bne	?L172
	ld	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	beq	?L170
?L172:
	ld	AH,@$_theSink+H'001D
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L168
	tst	#H'0000
	beq	?L168
?L170:
	ld	AL,#H'0001
?L175:
	bsr	$_SuspendA2dpStream
?L168:
	bsr	$_audioDisconnectActiveSink
	ld	AH,#H'0001
	cmp	AH,#H'0001
	bne	?L174
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0000
	st	AL,@(H'0006,X)
?L174:
?LBE9:
	ld	AL,@$XAP_AH
?LBE_audioSuspendDisconnectSource:
	leavel	#3
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_audioUpdateDisplayAmp:
	enterl	#3
?LBB_audioUpdateDisplayAmp:
	cmp	AL,#H'0000
	beq	?L180
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0037,X)
	and	AL,#H'00FF
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bra	(?L183)
?L180:
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0037,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
?L183:
	bsr	$_PioSetPio
?LBE_audioUpdateDisplayAmp:
	leavel	#3
$_audioConnectScoSink:
	enterl	#4
?LBB_audioConnectScoSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	tst	@$_theSink+H'0024
	beq	?L185
	ld	AL,@$_theSink+H'0024
	cmp	AL,@$XAP_AH
	beq	?L185
	bsr	$_audioDisconnectActiveSink
?L185:
	tst	@$_theSink+H'0024
	bne	?L184
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_audioHfpConnectAudio
?L184:
?LBE_audioConnectScoSink:
	leavel	#4
$_audioDisconnectActiveSink:
	enterl	#2
?LBB_audioDisconnectActiveSink:
	tst	@$_theSink+H'0024
	beq	?L188
	bsr	$_AudioDisconnect
	ld	AL,#H'0000
	st	AL,@$_theSink+H'0024
?L188:
?LBE_audioDisconnectActiveSink:
	leavel	#2
$_audioGetStatus:
	enterl	#5
?LBB_audioGetStatus:
	st	AL,@(H'0001,Y)
?LBB10:
	ld	AL,#H'000B
	bsr	$_malloc
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@$XAP_UXL
	add	AH,#H'0003
	ld	AL,#H'0001
	bsr	$_HfpLinkGetCallState
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	ld	AL,#H'0002
	bsr	$_HfpLinkGetCallState
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	ld	AL,#H'0001
	bsr	$_HfpLinkGetAudioSink
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	ld	AL,#H'0002
	bsr	$_HfpLinkGetAudioSink
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	$_getA2dpStreamData
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0001
	bsr	$_getA2dpStreamData
	ld	AH,@(H'0002,Y)
	add	AH,#H'0009
	ld	AL,#H'0000
	bsr	$_getA2dpStreamRole
	ld	AH,@(H'0002,Y)
	add	AH,#H'000A
	ld	AL,#H'0001
	bsr	$_getA2dpStreamRole
?LBE10:
	ld	AL,@(H'0002,Y)
?LBE_audioGetStatus:
	leavel	#5
$_sinkAudioRouteAvailable:
	enterl	#3
?LBB_sinkAudioRouteAvailable:
?LBB11:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	tst	@$_theSink+H'0024
	beq	?L192
	ld	AH,@$_theSink+H'0024
	bsr	$_a2dpAudioSinkMatch
	cmp	AL,#H'0000
	beq	?L193
	ld	AL,#H'0001
	bra	(?L206)
?L193:
	ld	AL,#H'0001
	ld	AH,@$_theSink+H'0024
	bsr	$_a2dpAudioSinkMatch
	cmp	AL,#H'0000
	beq	?L195
	ld	AL,#H'0002
	bra	(?L206)
?L195:
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	cmp	AL,#H'0001
	bne	?L197
	ld	AL,#H'0004
	bra	(?L206)
?L197:
	cmp	AL,#H'0002
	bne	?L192
	ld	AL,#H'0008
?L206:
	st	AL,@(0,Y)
?L192:
?LBE11:
	ld	AL,@(0,Y)
?LBE_sinkAudioRouteAvailable:
	leavel	#3
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_audioRouteAncIfAvailable:
; leaf function with empty stack frame
?LBB_audioRouteAncIfAvailable:
	ld	AL,#H'0000
?LBE_audioRouteAncIfAvailable:
	rts
$_audioA2dpStartStream:
	enterl	#4
?LBB_audioA2dpStartStream:
?LBB12:
	ld	AL,@$_theSink+H'0024
	bsr	$_audioGetStatus
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0007,X)
	cmp	AL,#H'0005
	bne	?L216
	ld	AL,#H'0000
	bsr	$_a2dpSuspended
	cmp	AL,#H'0000
	bne	?L216
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0001
	bne	?L216
	ld	AL,@(H'0005,X)
	bra	(?L222)
?L216:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0005
	bne	?L218
	ld	AL,#H'0001
	bsr	$_a2dpSuspended
	cmp	AL,#H'0000
	bne	?L218
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0001
	bne	?L218
	ld	AL,@(H'0006,X)
?L222:
	ld	AH,@$XAP_UY
	bsr	$_getA2dpIndexFromSink
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingGetState
	cmp	AL,#H'0002
	bne	?L218
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaStartRequest
?L218:
	ld	AL,@(H'0001,Y)
	bsr	$_free
?LBE12:
?LBE_audioA2dpStartStream:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 79 used[1] = 29 total = 108
;# Function pattern *movqi3 used[0] = 220 total = 220
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 19 total = 19
;# Function pattern *andqi3 used[0] = 18 total = 18
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 14 total = 14
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 31 total = 31
;# Function pattern *call1 used[0] = 22 total = 22
;# Function pattern *call_value1 used[0] = 56 total = 56
;# Function pattern movstrqi+3 used[0] = 39 used[1] = 43 total = 82
;# Function pattern movstrqi+4 used[0] = 1 used[1] = 2 total = 3
;# Function pattern movstrqi+5 used[0] = 55 total = 55
	MODULE	sink_auth
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sinkHandlePinCodeInd:
	enterl	#21
?LBB_sinkHandlePinCodeInd:
	st	AL,@(H'0011,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0012,Y)
	bsr	$_AuthCanSinkPair
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,#H'035B
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_PsFullRetrieve
	st	AL,@(H'0012,Y)
	cmp	AL,#H'0000
	beq	?L4
	cmp	AL,#H'0010
	bcz	?L3
?L4:
	ld	AL,#H'0000
	st	AL,@(H'0012,Y)
	bra	(?L2)
?L3:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,#H'4749
	bsr	$_AudioPromptPlayEvent
	ld	AL,@(H'0012,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_AudioPromptPlayNumString
?L2:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0011,Y)
	ld	AH,@(H'0012,Y)
	bsr	$_ConnectionSmPinCodeResponse
?LBE2:
?LBE_sinkHandlePinCodeInd:
	leavel	#21
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkHandleUserConfirmationInd:
	enterl	#4
?LBB_sinkHandleUserConfirmationInd:
	st	AL,@(H'0001,Y)
	bsr	$_AuthCanSinkPair
	cmp	AL,#H'0000
	beq	?L9
	ld	AH,@$_theSink+H'0019
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L9
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0008
	st	AL,@$_theSink+H'0036
	ld	AL,#H'0006
	bsr	$_malloc
	st	AL,@$_theSink+H'0032
	ld	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_memcpy
	ld	AH,@$_theSink+H'001B
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L8
	ld	AL,#H'4747
	bsr	$_AudioPromptPlayEvent
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	bsr	$_AudioPromptPlayNumber
	bra	(?L8)
?L9:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_ConnectionSmUserConfirmationResponse
?L8:
?LBE_sinkHandleUserConfirmationInd:
	leavel	#4
$_sinkHandleUserPasskeyInd:
	enterl	#4
?LBB_sinkHandleUserPasskeyInd:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_ConnectionSmUserPasskeyResponse
?LBE_sinkHandleUserPasskeyInd:
	leavel	#4
$_sinkHandleUserPasskeyNotificationInd:
	enterl	#3
?LBB_sinkHandleUserPasskeyNotificationInd:
	st	AL,@(0,Y)
	ld	AH,@$_theSink+H'0019
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L13
	ld	AH,@$_theSink+H'001B
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L13
	ld	AL,#H'4748
	bsr	$_AudioPromptPlayEvent
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	bsr	$_AudioPromptPlayNumber
?L13:
?LBE_sinkHandleUserPasskeyNotificationInd:
	leavel	#3
$_sinkHandleIoCapabilityInd:
	enterl	#12
?LBB_sinkHandleIoCapabilityInd:
	st	AL,@(H'0006,Y)
?LBB3:
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
	tst	@(H'0005,X)
	bne	?L16
	bsr	$_AuthCanSinkPair
	cmp	AL,#H'0000
	beq	?L16
	ld	AH,#H'0001
	st	AH,@(H'0008,Y)
?L16:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0001
	bne	?L17
	bsr	$_sinkBleGapIsBondable
	cmp	AL,#H'0000
	beq	?L17
	ld	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L18
	ld	AH,#H'0303
	st	AH,@(H'0007,Y)
	bra	(?L17)
?L18:
	ld	AL,#H'0101
	st	AL,@(H'0007,Y)
?L17:
	tst	@(H'0008,Y)
	beq	?L20
?LBB4:
	ld	AH,@$_theSink+H'0019
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L21
	ld	X,#H'0001
	bra	(?L22)
?L21:
	ld	X,#H'0003
?L22:
	ld	AH,@$_theSink+H'0019
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L23
	ld	AH,#H'0001
?L23:
	st	AH,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_UXL
	bra	(?L25)
?L20:
?LBE4:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0005
?L25:
	bsr	$_ConnectionSmIoCapabilityResponse
?LBE3:
?LBE_sinkHandleIoCapabilityInd:
	leavel	#12
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_sinkHandleRemoteIoCapabilityInd:
; leaf function with empty stack frame
?LBB_sinkHandleRemoteIoCapabilityInd:
?LBE_sinkHandleRemoteIoCapabilityInd:
	rts
$_sinkHandleAuthoriseInd:
	enterl	#8
?LBB_sinkHandleAuthoriseInd:
	st	AL,@(H'0004,Y)
?LBB5:
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	bsr	$_AuthCanSinkConnect
	cmp	AL,#H'0000
	beq	?L30
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L30:
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0004,X)
	bsr	$_ConnectionSmAuthoriseResponse
?LBE5:
?LBE_sinkHandleAuthoriseInd:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_sinkHandleAuthenticateCfm:
	enterl	#14
?LBB_sinkHandleAuthenticateCfm:
	st	AL,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB6:
	tst	@(H'0004,X)
	bne	?L32
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0002
	beq	?L32
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'2000
	cmp	AL,#H'2000
	beq	?L32
	ld	AL,@$XAP_UXL
	bsr	$_deviceManagerMarkTrusted
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4701
	bsr	$_MessageSend
?L32:
	ld	X,@(H'000B,Y)
	tst	@(H'0006,X)
	beq	?L34
?LBB7:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_deviceManagerClearAttributes
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'000B,Y)
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	bne	?L35
	ld	AL,@(H'000B,Y)
	ld	AH,#H'0001
	bsr	$_deviceManagerStoreDefaultAttributes
	bra	(?L36)
?L35:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_deviceManagerUpdateAttributesWithDeviceDefaults
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'000B,Y)
	bsr	$_deviceManagerStoreAttributes
?L36:
	ld	AL,@(H'000B,Y)
	ld	AH,#H'0000
	bsr	$_ConnectionAuthSetPriorityDevice
?L34:
?LBE7:
	bsr	$_AuthResetConfirmationFlags
?LBE6:
?LBE_sinkHandleAuthenticateCfm:
	leavel	#14
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_AuthCanSinkPair:
	enterl	#3
?LBB_AuthCanSinkPair:
?LBB8:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,@$_theSink+H'0019
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L40
	bsr	$_stateManagerGetState
	cmp	AL,#H'0002
	beq	?L40
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'6000
	bne	?L43
?L40:
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L43:
?LBE8:
	ld	AL,@(0,Y)
?LBE_AuthCanSinkPair:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_AuthCanSinkConnect:
	enterl	#5
?LBB_AuthCanSinkConnect:
	st	AL,@(0,Y)
?LBB9:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	bsr	$_deviceManagerNumConnectedDevs
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	bsr	$_deviceManagerProfilesConnected
	cmp	AL,#H'0000
	bne	?L52
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L51
	tst	@(H'0002,Y)
	beq	?L50
?L51:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L48
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L48
?L50:
	ld	AH,@$_theSink+H'0019
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L52
	ld	AH,@$_theSink+H'0036
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L48
?L52:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L48:
?LBE9:
	ld	AL,@(H'0001,Y)
?LBE_AuthCanSinkConnect:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_sinkPairingAcceptRes:
	enterl	#2
?LBB_sinkPairingAcceptRes:
	bsr	$_AuthCanSinkPair
	cmp	AL,#H'0000
	beq	?L55
	ld	AH,@$_theSink+H'0036
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L55
	ld	AL,@$_theSink+H'0032
	ld	AH,#H'0001
	bsr	$_ConnectionSmUserConfirmationResponse
?L55:
?LBE_sinkPairingAcceptRes:
	leavel	#2
$_sinkPairingRejectRes:
	enterl	#2
?LBB_sinkPairingRejectRes:
	bsr	$_AuthCanSinkPair
	cmp	AL,#H'0000
	beq	?L58
	ld	AH,@$_theSink+H'0036
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L58
	ld	AL,@$_theSink+H'0032
	ld	AH,#H'0000
	bsr	$_ConnectionSmUserConfirmationResponse
?L58:
?LBE_sinkPairingRejectRes:
	leavel	#2
$_AuthResetConfirmationFlags:
	enterl	#2
?LBB_AuthResetConfirmationFlags:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L62
	ld	AL,@$_theSink+H'0032
	bsr	$_free
?L62:
	ld	AL,#H'0000
	st	AL,@$_theSink+H'0032
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0009
	st	AL,@$_theSink+H'0036
?LBE_AuthResetConfirmationFlags:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 53 used[1] = 14 total = 67
;# Function pattern *movqi3 used[0] = 76 total = 76
;# Function pattern *movhi used[2] = 3 used[3] = 1 total = 4
;# Function pattern *addqi0 used[0] = 7 total = 7
;# Function pattern *andqi3 used[0] = 18 total = 18
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 18 total = 18
;# Function pattern movstrqi+3 used[0] = 25 used[1] = 5 total = 30
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	sink_avrcp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_avrcp_retrieve_media_attributes_basic:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0002
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0003
$_avrcp_retrieve_media_attributes_full:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0002
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0003
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0004
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0005
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0006
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0007
$_avrcp_capability_event:
	dc	H'000D
	.CODE
_getA2dpIndexFromAvrcp:
	enterl	#4
?LBB_getA2dpIndexFromAvrcp:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	tst	@$_theSink+H'0030
	beq	?L2
	tst	@$_theSink+H'0031
	beq	?L2
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L2
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L8:
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0001,Y)
	add	AL,@(0,X)
	ld	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L5
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0001
	bra	(?L1)
?L5:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(0,X)
	cmp	AL,#H'0001
	bcz	?L8
?L2:
	ld	AL,#H'0000
?L1:
?LBE_getA2dpIndexFromAvrcp:
	leavel	#4
$_avrcpSendControlMessage:
	enterl	#6
?LBB_avrcpSendControlMessage:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L11
	cmp	AL,#H'000C
	beq	?L14
	cmp	AL,#H'000E
	bne	?L13
?L14:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	ld	AH,@(H'0023,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0008
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,@$XAP_AH
	and	AL,#H'0010
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,@(H'0003,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L13
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	ld	AL,#H'00FF
	st	AL,@(H'0023,X)
	bra	(?L11)
?L13:
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	add	AL,@$XAP_AL
	add	AL,@$_theSink+H'0031
	st	X,@(0,Y)
	ld	AH,@(H'0003,Y)
	add	AH,@$_theSink+H'0031
	add	AH,#H'0015
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendConditionally
?LBE3:
	ld	AL,@$_theSink+H'0031
	ld	X,@(H'0003,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0017,X)
	cmp	AL,#(H'0001+H'0003)
	bcc	?L11
	add	AL,#H'0001
	st	AL,@(H'0017,X)
?L11:
?LBE2:
?LBE_avrcpSendControlMessage:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sendAvrcpPassthroughCmd:
	enterl	#7
?LBB_sendAvrcpPassthroughCmd:
	st	AL,@H'fff9
	ld	AL,@(H'0007,Y)
	st	AL,@H'fff8
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AL,#H'0001
	st	AL,@(H'0015,X)
	ld	AL,@$_theSink+H'0031
	ld	X,@H'fff8
	add	X,@$XAP_AL
	tst	@(H'0017,X)
	beq	?L21
	ld	AL,@(H'0017,X)
	add	AL,#-H'0001
	st	AL,@(H'0017,X)
?L21:
	ld	X,@$_theSink+H'0031
	add	X,@H'fff8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'0009
	bsr	$_AvrcpPassthroughRequest
?LBE_sendAvrcpPassthroughCmd:
	leavel	#7
_sendAvrcpGroupCmd:
	enterl	#2
?LBB_sendAvrcpGroupCmd:
	st	AL,@H'fff8
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AH
	ld	AL,#H'0001
	st	AL,@(H'0015,X)
	ld	AL,@$_theSink+H'0031
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	tst	@(H'0017,X)
	beq	?L23
	ld	AL,@(H'0017,X)
	add	AL,#-H'0001
	st	AL,@(H'0017,X)
?L23:
	tst	@H'fff8
	beq	?L24
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AH
	ld	AL,@(H'0013,X)
	ld	AH,@(H'0002,Y)
	bsr	$_AvrcpNextGroupRequest
	bra	(?L22)
?L24:
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AH
	ld	AL,@(H'0013,X)
	ld	AH,@(H'0002,Y)
	bsr	$_AvrcpPreviousGroupRequest
?L22:
?LBE_sendAvrcpGroupCmd:
	leavel	#2
_sendAvrcpAbortContinuingCmd:
	enterl	#2
?LBB_sendAvrcpAbortContinuingCmd:
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AL,@(H'0013,X)
	bsr	$_AvrcpAbortContinuingResponseRequest
?LBE_sendAvrcpAbortContinuingCmd:
	leavel	#2
$_getAvrcpQueueSpace:
	enterl	#2
?LBB_getAvrcpQueueSpace:
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AL,#H'0004
	sub	AL,@(H'0017,X)
?LBE_getAvrcpQueueSpace:
	leavel	#2
_isAvrcpCategory1MetadataEnabled:
	enterl	#2
?LBB_isAvrcpCategory1MetadataEnabled:
	ld	AH,@$_theSink+H'0031
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AL,@(H'000D,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L29
	ld	AL,@(H'000B,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L29
	ld	AL,#H'0001
	bra	(?L28)
?L29:
	ld	AL,#H'0000
?L28:
?LBE_isAvrcpCategory1MetadataEnabled:
	leavel	#2
_isAvrcpPlaybackStatusSupported:
	enterl	#2
?LBB_isAvrcpPlaybackStatusSupported:
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AL,@(H'0021,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L31
	ld	AL,#H'0001
	bra	(?L30)
?L31:
	ld	AL,#H'0000
?L30:
?LBE_isAvrcpPlaybackStatusSupported:
	leavel	#2
_isAvrcpGroupNavigationEnabled:
	enterl	#2
?LBB_isAvrcpGroupNavigationEnabled:
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'0021
	cmp	AL,#H'0021
	bne	?L33
	ld	AL,#H'0001
	bra	(?L32)
?L33:
	ld	AL,#H'0000
?L32:
?LBE_isAvrcpGroupNavigationEnabled:
	leavel	#2
_avrcpControlHandler:
	enterl	#14
?LBB_avrcpControlHandler:
?LBB4:
	cmp	AH,#H'0001
	bne	?L39
	ld	X,@(H'000E,Y)
?LBB5:
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UY
	add	AH,#H'0007
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L40
	ld	AL,@(H'0007,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
?L40:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_sinkAvrcpConnect
?LBE5:
	bra	(?L38)
?L39:
	cmp	AH,#H'0000
	bne	?L38
	ld	X,@(H'000E,Y)
?LBB6:
	ld	AL,@(H'0001,X)
	st	AL,@(H'000A,Y)
	st	AH,@(H'0009,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	bsr	$_HfpLinkGetAudioSink
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	bsr	$_HfpLinkGetAudioSink
	ld	AL,@$_theSink+H'0031
	ld	X,@(H'000A,Y)
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L38
	tst	@(H'002B,X)
	bne	?L44
	tst	@(H'0008,Y)
	bne	?L44
	tst	@(H'0009,Y)
	bne	?L44
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	beq	?L44
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0018,X)
	ld	AH,@(H'001A,X)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	beq	?L44
?LBB7:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	X,@$_theSink+H'0031
	add	X,@(H'000A,Y)
	ld	AL,@(H'0013,X)
	bsr	$_AvrcpGetSink
	bsr	$_linkPolicyUseAvrcpSettings
	ld	X,@$_theSink+H'0031
	add	X,@(H'000A,Y)
	ld	AL,#H'0001
	st	AL,@(H'002B,X)
	ld	AL,@(H'000A,Y)
	ld	X,@(H'000B,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,#H'2710
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4756
	bsr	$_MessageSendLater
?L44:
	ld	X,@(H'000E,Y)
?LBE7:
	ld	AL,@(0,X)
	cmp	AL,#(H'0001+H'0017)
	bcc	?L38
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE67,X)
	brxl
	.SEG	CONST
?JTBASE67:
	.CODE
?L67:
	.SEG	CONST
	dc	lwrd(?L38-?L67)
	dc	lwrd(?L47-?L67)
	dc	lwrd(?L48-?L67)
	dc	lwrd(?L49-?L67)
	dc	lwrd(?L50-?L67)
	dc	lwrd(?L51-?L67)
	dc	lwrd(?L52-?L67)
	dc	lwrd(?L53-?L67)
	dc	lwrd(?L54-?L67)
	dc	lwrd(?L55-?L67)
	dc	lwrd(?L56-?L67)
	dc	lwrd(?L57-?L67)
	dc	lwrd(?L58-?L67)
	dc	lwrd(?L59-?L67)
	dc	lwrd(?L60-?L67)
	dc	lwrd(?L61-?L67)
	dc	lwrd(?L62-?L67)
	dc	lwrd(?L63-?L67)
	dc	lwrd(?L64-?L67)
	dc	lwrd(?L38-?L67)
	dc	lwrd(?L38-?L67)
	dc	lwrd(?L38-?L67)
	dc	lwrd(?L38-?L67)
	dc	lwrd(?L65-?L67)
	.CODE
?L47:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0046
	bra	(?L70)
?L48:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0046
	bra	(?L71)
?L49:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0044
?L70:
	ld	AH,#H'0000
	bra	(?L69)
?L50:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0044
	bra	(?L71)
?L51:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'004B
	bra	(?L70)
?L52:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'004B
	bra	(?L71)
?L53:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'004C
	bra	(?L70)
?L54:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'004C
	bra	(?L71)
?L55:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0045
	bra	(?L70)
?L56:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0045
	bra	(?L71)
?L57:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0049
	bra	(?L70)
?L58:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0049
	bra	(?L71)
?L59:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0048
	bra	(?L70)
?L60:
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0048
?L71:
	ld	AH,#H'0001
?L69:
	bsr	_sendAvrcpPassthroughCmd
	bra	(?L38)
?L61:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	bra	(?L68)
?L62:
	ld	AL,#H'0001
	bra	(?L72)
?L63:
	ld	AL,#H'0000
?L72:
	st	AL,@(0,Y)
	bra	(?L68)
?L64:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
?L68:
	ld	AH,@(H'000A,Y)
	bsr	_sendAvrcpGroupCmd
	bra	(?L38)
?L65:
	ld	AL,@(H'000A,Y)
	ld	X,@(H'000E,Y)
	ld	AH,@(0,X)
	bsr	_sendAvrcpAbortContinuingCmd
?L38:
?LBE6:
?LBE4:
?LBE_avrcpControlHandler:
	leavel	#14
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
_sinkAvrcpInitComplete:
	enterl	#2
?LBB_sinkAvrcpInitComplete:
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L76
	bsr	$_Panic
?L76:
?LBE_sinkAvrcpInitComplete:
	leavel	#2
_handleAvrcpConnectCfm:
	enterl	#9
?LBB_handleAvrcpConnectCfm:
	st	AL,@(H'0003,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	tst	@(H'0001,X)
	bne	?L80
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L81
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_AvrcpDisconnectRequest
	bra	(?L100)
?L81:
?LBB9:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0006,X)
	bsr	$_ConnectionSmEncrypt
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_AvrcpGetProfileExtensions
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	bne	?L83
?LBB10:
	ld	AL,#H'0000
	ld	AH,@$_theSink+H'0031
	st	AH,@(-1,Y)
?L89:
	ld	X,@$XAP_AL
	add	X,@(-1,Y)
	tst	@(H'0011,X)
	beq	?L85
	add	AL,#H'0001
	cmp	AL,#H'0001
	bcz	?L89
?L85:
	st	AL,@(H'0001,Y)
?L83:
?LBE10:
	ld	AH,@(H'0001,Y)
	cmp	AH,#(H'0001+H'0001)
	bcc	?L100
	ld	AL,@$_theSink+H'0031
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	bne	?L100
	ld	AL,#H'0001
	st	AL,@(H'0011,X)
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0005,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0023,X)
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0013,X)
	bsr	$_sinkAvrcpUpdateActiveConnection
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_getA2dpVolume
	cmp	AL,#H'0000
	bne	?L91
	ld	X,@$_theSink+H'000A
	ld	AH,@$_theSink+H'001C
	lsr	#H'000C
	ld	AL,@$XAP_AH
	smult	@(0,X)
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bpl	?L92
	add	AH,#H'000F
?L92:
	asr	#H'0004
	st	AH,@(H'0002,Y)
?L91:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_sinkAvrcpSetLocalVolume
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
?L99:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0004,Y)
	tst	@(H'0001,X)
	beq	?L95
	ld	AL,@(H'0004,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L95
	ld	X,@$_theSink+H'0030
	add	X,@(H'0004,Y)
	ld	AL,#H'0003
	st	AL,@(H'002B,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0004,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	bne	?L100
	ld	AL,@(H'0005,Y)
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,#H'0001
	bsr	$_sinkAvrcpSetPlayStatus
	bra	(?L100)
?L95:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bcz	?L99
?LBE9:
	bra	(?L100)
?L115:
	ld	AL,#H'0001
	st	AL,@(H'002B,X)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'01F4
	bsr	$_sinkAvrcpConnect
	bra	(?L79)
?L80:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L101
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
?L101:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
?L109:
	ld	X,@$_theSink+H'0030
	add	X,@(H'0004,Y)
	tst	@(H'0001,X)
	beq	?L104
	ld	AL,@(H'0004,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@(H'0006,Y)
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L104
	ld	AL,@$_theSink+H'0030
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	tst	@(H'002B,X)
	beq	?L115
	ld	X,@$XAP_AL
	add	X,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(H'002B,X)
	bra	(?L100)
?L104:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bcz	?L109
?L100:
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'000A,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L79
	ld	AL,#H'0027
	add	AL,@$XAP_UXL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L79
	ld	X,@(H'0003,Y)
	tst	@(H'0001,X)
	bne	?L111
	bsr	$_sinkAvrcpPlay
?L111:
	ld	X,@$_theSink+H'0031
	ld	AL,@(H'000A,X)
	and	AL,#-H'2001
	st	AL,@(H'000A,X)
	ld	X,@$_theSink+H'0031
	ld	AL,#H'0000
	st	AL,@(H'0028,X)
	st	AL,@(H'0027,X)
	st	AL,@(H'002A,X)
	st	AL,@(H'0029,X)
?L79:
?LBE8:
?LBE_handleAvrcpConnectCfm:
	leavel	#9
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
_handleAvrcpConnectInd:
	enterl	#8
?LBB_handleAvrcpConnectInd:
	st	AL,@(H'0002,Y)
?LBB11:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
?L129:
	ld	AL,@(H'0003,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0005,Y)
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L125
	ld	AL,@(H'0005,Y)
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	ld	AH,@(H'0002,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L123
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	tst	@(H'0011,X)
	bne	?L123
	ld	X,#H'0001
	st	X,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@$XAP_AL
	add	AL,@$_theSink+H'0031
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	bra	(?L122)
?L125:
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	bra	(?L122)
?L123:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L129
?L122:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,@(H'0004,X)
	bsr	$_AvrcpConnectResponse
?LBE11:
?LBE_handleAvrcpConnectInd:
	leavel	#8
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
_resetAvrcpConnection:
	enterl	#3
?LBB_resetAvrcpConnection:
	st	AL,@(0,Y)
	bsr	_sinkAvrcpFlushAndResetQueue
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0011,X)
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	st	AL,@(H'0021,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	st	AL,@(H'000D,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	st	AL,@(H'000F,X)
?LBE_resetAvrcpConnection:
	leavel	#3
_handleAvrcpDisconnectInd:
	enterl	#3
?LBB_handleAvrcpDisconnectInd:
	ld	X,@$XAP_AL
?LBB12:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L133
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0013,X)
	bsr	$_sinkAvrcpBrowsingChannelDisconnectRequest
	ld	AL,@(0,Y)
	bsr	$_sinkAvrcpBrowsingChannelIsDisconnected
	cmp	AL,#H'0000
	beq	?L135
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0013,X)
?L135:
	ld	AL,@(0,Y)
	bsr	_resetAvrcpConnection
	bsr	$_sinkAvrcpUpdateActiveConnection
?L133:
?LBE12:
?LBE_handleAvrcpDisconnectInd:
	leavel	#3
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_handleAvrcpPassthroughCfm:
	enterl	#3
?LBB_handleAvrcpPassthroughCfm:
?LBB13:
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L136
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0015,X)
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'002D,X)
	beq	?L136
	ld	AL,@(H'002D,X)
	bsr	$_free
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'002D,X)
?L136:
?LBE13:
?LBE_handleAvrcpPassthroughCfm:
	leavel	#3
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_handleAvrcpPassthroughInd:
	enterl	#5
?LBB_handleAvrcpPassthroughInd:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB14:
	ld	AL,@(H'0004,X)
	add	AL,#-H'0041
	cmp	AL,#(H'0001+H'0001)
	bcc	?L140
	ld	AL,@(0,X)
	ld	AH,#H'0009
	bsr	$_AvrcpPassthroughResponse
	ld	X,@(H'0001,Y)
	tst	@(H'0005,X)
	bne	?L139
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L139
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L150:
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L144
	tst	@$_theSink+H'0024
	beq	?L144
	ld	X,@$_theSink+H'0030
	add	X,@(H'0002,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	ld	AH,@$_theSink+H'0024
	cmp	AH,@$XAP_AL
	bne	?L144
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0041
	bne	?L148
	ld	AL,#H'0000
	bra	(?L154)
?L148:
	ld	AL,#H'0001
?L154:
	bsr	$_VolumeModifyAndUpdateRoutedA2DPAudioMainVolume
?L144:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bcz	?L150
	bra	(?L139)
?L140:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0008
	bsr	$_AvrcpPassthroughResponse
?L139:
?LBE14:
?LBE_handleAvrcpPassthroughInd:
	leavel	#5
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_handleAvrcpUnitInfoInd:
	enterl	#6
?LBB_handleAvrcpUnitInfoInd:
	st	AL,@H'fff8
?LBB15:
	ld	AL,#-H'0001
	ld	AH,#H'00FF
	ld	X,#H'0009
	st	X,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_AvrcpUnitInfoResponse
?LBE15:
?LBE_handleAvrcpUnitInfoInd:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
_handleAvrcpSubUnitInfoInd:
	enterl	#7
?LBB_handleAvrcpSubUnitInfoInd:
	ld	AH,@$XAP_AL
?LBB16:
	ld	AL,#H'0048
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,#H'00FF
	st	AL,@(H'0001,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_AvrcpSubUnitInfoResponse
?LBE16:
?LBE_handleAvrcpSubUnitInfoInd:
	leavel	#7
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_handleSinkAvrcpVendorUniquePassthroughReq:
	enterl	#4
?LBB_handleSinkAvrcpVendorUniquePassthroughReq:
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,#H'0003
	add	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_sinkAvrcpVendorUniquePassthroughRequest
?LBE_handleSinkAvrcpVendorUniquePassthroughReq:
	leavel	#4
_handleAvrcpVendorDependentInd:
	enterl	#2
?LBB_handleAvrcpVendorDependentInd:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,#H'0008
	bsr	$_AvrcpVendorDependentResponse
?LBE_handleAvrcpVendorDependentInd:
	leavel	#2
_handleAvrcpGetCapsInd:
	enterl	#5
?LBB_handleAvrcpGetCapsInd:
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	ld	AL,#-H'0002
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0001)
	bcc	?L166
	st	AH,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000C
	bra	(?L168)
?L166:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0081
?L168:
	bsr	$_AvrcpGetCapsResponse
?LBE_handleAvrcpGetCapsInd:
	leavel	#5
_handleAvrcpGetCapsCfm:
	enterl	#10
?LBB_handleAvrcpGetCapsCfm:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB17:
	ld	AL,@(H'0006,X)
	bsr	$_SourceMap
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	bsr	$_SourceSize
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	tst	@(H'0001,X)
	bne	?L181
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L181
	ld	X,@(H'0003,Y)
	ld	X,@(H'0004,X)
	st	X,@H'fff8
	ld	AL,@$XAP_UXL
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'0005,X)
	bcz	?L171
	ld	X,@(H'0005,X)
	st	X,@H'fff8
?L171:
	ld	AL,@H'fff8
	cmp	AL,@(H'0005,Y)
	bcz	?L172
	ld	AL,@(H'0005,Y)
	st	AL,@H'fff8
?L172:
	tst	@(H'0004,Y)
	beq	?L181
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0003
	bne	?L181
?LBB18:
	ld	AL,#H'0000
	st	AL,@H'fff9
	cmp	AL,@H'fff8
	bcc	?L181
?L179:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	st	X,@(H'0007,Y)
	ld	X,@(H'0004,Y)
	add	X,@H'fff9
	st	X,@(H'0006,Y)
	ld	AL,#H'0001
	asl	@(0,X)
	ld	X,@(H'0007,Y)
	or	AL,@(H'000F,X)
	st	AL,@(H'000F,X)
	ld	AL,#H'0001
	add	AL,@H'fff9
	st	AL,@H'fff9
	cmp	AL,@H'fff8
	bcs	?L179
?L181:
	ld	X,@(H'0003,Y)
?LBE18:
	ld	AL,@(0,X)
	bsr	$_AvrcpSourceProcessed
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_AvrcpRegisterNotificationRequest
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'000F,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L183
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	$_AvrcpRegisterNotificationRequest
?L183:
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L169
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'000F,X)
	and	AL,#H'2000
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000D
	bsr	$_AvrcpRegisterNotificationRequest
?L169:
?LBE17:
?LBE_handleAvrcpGetCapsCfm:
	leavel	#10
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
_handleAvrcpRegisterNotificationInd:
	enterl	#6
?LBB_handleAvrcpRegisterNotificationInd:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB19:
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000B
	beq	?L197
	cmp	AL,#(H'0001+H'000B)
	bcc	?L200
	cmp	AL,#H'0002
	beq	?L197
	bra	(?L192)
?L200:
	cmp	AL,#H'000D
	bne	?L192
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L192
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	st	X,@(H'0003,Y)
	ld	AL,#H'0001
	ld	X,@(H'0002,Y)
	asl	@(H'0001,X)
	ld	X,@(H'0003,Y)
	or	AL,@(H'0021,X)
	st	AL,@(H'0021,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	ld	AL,@(H'0025,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'000F
	bsr	$_AvrcpEventVolumeChangedResponse
	bra	(?L192)
?L197:
	ld	AL,@(H'0002,Y)
	bsr	$_handleAvrcpQualificationRegisterNotificationInd
?L192:
?LBE19:
?LBE_handleAvrcpRegisterNotificationInd:
	leavel	#6
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
_handleAvrcpSetAbsVolInd:
	enterl	#6
?LBB_handleAvrcpSetAbsVolInd:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB20:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L204
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0013,X)
	ld	AH,#H'0009
	bsr	$_AvrcpSetAbsoluteVolumeResponse
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0025,X)
	ld	AL,@$_theSink+H'000A
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	smult	@(0,X)
	ld	AH,#H'0000
	udiv	#H'007F
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	ld	AH,@$XAP_UXL
	bsr	$_setA2dpVolume
?L204:
?LBE20:
?LBE_handleAvrcpSetAbsVolInd:
	leavel	#6
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
_handleAvrcpGetPlayStatusCfm:
	enterl	#5
?LBB_handleAvrcpGetPlayStatusCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB21:
	tst	@(H'0001,X)
	bne	?L206
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L206
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	add	AL,#-H'0003
	cmp	AL,#(H'0001+H'0001)
	bcc	?L208
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	st	X,@(H'0002,Y)
	ld	AL,#H'0001
	ld	X,@(H'0001,Y)
	asl	@(H'0006,X)
	ld	X,@(H'0002,Y)
	bra	(?L210)
?L208:
	ld	X,@$_theSink+H'0031
	ld	AH,@(0,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	ld	X,@$XAP_AH
?L210:
	st	AL,@(H'0023,X)
?L206:
?LBE21:
?LBE_handleAvrcpGetPlayStatusCfm:
	leavel	#5
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
_handleAvrcpPlayStatusChangedInd:
	enterl	#7
?LBB_handleAvrcpPlayStatusChangedInd:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB22:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L211
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	beq	?L214
	cmp	AL,#H'000F
	bne	?L213
?L214:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	add	AL,#-H'0003
	cmp	AL,#(H'0001+H'0001)
	bcc	?L215
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	st	X,@(H'0004,Y)
	ld	AL,#H'0001
	ld	X,@(H'0003,Y)
	asl	@(H'0002,X)
	ld	X,@(H'0004,Y)
	bra	(?L228)
?L215:
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'0002,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
?L228:
	st	AL,@(H'0023,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'0021,X)
	or	AL,#H'0002
	st	AL,@(H'0021,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	bne	?L217
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_AvrcpRegisterNotificationRequest
?L217:
	ld	AL,@$_theSink+H'0031
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0023,X)
	cmp	AL,#H'0001
	bne	?L223
	tst	@(H'0011,X)
	beq	?L223
	ld	X,@$_theSink+H'0030
	add	X,#H'0021
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L220
	ld	AL,#H'0000
	bsr	$_a2dpSuspended
	cmp	AL,#H'0002
	bne	?L220
	ld	AL,#H'0000
	bra	(?L229)
?L220:
	ld	X,@$_theSink+H'0030
	add	X,#H'0025
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L223
	ld	AL,#H'0001
	bsr	$_a2dpSuspended
	cmp	AL,#H'0002
	bne	?L223
	ld	AL,#H'0001
?L229:
	ld	AH,#H'0000
	bsr	$_a2dpSetSuspendState
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
?L223:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L211
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	bne	?L211
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'0023,X)
	cmp	AL,#H'0008
	beq	?L211
	cmp	AL,#H'0010
	beq	?L211
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
	bra	(?L211)
?L213:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'0021,X)
	and	AL,#-H'0003
	st	AL,@(H'0021,X)
?L211:
?LBE22:
?LBE_handleAvrcpPlayStatusChangedInd:
	leavel	#7
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
_handleAvrcpTrackChangedInd:
	enterl	#6
?LBB_handleAvrcpTrackChangedInd:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB23:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L239
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	beq	?L242
	cmp	AL,#H'000F
	bne	?L241
?L242:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'0021,X)
	or	AL,#H'0004
	st	AL,@(H'0021,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	bne	?L239
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
	bsr	$_AvrcpRegisterNotificationRequest
	bra	(?L239)
?L241:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'0021,X)
	and	AL,#-H'0005
	st	AL,@(H'0021,X)
?L239:
?LBE23:
?LBE_handleAvrcpTrackChangedInd:
	leavel	#6
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
_handleAvrcpPlaybackPosChangedInd:
	enterl	#6
?LBB_handleAvrcpPlaybackPosChangedInd:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB24:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L248
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	beq	?L251
	cmp	AL,#H'000F
	bne	?L250
?L251:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	bne	?L248
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	$_AvrcpRegisterNotificationRequest
	bra	(?L248)
?L250:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'000F,X)
	and	AL,#-H'0021
	st	AL,@(H'000F,X)
?L248:
?LBE24:
?LBE_handleAvrcpPlaybackPosChangedInd:
	leavel	#6
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
_handleAvrcpGetExtensionsCfm:
	enterl	#4
?LBB_handleAvrcpGetExtensionsCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB25:
	tst	@(H'0001,X)
	bne	?L257
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L257
	ld	X,@$_theSink+H'0031
	ld	AH,@(0,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'000B,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_AvrcpGetSupportedFeatures
?L257:
?LBE25:
?LBE_handleAvrcpGetExtensionsCfm:
	leavel	#4
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
_handleAvrcpGetSupportedFeaturesCfm:
	enterl	#6
?LBB_handleAvrcpGetSupportedFeaturesCfm:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB26:
	tst	@(H'0001,X)
	bne	?L259
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L259
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'0002,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'000D,X)
	ld	AL,@(H'0002,Y)
	bsr	_isAvrcpCategory1MetadataEnabled
	cmp	AL,#H'0000
	beq	?L259
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bsr	$_AvrcpGetCapsRequest
?L259:
?LBE26:
?LBE_handleAvrcpGetSupportedFeaturesCfm:
	leavel	#6
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_sinkAvrcpInit:
	enterl	#7
?LBB_sinkAvrcpInit:
?LBB27:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L265
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,#H'0001
	st	AL,@(H'0001,X)
	ld	AL,#H'0002
	st	AL,@(H'0002,X)
	ld	AL,#H'0063
	st	AL,@(H'0003,X)
	ld	AL,#($_theSink)
	ld	AH,@$XAP_UXL
	bsr	$_AvrcpInit
	bra	(?L266)
?L265:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	st	AL,@(H'0001,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0003,X)
?L266:
	ld	AL,@$_theSink+H'0030
	add	AL,#H'0049
	st	AL,@$_theSink+H'0031
	ld	AH,#H'0031
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#H'0000
	st	AH,@(-1,Y)
	ld	AH,#hwrd(_avrcpControlHandler)
	ld	AL,#lwrd(_avrcpControlHandler)
?L271:
	ld	X,@(-1,Y)
	add	X,@(-1,Y)
	add	X,@$_theSink+H'0031
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,#H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	cmp	X,#H'0001
	bcz	?L271
	ld	AH,#H'0000
	st	AH,@(-1,Y)
?L276:
	ld	AL,@(-1,Y)
	smult	#H'0003
	st	AL,@H'fff8
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AH,#hwrd($_sinkAvrcpDataCleanUp)
	ld	AL,#lwrd($_sinkAvrcpDataCleanUp)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@$_theSink+H'0031
	add	X,@H'fff8
	ld	AL,#H'0000
	st	AL,@(H'0006,X)
	ld	X,#H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	cmp	X,#H'0001
	bcz	?L276
	bsr	$_sinkAvrcpQualificationInit
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_sinkAvrcpBrowsingChannelInit
?LBE27:
?LBE_sinkAvrcpInit:
	leavel	#7
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_sinkAvrcpDataCleanUp:
	enterl	#3
?LBB_sinkAvrcpDataCleanUp:
?LBB28:
	st	AL,@(0,Y)
	cmp	AH,#-H'7FD7
	bne	?L283
	ld	X,@$XAP_AL
	tst	@(H'0002,X)
	beq	?L286
	ld	AL,@(H'0002,X)
	bsr	$_free
?L286:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0002,X)
?L283:
?LBE28:
?LBE_sinkAvrcpDataCleanUp:
	leavel	#3
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_sinkAvrcpDisconnect:
	enterl	#4
?LBB_sinkAvrcpDisconnect:
?LBB29:
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L290
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	ld	AL,@(H'0013,X)
	bsr	$_AvrcpDisconnectRequest
?L290:
?LBE29:
?LBE_sinkAvrcpDisconnect:
	leavel	#4
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_sinkAvrcpDisconnectAll:
	enterl	#3
?LBB_sinkAvrcpDisconnectAll:
?LBB30:
	tst	@$_theSink+H'0031
	beq	?L292
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L299:
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L296
	ld	AL,@(H'0013,X)
	bsr	$_AvrcpDisconnectRequest
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
?L296:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0001
	bcz	?L299
	ld	X,@$_theSink+H'0031
	ld	AL,@(H'000A,X)
	and	AL,#-H'2001
	st	AL,@(H'000A,X)
	ld	X,@$_theSink+H'0031
	ld	AL,#H'0000
	st	AL,@(H'0028,X)
	st	AL,@(H'0027,X)
	st	AL,@(H'002A,X)
	st	AL,@(H'0029,X)
?L292:
?LBE30:
?LBE_sinkAvrcpDisconnectAll:
	leavel	#3
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_sinkAvrcpAclClosed:
	enterl	#4
?LBB_sinkAvrcpAclClosed:
?LBB31:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L303
	ld	AL,@(H'0001,Y)
	bsr	_resetAvrcpConnection
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	bsr	$_sinkAvrcpBrowsingChannelInit
?L303:
?LBE31:
?LBE_sinkAvrcpAclClosed:
	leavel	#4
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_sinkAvrcpConnect:
	enterl	#12
?LBB_sinkAvrcpConnect:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB32:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	tst	@$_theSink+H'0031
	beq	?L305
	tst	@(H'0003,Y)
	beq	?L305
	ld	AL,@(H'0003,Y)
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L305
	ld	X,#H'0000
	st	X,@(H'0006,Y)
?L316:
	ld	AL,@(H'0006,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0009,Y)
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L312
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	ld	AH,@(H'0003,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L305
	bra	(?L310)
?L312:
	tst	@(H'0007,Y)
	bne	?L310
	ld	AL,@(H'0006,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	st	AL,@(-1,Y)
	ld	AH,#H'0019
	add	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0019,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L310:
	ld	X,@(H'0006,Y)
	add	X,#H'0001
	st	X,@(H'0006,Y)
	cmp	X,#H'0001
	bcz	?L316
	ld	AL,@(H'0005,Y)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L305
	tst	@(H'0007,Y)
	beq	?L305
	tst	@(H'0004,Y)
	bne	?L318
	ld	AL,#($_theSink)
	ld	AH,@(H'0003,Y)
	bsr	$_AvrcpConnectRequest
	bra	(?L305)
?L318:
?LBB33:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@(H'0008,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'0031
	st	AH,@(0,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0004,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_MessageSendLater
?L305:
?LBE33:
?LBE32:
?LBE_sinkAvrcpConnect:
	leavel	#12
;.stabn	192,0,0,?LBB32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;.stabn	224,0,0,?LBE32
$_sinkAvrcpManualConnect:
	enterl	#5
?LBB_sinkAvrcpManualConnect:
?LBB34:
	ld	AH,#H'0000
?L331:
	ld	AL,@$_theSink+H'0030
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L326
	ld	AL,@(H'002B,X)
	cmp	AL,#H'0002
	beq	?L323
	ld	AL,#H'0000
	st	AL,@(H'002B,X)
	ld	X,@$_theSink+H'0031
	ld	AL,@(H'000A,X)
	or	AL,#H'2000
	st	AL,@(H'000A,X)
	ld	AL,@$_theSink+H'0031
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0021,X)
	ld	X,@(H'0001,Y)
	st	AH,@(H'0027,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	ld	X,@(H'0001,Y)
	st	AH,@(H'0028,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	ld	X,@(H'0001,Y)
	st	AH,@(H'0029,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0003,X)
	ld	X,@(H'0001,Y)
	st	AH,@(H'002A,X)
	add	AL,@$_theSink+H'0030
	add	AL,#H'0021
	ld	AH,#H'0000
	bsr	$_sinkAvrcpConnect
	bra	(?L323)
?L326:
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L331
	ld	X,@$_theSink+H'0031
	ld	AL,@(H'000A,X)
	or	AL,#H'2000
	st	AL,@(H'000A,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4018
	bsr	$_MessageSend
?L323:
?LBE34:
?LBE_sinkAvrcpManualConnect:
	leavel	#5
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
$_sinkAvrcpPlay:
	enterl	#3
?LBB_sinkAvrcpPlay:
?LBB35:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L337
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L336
	ld	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0004
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L336
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0023,X)
	bra	(?L336)
?L337:
	bsr	$_sinkAvrcpManualConnect
?L336:
?LBE35:
?LBE_sinkAvrcpPlay:
	leavel	#3
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_sinkAvrcpPause:
	enterl	#4
?LBB_sinkAvrcpPause:
?LBB36:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0031
	add	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L343
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L342
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0023,X)
	cmp	AL,#H'0001
	bne	?L342
	ld	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0002
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L342
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0023,X)
	bra	(?L342)
?L343:
	bsr	$_sinkAvrcpManualConnect
?L342:
?LBE36:
?LBE_sinkAvrcpPause:
	leavel	#4
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
$_sinkAvrcpPlayPause:
	enterl	#4
?LBB_sinkAvrcpPlayPause:
?LBB37:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L350
	ld	AH,@$XAP_UY
	bsr	_getA2dpIndexFromAvrcp
	ld	X,@$_theSink+H'0030
	add	X,@(0,Y)
	ld	AH,@(H'0013,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	ld	AL,@(H'0023,X)
	cmp	AL,#H'0001
	bne	?L352
	cmp	AH,#H'0000
	beq	?L351
?L352:
	bsr	$_sinkAvrcpPlay
	bra	(?L349)
?L351:
	bsr	$_sinkAvrcpPause
	bra	(?L349)
?L350:
	bsr	$_sinkAvrcpManualConnect
?L349:
?LBE37:
?LBE_sinkAvrcpPlayPause:
	leavel	#4
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_sinkAvrcpStop:
	enterl	#3
?LBB_sinkAvrcpStop:
?LBB38:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L356
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L356
	ld	AL,#H'0009
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'000A
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L356
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	st	AL,@(H'0023,X)
?L356:
?LBE38:
?LBE_sinkAvrcpStop:
	leavel	#3
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
$_sinkAvrcpSkipForward:
	enterl	#3
?LBB_sinkAvrcpSkipForward:
?LBB39:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L360
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L360
	ld	AL,#H'0005
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0006
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L360:
?LBE39:
?LBE_sinkAvrcpSkipForward:
	leavel	#3
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_sinkAvrcpSkipBackward:
	enterl	#3
?LBB_sinkAvrcpSkipBackward:
?LBB40:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L363
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L363
	ld	AL,#H'0007
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0008
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L363:
?LBE40:
?LBE_sinkAvrcpSkipBackward:
	leavel	#3
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
$_sinkAvrcpFastForwardPress:
	enterl	#3
?LBB_sinkAvrcpFastForwardPress:
?LBB41:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L366
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L366
	ld	AL,#H'000B
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L366
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0023,X)
	or	AL,#H'0008
	st	AL,@(H'0023,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0023,X)
	and	AL,#-H'0011
	st	AL,@(H'0023,X)
?L366:
?LBE41:
?LBE_sinkAvrcpFastForwardPress:
	leavel	#3
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_sinkAvrcpFastForwardRelease:
	enterl	#3
?LBB_sinkAvrcpFastForwardRelease:
?LBB42:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L369
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L369
	ld	AL,#H'000C
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L369
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0023,X)
	and	AL,#-H'0009
	st	AL,@(H'0023,X)
?L369:
?LBE42:
?LBE_sinkAvrcpFastForwardRelease:
	leavel	#3
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
$_sinkAvrcpRewindPress:
	enterl	#3
?LBB_sinkAvrcpRewindPress:
?LBB43:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L372
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L372
	ld	AL,#H'000D
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L372
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0023,X)
	or	AL,#H'0010
	st	AL,@(H'0023,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0023,X)
	and	AL,#-H'0009
	st	AL,@(H'0023,X)
?L372:
?LBE43:
?LBE_sinkAvrcpRewindPress:
	leavel	#3
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_sinkAvrcpRewindRelease:
	enterl	#3
?LBB_sinkAvrcpRewindRelease:
?LBB44:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L375
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L375
	ld	AL,#H'000E
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L375
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0023,X)
	and	AL,#-H'0011
	st	AL,@(H'0023,X)
?L375:
?LBE44:
?LBE_sinkAvrcpRewindRelease:
	leavel	#3
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
$_sinkAvrcpNextGroupPress:
	enterl	#3
?LBB_sinkAvrcpNextGroupPress:
?LBB45:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L378
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L378
	ld	AL,@(0,Y)
	bsr	_isAvrcpGroupNavigationEnabled
	cmp	AL,#H'0000
	beq	?L378
	ld	AL,#H'000F
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L378:
?LBE45:
?LBE_sinkAvrcpNextGroupPress:
	leavel	#3
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
$_sinkAvrcpNextGroupRelease:
	enterl	#3
?LBB_sinkAvrcpNextGroupRelease:
?LBB46:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L380
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L380
	ld	AL,@(0,Y)
	bsr	_isAvrcpGroupNavigationEnabled
	cmp	AL,#H'0000
	beq	?L380
	ld	AL,#H'0010
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L380:
?LBE46:
?LBE_sinkAvrcpNextGroupRelease:
	leavel	#3
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
$_sinkAvrcpPreviousGroupPress:
	enterl	#3
?LBB_sinkAvrcpPreviousGroupPress:
?LBB47:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L382
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L382
	ld	AL,@(0,Y)
	bsr	_isAvrcpGroupNavigationEnabled
	cmp	AL,#H'0000
	beq	?L382
	ld	AL,#H'0011
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L382:
?LBE47:
?LBE_sinkAvrcpPreviousGroupPress:
	leavel	#3
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
$_sinkAvrcpPreviousGroupRelease:
	enterl	#3
?LBB_sinkAvrcpPreviousGroupRelease:
?LBB48:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L384
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0000
	beq	?L384
	ld	AL,@(0,Y)
	bsr	_isAvrcpGroupNavigationEnabled
	cmp	AL,#H'0000
	beq	?L384
	ld	AL,#H'0012
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L384:
?LBE48:
?LBE_sinkAvrcpPreviousGroupRelease:
	leavel	#3
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
$_sinkAvrcpSourceFromData:
	enterl	#5
?LBB_sinkAvrcpSourceFromData:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
?LBB49:
	ld	AL,@(H'0001,Y)
	bsr	$_StreamRegionSource
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSinkFromSource
	ld	AH,@(0,Y)
	bsr	$_MessageSinkTask
?LBE49:
	ld	AL,@(H'0002,Y)
?LBE_sinkAvrcpSourceFromData:
	leavel	#5
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
$_sinkAvrcpGetShuffleType:
; leaf function with empty stack frame
?LBB_sinkAvrcpGetShuffleType:
?LBB50:
	ld	AH,#H'0000
	cmp	AL,#H'0002
	beq	?L390
	cmp	AL,#(H'0001+H'0002)
	bcc	?L394
	cmp	AL,#H'0001
	beq	?L389
	bra	(?L388)
?L394:
	cmp	AL,#H'0003
	beq	?L391
	bra	(?L388)
?L389:
	ld	AH,#H'0001
	bra	(?L388)
?L390:
	ld	AH,#H'0002
	bra	(?L388)
?L391:
	ld	AH,#H'0003
?L388:
?LBE50:
	ld	AL,@$XAP_AH
?LBE_sinkAvrcpGetShuffleType:
	rts
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
$_sinkAvrcpShuffle:
	enterl	#2
?LBB_sinkAvrcpShuffle:
?LBB51:
	bsr	$_sinkAvrcpGetActiveConnection
?LBE51:
?LBE_sinkAvrcpShuffle:
	leavel	#2
$_sinkAvrcpGetRepeatType:
; leaf function with empty stack frame
?LBB_sinkAvrcpGetRepeatType:
?LBB52:
	ld	AH,#H'0000
	cmp	AL,#H'0002
	beq	?L403
	cmp	AL,#(H'0001+H'0002)
	bcc	?L408
	cmp	AL,#H'0001
	beq	?L402
	bra	(?L401)
?L408:
	cmp	AL,#H'0003
	beq	?L404
	cmp	AL,#H'0004
	beq	?L405
	bra	(?L401)
?L402:
	ld	AH,#H'0001
	bra	(?L401)
?L403:
	ld	AH,#H'0002
	bra	(?L401)
?L404:
	ld	AH,#H'0003
	bra	(?L401)
?L405:
	ld	AH,#H'0004
?L401:
?LBE52:
	ld	AL,@$XAP_AH
?LBE_sinkAvrcpGetRepeatType:
	rts
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
$_sinkAvrcpRepeat:
	enterl	#2
?LBB_sinkAvrcpRepeat:
?LBB53:
	bsr	$_sinkAvrcpGetActiveConnection
?LBE53:
?LBE_sinkAvrcpRepeat:
	leavel	#2
$_sinkAvrcpToggleActiveConnection:
	enterl	#2
?LBB_sinkAvrcpToggleActiveConnection:
?LBB54:
	bsr	$_sinkAvrcpGetActiveConnection
	ld	AH,@$XAP_AL
	add	AL,#H'0001
	cmp	AL,@$XAP_AH
	beq	?L417
	ld	X,@$_theSink+H'0031
	st	X,@(-1,Y)
?L421:
	cmp	AL,#H'0001
	bcz	?L419
	ld	AL,#H'0000
?L419:
	ld	X,@$XAP_AL
	add	X,@(-1,Y)
	tst	@(H'0011,X)
	bne	?L417
	add	AL,#H'0001
	cmp	AL,@$XAP_AH
	bne	?L421
?L417:
	bsr	_sinkAvrcpSetActiveConnectionFromIndex
?LBE54:
?LBE_sinkAvrcpToggleActiveConnection:
	leavel	#2
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
$_sinkAvrcpVolumeStepChange:
	enterl	#6
?LBB_sinkAvrcpVolumeStepChange:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB55:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(H'0003,Y)
	add	AL,@$_theSink+H'0031
	ld	X,#H'0025
	add	X,@$XAP_AL
	st	X,@(-1,Y)
	ld	AL,@(H'0002,Y)
	smult	#H'007F
	ld	X,@(H'0006,Y)
	add	X,#-H'0001
	ld	AH,#H'0000
	udiv	@$XAP_UXL
	ld	AH,@$XAP_AL
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	tst	@(H'0011,X)
	beq	?L426
	tst	@(H'0001,Y)
	bne	?L428
	ld	X,@(-1,Y)
	add	AL,@(0,X)
	st	AL,@(0,X)
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'007F)
	bcc	?L430
	cmp	AH,#H'0000
	bne	?L431
?L430:
	ld	AL,#H'007F
	bra	(?L437)
?L428:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L431
	cmp	AH,#H'0000
	beq	?L433
	ld	X,@(-1,Y)
	ld	AL,@(0,X)
	sub	AL,@$XAP_AH
	cmp	AL,@$XAP_AH
	bcc	?L436
?L433:
	ld	AL,#H'0000
?L437:
	ld	X,@(-1,Y)
?L436:
	st	AL,@(0,X)
?L431:
	ld	AL,@$_theSink+H'0031
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	ld	X,@$XAP_AH
	ld	AL,@(H'0021,X)
	and	AL,#H'2000
	cmp	AL,#H'0000
	beq	?L426
	ld	X,@(-1,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0013,X)
	ld	AH,#H'000D
	bsr	$_AvrcpEventVolumeChangedResponse
	ld	X,@$_theSink+H'0031
	add	X,@(H'0003,Y)
	ld	AL,@(H'0021,X)
	and	AL,#-H'2001
	st	AL,@(H'0021,X)
?L426:
?LBE55:
?LBE_sinkAvrcpVolumeStepChange:
	leavel	#6
;.stabn	192,0,0,?LBB55
;.stabn	224,0,0,?LBE55
$_sinkAvrcpSetLocalVolume:
	enterl	#4
?LBB_sinkAvrcpSetLocalVolume:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@$_theSink+H'0031
	ld	X,@(H'0001,Y)
	add	X,@$XAP_AH
	st	X,@(-1,Y)
	smult	#H'007F
	ld	X,@$_theSink+H'000A
	ld	AH,#H'0000
	udiv	@(0,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0025,X)
	ld	AL,@$_theSink+H'0031
	ld	X,@(H'0001,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0021,X)
	and	AL,#H'2000
	cmp	AL,#H'0000
	beq	?L440
	ld	AL,@(H'0025,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'000D
	bsr	$_AvrcpEventVolumeChangedResponse
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	ld	AL,@(H'0021,X)
	and	AL,#-H'2001
	st	AL,@(H'0021,X)
?L440:
?LBE_sinkAvrcpSetLocalVolume:
	leavel	#4
$_sinkAvrcpGetIndexFromInstance:
	enterl	#2
?LBB_sinkAvrcpGetIndexFromInstance:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB56:
	ld	AH,#H'0000
?L449:
	ld	AL,@$_theSink+H'0031
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L445
	tst	@H'fff8
	beq	?L445
	ld	AL,@(H'0013,X)
	cmp	AL,@H'fff8
	bne	?L445
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	AL,#H'0001
	bra	(?L442)
?L445:
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L449
	ld	AL,#H'0000
?L442:
?LBE56:
?LBE_sinkAvrcpGetIndexFromInstance:
	leavel	#2
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
$_sinkAvrcpGetIndexFromBdaddr:
	enterl	#5
?LBB_sinkAvrcpGetIndexFromBdaddr:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB57:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L463:
	tst	@(H'0005,Y)
	beq	?L461
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	tst	@(H'0011,X)
	bne	?L460
?L461:
	tst	@(H'0005,Y)
	bne	?L457
?L460:
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0031
	add	AL,#H'0019
	ld	AH,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L457
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L454)
?L457:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bcz	?L463
	ld	AL,#H'0000
?L454:
?LBE57:
?LBE_sinkAvrcpGetIndexFromBdaddr:
	leavel	#5
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
$_sinkAvrcpSetActiveConnectionFromBdaddr:
	enterl	#4
?LBB_sinkAvrcpSetActiveConnectionFromBdaddr:
?LBB58:
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L467
	ld	AL,@(H'0001,Y)
	bsr	_sinkAvrcpSetActiveConnectionFromIndex
?L467:
?LBE58:
?LBE_sinkAvrcpSetActiveConnectionFromBdaddr:
	leavel	#4
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
_sinkAvrcpSetActiveConnectionFromIndex:
	enterl	#3
?LBB_sinkAvrcpSetActiveConnectionFromIndex:
	st	AL,@(0,Y)
?LBB59:
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'000A,X)
	lsr	#H'000E
	cmp	AH,@(0,Y)
	beq	?L469
	ld	AL,@$XAP_AH
	bsr	_sinkAvrcpFlushAndResetQueue
	ld	X,@$_theSink+H'0031
	ld	AL,@(0,Y)
	asl	#H'000E
	ld	AH,@(H'000A,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'000A,X)
?L469:
?LBE59:
?LBE_sinkAvrcpSetActiveConnectionFromIndex:
	leavel	#3
;.stabn	192,0,0,?LBB59
;.stabn	224,0,0,?LBE59
_sinkAvrcpFlushAndResetQueue:
	enterl	#3
?LBB_sinkAvrcpFlushAndResetQueue:
	st	AL,@(0,Y)
	add	AL,@$XAP_AL
	add	AL,@$_theSink+H'0031
	bsr	$_MessageFlushTask
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0013,X)
	bsr	$_sinkAvrcpBrowsingChannelDisconnectRequest
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'002D,X)
	beq	?L473
	ld	AL,@(H'002D,X)
	bsr	$_free
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'002D,X)
?L473:
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0015,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	st	AL,@(H'0017,X)
?LBE_sinkAvrcpFlushAndResetQueue:
	leavel	#3
$_sinkAvrcpGetActiveConnection:
	enterl	#2
?LBB_sinkAvrcpGetActiveConnection:
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'000A,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
?LBE_sinkAvrcpGetActiveConnection:
	leavel	#2
$_sinkAvrcpUpdateActiveConnection:
	enterl	#3
?LBB_sinkAvrcpUpdateActiveConnection:
?LBB60:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bsr	$_sinkAvrcpGetActiveConnection
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	bne	?L475
?L482:
	ld	X,@$_theSink+H'0031
	st	X,@(-1,Y)
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L479
	ld	AL,@(0,Y)
	asl	#H'000E
	ld	X,@(-1,Y)
	ld	AH,@(H'000A,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'000A,X)
	bra	(?L475)
?L479:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0001
	bcz	?L482
?L475:
?LBE60:
?LBE_sinkAvrcpUpdateActiveConnection:
	leavel	#3
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
$_sinkAvrcpGetNumberConnections:
	enterl	#2
?LBB_sinkAvrcpGetNumberConnections:
?LBB61:
	ld	AL,#H'0000
	ld	AH,@$XAP_AL
	ld	X,@$_theSink+H'0031
	st	X,@(-1,Y)
?L491:
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	tst	@(H'0011,X)
	beq	?L488
	add	AL,#H'0001
?L488:
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L491
?LBE61:
?LBE_sinkAvrcpGetNumberConnections:
	leavel	#2
;.stabn	192,0,0,?LBB61
;.stabn	224,0,0,?LBE61
$_sinkAvrcpSetPlayStatus:
	enterl	#5
?LBB_sinkAvrcpSetPlayStatus:
	st	AH,@(H'0002,Y)
?LBB62:
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L495
	ld	AL,@(H'0001,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L495
	ld	X,@$_theSink+H'0031
	add	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0023,X)
?L495:
?LBE62:
?LBE_sinkAvrcpSetPlayStatus:
	leavel	#5
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
$_sinkAvrcpCheckManualConnectReset:
	enterl	#3
?LBB_sinkAvrcpCheckManualConnectReset:
	st	AL,@(0,Y)
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L499
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'000A,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L499
	ld	AL,#H'0027
	add	AL,@$XAP_UXL
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L501
	tst	@(0,Y)
	beq	?L499
	ld	AL,@$_theSink+H'0031
	add	AL,#H'0027
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L499
	ld	AL,@$_theSink+H'0031
	add	AL,#H'0027
	ld	AH,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L499
?L501:
	ld	X,@$_theSink+H'0031
	ld	AL,@(H'000A,X)
	and	AL,#-H'2001
	st	AL,@(H'000A,X)
	ld	X,@$_theSink+H'0031
	ld	AL,#H'0000
	st	AL,@(H'0028,X)
	st	AL,@(H'0027,X)
	st	AL,@(H'002A,X)
	st	AL,@(H'0029,X)
	ld	AL,#H'0001
	bra	(?L498)
?L499:
	ld	AL,#H'0000
?L498:
?LBE_sinkAvrcpCheckManualConnectReset:
	leavel	#3
$_sinkAvrcpDisplayMediaAttributes:
; leaf function with empty stack frame
?LBB_sinkAvrcpDisplayMediaAttributes:
?LBE_sinkAvrcpDisplayMediaAttributes:
	rts
$_sinkAvrcpPlayPauseRequest:
	enterl	#5
?LBB_sinkAvrcpPlayPauseRequest:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB63:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L514
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L514
	tst	@(H'0001,Y)
	bne	?L515
	ld	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0002
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L519
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0002
	bra	(?L520)
?L515:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L514
	ld	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0004
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L519
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0001,Y)
?L520:
	st	AL,@(H'0023,X)
?L519:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L514:
?LBE63:
	ld	AL,@(H'0002,Y)
?LBE_sinkAvrcpPlayPauseRequest:
	leavel	#5
;.stabn	192,0,0,?LBB63
;.stabn	224,0,0,?LBE63
$_sinkAvrcpStopRequest:
	enterl	#4
?LBB_sinkAvrcpStopRequest:
	st	AL,@(0,Y)
?LBB64:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L524
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L524
	ld	AL,#H'0009
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'000A
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,@(0,Y)
	bsr	_isAvrcpPlaybackStatusSupported
	cmp	AL,#H'0000
	bne	?L525
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0023,X)
?L525:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L524:
?LBE64:
	ld	AL,@(H'0001,Y)
?LBE_sinkAvrcpStopRequest:
	leavel	#4
;.stabn	192,0,0,?LBB64
;.stabn	224,0,0,?LBE64
$_sinkAvrcpVendorUniquePassthroughRequest:
	enterl	#12
?LBB_sinkAvrcpVendorUniquePassthroughRequest:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB65:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L534
	tst	@$_theSink+H'0031
	beq	?L534
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	tst	@(H'0011,X)
	beq	?L534
	ld	AL,@$_theSink+H'0031
	add	AL,@(H'0005,Y)
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	tst	@(H'0015,X)
	bne	?L530
	tst	@(H'002D,X)
	bne	?L530
	ld	AL,@(H'000C,Y)
?LBB66:
	add	AL,#H'0002
	bsr	$_malloc
	ld	X,@(H'0007,Y)
	st	AL,@(H'002D,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	tst	@(H'002D,X)
	bne	?L531
?L534:
	ld	AL,#H'0000
	bra	(?L527)
?L531:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	ld	X,@(H'002D,X)
	ld	AH,@(H'0006,Y)
	lsr	#H'0008
	st	AH,@(0,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	ld	X,@(H'002D,X)
	ld	AL,@(H'0006,Y)
	and	AL,#H'00FF
	st	AL,@(H'0001,X)
	tst	@(H'000C,Y)
	beq	?L532
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	ld	AL,@(H'002D,X)
	add	AL,#H'0002
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_memcpy
?L532:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0002
	st	AL,@(H'0008,Y)
	ld	AL,@(H'002D,X)
	ld	AH,@(H'0008,Y)
	bsr	$_StreamRegionSource
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	ld	AH,#H'0001
	st	AH,@(H'0015,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0005,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'007E
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'0009
	bsr	$_AvrcpPassthroughRequest
?LBE66:
	bra	(?L533)
?L530:
	ld	AL,@(H'000C,Y)
?LBB67:
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_memcpy
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	add	AL,@$_theSink+H'0031
	add	AL,#H'0015
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'5E51
	bsr	$_MessageSendConditionally
?L533:
?LBE67:
	ld	AL,#H'0001
?L527:
?LBE65:
?LBE_sinkAvrcpVendorUniquePassthroughRequest:
	leavel	#12
;.stabn	192,0,0,?LBB66
;.stabn	224,0,0,?LBE66
;.stabn	192,0,0,?LBB67
;.stabn	224,0,0,?LBE67
$_sinkAvrcpHandleMessage:
	enterl	#4
?LBB_sinkAvrcpHandleMessage:
	ld	X,#-H'5E00
	add	X,@$XAP_AH
	st	X,@(H'0001,Y)
	cmp	X,#(H'0001+H'0051)
	bcc	?L535
	ld	X,@(?JTBASE588,X)
	brxl
	.SEG	CONST
?JTBASE588:
	.CODE
?L588:
	.SEG	CONST
	dc	lwrd(?L537-?L588)
	dc	lwrd(?L538-?L588)
	dc	lwrd(?L539-?L588)
	dc	lwrd(?L540-?L588)
	dc	lwrd(?L547-?L588)
	dc	lwrd(?L542-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L543-?L588)
	dc	lwrd(?L544-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L545-?L588)
	dc	lwrd(?L549-?L588)
	dc	lwrd(?L548-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L586-?L588)
	dc	lwrd(?L553-?L588)
	dc	lwrd(?L586-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L550-?L588)
	dc	lwrd(?L554-?L588)
	dc	lwrd(?L555-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L556-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L547-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L547-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L580-?L588)
	dc	lwrd(?L579-?L588)
	dc	lwrd(?L552-?L588)
	dc	lwrd(?L558-?L588)
	dc	lwrd(?L557-?L588)
	dc	lwrd(?L586-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L565-?L588)
	dc	lwrd(?L567-?L588)
	dc	lwrd(?L566-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L586-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L535-?L588)
	dc	lwrd(?L586-?L588)
	dc	lwrd(?L581-?L588)
	.CODE
?L537:
	ld	AL,@(H'0004,Y)
	bsr	_sinkAvrcpInitComplete
	bra	(?L535)
?L538:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpConnectCfm
	bra	(?L535)
?L539:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpConnectInd
	bra	(?L535)
?L540:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpDisconnectInd
	bra	(?L535)
?L542:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpPassthroughInd
	bra	(?L535)
?L543:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpUnitInfoInd
	bra	(?L535)
?L544:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpSubUnitInfoInd
	bra	(?L535)
?L545:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpVendorDependentInd
	bra	(?L535)
?L547:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	bsr	_handleAvrcpPassthroughCfm
	bra	(?L535)
?L548:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpGetCapsInd
	bra	(?L535)
?L549:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpGetCapsCfm
	bra	(?L535)
?L550:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpRegisterNotificationInd
	bra	(?L535)
?L552:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpSetAbsVolInd
	bra	(?L535)
?L553:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpGetPlayStatusCfm
	bra	(?L535)
?L554:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpPlayStatusChangedInd
	bra	(?L535)
?L555:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpTrackChangedInd
	bra	(?L535)
?L556:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpPlaybackPosChangedInd
	bra	(?L535)
?L557:
	ld	AL,@(H'0004,Y)
	bsr	$_handleAvrcpVolumeChangedInd
	bra	(?L535)
?L558:
	ld	AL,@(H'0004,Y)
	bsr	$_handleAvrcpSetAbsoluteVolumeCfm
	bra	(?L535)
?L565:
	ld	AL,@(H'0004,Y)
	bsr	$_sinkAvrcpBrowsingChannelConnectInd
	bra	(?L535)
?L566:
	ld	AL,@(H'0004,Y)
	bsr	$_sinkAvrcpBrowsingChannelDisconnectInd
	bra	(?L535)
?L567:
	ld	AL,@(H'0004,Y)
	bsr	$_sinkAvrcpBrowsingChannelConnectCfm
	bra	(?L535)
?L579:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpGetExtensionsCfm
	bra	(?L535)
?L580:
	ld	AL,@(H'0004,Y)
	bsr	_handleAvrcpGetSupportedFeaturesCfm
	bra	(?L535)
?L581:
	ld	AL,@(H'0004,Y)
	bsr	_handleSinkAvrcpVendorUniquePassthroughReq
	bra	(?L535)
?L586:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	bsr	$_handleAvrcpQualificationTestCaseInd
?L535:
?LBE_sinkAvrcpHandleMessage:
	leavel	#4
$_avrcpAvrcpIsEnabled:
; leaf function with empty stack frame
?LBB_avrcpAvrcpIsEnabled:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L590
	ld	AL,#H'0001
	bra	(?L589)
?L590:
	ld	AL,#H'0000
?L589:
?LBE_avrcpAvrcpIsEnabled:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 453 used[1] = 120 used[3] = 1 total = 574
;# Function pattern *movqi3 used[0] = 663 total = 663
;# Function pattern *movqi8 used[0] = 52 total = 52
;# Function pattern *movhi used[2] = 2 used[3] = 4 total = 6
;# Function pattern *addqi0 used[0] = 24 total = 24
;# Function pattern *addqi2 used[0] = 193 used[2] = 48 total = 241
;# Function pattern *andqi3 used[0] = 33 total = 33
;# Function pattern *iorqi3 used[0] = 10 total = 10
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *udivqi3_const used[0] = 1 total = 1
;# Function pattern *udivqi3 used[0] = 2 total = 2
;# Function pattern *mulqi3_const used[0] = 25 total = 25
;# Function pattern *mulqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 11 total = 11
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 6 total = 6
;# Function pattern *zero_extendqihi2_1 used[0] = 3 used[1] = 1 total = 4
;# Function pattern jump used[0] = 94 total = 94
;# Function pattern *call1 used[0] = 120 total = 120
;# Function pattern *call_value1 used[0] = 122 total = 122
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 87 used[1] = 74 total = 161
;# Function pattern movstrqi+4 used[1] = 13 total = 13
;# Function pattern movstrqi+5 used[0] = 73 total = 73
	MODULE	sink_avrcp_browsing
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_avrcp_browsing_channel
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sinkAvrcpBrowsingChannelInit:
	enterl	#2
?LBB_sinkAvrcpBrowsingChannelInit:
	ld	X,@$XAP_AH
?LBB2:
	ld	AH,#H'0000
	st	AH,@H'fff8
	ld	AH,#H'0002
	st	AH,@H'fff9
	cmp	AL,#H'0000
	bne	?L2
	st	X,@H'fff8
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	st	AL,@H'fff9
?L2:
	ld	AL,@H'fff8
	cmp	AL,@H'fff9
	bcc	?L9
?L7:
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AH,#H'0001
	st	AH,@(H'002F,X)
	add	AL,#H'0001
	cmp	AL,@H'fff9
	bcs	?L7
?L9:
?LBE2:
?LBE_sinkAvrcpBrowsingChannelInit:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkAvrcpBrowsingChannelConnectInd:
	enterl	#6
?LBB_sinkAvrcpBrowsingChannelConnectInd:
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
?LBB3:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromBdaddr
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,#H'0002
	st	AL,@(H'002F,X)
	ld	X,@$_theSink+H'0031
	ld	AH,@(H'0002,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0013,X)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	bsr	$_AvrcpBrowseConnectResponse
?L12:
?LBE3:
?LBE_sinkAvrcpBrowsingChannelConnectInd:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkAvrcpBrowsingChannelDisconnectInd:
	enterl	#5
?LBB_sinkAvrcpBrowsingChannelDisconnectInd:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpBrowsingChannelGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L14
?LBB5:
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	X,@(H'002F,X)
	st	X,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,@(0,Y)
	bsr	$_sinkAvrcpBrowsingChannelInit
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bne	?L16
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_sinkAvrcpBrowsingChannelConnectRequest
	bra	(?L14)
?L16:
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	bne	?L14
	ld	AL,#H'0000
	st	AL,@(H'0013,X)
?L14:
?LBE5:
?LBE4:
?LBE_sinkAvrcpBrowsingChannelDisconnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_sinkAvrcpBrowsingChannelDisconnectRequest:
	enterl	#4
?LBB_sinkAvrcpBrowsingChannelDisconnectRequest:
	st	AL,@(H'0001,Y)
?LBB6:
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpBrowsingChannelGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L20
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'002F,X)
	bne	?L20
	ld	AL,#H'0003
	st	AL,@(H'002F,X)
	ld	AL,@(H'0001,Y)
	bsr	$_AvrcpBrowseDisconnectRequest
?L20:
?LBE6:
?LBE_sinkAvrcpBrowsingChannelDisconnectRequest:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_sinkAvrcpBrowsingChannelConnectRequest:
	enterl	#4
?LBB_sinkAvrcpBrowsingChannelConnectRequest:
	st	AL,@(H'0001,Y)
?LBB7:
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L23
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'002F,X)
	cmp	AL,#H'0001
	bne	?L25
	ld	AL,#H'0002
	st	AL,@(H'002F,X)
	ld	AL,@(0,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0031
	add	AH,#H'0019
	ld	AL,@(H'0001,Y)
	bsr	$_AvrcpBrowseConnectRequest
	bra	(?L23)
?L25:
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'002F,X)
	cmp	AL,#H'0003
	bne	?L23
	ld	AL,#H'0002
	st	AL,@(H'002F,X)
?L23:
?LBE7:
?LBE_sinkAvrcpBrowsingChannelConnectRequest:
	leavel	#4
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_sinkAvrcpBrowsingChannelConnectCfm:
	enterl	#4
?LBB_sinkAvrcpBrowsingChannelConnectCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpBrowsingChannelGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L30
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L32
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'002F,X)
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L34
	bsr	$_sinkAvrcpGetActiveConnection
	ld	AH,@(0,Y)
	cmp	AH,@$XAP_AL
	beq	?L30
?L34:
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0013,X)
	bsr	$_sinkAvrcpBrowsingChannelDisconnectRequest
	bra	(?L30)
?L32:
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'002F,X)
	cmp	AL,#H'0002
	bne	?L37
	ld	AL,#H'0001
	st	AL,@(H'002F,X)
?L37:
	ld	AL,@$_theSink+H'0031
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	bne	?L30
	ld	AL,#H'0000
	st	AL,@(H'0013,X)
?L30:
?LBE8:
?LBE_sinkAvrcpBrowsingChannelConnectCfm:
	leavel	#4
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_sinkAvrcpBrowsingChannelGetIndexFromInstance:
	enterl	#2
?LBB_sinkAvrcpBrowsingChannelGetIndexFromInstance:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB9:
	ld	AH,#H'0000
?L47:
	tst	@H'fff8
	beq	?L44
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AH
	ld	AL,@(H'0013,X)
	cmp	AL,@H'fff8
	bne	?L44
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	AL,#H'0001
	bra	(?L41)
?L44:
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L47
	ld	AL,#H'0000
?L41:
?LBE9:
?LBE_sinkAvrcpBrowsingChannelGetIndexFromInstance:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_sinkAvrcpBrowsingChannelIsConnected:
	enterl	#2
?LBB_sinkAvrcpBrowsingChannelIsConnected:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L53
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	tst	@(H'002F,X)
	bne	?L53
	ld	AL,#H'0001
	bra	(?L52)
?L53:
	ld	AL,#H'0000
?L52:
?LBE_sinkAvrcpBrowsingChannelIsConnected:
	leavel	#2
$_sinkAvrcpBrowsingChannelIsDisconnected:
	enterl	#2
?LBB_sinkAvrcpBrowsingChannelIsDisconnected:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L56
	ld	X,@$_theSink+H'0031
	add	X,@$XAP_AL
	ld	AL,@(H'002F,X)
	cmp	AL,#H'0001
	bne	?L56
	ld	AL,#H'0001
	bra	(?L55)
?L56:
	ld	AL,#H'0000
?L55:
?LBE_sinkAvrcpBrowsingChannelIsDisconnected:
	leavel	#2
$_sinkAvrcpBrowsingChannelSendMessageWhenConnected:
	enterl	#4
?LBB_sinkAvrcpBrowsingChannelSendMessageWhenConnected:
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L60
	st	X,@(0,Y)
	add	AL,@$_theSink+H'0031
	add	AL,#H'002F
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	$_MessageSendConditionally
	bra	(?L59)
?L60:
	bsr	$_Panic
?L59:
?LBE_sinkAvrcpBrowsingChannelSendMessageWhenConnected:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 37 used[1] = 6 total = 43
;# Function pattern *movqi3 used[0] = 56 total = 56
;# Function pattern *movqi8 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 15 used[2] = 8 total = 23
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 7 total = 13
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 10 total = 10
	MODULE	sink_avrcp_qualification
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sinkAvrcpQualificationInit:
; leaf function with empty stack frame
?LBB_sinkAvrcpQualificationInit:
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L1
	ld	AH,#hwrd($_sinkAvrcpDataCleanUp)
	ld	AL,#lwrd($_sinkAvrcpDataCleanUp)
	st	AH,@$_dataCleanUpTask
	st	AL,@$_dataCleanUpTask+1
	ld	AL,#H'0000
	st	AL,@$_dataCleanUpTask+H'0002
?L1:
?LBE_sinkAvrcpQualificationInit:
	rts
_handleAvrcpQualificationSetAddressedPlayer:
	enterl	#2
?LBB_handleAvrcpQualificationSetAddressedPlayer:
	ld	X,@$XAP_AL
?LBB2:
	ld	AH,#H'0091
	ld	AL,@(H'0001,X)
	cmp	AL,#-H'0001
	beq	?L4
	ld	AH,#H'0009
?L4:
	ld	AL,@(0,X)
	bsr	$_AvrcpSetAddressedPlayerResponse
?LBE2:
?LBE_handleAvrcpQualificationSetAddressedPlayer:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handleAvrcpQualificationGetFolderItems:
	enterl	#12
?LBB_handleAvrcpQualificationGetFolderItems:
	st	AL,@(H'0004,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	X,#H'008A
	st	X,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	X,@(H'0004,Y)
	tst	@(H'0001,X)
	bne	?L7
	ld	AL,#H'0084
	st	AL,@(H'0006,Y)
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	AL,#H'0023
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#H'0001
	ld	X,@(H'0009,Y)
	st	AH,@(0,X)
	ld	AL,#H'0020
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,X)
	st	AH,@(H'0004,X)
	st	AH,@(H'0005,X)
	st	AH,@(H'0009,X)
	st	AH,@(H'000B,X)
	ld	AL,#H'0060
	st	AL,@(H'000F,X)
	ld	AL,#H'00B7
	st	AL,@(H'0010,X)
	st	AH,@(H'0011,X)
	ld	AL,#H'0002
	st	AL,@(H'0012,X)
	ld	AH,#H'0004
	st	AH,@(H'001E,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'001F
	st	AH,@(0,Y)
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	X,#H'0023
	st	X,@(H'0008,Y)
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	st	X,@(0,Y)
	ld	AL,#($_dataCleanUpTask)
	ld	AH,@(H'0009,Y)
	bsr	$_sinkAvrcpSourceFromData
	st	AL,@(H'0005,Y)
?L7:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	bsr	$_AvrcpBrowseGetFolderItemsResponse
?LBE3:
?LBE_handleAvrcpQualificationGetFolderItems:
	leavel	#12
	.SEG	CONST
?LC0:
	dc	H'43
	dc	H'53
	dc	H'52
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_handleAvrcpQualificationGetTotalNumberOfItems:
	enterl	#5
?LBB_handleAvrcpQualificationGetTotalNumberOfItems:
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,#H'008A
	st	AL,@(-1,Y)
	ld	AH,#H'0000
	tst	@(H'0001,X)
	bne	?L9
	ld	AL,#H'0084
	st	AL,@(-1,Y)
	ld	AH,#H'0001
?L9:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(-1,Y)
	bsr	$_AvrcpBrowseGetNumberOfItemsResponse
?LBE4:
?LBE_handleAvrcpQualificationGetTotalNumberOfItems:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_handleAvrcpQualificationGetPlayStatus:
	enterl	#7
?LBB_handleAvrcpQualificationGetPlayStatus:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000C
	bsr	$_AvrcpGetPlayStatusResponse
?LBE_handleAvrcpQualificationGetPlayStatus:
	leavel	#7
_handleAvrcpQualificationGetElementAttribute:
	enterl	#7
?LBB_handleAvrcpQualificationGetElementAttribute:
	st	AL,@(H'0003,Y)
?LBB5:
	ld	AL,#H'0040
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,#H'0040
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#H'0001
	ld	X,@(H'0004,Y)
	st	AH,@(H'0003,X)
	ld	AL,#H'006A
	st	AL,@(H'0005,X)
	ld	AH,#H'0004
	st	AH,@(H'0007,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0008
	st	AH,@(0,Y)
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AH,#H'0001
	ld	X,@(H'0004,Y)
	st	AH,@(H'000F,X)
	ld	AL,#H'006A
	st	AL,@(H'0011,X)
	ld	AH,#H'002C
	st	AH,@(H'0013,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0014
	st	AH,@(0,Y)
	ld	AH,#(?LC1)
	bsr	$_memcpy
	ld	X,#H'0040
	st	X,@(0,Y)
	ld	AL,#($_dataCleanUpTask)
	ld	AH,@(H'0004,Y)
	bsr	$_sinkAvrcpSourceFromData
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0040
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000C
	bsr	$_AvrcpGetElementAttributesResponse
?LBE5:
?LBE_handleAvrcpQualificationGetElementAttribute:
	leavel	#7
	.SEG	CONST
?LC1:
	dc	H'50
	dc	H'54
	dc	H'53
	dc	H'2D
	dc	H'51
	dc	H'55
	dc	H'41
	dc	H'4C
	dc	H'49
	dc	H'46
	dc	H'49
	dc	H'43
	dc	H'41
	dc	H'54
	dc	H'49
	dc	H'4F
	dc	H'4E
	dc	H'2D
	dc	H'46
	dc	H'4F
	dc	H'52
	dc	H'2D
	dc	H'54
	dc	H'47
	dc	H'2D
	dc	H'46
	dc	H'52
	dc	H'41
	dc	H'47
	dc	H'4D
	dc	H'45
	dc	H'4E
	dc	H'54
	dc	H'41
	dc	H'54
	dc	H'49
	dc	H'4F
	dc	H'4E
	dc	H'2D
	dc	H'54
	dc	H'45
	dc	H'53
	dc	H'54
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_handleAvrcpQualificationTestCaseInd:
	enterl	#2
?LBB_handleAvrcpQualificationTestCaseInd:
	ld	X,@(H'0002,Y)
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,#H'0000
	bra	(?L12)
?L13:
	cmp	AH,#H'5E37
	beq	?L15
	cmp	AH,#(H'0001+H'5E37)
	bcc	?L22
	cmp	AH,#H'5E1B
	beq	?L19
	cmp	AH,#H'5E1D
	beq	?L18
	bra	(?L14)
?L22:
	cmp	AH,#H'5E48
	beq	?L16
	cmp	AH,#H'5E50
	beq	?L17
	bra	(?L14)
?L15:
	ld	AL,@$XAP_UXL
	bsr	_handleAvrcpQualificationSetAddressedPlayer
	bra	(?L14)
?L16:
	ld	AL,@$XAP_UXL
	bsr	_handleAvrcpQualificationGetFolderItems
	bra	(?L14)
?L17:
	ld	AL,@$XAP_UXL
	bsr	_handleAvrcpQualificationGetTotalNumberOfItems
	bra	(?L14)
?L18:
	ld	AL,@$XAP_UXL
	bsr	_handleAvrcpQualificationGetPlayStatus
	bra	(?L14)
?L19:
	ld	AL,@$XAP_UXL
	bsr	_handleAvrcpQualificationGetElementAttribute
?L14:
	ld	AL,#H'0001
?L12:
?LBE_handleAvrcpQualificationTestCaseInd:
	leavel	#2
$_handleAvrcpQualificationRegisterNotificationInd:
	enterl	#9
?LBB_handleAvrcpQualificationRegisterNotificationInd:
	st	AL,@(H'0005,Y)
?LBB6:
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L29
	ld	AL,#H'0000
	bra	(?L28)
?L29:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0002
	beq	?L31
	cmp	AL,#H'000B
	beq	?L34
	bra	(?L30)
?L31:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L30
?LBB7:
	ld	AL,#-H'0001
	st	AL,@H'fffb
	ld	X,#-H'0001
	st	X,@H'fffa
	st	AL,@H'fff9
	st	X,@H'fff8
	ld	X,@$_theSink+H'0031
	add	X,@(H'0004,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0001
	ld	X,@(H'0005,Y)
	asl	@(H'0001,X)
	ld	X,@(H'0006,Y)
	or	AL,@(H'0021,X)
	st	AL,@(H'0021,X)
	ld	AL,@$_theSink+H'0031
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0023,X)
	cmp	AL,#H'0001
	bne	?L33
	ld	AL,#H'0000
	st	AL,@H'fffb
	st	AL,@H'fffa
	st	AL,@H'fff9
	st	AL,@H'fff8
	st	AL,@(H'0023,X)
?L33:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0004,Y)
	ld	AH,@H'fffa
	ld	AL,@H'fffb
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'000F
	bsr	$_AvrcpEventTrackChangedResponse
	ld	X,@$_theSink+H'0031
	add	X,@(H'0004,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'000D
	bsr	$_AvrcpEventTrackChangedResponse
?LBE7:
	bra	(?L30)
?L34:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L30
	ld	X,@$_theSink+H'0031
	add	X,@(H'0004,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0001
	ld	X,@(H'0005,Y)
	asl	@(H'0001,X)
	ld	X,@(H'0006,Y)
	or	AL,@(H'0021,X)
	st	AL,@(H'0021,X)
	ld	X,@$_theSink+H'0031
	add	X,@(H'0004,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'000F
	bsr	$_AvrcpEventAddressedPlayerChangedResponse
?L30:
	ld	AL,#H'0001
?L28:
?LBE6:
?LBE_handleAvrcpQualificationRegisterNotificationInd:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_handleAvrcpQualificationVolumeUp:
	enterl	#3
?LBB_handleAvrcpQualificationVolumeUp:
?LBB8:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L41
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L41
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L41
	ld	AL,#H'0013
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0014
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L41:
?LBE8:
?LBE_handleAvrcpQualificationVolumeUp:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_handleAvrcpQualificationVolumeDown:
	enterl	#3
?LBB_handleAvrcpQualificationVolumeDown:
?LBB9:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L45
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L45
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L45
	ld	AL,#H'0015
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
	ld	AL,#H'0016
	ld	AH,@(0,Y)
	bsr	$_avrcpSendControlMessage
?L45:
?LBE9:
?LBE_handleAvrcpQualificationVolumeDown:
	leavel	#3
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_handleAvrcpQualificationPlayTrack:
	enterl	#2
?LBB_handleAvrcpQualificationPlayTrack:
?LBB10:
	bsr	$_sinkAvrcpGetActiveConnection
	ld	AH,@$XAP_AL
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L49
	ld	AL,@$_theSink+H'0031
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	tst	@(H'0011,X)
	beq	?L49
	ld	AL,#H'0001
	st	AL,@(H'0023,X)
?L49:
?LBE10:
?LBE_handleAvrcpQualificationPlayTrack:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_handleAvrcpQualificationSetAbsoluteVolume:
	enterl	#3
?LBB_handleAvrcpQualificationSetAbsoluteVolume:
?LBB11:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L52
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L52
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L52
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'0040
	bsr	$_AvrcpSetAbsoluteVolumeRequest
?L52:
?LBE11:
?LBE_handleAvrcpQualificationSetAbsoluteVolume:
	leavel	#3
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_handleAvrcpVolumeChangedInd:
	enterl	#6
?LBB_handleAvrcpVolumeChangedInd:
	st	AL,@(H'0003,Y)
?LBB12:
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L56
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L56
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	beq	?L60
	cmp	AL,#H'000F
	bne	?L59
?L60:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000D
	bne	?L56
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000D
	bsr	$_AvrcpRegisterNotificationRequest
	bra	(?L56)
?L59:
	ld	X,@$_theSink+H'0031
	add	X,@(H'0002,Y)
	ld	AL,@(H'000F,X)
	and	AL,#-H'2001
	st	AL,@(H'000F,X)
?L56:
?LBE12:
?LBE_handleAvrcpVolumeChangedInd:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_handleAvrcpSetAbsoluteVolumeCfm:
	enterl	#4
?LBB_handleAvrcpSetAbsoluteVolumeCfm:
	st	AL,@(H'0001,Y)
?LBB13:
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L66
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L66
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_sinkAvrcpGetIndexFromInstance
	cmp	AL,#H'0000
	beq	?L66
	ld	X,@$_theSink+H'0031
	ld	AH,@(0,Y)
	add	AH,@$XAP_UXL
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0025,X)
?L66:
?LBE13:
?LBE_handleAvrcpSetAbsoluteVolumeCfm:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_handleAvrcpQualificationConfigureDataSize:
	enterl	#3
?LBB_handleAvrcpQualificationConfigureDataSize:
?LBB14:
	bsr	$_sinkAvrcpGetActiveConnection
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'001A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L69
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	tst	@(H'0011,X)
	beq	?L69
	ld	AL,@(0,Y)
	bsr	$_getAvrcpQueueSpace
	cmp	AL,#H'0001
	bcz	?L69
	ld	X,@$_theSink+H'0031
	add	X,@(0,Y)
	ld	AL,@(H'0013,X)
	ld	AH,#H'001E
	bsr	$_AvrcpSetMetadataResponsePDUDataSize
?L69:
?LBE14:
?LBE_handleAvrcpQualificationConfigureDataSize:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
	.SEG	VAR
$_dataCleanUpTask:
	DS	3
	ENDMOD

;# Function pattern *movqi2 used[0] = 97 used[1] = 13 total = 110
;# Function pattern *movqi3 used[0] = 137 total = 137
;# Function pattern *movhi used[2] = 3 used[3] = 4 total = 7
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 15 used[2] = 3 total = 18
;# Function pattern *andqi3 used[0] = 11 total = 11
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2_1 used[0] = 1 total = 1
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 23 total = 23
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 14 used[1] = 8 total = 22
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 16 total = 16
	MODULE	sink_ble
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_ble_config:
	dc	H'000A
	dc	H'003C
	dc	H'0080
	dc	H'000C
	dc	H'0078
	dc	H'000A
	dc	H'001E
	dc	H'0800
	dc	H'0012
	dc	H'0020
	dc	H'0030
	dc	H'001E
	dc	H'03E8
	dc	H'04B0
_ble_master_initial_conn_params:
	dc	H'0006
	dc	H'0028
	dc	H'0000
	dc	H'0190
	dc	H'0032
	dc	H'0040
	dc	H'0190
	dc	H'0190
_ble_master_update_conn_params:
	dc	H'0050
	dc	H'0058
	dc	H'0008
	dc	H'0190
	dc	H'0000
	dc	H'00A0
_ble_slave_update_conn_params:
	dc	H'0048
	dc	H'0058
	dc	H'0004
	dc	H'0190
	dc	H'0000
	dc	H'00A0
	.CODE
_handleInitComplete:
	enterl	#2
?LBB_handleInitComplete:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L1
	bsr	$_sinkBlePowerOnEvent
?L1:
?LBE_handleInitComplete:
	leavel	#2
_handleEncryptionRetry:
	enterl	#21
?LBB_handleEncryptionRetry:
	ld	AH,#H'0000
	st	AH,@(H'0012,Y)
	st	AH,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'0000
	tst	@(0,X)
	beq	?L4
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	$_VmGetBdAddrtFromCid
?L4:
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,#H'0015
	st	AL,@(H'0011,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(H'0012,Y)
	ld	AH,@(H'0011,Y)
	ld	AL,@(H'0012,Y)
	bsr	$_sinkBleGapEvent
?L3:
?LBE2:
?LBE_handleEncryptionRetry:
	leavel	#21
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_sinkBleHandleCLMessage:
	enterl	#2
?LBB_sinkBleHandleCLMessage:
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'505E
	beq	?L9
	cmp	AH,#(H'0001+H'505E)
	bcc	?L6
	cmp	AH,#H'5007
	bne	?L6
	bsr	$_sinkBleGapReadLocalNameComplete
	bra	(?L6)
?L9:
	bsr	$_sinkBleGapSetSecurityCfm
?L6:
?LBE_sinkBleHandleCLMessage:
	leavel	#2
_bleInternalMsgHandler:
	enterl	#2
?LBB_bleInternalMsgHandler:
?LBB3:
	cmp	AH,#(H'0001+H'0008)
	bcc	?L16
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE28,X)
	brxl
	.SEG	CONST
?JTBASE28:
	.CODE
?L28:
	.SEG	CONST
	dc	lwrd(?L18-?L28)
	dc	lwrd(?L19-?L28)
	dc	lwrd(?L20-?L28)
	dc	lwrd(?L21-?L28)
	dc	lwrd(?L22-?L28)
	dc	lwrd(?L23-?L28)
	dc	lwrd(?L24-?L28)
	dc	lwrd(?L25-?L28)
	dc	lwrd(?L26-?L28)
	.CODE
?L18:
	bsr	_handleInitComplete
	bra	(?L16)
?L19:
	ld	AL,#H'000F
	bra	(?L29)
?L20:
	ld	AL,#H'0011
	bra	(?L29)
?L21:
	ld	AL,#H'0012
	bra	(?L29)
?L22:
	ld	AL,#H'0014
?L29:
	st	AL,@H'fff8
	ld	X,#H'0000
	st	X,@H'fff9
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$_sinkBleGapEvent
	bra	(?L16)
?L23:
	ld	AL,@(H'0002,Y)
	bsr	_handleEncryptionRetry
	bra	(?L16)
?L24:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_gattClientRediscoverServices
	bra	(?L16)
?L25:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_gattClientFindByCid
	bsr	$_gattClientDiscoveredServiceInitialised
	bra	(?L16)
?L26:
	bsr	$_sinkBleBatteryLevelReadSendAndRepeat
?L16:
?LBE3:
?LBE_bleInternalMsgHandler:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkBleInitialiseDevice:
	enterl	#5
?LBB_sinkBleInitialiseDevice:
?LBB4:
	bsr	$_sinkBleGetGapDefaultRole
	st	AL,@(H'0001,Y)
	bsr	$_sinkBleGapIsPersistentRole
	st	AL,@(H'0002,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0033
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@$_theSink+H'0004
	ld	AH,#hwrd($_sinkBleMsgHandler)
	ld	AL,#lwrd($_sinkBleMsgHandler)
	st	AH,@(H'000A,X)
	st	AL,@(H'000B,X)
	ld	AL,#H'0001
	bsr	$_ConnectionDmBleAddTdlDevicesToWhiteListReq
	bsr	$_sinkGattInitInitialiseDevice
	cmp	AL,#H'0000
	bne	?L31
	bsr	$_Panic
?L31:
	tst	@(H'0002,Y)
	beq	?L34
	ld	AL,@(H'0001,Y)
	bsr	$_sinkBleGapIsRoleUnknown
	cmp	AL,#H'0000
	bne	?L35
?L34:
	tst	@(H'0002,Y)
	bne	?L32
?L35:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
?L32:
	ld	AL,@(H'0001,Y)
	bsr	$_sinkBleGapInitialise
	ld	AH,@$_theSink+H'001E
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L37
	bsr	$_sinkGattAncsClientSetupAdvertisingFilter
?L37:
?LBE4:
?LBE_sinkBleInitialiseDevice:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_sinkBleMsgHandler:
	enterl	#3
?LBB_sinkBleMsgHandler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'5000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'006B)
	bcc	?L44
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_sinkBleHandleCLMessage
	bra	(?L43)
?L44:
	ld	AL,#-H'5800
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'001D)
	bcc	?L46
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattMsgHandler
	bra	(?L43)
?L46:
	ld	AL,#-H'6400
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0015)
	bcc	?L48
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattManagerMsgHandler
	bra	(?L43)
?L48:
	ld	AL,#-H'6640
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0003)
	bcc	?L50
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattServerMsgHandler
	bra	(?L43)
?L50:
	ld	AL,#-H'6420
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0002)
	bcc	?L52
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattGapServerMsgHandler
	cmp	AL,#H'0002
	bne	?L43
	ld	AL,#H'0002
	bsr	$_sinkBleGapStartReadLocalName
	bra	(?L43)
?L52:
	ld	AL,#-H'6440
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0004)
	bcc	?L55
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattBatteryServerMsgHandler
	bra	(?L43)
?L55:
	ld	AL,#-H'6460
	add	AL,@$XAP_AH
	cmp	AL,#H'0005
	bcz	?L43
	ld	AL,#-H'64C0
	add	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L43
	ld	AL,#-H'6540
	add	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L43
	ld	AL,#-H'64E0
	add	AL,@$XAP_AH
	cmp	AL,#H'0002
	bcz	?L43
	ld	AL,#-H'65E0
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0008)
	bcc	?L65
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattAncsClientMsgHandler
	bra	(?L43)
?L65:
	ld	AL,#-H'65C0
	add	AL,@$XAP_AH
	cmp	AL,#H'000F
	bcz	?L43
	ld	AL,#-H'6580
	add	AL,@$XAP_AH
	cmp	AL,#H'0002
	bcz	?L43
	ld	AL,#-H'6620
	add	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L43
	ld	AL,#-H'6600
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0002)
	bcc	?L73
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_sinkGattClientServiceMsgHandler
	bra	(?L43)
?L73:
	cmp	AH,#(H'0001+H'0009)
	bcc	?L43
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_bleInternalMsgHandler
?L43:
?LBE_sinkBleMsgHandler:
	leavel	#3
$_sinkBleBondableEvent:
	enterl	#2
?LBB_sinkBleBondableEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB5:
	ld	AH,#H'0001
	bsr	$_sinkBleGapEvent
?LBE5:
?LBE_sinkBleBondableEvent:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_sinkBleBondablePairingTimeoutEvent:
	enterl	#2
?LBB_sinkBleBondablePairingTimeoutEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB6:
	ld	AH,#H'0003
	bsr	$_sinkBleGapEvent
?LBE6:
?LBE_sinkBleBondablePairingTimeoutEvent:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_sinkBleBondableConnectionTimeoutEvent:
	enterl	#2
?LBB_sinkBleBondableConnectionTimeoutEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB7:
	ld	AH,#H'0013
	bsr	$_sinkBleGapEvent
?LBE7:
?LBE_sinkBleBondableConnectionTimeoutEvent:
	leavel	#2
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_sinkBleCentralConnCompleteEvent:
	enterl	#23
?LBB_sinkBleCentralConnCompleteEvent:
	ld	AH,#H'0000
	st	AH,@(H'0013,Y)
	st	AH,@(H'0012,Y)
	st	AL,@(H'0011,Y)
	st	AH,@(H'0014,Y)
?LBB8:
	bsr	$_gattClientFindByCid
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0011,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	$_VmGetBdAddrtFromCid
	st	AL,@(H'0014,Y)
?L89:
	ld	AL,#H'0005
	st	AL,@(H'0012,Y)
	tst	@(H'0014,Y)
	bne	?L90
	ld	AL,#H'0000
	bra	(?L92)
?L90:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?L92:
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0012,Y)
	ld	AL,@(H'0013,Y)
	bsr	$_sinkBleGapEvent
?LBE8:
?LBE_sinkBleCentralConnCompleteEvent:
	leavel	#23
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_sinkBlePairingCompleteEvent:
	enterl	#2
?LBB_sinkBlePairingCompleteEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB9:
	ld	AH,#H'000C
	bsr	$_sinkBleGapEvent
?LBE9:
?LBE_sinkBlePairingCompleteEvent:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_sinkBleSwitchPeripheralEvent:
	enterl	#2
?LBB_sinkBleSwitchPeripheralEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB10:
	ld	AH,#H'0009
	bsr	$_sinkBleGapEvent
?LBE10:
?LBE_sinkBleSwitchPeripheralEvent:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_sinkBleSwitchCentralEvent:
	enterl	#2
?LBB_sinkBleSwitchCentralEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB11:
	ld	AH,#H'0008
	bsr	$_sinkBleGapEvent
?LBE11:
?LBE_sinkBleSwitchCentralEvent:
	leavel	#2
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_sinkBleCentralDisconnectionEvent:
	enterl	#2
?LBB_sinkBleCentralDisconnectionEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB12:
	ld	AH,#H'0006
	bsr	$_sinkBleGapEvent
?LBE12:
?LBE_sinkBleCentralDisconnectionEvent:
	leavel	#2
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_sinkBleCancelAdvertisingEvent:
	enterl	#2
?LBB_sinkBleCancelAdvertisingEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB13:
	ld	AH,#H'000E
	bsr	$_sinkBleGapEvent
?LBE13:
?LBE_sinkBleCancelAdvertisingEvent:
	leavel	#2
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_sinkBleRemoteConnectionSuccessEvent:
	enterl	#23
?LBB_sinkBleRemoteConnectionSuccessEvent:
	ld	AH,#H'0000
	st	AH,@(H'0013,Y)
	st	AH,@(H'0012,Y)
	st	AL,@(H'0011,Y)
	st	AH,@(H'0014,Y)
?LBB14:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0001
	bsr	$_MessageCancelFirst
	tst	@(H'0011,Y)
	beq	?L99
	ld	AL,@(H'0011,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	$_VmGetBdAddrtFromCid
	st	AL,@(H'0014,Y)
?L99:
	ld	AL,#H'000A
	st	AL,@(H'0012,Y)
	tst	@(H'0014,Y)
	bne	?L100
	ld	AL,#H'0000
	bra	(?L102)
?L100:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?L102:
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0012,Y)
	ld	AL,@(H'0013,Y)
	bsr	$_sinkBleGapEvent
?LBE14:
?LBE_sinkBleRemoteConnectionSuccessEvent:
	leavel	#23
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_sinkBleRemoteConnectionFailEvent:
	enterl	#2
?LBB_sinkBleRemoteConnectionFailEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB15:
	ld	AH,#H'000B
	bsr	$_sinkBleGapEvent
?LBE15:
?LBE_sinkBleRemoteConnectionFailEvent:
	leavel	#2
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_sinkBleLocalConnectionSuccessEvent:
	enterl	#4
?LBB_sinkBleLocalConnectionSuccessEvent:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
?LBB16:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0001
	bsr	$_MessageCancelFirst
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	$_sinkBleGapEvent
?LBE16:
?LBE_sinkBleLocalConnectionSuccessEvent:
	leavel	#4
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_sinkBleRoleTimeoutEvent:
	enterl	#2
?LBB_sinkBleRoleTimeoutEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB17:
	ld	AH,#H'000D
	bsr	$_sinkBleGapEvent
?LBE17:
?LBE_sinkBleRoleTimeoutEvent:
	leavel	#2
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_sinkBleCheckNoConnectionsEvent:
	enterl	#5
?LBB_sinkBleCheckNoConnectionsEvent:
	bsr	$_gattClientHasNoClients
	cmp	AL,#H'0000
	beq	?L106
	bsr	$_gattServerIsFullyDisconnected
	cmp	AL,#H'0000
	beq	?L106
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0001
	bsr	$_MessageCancelFirst
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AH,#H'0320
	st	AH,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendLater
?L106:
?LBE_sinkBleCheckNoConnectionsEvent:
	leavel	#5
$_sinkBleRetryEncryptionEvent:
	enterl	#7
?LBB_sinkBleRetryEncryptionEvent:
	st	AL,@(H'0003,Y)
?LBB18:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0005
	bsr	$_MessageCancelFirst
	ld	AH,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	AH,@(0,X)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	st	X,@(0,Y)
	ld	AH,#H'01F4
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,#H'0005
	bsr	$_MessageSendLater
?LBE18:
?LBE_sinkBleRetryEncryptionEvent:
	leavel	#7
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_sinkBlePowerOnEvent:
	enterl	#2
?LBB_sinkBlePowerOnEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
	ld	AH,@$XAP_UXL
?LBB19:
	bsr	$_sinkBleGapEvent
?LBE19:
?LBE_sinkBlePowerOnEvent:
	leavel	#2
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_sinkBlePowerOffEvent:
	enterl	#2
?LBB_sinkBlePowerOffEvent:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB20:
	ld	AH,#H'0010
	bsr	$_sinkBleGapEvent
?LBE20:
?LBE_sinkBlePowerOffEvent:
	leavel	#2
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_sinkBleGetConfiguration:
; leaf function with empty stack frame
?LBB_sinkBleGetConfiguration:
	ld	AL,#(_ble_config)
?LBE_sinkBleGetConfiguration:
	rts
$_sinkBleSetAdvertisingParamsDefault:
	enterl	#9
?LBB_sinkBleSetAdvertisingParamsDefault:
?LBB21:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_ConnectionDmBleSetAdvertisingParamsReq
?LBE21:
?LBE_sinkBleSetAdvertisingParamsDefault:
	leavel	#9
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_sinkBleSetMasterConnectionParamsDefault:
	enterl	#13
?LBB_sinkBleSetMasterConnectionParamsDefault:
?LBB22:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@_ble_master_initial_conn_params
	st	AL,@(H'0002,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0002
	st	AL,@(H'0004,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0003
	st	AL,@(H'0005,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0004
	st	AL,@(H'0006,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0005
	st	AL,@(H'0007,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0006
	st	AL,@(H'0008,Y)
	ld	AL,@_ble_master_initial_conn_params+H'0007
	st	AL,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	bsr	$_ConnectionDmBleSetConnectionParametersReq
?LBE22:
?LBE_sinkBleSetMasterConnectionParamsDefault:
	leavel	#13
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_sinkBleSetMasterConnectionParamsUpdate:
	enterl	#8
?LBB_sinkBleSetMasterConnectionParamsUpdate:
	ld	AH,@$XAP_AL
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	X,@_ble_master_update_conn_params
	st	X,@(0,Y)
	ld	X,@_ble_master_update_conn_params+H'0001
	st	X,@(H'0001,Y)
	ld	X,@_ble_master_update_conn_params+H'0002
	st	X,@(H'0002,Y)
	ld	X,@_ble_master_update_conn_params+H'0003
	st	X,@(H'0003,Y)
	ld	X,@_ble_master_update_conn_params+H'0004
	st	X,@(H'0004,Y)
	ld	X,@_ble_master_update_conn_params+H'0005
	st	X,@(H'0005,Y)
	bsr	$_ConnectionDmBleConnectionParametersUpdateReq
?LBE_sinkBleSetMasterConnectionParamsUpdate:
	leavel	#8
$_sinkBleSetSlaveConnectionParamsUpdate:
	enterl	#8
?LBB_sinkBleSetSlaveConnectionParamsUpdate:
	ld	AH,@$XAP_AL
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	X,@_ble_slave_update_conn_params
	st	X,@(0,Y)
	ld	X,@_ble_slave_update_conn_params+H'0001
	st	X,@(H'0001,Y)
	ld	X,@_ble_slave_update_conn_params+H'0002
	st	X,@(H'0002,Y)
	ld	X,@_ble_slave_update_conn_params+H'0003
	st	X,@(H'0003,Y)
	ld	X,@_ble_slave_update_conn_params+H'0004
	st	X,@(H'0004,Y)
	ld	X,@_ble_slave_update_conn_params+H'0005
	st	X,@(H'0005,Y)
	bsr	$_ConnectionDmBleConnectionParametersUpdateReq
?LBE_sinkBleSetSlaveConnectionParamsUpdate:
	leavel	#8
$_sinkBleGetAdvertisingParameters:
	enterl	#3
?LBB_sinkBleGetAdvertisingParameters:
	st	AH,@(0,Y)
	cmp	AL,#H'0000
	beq	?L117
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0009,X)
	ld	X,@(0,Y)
	st	AL,@(0,X)
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'000A,X)
	bra	(?L119)
?L117:
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'000C,X)
	ld	X,@(0,Y)
	st	AL,@(0,X)
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
?L119:
	ld	X,@(0,Y)
	st	AL,@(H'0001,X)
?LBE_sinkBleGetAdvertisingParameters:
	leavel	#3
$_sinkBleGetScanningParameters:
	enterl	#3
?LBB_sinkBleGetScanningParameters:
	st	AH,@(0,Y)
	cmp	AL,#H'0000
	beq	?L121
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	ld	X,@(0,Y)
	st	AL,@(0,X)
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	bra	(?L123)
?L121:
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0007,X)
	ld	X,@(0,Y)
	st	AL,@(0,X)
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
?L123:
	ld	X,@(0,Y)
	st	AL,@(H'0001,X)
?LBE_sinkBleGetScanningParameters:
	leavel	#3
$_sinkBleDeleteMarkedDevices:
	enterl	#2
?LBB_sinkBleDeleteMarkedDevices:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'0010
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L124
	ld	X,@$_theSink+H'0004
	ld	AH,#H'0010
	add	AH,@$XAP_UXL
	ld	AL,@(H'000F,X)
	bsr	$_ConnectionSmDeleteAuthDeviceReq
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000F
	bsr	$_BdaddrTypedSetEmpty
?L124:
?LBE_sinkBleDeleteMarkedDevices:
	leavel	#2
$_sinkBleSimplePairingCompleteInd:
	enterl	#3
?LBB_sinkBleSimplePairingCompleteInd:
	st	AL,@(0,Y)
?LBB23:
	add	AL,#H'0001
	bsr	$_GattGetCidForBdaddr
	cmp	AL,#H'0000
	beq	?L126
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L126
	ld	AH,#H'0004
	bsr	$_gattClientStoreConfigAttributes
	bsr	$_deviceManagerUpdatePriorityDevices
?L126:
?LBE23:
?LBE_sinkBleSimplePairingCompleteInd:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
	ENDMOD

;# Function pattern *movqi2 used[0] = 110 used[1] = 14 total = 124
;# Function pattern *movqi3 used[0] = 103 total = 103
;# Function pattern *movqi8 used[0] = 16 total = 16
;# Function pattern *movhi used[2] = 6 used[3] = 1 total = 7
;# Function pattern *addqi0 used[0] = 13 total = 13
;# Function pattern *addqi2 used[0] = 12 used[2] = 16 total = 28
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 21 total = 21
;# Function pattern *call1 used[0] = 48 total = 48
;# Function pattern *call_value1 used[0] = 32 total = 32
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 12 used[1] = 7 total = 19
;# Function pattern movstrqi+4 used[1] = 11 total = 11
;# Function pattern movstrqi+5 used[0] = 10 total = 10
	MODULE	sink_ble_advertising
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_bleStopAdvertising:
	enterl	#2
?LBB_bleStopAdvertising:
	ld	AL,#H'0000
	bsr	$_ConnectionDmBleSetAdvertiseEnable
?LBE_bleStopAdvertising:
	leavel	#2
_setupFlagsAdData:
	enterl	#4
?LBB_setupFlagsAdData:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	cmp	AH,#H'0000
	bne	?L3
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	bra	(?L4)
?L3:
	cmp	AH,#H'0001
	bne	?L4
	ld	AL,@(H'0001,Y)
	or	AL,#H'0001
	st	AL,@(H'0001,Y)
?L4:
	ld	AL,#H'0003
	ld	X,@(0,Y)
	st	AL,@(H'0001,X)
	bsr	$_malloc
	ld	AH,@$XAP_AL
	ld	X,@(0,Y)
	st	AL,@(0,X)
	ld	AL,#H'0002
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0001
	st	AL,@(H'0001,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0002,X)
?LBE2:
?LBE_setupFlagsAdData:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_setupServicesAdData:
	enterl	#4
?LBB_setupServicesAdData:
	st	AL,@(0,Y)
?LBB3:
	ld	AL,#H'0004
	cmp	AL,@$XAP_AH
	beq	?L13
	bcc	?L8
?L13:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	bra	(?L12)
?L8:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AL,#H'0004
?L12:
	ld	X,@(0,Y)
	st	AL,@(H'0001,X)
	bsr	$_malloc
	ld	X,@(0,Y)
	st	AL,@(0,X)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	ld	AL,@(H'0001,X)
	add	AL,#-H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	tst	#H'0001
	beq	?L7
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	ld	AL,#H'000F
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	ld	AL,#H'0018
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
?L7:
?LBE3:
?LBE_setupServicesAdData:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_setupLocalNameAdvertisingData:
	enterl	#6
?LBB_setupLocalNameAdvertisingData:
	st	AL,@(H'0001,Y)
?LBB4:
	cmp	AH,#H'0000
	bne	?L15
	ld	X,@$XAP_AL
	st	AH,@(H'0001,X)
	bra	(?L14)
?L15:
	ld	AL,@(H'0007,Y)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L17
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0001,X)
	bra	(?L14)
?L17:
	ld	AL,#H'0002
	add	AL,@$XAP_AH
	cmp	AL,@(H'0007,Y)
	bcc	?L19
	ld	AL,#H'0009
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bra	(?L16)
?L19:
	ld	X,#H'0008
	st	X,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	add	AL,#-H'0002
	st	AL,@(H'0003,Y)
?L16:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	X,@(H'0001,Y)
	st	AL,@(H'0001,X)
	bsr	$_malloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	X,#H'0002
	add	X,@$XAP_AH
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
?L14:
?LBE4:
?LBE_setupLocalNameAdvertisingData:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_bleSetupAdvertisingData:
	enterl	#11
?LBB_bleSetupAdvertisingData:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AH,@(H'000B,Y)
?LBB5:
	ld	AL,#H'001F
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	_setupFlagsAdData
	ld	AL,@(H'0003,Y)
	bsr	$_malloc
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0007,Y)
	sub	AL,@(H'0003,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_free
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0007,Y)
	bsr	_setupServicesAdData
	ld	AH,@(H'0006,Y)
	add	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	bsr	$_realloc
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	add	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0007,Y)
	sub	AL,@(H'0003,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_free
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	_setupLocalNameAdvertisingData
	tst	@(H'0003,Y)
	beq	?L23
	ld	AH,@(H'0006,Y)
	add	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	bsr	$_realloc
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	add	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_free
?L23:
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_ConnectionDmBleSetAdvertisingDataReq
	ld	AL,@(H'0008,Y)
	bsr	$_free
?LBE5:
?LBE_bleSetupAdvertisingData:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_bleHandleSetAdvertisingData:
	enterl	#2
?LBB_bleHandleSetAdvertisingData:
	ld	X,#H'0000
	ld	AL,@$XAP_UXL
?LBB6:
	ld	AH,#H'0002
	bsr	$_sinkBleGapEvent
?LBE6:
?LBE_bleHandleSetAdvertisingData:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 57 used[1] = 9 total = 66
;# Function pattern *movqi3 used[0] = 62 total = 62
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 10 used[2] = 2 total = 12
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 2 total = 4
;# Function pattern movstrqi+4 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	sink_ble_gap
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sinkBleGetGapState:
	enterl	#2
?LBB_sinkBleGetGapState:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'000C,X)
?LBE_sinkBleGetGapState:
	leavel	#2
_sinkBleSetGapState:
	enterl	#2
?LBB_sinkBleSetGapState:
	ld	X,@$_theSink+H'0004
	st	AL,@(H'000C,X)
?LBE_sinkBleSetGapState:
	leavel	#2
_sinkBleGapSetBondedToPrivacyDevice:
	enterl	#2
?LBB_sinkBleGapSetBondedToPrivacyDevice:
	ld	X,@$_theSink+H'0004
	asl	#H'000F
	ld	AH,@(H'0014,X)
	and	AH,#H'7FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0014,X)
?LBE_sinkBleGapSetBondedToPrivacyDevice:
	leavel	#2
$_sinkBleGapSetDiscoveryInProgress:
	enterl	#2
?LBB_sinkBleGapSetDiscoveryInProgress:
	ld	X,@$_theSink+H'0004
	and	AL,#H'0001
	asl	#H'000E
	ld	AH,@(H'0014,X)
	and	AH,#-H'4001
	or	AH,@$XAP_AL
	st	AH,@(H'0014,X)
?LBE_sinkBleGapSetDiscoveryInProgress:
	leavel	#2
$_sinkBleGapIsDiscoveryInProgress:
	enterl	#2
?LBB_sinkBleGapIsDiscoveryInProgress:
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0014,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L6
	ld	AH,#H'0001
?L6:
	ld	AL,@$XAP_AH
?LBE_sinkBleGapIsDiscoveryInProgress:
	leavel	#2
_sinkBleGapGetBondedToPrivacyDevice:
	enterl	#2
?LBB_sinkBleGapGetBondedToPrivacyDevice:
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0014,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
?LBE_sinkBleGapGetBondedToPrivacyDevice:
	leavel	#2
_gapStopRoleSwitchTimer:
	enterl	#2
?LBB_gapStopRoleSwitchTimer:
	ld	AL,#($_theSink)
	ld	AH,#H'4790
	bsr	$_MessageCancelFirst
?LBE_gapStopRoleSwitchTimer:
	leavel	#2
_gapStartRoleSwitchTimer:
	enterl	#6
?LBB_gapStartRoleSwitchTimer:
?LBB2:
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L9
	ld	AL,#($_theSink)
	ld	AH,#H'4790
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4790
	bsr	$_MessageSendLater
?L9:
?LBE2:
?LBE_gapStartRoleSwitchTimer:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_gapSetWhitelistScanActive:
	enterl	#2
?LBB_gapSetWhitelistScanActive:
	ld	X,@$_theSink+H'0004
	asl	#H'000F
	ld	AH,@(H'0016,X)
	and	AH,#H'7FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0016,X)
?LBE_gapSetWhitelistScanActive:
	leavel	#2
_gapGetWhitelistScanActive:
	enterl	#2
?LBB_gapGetWhitelistScanActive:
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0016,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
?LBE_gapGetWhitelistScanActive:
	leavel	#2
_gapStartWhitelistTimer:
	enterl	#5
?LBB_gapStartWhitelistTimer:
	bsr	_sinkBleGapGetBondedToPrivacyDevice
	cmp	AL,#H'0000
	beq	?L14
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	umult	#H'03E8
	ld	X,@$_theSink+H'0004
	add	X,#H'000A
	st	X,@(-1,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(-1,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendLater
?L14:
	ld	AL,#H'0001
	bsr	_gapSetWhitelistScanActive
?LBE_gapStartWhitelistTimer:
	leavel	#5
_gapStopWhitelistTimer:
	enterl	#2
?LBB_gapStopWhitelistTimer:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0002
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	bsr	_gapSetWhitelistScanActive
?LBE_gapStopWhitelistTimer:
	leavel	#2
_gapSetScanSpeed:
	enterl	#2
?LBB_gapSetScanSpeed:
	ld	X,@$_theSink+H'0004
	st	AL,@(H'0015,X)
?LBE_gapSetScanSpeed:
	leavel	#2
_gapIsFastScanSpeed:
	enterl	#2
?LBB_gapIsFastScanSpeed:
	ld	AL,#H'0000
	ld	X,@$_theSink+H'0004
	tst	@(H'0015,X)
	bne	?L18
	ld	AL,#H'0001
?L18:
?LBE_gapIsFastScanSpeed:
	leavel	#2
_gapSetAdvSpeed:
	enterl	#2
?LBB_gapSetAdvSpeed:
	ld	X,@$_theSink+H'0004
	st	AL,@(H'0017,X)
?LBE_gapSetAdvSpeed:
	leavel	#2
_gapIsFastAdvSpeed:
	enterl	#2
?LBB_gapIsFastAdvSpeed:
	ld	AL,#H'0000
	ld	X,@$_theSink+H'0004
	tst	@(H'0017,X)
	bne	?L21
	ld	AL,#H'0001
?L21:
?LBE_gapIsFastAdvSpeed:
	leavel	#2
_gapStartFastScanTimer:
	enterl	#5
?LBB_gapStartFastScanTimer:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0003
	bsr	$_MessageCancelFirst
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	umult	#H'03E8
	ld	X,@$_theSink+H'0004
	add	X,#H'000A
	st	X,@(-1,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(-1,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendLater
	ld	AL,#H'0000
	bsr	_gapSetScanSpeed
?LBE_gapStartFastScanTimer:
	leavel	#5
_gapStopFastScanTimer:
	enterl	#2
?LBB_gapStopFastScanTimer:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0003
	bsr	$_MessageCancelFirst
?LBE_gapStopFastScanTimer:
	leavel	#2
_gapStartFastAdvTimer:
	enterl	#5
?LBB_gapStartFastAdvTimer:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0004
	bsr	$_MessageCancelFirst
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	AL,@(H'000B,X)
	umult	#H'03E8
	ld	X,@$_theSink+H'0004
	add	X,#H'000A
	st	X,@(-1,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(-1,Y)
	ld	AH,#H'0004
	bsr	$_MessageSendLater
?LBE_gapStartFastAdvTimer:
	leavel	#5
_gapStopFastAdvTimer:
	enterl	#2
?LBB_gapStopFastAdvTimer:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0004
	bsr	$_MessageCancelFirst
?LBE_gapStopFastAdvTimer:
	leavel	#2
_gapStartScanning:
	enterl	#5
?LBB_gapStartScanning:
	st	AL,@(0,Y)
?LBB3:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_gattClientHasMaxCentralClients
	cmp	AL,#H'0000
	beq	?L27
	ld	AL,#H'0004
	bsr	_sinkBleSetGapState
	bsr	_gapStopWhitelistTimer
	bsr	_gapStopFastScanTimer
	ld	AL,#H'0000
	bra	(?L26)
?L27:
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0006
	bne	?L28
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	bra	(?L29)
?L28:
	ld	AL,#H'0002
	bsr	_sinkBleSetGapState
	tst	@(0,Y)
	beq	?L30
	bsr	_gapStartFastScanTimer
	bsr	_gapStartWhitelistTimer
	bra	(?L29)
?L30:
	bsr	_gapGetWhitelistScanActive
	st	AL,@(H'0001,Y)
	bsr	_gapIsFastScanSpeed
	st	AL,@(H'0002,Y)
?L29:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_bleStartScanning
	ld	AL,#H'0001
?L26:
?LBE3:
?LBE_gapStartScanning:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_gapStopScanning:
	enterl	#2
?LBB_gapStopScanning:
	bsr	$_bleStopScanning
	bsr	_gapStopFastScanTimer
	bsr	_gapStopWhitelistTimer
?LBE_gapStopScanning:
	leavel	#2
_gapSetConnectionParamsDefault:
	enterl	#4
?LBB_gapSetConnectionParamsDefault:
?LBB4:
	bsr	_gapIsFastScanSpeed
	ld	AH,@$XAP_UY
	bsr	$_sinkBleGetScanningParameters
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_sinkBleSetMasterConnectionParamsDefault
?LBE4:
?LBE_gapSetConnectionParamsDefault:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_gapSetAdvertisingParamsDefault:
	enterl	#4
?LBB_gapSetAdvertisingParamsDefault:
?LBB5:
	bsr	_gapIsFastAdvSpeed
	ld	AH,@$XAP_UY
	bsr	$_sinkBleGetAdvertisingParameters
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_sinkBleSetAdvertisingParamsDefault
?LBE5:
?LBE_gapSetAdvertisingParamsDefault:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_gapStartAdvertising:
	enterl	#2
?LBB_gapStartAdvertising:
	bsr	_gapSetAdvertisingParamsDefault
	bsr	$_sinkGattManagerStartAdvertising
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0005
	beq	?L36
	ld	AL,#H'0005
	bsr	_sinkBleSetGapState
	bsr	_gapIsFastAdvSpeed
	cmp	AL,#H'0000
	beq	?L36
	bsr	_gapStartFastAdvTimer
?L36:
?LBE_gapStartAdvertising:
	leavel	#2
_gapStopAdvertising:
	enterl	#3
?LBB_gapStopAdvertising:
	st	AL,@(0,Y)
	bsr	_gapStopFastAdvTimer
	ld	AL,@(0,Y)
	bsr	_gapSetAdvSpeed
	bsr	$_sinkGattManagerStopAdvertising
?LBE_gapStopAdvertising:
	leavel	#3
_gapStartBondablePairingTimer:
	enterl	#6
?LBB_gapStartBondablePairingTimer:
?LBB6:
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4787
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4787
	bsr	$_MessageSendLater
?LBE6:
?LBE_gapStartBondablePairingTimer:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_gapStartBondableConnectionTimer:
	enterl	#6
?LBB_gapStartBondableConnectionTimer:
?LBB7:
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	ld	X,@(H'0001,X)
	st	X,@(H'0003,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4793
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4793
	bsr	$_MessageSendLater
?LBE7:
?LBE_gapStartBondableConnectionTimer:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_gapStopBondablePairingTimer:
	enterl	#3
?LBB_gapStopBondablePairingTimer:
	ld	AL,#($_theSink)
	ld	AH,#H'4787
	bsr	$_MessageCancelFirst
	cmp	AL,#H'0000
	beq	?L43
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4787
	bsr	$_MessageSend
?L43:
?LBE_gapStopBondablePairingTimer:
	leavel	#3
_gapStopBondableConnectionTimer:
	enterl	#3
?LBB_gapStopBondableConnectionTimer:
	ld	AL,#($_theSink)
	ld	AH,#H'4793
	bsr	$_MessageCancelFirst
	cmp	AL,#H'0000
	beq	?L45
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4793
	bsr	$_MessageSend
?L45:
?LBE_gapStopBondableConnectionTimer:
	leavel	#3
_gapDisconnectFromPeripheral:
	enterl	#2
?LBB_gapDisconnectFromPeripheral:
	bsr	$_gattClientDisconnectAll
	cmp	AL,#H'0000
	bne	?L47
	bsr	$_sinkBleCheckNoConnectionsEvent
?L47:
?LBE_gapDisconnectFromPeripheral:
	leavel	#2
_gapDisconnectFromCentral:
	enterl	#2
?LBB_gapDisconnectFromCentral:
	bsr	$_gattServerDisconnectAll
	cmp	AL,#H'0000
	bne	?L49
	ld	AL,#H'0000
	bsr	_gapStopAdvertising
?L49:
?LBE_gapDisconnectFromCentral:
	leavel	#2
_gapStartPeripheralBonding:
	enterl	#2
?LBB_gapStartPeripheralBonding:
	bsr	_gapDisconnectFromCentral
	ld	AL,#H'0005
	bsr	_sinkBleSetGapState
	bsr	_gapStartBondableConnectionTimer
?LBE_gapStartPeripheralBonding:
	leavel	#2
_gapRetryEncryption:
	enterl	#4
?LBB_gapRetryEncryption:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L52
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0001
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	bsr	$_ConnectionDmBleSecurityReq
?L52:
?LBE_gapRetryEncryption:
	leavel	#4
_gapStartPeripheralEncryption:
	enterl	#15
?LBB_gapStartPeripheralEncryption:
	st	AL,@(H'0008,Y)
?LBB8:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0035,X)
	bsr	$_gattClientFindByCid
	st	AL,@(H'0009,Y)
	bsr	$_gattClientGetServiceData
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0009,Y)
	bsr	$_gattClientGetDiscoveredServices
	st	AL,@(H'000B,Y)
	ld	AH,#H'0000
	st	AH,@(H'000C,Y)
	tst	@(H'0008,Y)
	beq	?L55
	cmp	AL,#H'0000
	beq	?L64
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0035,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L64
	tst	@(H'0009,Y)
	beq	?L64
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	cmp	AH,#H'0002
	bne	?L64
	tst	@(H'000A,Y)
	beq	?L64
	ld	AH,@(H'000C,Y)
	st	AH,@(-1,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@(-1,Y)
	cmp	AL,@$XAP_AH
	bcc	?L64
?L63:
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	X,@(H'000B,Y)
	add	X,@$XAP_AL
	st	X,@(H'000B,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0002
	cmp	AL,#H'0001
	bcz	?L68
	ld	AH,#H'0001
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@(-1,Y)
	cmp	AL,@$XAP_AH
	bcs	?L63
	bra	(?L64)
?L68:
	ld	AH,#H'0001
	st	AH,@(H'000C,Y)
	bra	(?L64)
?L55:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0035,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L64
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L64:
	tst	@(H'000C,Y)
	beq	?L66
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0001
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_ConnectionDmBleSecurityReq
?L66:
?LBE8:
	ld	AL,@(H'000C,Y)
?LBE_gapStartPeripheralEncryption:
	leavel	#15
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_gapStopPeripheralBonding:
	enterl	#2
?LBB_gapStopPeripheralBonding:
?LBB9:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0035,X)
	bsr	$_gattClientFindByCid
	cmp	AL,#H'0000
	bne	?L74
	bsr	_gapDisconnectFromCentral
	bra	(?L77)
?L74:
	ld	AL,#H'0000
	bsr	_gapStartPeripheralEncryption
	cmp	AL,#H'0000
	bne	?L73
?L77:
	ld	AL,#H'0001
	bsr	_sinkBleSetGapState
?L73:
?LBE9:
?LBE_gapStopPeripheralBonding:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_gapStartCentralBonding:
	enterl	#2
?LBB_gapStartCentralBonding:
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0002
	bne	?L79
	bsr	_gapStopScanning
?L79:
	ld	AL,#H'0006
	bsr	_sinkBleSetGapState
	ld	AL,#H'0001
	bsr	_gapStartScanning
	cmp	AL,#H'0000
	beq	?L78
	bsr	_gapStartBondableConnectionTimer
?L78:
?LBE_gapStartCentralBonding:
	leavel	#2
_gapStopCentralBonding:
	enterl	#2
?LBB_gapStopCentralBonding:
	bsr	_gapStopScanning
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0006
	bne	?L82
	ld	AL,#H'0002
	bsr	_sinkBleSetGapState
	ld	AL,#H'0001
	bsr	_gapStartScanning
?L82:
?LBE_gapStopCentralBonding:
	leavel	#2
_gapSetSecurityFailedDevice:
	enterl	#16
?LBB_gapSetSecurityFailedDevice:
	st	AL,@(H'000D,Y)
?LBB10:
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'000D,Y)
	bsr	$_memcpy
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L86
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0007
	bsr	$_VmGetPublicAddress
	bra	(?L87)
?L86:
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@(H'000D,Y)
	bsr	$_memcpy
?L87:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000F
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0007
	bsr	$_memcpy
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'479B
	bsr	$_MessageSend
?LBE10:
?LBE_gapSetSecurityFailedDevice:
	leavel	#16
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
_gapClearSecurityFailedDevice:
	enterl	#15
?LBB_gapClearSecurityFailedDevice:
	ld	X,@$XAP_AL
?LBB11:
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L90
?LBB12:
	st	AL,@(H'000C,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_VmGetPublicAddress
?LBE12:
	bra	(?L91)
?L90:
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
?L91:
	ld	AH,@$_theSink+H'0004
	add	AH,#H'0010
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000F
	bsr	$_BdaddrTypedSetEmpty
?L89:
?LBE11:
?LBE_gapClearSecurityFailedDevice:
	leavel	#15
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
_gapProcessEncryptionFailure:
	enterl	#3
?LBB_gapProcessEncryptionFailure:
	ld	X,@$XAP_AL
?LBB13:
	cmp	AL,#H'0000
	beq	?L94
?LBB14:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_gattClientRemoveServices
	ld	AL,@(0,Y)
	bsr	$_gattClientRemove
	ld	AL,@(0,Y)
	bsr	$_GattManagerDisconnectRequest
?L94:
?LBE14:
?LBE13:
?LBE_gapProcessEncryptionFailure:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_gapStartConnection:
	enterl	#3
?LBB_gapStartConnection:
	st	AL,@(0,Y)
	bsr	_gapSetConnectionParamsDefault
	ld	AL,@(0,Y)
	bsr	$_sinkGattManagerStartConnection
?LBE_gapStartConnection:
	leavel	#3
_gapCentralConnectToBondedDevice:
	enterl	#9
?LBB_gapCentralConnectToBondedDevice:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB15:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L98
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L98
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_ConnectionSmGetAttributeNowReq
	cmp	AL,#H'0000
	beq	?L98
	ld	AL,@(H'0003,Y)
	bsr	_gapStartConnection
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L98:
	tst	@(H'0005,Y)
	bne	?L97
	ld	AL,#H'0000
	bsr	_gapStartScanning
?L97:
?LBE15:
?LBE_gapCentralConnectToBondedDevice:
	leavel	#9
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
_gapCentralConnectToAnyDevice:
	enterl	#11
?LBB_gapCentralConnectToAnyDevice:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB16:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_BdaddrTypedSetEmpty
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L102
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0006,Y)
	bra	(?L108)
?L102:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L103
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0007,Y)
?L108:
	bsr	$_memcpy
?L103:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_BdaddrTypedIsEmpty
	cmp	AL,#H'0000
	bne	?L105
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_gapStartConnection
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
?L105:
	tst	@(H'0008,Y)
	bne	?L101
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0008
	bne	?L107
	bsr	_gapStopBondablePairingTimer
?L107:
	ld	AL,#H'0000
	bsr	_gapStartScanning
?L101:
?LBE16:
?LBE_gapCentralConnectToAnyDevice:
	leavel	#11
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_gapStopScanWhileConnecting:
	enterl	#2
?LBB_gapStopScanWhileConnecting:
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0006
	bne	?L111
	bsr	_gapStopBondableConnectionTimer
	ld	AL,#H'0008
	bra	(?L113)
?L111:
	ld	AL,#H'0007
?L113:
	bsr	_sinkBleSetGapState
	bsr	_gapStopScanning
?LBE_gapStopScanWhileConnecting:
	leavel	#2
_gapStorePersistentData:
	enterl	#2
?LBB_gapStorePersistentData:
	bsr	$_configManagerWriteSessionData
?LBE_gapStorePersistentData:
	leavel	#2
_gapCentralPowerOff:
	enterl	#4
?LBB_gapCentralPowerOff:
	st	AL,@(H'0001,Y)
	bsr	_gapStopRoleSwitchTimer
	cmp	AL,#H'0000
	beq	?L118
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4790
	bsr	$_MessageSend
?L118:
	bsr	_gapStopBondableConnectionTimer
	bsr	_gapStopBondablePairingTimer
	bsr	_gapStopScanning
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000F
	bsr	$_BdaddrTypedSetEmpty
	tst	@(H'0001,Y)
	beq	?L119
	bsr	_gapDisconnectFromPeripheral
?L119:
	ld	AL,#H'0000
	bsr	_sinkBleSetGapState
?LBE_gapCentralPowerOff:
	leavel	#4
_gapPeripheralPowerOff:
	enterl	#3
?LBB_gapPeripheralPowerOff:
	bsr	_gapStopRoleSwitchTimer
	cmp	AL,#H'0000
	beq	?L122
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4790
	bsr	$_MessageSend
?L122:
	bsr	_gapStopBondableConnectionTimer
	bsr	_gapStopBondablePairingTimer
	bsr	_gapStopRoleSwitchTimer
	bsr	_gapDisconnectFromCentral
	ld	AL,#H'0000
	bsr	_sinkBleSetGapState
?LBE_gapPeripheralPowerOff:
	leavel	#3
_gapSwitchToCentralRole:
	enterl	#2
?LBB_gapSwitchToCentralRole:
	bsr	_gapStopRoleSwitchTimer
	bsr	_gapStopBondablePairingTimer
	bsr	_gapStopBondableConnectionTimer
	bsr	_gapDisconnectFromCentral
	ld	AL,#H'0002
	bsr	_sinkBleSetGapState
	bsr	$_sinkBleGapIsPersistentRole
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,#H'0001
	bsr	$_sinkBleSetGapDefaultRole
	bsr	_gapStorePersistentData
?L123:
?LBE_gapSwitchToCentralRole:
	leavel	#2
_gapSwitchToPeripheralRole:
	enterl	#4
?LBB_gapSwitchToPeripheralRole:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_gapStopBondablePairingTimer
	bsr	_gapStopBondableConnectionTimer
	bsr	_gapStopRoleSwitchTimer
	tst	@(H'0001,Y)
	beq	?L126
	bsr	_gapStopScanning
?L126:
	tst	@(0,Y)
	beq	?L127
	bsr	_gapDisconnectFromPeripheral
?L127:
	ld	AL,#H'0001
	bsr	_sinkBleSetGapState
	bsr	$_sinkBleGapIsPersistentRole
	cmp	AL,#H'0000
	beq	?L125
	ld	AL,#H'0002
	bsr	$_sinkBleSetGapDefaultRole
	bsr	_gapStorePersistentData
?L125:
?LBE_gapSwitchToPeripheralRole:
	leavel	#4
_gapAdvertisingTimeout:
	enterl	#2
?LBB_gapAdvertisingTimeout:
	ld	AL,#H'0000
	bsr	_gapStopAdvertising
	ld	AL,#H'0003
	bsr	_sinkBleSetGapState
?LBE_gapAdvertisingTimeout:
	leavel	#2
_gapStateOffHandleEvent:
	enterl	#3
?LBB_gapStateOffHandleEvent:
?LBB17:
	ld	X,#H'0001
	st	X,@(0,Y)
	cmp	AH,#(H'0001+H'0015)
	bcc	?L157
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE158,X)
	brxl
	.SEG	CONST
?JTBASE158:
	.CODE
?L158:
	.SEG	CONST
	dc	lwrd(?L132-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L137-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L137-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	dc	lwrd(?L131-?L158)
	.CODE
?L132:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	bne	?L133
	ld	AL,#H'0002
	bra	(?L159)
?L133:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0002
	bne	?L134
	ld	AL,#H'0001
?L159:
	bsr	_sinkBleSetGapState
?L134:
	bsr	$_sinkBleCheckNoConnectionsEvent
	bra	(?L131)
?L137:
	bsr	_gapDisconnectFromPeripheral
	bra	(?L131)
?L157:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L131:
?LBE17:
	ld	AL,@(0,Y)
?LBE_gapStateOffHandleEvent:
	leavel	#3
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
_gapStateAdvConnHandleEvent:
	enterl	#3
?LBB_gapStateAdvConnHandleEvent:
?LBB18:
	ld	X,#H'0001
	st	X,@(0,Y)
	cmp	AH,#(H'0001+H'0015)
	bcc	?L188
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE189,X)
	brxl
	.SEG	CONST
?JTBASE189:
	.CODE
?L189:
	.SEG	CONST
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L164-?L189)
	dc	lwrd(?L167-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L188-?L189)
	dc	lwrd(?L174-?L189)
	dc	lwrd(?L178-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L171-?L189)
	dc	lwrd(?L177-?L189)
	dc	lwrd(?L172-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L168-?L189)
	dc	lwrd(?L166-?L189)
	dc	lwrd(?L166-?L189)
	dc	lwrd(?L175-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L163-?L189)
	dc	lwrd(?L176-?L189)
	dc	lwrd(?L163-?L189)
	.CODE
?L164:
	bsr	_gapStartPeripheralBonding
	bra	(?L163)
?L166:
	ld	AL,#H'0001
	bsr	$_sinkBleGapStartReadLocalName
	bsr	_gapStartRoleSwitchTimer
	bra	(?L163)
?L167:
	bsr	_gapStartAdvertising
	bra	(?L163)
?L168:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0002
	bne	?L171
	bsr	_gapAdvertisingTimeout
	bra	(?L163)
?L171:
	bsr	_gapSwitchToCentralRole
	bra	(?L163)
?L172:
	bsr	_gapStopRoleSwitchTimer
	bsr	_gapStopFastAdvTimer
	ld	AL,#H'0000
	bsr	_gapSetAdvSpeed
	ld	AL,#H'0001
	bsr	_gapStartPeripheralEncryption
	bra	(?L163)
?L174:
	bsr	_gapDisconnectFromPeripheral
	bra	(?L163)
?L175:
	bsr	_gapPeripheralPowerOff
	bra	(?L163)
?L176:
	ld	AL,#H'0001
	bra	(?L190)
?L177:
	ld	AL,#H'0000
?L190:
	bsr	_gapStopAdvertising
	bra	(?L163)
?L178:
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	bra	(?L163)
?L188:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L163:
?LBE18:
	ld	AL,@(0,Y)
?LBE_gapStateAdvConnHandleEvent:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
_gapStateScanConnHandleEvent:
	enterl	#5
?LBB_gapStateScanConnHandleEvent:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?LBB19:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	cmp	AL,#(H'0001+H'0015)
	bcc	?L217
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE218,X)
	brxl
	.SEG	CONST
?JTBASE218:
	.CODE
?L218:
	.SEG	CONST
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L194-?L218)
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L195-?L218)
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L198-?L218)
	dc	lwrd(?L203-?L218)
	dc	lwrd(?L207-?L218)
	dc	lwrd(?L201-?L218)
	dc	lwrd(?L217-?L218)
	dc	lwrd(?L217-?L218)
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L199-?L218)
	dc	lwrd(?L198-?L218)
	dc	lwrd(?L198-?L218)
	dc	lwrd(?L204-?L218)
	dc	lwrd(?L205-?L218)
	dc	lwrd(?L206-?L218)
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L193-?L218)
	dc	lwrd(?L193-?L218)
	.CODE
?L194:
	bsr	_gapStartCentralBonding
	bra	(?L193)
?L195:
	bsr	_gapStopScanWhileConnecting
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	ld	AL,@(H'0001,Y)
	bsr	_gapCentralConnectToBondedDevice
	bra	(?L193)
?L198:
	bsr	_gapStartRoleSwitchTimer
	ld	AL,#H'0001
	bra	(?L220)
?L199:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	beq	?L193
?L201:
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	_gapSwitchToPeripheralRole
	bra	(?L193)
?L203:
	bsr	_gapStopRoleSwitchTimer
	bra	(?L193)
?L204:
	ld	AL,#H'0001
	bsr	_gapCentralPowerOff
	bra	(?L193)
?L205:
	ld	AL,#H'0000
	bsr	_gapSetWhitelistScanActive
	bra	(?L219)
?L206:
	ld	AL,#H'0001
	bsr	_gapSetScanSpeed
?L219:
	bsr	_gapStopScanning
	ld	AL,#H'0000
?L220:
	bsr	_gapStartScanning
	bra	(?L193)
?L207:
	bsr	_gapStopScanning
	ld	AL,#H'0001
	bsr	_gapStartScanning
	bsr	_gapStartRoleSwitchTimer
	bra	(?L193)
?L217:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L193:
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_gapStateScanConnHandleEvent:
	leavel	#5
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
_gapStateIdleCentralHandleEvent:
	enterl	#3
?LBB_gapStateIdleCentralHandleEvent:
?LBB20:
	ld	X,#H'0001
	st	X,@(0,Y)
	cmp	AH,#(H'0001+H'0015)
	bcc	?L247
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE248,X)
	brxl
	.SEG	CONST
?JTBASE248:
	.CODE
?L248:
	.SEG	CONST
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L224-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L247-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L227-?L248)
	dc	lwrd(?L231-?L248)
	dc	lwrd(?L233-?L248)
	dc	lwrd(?L230-?L248)
	dc	lwrd(?L247-?L248)
	dc	lwrd(?L247-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L228-?L248)
	dc	lwrd(?L227-?L248)
	dc	lwrd(?L227-?L248)
	dc	lwrd(?L232-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L223-?L248)
	dc	lwrd(?L223-?L248)
	.CODE
?L224:
	bsr	_gapStartCentralBonding
	bra	(?L223)
?L227:
	bsr	_gapStartRoleSwitchTimer
	ld	AL,#H'0001
	bsr	_gapStartScanning
	bra	(?L223)
?L228:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	beq	?L223
?L230:
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	_gapSwitchToPeripheralRole
	bra	(?L223)
?L231:
	bsr	_gapStopRoleSwitchTimer
	bra	(?L223)
?L232:
	ld	AL,#H'0001
	bsr	_gapCentralPowerOff
	bra	(?L223)
?L233:
	bsr	_gapStopScanning
	ld	AL,#H'0001
	bsr	_gapStartScanning
	bsr	_gapStartRoleSwitchTimer
	bra	(?L223)
?L247:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L223:
?LBE20:
	ld	AL,@(0,Y)
?LBE_gapStateIdleCentralHandleEvent:
	leavel	#3
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
_gapStateIdlePeripheralHandleEvent:
	enterl	#5
?LBB_gapStateIdlePeripheralHandleEvent:
?LBB21:
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0015)
	bcc	?L276
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE277,X)
	brxl
	.SEG	CONST
?JTBASE277:
	.CODE
?L277:
	.SEG	CONST
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L252-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L276-?L277)
	dc	lwrd(?L276-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L256-?L277)
	dc	lwrd(?L257-?L277)
	dc	lwrd(?L276-?L277)
	dc	lwrd(?L276-?L277)
	dc	lwrd(?L276-?L277)
	dc	lwrd(?L253-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L258-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	dc	lwrd(?L251-?L277)
	.CODE
?L252:
	bsr	_gapStartPeripheralBonding
	bra	(?L251)
?L253:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0002
	bne	?L256
	bsr	_gapAdvertisingTimeout
	bra	(?L251)
?L256:
	bsr	_gapSwitchToCentralRole
	bra	(?L251)
?L257:
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_gapSwitchToPeripheralRole
	ld	AL,#H'0001
	bsr	$_sinkBleGapStartReadLocalName
	bra	(?L251)
?L258:
	bsr	_gapPeripheralPowerOff
	bra	(?L251)
?L276:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L251:
?LBE21:
	ld	AL,@(H'0001,Y)
?LBE_gapStateIdlePeripheralHandleEvent:
	leavel	#5
	.SEG	CONST
?LC0:
	dc	H'67
	dc	H'61
	dc	H'70
	dc	H'53
	dc	H'74
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'49
	dc	H'64
	dc	H'6C
	dc	H'65
	dc	H'50
	dc	H'65
	dc	H'72
	dc	H'69
	dc	H'70
	dc	H'68
	dc	H'65
	dc	H'72
	dc	H'61
	dc	H'6C
	dc	H'48
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'6C
	dc	H'65
	dc	H'45
	dc	H'76
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'20
	dc	H'65
	dc	H'76
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'2E
	dc	H'69
	dc	H'64
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
_gapStateBondableScanningHandleEvent:
	enterl	#5
?LBB_gapStateBondableScanningHandleEvent:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?LBB22:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	cmp	AL,#(H'0001+H'0015)
	bcc	?L303
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE304,X)
	brxl
	.SEG	CONST
?JTBASE304:
	.CODE
?L304:
	.SEG	CONST
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L303-?L304)
	dc	lwrd(?L282-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L286-?L304)
	dc	lwrd(?L288-?L304)
	dc	lwrd(?L285-?L304)
	dc	lwrd(?L303-?L304)
	dc	lwrd(?L303-?L304)
	dc	lwrd(?L303-?L304)
	dc	lwrd(?L283-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L287-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L281-?L304)
	dc	lwrd(?L280-?L304)
	dc	lwrd(?L303-?L304)
	.CODE
?L281:
	bsr	_gapStopCentralBonding
	bra	(?L280)
?L282:
	bsr	_gapStopScanWhileConnecting
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	ld	AL,@(H'0001,Y)
	bsr	_gapCentralConnectToAnyDevice
	bra	(?L280)
?L283:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	beq	?L280
?L285:
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	_gapSwitchToPeripheralRole
	bra	(?L280)
?L286:
	bsr	_gapStopRoleSwitchTimer
	bra	(?L280)
?L287:
	ld	AL,#H'0001
	bsr	_gapCentralPowerOff
	bra	(?L280)
?L288:
	bsr	_gapStopCentralBonding
	bsr	_gapStartRoleSwitchTimer
	bra	(?L280)
?L303:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L280:
?LBE22:
	ld	AL,@(H'0002,Y)
?LBE_gapStateBondableScanningHandleEvent:
	leavel	#5
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
_gapStateBondableAdvertisingHandleEvent:
	enterl	#3
?LBB_gapStateBondableAdvertisingHandleEvent:
?LBB23:
	ld	X,#H'0001
	st	X,@(0,Y)
	cmp	AH,#(H'0001+H'0015)
	bcc	?L332
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE333,X)
	brxl
	.SEG	CONST
?JTBASE333:
	.CODE
?L333:
	.SEG	CONST
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L308-?L333)
	dc	lwrd(?L321-?L333)
	dc	lwrd(?L332-?L333)
	dc	lwrd(?L315-?L333)
	dc	lwrd(?L322-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L319-?L333)
	dc	lwrd(?L321-?L333)
	dc	lwrd(?L311-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L316-?L333)
	dc	lwrd(?L310-?L333)
	dc	lwrd(?L310-?L333)
	dc	lwrd(?L320-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L321-?L333)
	dc	lwrd(?L307-?L333)
	dc	lwrd(?L307-?L333)
	.CODE
?L308:
	bsr	_gapStartAdvertising
	bra	(?L307)
?L310:
	ld	AL,#H'0001
	bsr	$_sinkBleGapStartReadLocalName
	bra	(?L307)
?L311:
	bsr	_gapStopRoleSwitchTimer
	bsr	_gapStopFastAdvTimer
	ld	AL,#H'0000
	bsr	_gapSetAdvSpeed
	bsr	_gapStopBondableConnectionTimer
	bsr	_gapStartBondablePairingTimer
	ld	AL,#H'0009
	bsr	_sinkBleSetGapState
	bra	(?L307)
?L315:
	bsr	_gapDisconnectFromPeripheral
	bra	(?L307)
?L316:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	bne	?L319
	bsr	_gapAdvertisingTimeout
	bra	(?L307)
?L319:
	bsr	_gapSwitchToCentralRole
	bra	(?L307)
?L320:
	bsr	_gapPeripheralPowerOff
	bra	(?L307)
?L321:
	bsr	_gapStopPeripheralBonding
	bra	(?L307)
?L322:
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	bra	(?L307)
?L332:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L307:
?LBE23:
	ld	AL,@(0,Y)
?LBE_gapStateBondableAdvertisingHandleEvent:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
_gapStateBondableConnectedHandleEvent:
	enterl	#7
?LBB_gapStateBondableConnectedHandleEvent:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
?LBB24:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	ld	AL,@(H'0004,Y)
	cmp	AL,#(H'0001+H'0015)
	bcc	?L360
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE361,X)
	brxl
	.SEG	CONST
?JTBASE361:
	.CODE
?L361:
	.SEG	CONST
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L360-?L361)
	dc	lwrd(?L346-?L361)
	dc	lwrd(?L337-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L347-?L361)
	dc	lwrd(?L344-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L349-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L360-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L349-?L361)
	dc	lwrd(?L360-?L361)
	dc	lwrd(?L345-?L361)
	dc	lwrd(?L350-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L336-?L361)
	dc	lwrd(?L360-?L361)
	dc	lwrd(?L341-?L361)
	.CODE
?L337:
	bsr	$_sinkBleGapIsDiscoveryInProgress
	cmp	AL,#H'0000
	bne	?L338
	ld	AL,#H'0000
	bsr	_gapStartPeripheralEncryption
	cmp	AL,#H'0000
	bne	?L336
	bsr	_gapStopPeripheralBonding
	bra	(?L336)
?L338:
	bsr	_gapStartBondablePairingTimer
	bra	(?L336)
?L341:
	tst	@(H'0002,Y)
	beq	?L336
	ld	AL,@(H'0002,Y)
	bsr	_gapRetryEncryption
	bra	(?L336)
?L344:
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	bra	(?L336)
?L345:
	bsr	_gapStopBondablePairingTimer
	ld	AL,#H'0001
	bsr	_sinkBleSetGapState
	ld	AL,#H'0001
	bsr	$_sinkBleGapStartReadLocalName
	bsr	_gapStartRoleSwitchTimer
	bra	(?L336)
?L346:
	bsr	_gapStartAdvertising
	bra	(?L336)
?L347:
	bsr	_gapDisconnectFromPeripheral
	bra	(?L336)
?L349:
	bsr	_gapSwitchToCentralRole
	bra	(?L336)
?L350:
	bsr	_gapPeripheralPowerOff
	bra	(?L336)
?L360:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L336:
?LBE24:
	ld	AL,@(H'0003,Y)
?LBE_gapStateBondableConnectedHandleEvent:
	leavel	#7
	.SEG	CONST
?LC1:
	dc	H'67
	dc	H'61
	dc	H'70
	dc	H'53
	dc	H'74
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'42
	dc	H'6F
	dc	H'6E
	dc	H'64
	dc	H'61
	dc	H'62
	dc	H'6C
	dc	H'65
	dc	H'43
	dc	H'6F
	dc	H'6E
	dc	H'6E
	dc	H'65
	dc	H'63
	dc	H'74
	dc	H'65
	dc	H'64
	dc	H'48
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'6C
	dc	H'65
	dc	H'45
	dc	H'76
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'20
	dc	H'69
	dc	H'64
	dc	H'20
	dc	H'3D
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
_gapStateConnectingHandleEvent:
	enterl	#3
?LBB_gapStateConnectingHandleEvent:
?LBB25:
	ld	X,#H'0001
	st	X,@(0,Y)
	cmp	AH,#(H'0001+H'0015)
	bcc	?L389
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE390,X)
	brxl
	.SEG	CONST
?JTBASE390:
	.CODE
?L390:
	.SEG	CONST
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L369-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L364-?L390)
	dc	lwrd(?L370-?L390)
	dc	lwrd(?L371-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L368-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L366-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L372-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L363-?L390)
	dc	lwrd(?L373-?L390)
	.CODE
?L364:
	cmp	AL,#H'0000
	beq	?L391
	bsr	$_sinkBleSetMasterConnectionParamsUpdate
	bra	(?L391)
?L366:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	beq	?L363
?L368:
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_gapSwitchToPeripheralRole
	bra	(?L363)
?L369:
	ld	AL,#H'0008
	bsr	_sinkBleSetGapState
	bra	(?L363)
?L370:
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	ld	AL,#H'0002
	bsr	_sinkBleSetGapState
?L391:
	ld	AL,#H'0001
	bsr	_gapStartScanning
	bra	(?L363)
?L371:
	bsr	_gapStopRoleSwitchTimer
	bra	(?L363)
?L372:
	ld	AL,#H'0000
	bsr	_gapCentralPowerOff
	bra	(?L363)
?L373:
	cmp	AL,#H'0000
	beq	?L363
	bsr	_gapRetryEncryption
	bra	(?L363)
?L389:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L363:
?LBE25:
	ld	AL,@(0,Y)
?LBE_gapStateConnectingHandleEvent:
	leavel	#3
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
_gapStateBondableConnectingHandleEvent:
	enterl	#7
?LBB_gapStateBondableConnectingHandleEvent:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
?LBB26:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	ld	AL,@(H'0004,Y)
	cmp	AL,#(H'0001+H'0015)
	bcc	?L419
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE420,X)
	brxl
	.SEG	CONST
?JTBASE420:
	.CODE
?L420:
	.SEG	CONST
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L419-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L421-?L420)
	dc	lwrd(?L396-?L420)
	dc	lwrd(?L402-?L420)
	dc	lwrd(?L404-?L420)
	dc	lwrd(?L401-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L397-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L403-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L419-?L420)
	dc	lwrd(?L394-?L420)
	dc	lwrd(?L399-?L420)
	.CODE
?L396:
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	ld	AL,#H'0006
	bsr	_sinkBleSetGapState
?L421:
	ld	AL,#H'0001
	bsr	_gapStartScanning
	bra	(?L394)
?L397:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	beq	?L394
	bra	(?L401)
?L399:
	tst	@(H'0002,Y)
	beq	?L394
	ld	AL,@(H'0002,Y)
	bsr	_gapRetryEncryption
	bra	(?L394)
?L401:
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_gapSwitchToPeripheralRole
	bra	(?L394)
?L402:
	bsr	_gapStopRoleSwitchTimer
	bra	(?L394)
?L403:
	ld	AL,#H'0000
	bsr	_gapCentralPowerOff
	bra	(?L394)
?L404:
	ld	AL,#H'0007
	bsr	_sinkBleSetGapState
	bsr	_gapStartRoleSwitchTimer
	bra	(?L394)
?L419:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L394:
?LBE26:
	ld	AL,@(H'0003,Y)
?LBE_gapStateBondableConnectingHandleEvent:
	leavel	#7
	.SEG	CONST
?LC2:
	dc	H'67
	dc	H'61
	dc	H'70
	dc	H'53
	dc	H'74
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'42
	dc	H'6F
	dc	H'6E
	dc	H'64
	dc	H'61
	dc	H'62
	dc	H'6C
	dc	H'65
	dc	H'43
	dc	H'6F
	dc	H'6E
	dc	H'6E
	dc	H'65
	dc	H'63
	dc	H'74
	dc	H'69
	dc	H'6E
	dc	H'67
	dc	H'48
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'6C
	dc	H'65
	dc	H'45
	dc	H'76
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'20
	dc	H'65
	dc	H'76
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'2E
	dc	H'69
	dc	H'64
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_sinkBleGapInitialise:
	enterl	#3
?LBB_sinkBleGapInitialise:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	_sinkBleSetGapState
	ld	AL,@(0,Y)
	bsr	$_sinkBleSetGapDefaultRole
	bsr	$_ConnectionBondedToPrivacyEnabledDevice
	bsr	_sinkBleGapSetBondedToPrivacyDevice
	ld	AL,#H'0000
	bsr	_gapSetAdvSpeed
?LBE_sinkBleGapInitialise:
	leavel	#3
$_sinkBleGapEvent:
	enterl	#4
?LBB_sinkBleGapEvent:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?LBB27:
	bsr	_sinkBleGetGapState
	cmp	AL,#(H'0001+H'0009)
	bcc	?L424
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE437,X)
	brxl
	.SEG	CONST
?JTBASE437:
	.CODE
?L437:
	.SEG	CONST
	dc	lwrd(?L426-?L437)
	dc	lwrd(?L427-?L437)
	dc	lwrd(?L428-?L437)
	dc	lwrd(?L430-?L437)
	dc	lwrd(?L429-?L437)
	dc	lwrd(?L432-?L437)
	dc	lwrd(?L431-?L437)
	dc	lwrd(?L433-?L437)
	dc	lwrd(?L434-?L437)
	dc	lwrd(?L435-?L437)
	.CODE
?L426:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateOffHandleEvent
	bra	(?L424)
?L427:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateAdvConnHandleEvent
	bra	(?L424)
?L428:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateScanConnHandleEvent
	bra	(?L424)
?L429:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateIdleCentralHandleEvent
	bra	(?L424)
?L430:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateIdlePeripheralHandleEvent
	bra	(?L424)
?L431:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateBondableScanningHandleEvent
	bra	(?L424)
?L432:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateBondableAdvertisingHandleEvent
	bra	(?L424)
?L433:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateConnectingHandleEvent
	bra	(?L424)
?L434:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateBondableConnectingHandleEvent
	bra	(?L424)
?L435:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_gapStateBondableConnectedHandleEvent
?L424:
?LBE27:
?LBE_sinkBleGapEvent:
	leavel	#4
$_sinkBleGapStartReadLocalName:
	enterl	#2
?LBB_sinkBleGapStartReadLocalName:
	ld	AH,@$XAP_AL
	ld	X,@$_theSink+H'0004
	and	AL,@(H'000E,X)
	cmp	AL,#H'0000
	bne	?L439
	ld	AL,@$XAP_AH
	or	AL,@(H'000E,X)
	st	AL,@(H'000E,X)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	bsr	$_ConnectionReadLocalName
?L439:
?LBE_sinkBleGapStartReadLocalName:
	leavel	#2
$_sinkBleGapReadLocalNameComplete:
	enterl	#5
?LBB_sinkBleGapReadLocalNameComplete:
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'000E,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L443
	ld	AL,@(H'0001,Y)
	bsr	$_sinkGattGapServerSendLocalNameResponse
?L443:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'000E,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L444
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0005
	bne	?L445
	ld	X,#H'0001
	st	X,@(H'0002,Y)
?L445:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	bsr	$_bleSetupAdvertisingData
?L444:
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0000
	st	AL,@(H'000E,X)
?LBE_sinkBleGapReadLocalNameComplete:
	leavel	#5
$_sinkBleGapSetSecurityCfm:
	enterl	#7
?LBB_sinkBleGapSetSecurityCfm:
	st	AL,@(0,Y)
?LBB28:
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	bsr	$_GattGetCidForBdaddr
	st	AL,@(H'0003,Y)
	bsr	$_gattClientFindByCid
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L448
	ld	X,@$XAP_AL
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	st	AH,@(H'0002,Y)
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L449
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	ld	AL,@(H'0001,X)
	bsr	$_ConnectionDmBleAddDeviceToWhiteListReq
	ld	AL,@(H'0001,Y)
	bsr	$_gattClientInitialiseDiscoveredServices
	ld	AL,@(H'0004,Y)
	bsr	_gapClearSecurityFailedDevice
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bne	?L448
	ld	AL,@(H'0004,Y)
	bsr	$_sinkBleSetSlaveConnectionParamsUpdate
	bra	(?L448)
?L449:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L452
	ld	AL,@(H'0003,Y)
	bsr	$_sinkBleRetryEncryptionEvent
	bra	(?L448)
?L452:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L454
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	bsr	_gapSetSecurityFailedDevice
?L454:
	ld	AL,@(H'0001,Y)
	bsr	_gapProcessEncryptionFailure
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L448
	ld	AL,@(H'0003,Y)
	bsr	$_sinkBleCentralConnCompleteEvent
?L448:
	bsr	$_sinkBlePairingCompleteEvent
	bsr	_gapStopBondablePairingTimer
?LBE28:
?LBE_sinkBleGapSetSecurityCfm:
	leavel	#7
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_sinkBleGapAddDeviceWhiteListCfm:
	enterl	#2
?LBB_sinkBleGapAddDeviceWhiteListCfm:
	ld	X,@$XAP_AL
	tst	@(0,X)
	bne	?L460
	bsr	_sinkBleGapGetBondedToPrivacyDevice
	cmp	AL,#H'0001
	beq	?L460
	bsr	$_ConnectionBondedToPrivacyEnabledDevice
	bsr	_sinkBleGapSetBondedToPrivacyDevice
?L460:
?LBE_sinkBleGapAddDeviceWhiteListCfm:
	leavel	#2
$_sinkBleGapIsBondable:
	enterl	#2
?LBB_sinkBleGapIsBondable:
?LBB29:
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0005
	bcs	?L469
	cmp	AL,#H'0006
	bcz	?L468
	add	AL,#-H'0008
	cmp	AL,#(H'0001+H'0001)
	bcc	?L469
?L468:
	ld	AL,#H'0001
	bra	(?L464)
?L469:
	ld	AL,#H'0000
?L464:
?LBE29:
?LBE_sinkBleGapIsBondable:
	leavel	#2
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_sinkBleSetGapDefaultRole:
	enterl	#2
?LBB_sinkBleSetGapDefaultRole:
	ld	X,@$_theSink+H'0004
	st	AL,@(H'000D,X)
?LBE_sinkBleSetGapDefaultRole:
	leavel	#2
$_sinkBleGetGapDefaultRole:
	enterl	#2
?LBB_sinkBleGetGapDefaultRole:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'000D,X)
?LBE_sinkBleGetGapDefaultRole:
	leavel	#2
$_sinkBleGapIsPersistentRole:
	enterl	#2
?LBB_sinkBleGapIsPersistentRole:
	bsr	$_sinkBleGetConfiguration
	ld	X,@$XAP_AL
	tst	@(H'0004,X)
	bne	?L476
	ld	AL,#H'0001
	bra	(?L475)
?L476:
	ld	AL,#H'0000
?L475:
?LBE_sinkBleGapIsPersistentRole:
	leavel	#2
$_sinkBleGapIsRoleUnknown:
; leaf function with empty stack frame
?LBB_sinkBleGapIsRoleUnknown:
	cmp	AL,#H'0000
	beq	?L482
	cmp	AL,#(H'0001+H'0002)
	bcc	?L482
	ld	AL,#H'0000
	bra	(?L477)
?L482:
	ld	AL,#H'0001
?L477:
?LBE_sinkBleGapIsRoleUnknown:
	rts
$_sinkBleGapEmptyWhiteList:
	enterl	#2
?LBB_sinkBleGapEmptyWhiteList:
	bsr	_sinkBleGetGapState
	cmp	AL,#H'0000
	beq	?L485
	bsr	_gapStopRoleSwitchTimer
	bsr	_gapStopBondableConnectionTimer
	bsr	_gapStopBondablePairingTimer
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000F
	bsr	$_BdaddrTypedSetEmpty
	bsr	$_gattClientDisconnectAll
	bsr	$_gattServerDisconnectAll
	bsr	$_sinkBleCheckNoConnectionsEvent
	bsr	_gapStopScanning
	ld	AL,#H'0000
	bsr	_gapStopAdvertising
	bsr	$_ConnectionDmBleClearWhiteListReq
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0001
	bne	?L486
	ld	AL,#H'0002
	bra	(?L490)
?L486:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0002
	bne	?L489
	ld	AL,#H'0001
?L490:
	bsr	_sinkBleSetGapState
	bra	(?L489)
?L485:
	bsr	$_ConnectionDmBleClearWhiteListReq
?L489:
	ld	AL,#H'0000
	bsr	_sinkBleGapSetBondedToPrivacyDevice
?LBE_sinkBleGapEmptyWhiteList:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 148 used[1] = 48 total = 196
;# Function pattern *movqi3 used[0] = 287 total = 287
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 10 used[3] = 11 total = 21
;# Function pattern *addqi0 used[0] = 18 total = 18
;# Function pattern *addqi2 used[0] = 29 used[2] = 1 total = 30
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *umulqihi3_const used[0] = 6 total = 6
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 7 total = 7
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 98 total = 98
;# Function pattern *call1 used[0] = 199 total = 199
;# Function pattern *call_value1 used[0] = 120 total = 120
;# Function pattern tablejump_1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[0] = 38 used[1] = 17 total = 55
;# Function pattern movstrqi+4 used[1] = 13 total = 13
;# Function pattern movstrqi+5 used[0] = 32 total = 32
	MODULE	sink_ble_scanning
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_bleClearScanData:
	enterl	#2
?LBB_bleClearScanData:
	bsr	$_ConnectionBleClearAdvertisingReportFilter
?LBE_bleClearScanData:
	leavel	#2
$_bleStartScanning:
	enterl	#8
?LBB_bleStartScanning:
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
?LBB2:
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_sinkBleGetScanningParameters
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_ConnectionDmBleSetScanParametersReq
	ld	AL,#H'0001
	bsr	$_ConnectionDmBleSetScanEnable
?LBE2:
?LBE_bleStartScanning:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_bleStopScanning:
	enterl	#2
?LBB_bleStopScanning:
	ld	AL,#H'0000
	bsr	$_ConnectionDmBleSetScanEnable
?LBE_bleStopScanning:
	leavel	#2
$_bleHandleScanResponse:
	enterl	#16
?LBB_bleHandleScanResponse:
	ld	AH,#H'0000
	st	AH,@(H'000D,Y)
	st	AL,@(H'000B,Y)
?LBB3:
	ld	AL,#H'0004
	st	AL,@(H'000C,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_memcpy
	ld	AH,@(H'000B,Y)
	add	AH,#H'0007
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(H'000D,Y)
	ld	AH,@(H'000C,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_sinkBleGapEvent
?LBE3:
?LBE_bleHandleScanResponse:
	leavel	#16
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 11 total = 11
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 3 total = 3
	MODULE	sink_buttonmanager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_buttonManagerInit:
	enterl	#5
?LBB_buttonManagerInit:
?LBB2:
	ld	AL,#H'0061
	bsr	$_malloc
	st	AL,@$_theSink+H'0002
	ld	AH,#H'0061
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@$_theSink+H'0002
	ld	AL,#($_theSink)
	st	AL,@(H'0002,X)
	ld	AL,@$_theSink+H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0063
	bsr	$_malloc
	ld	X,@(H'0001,Y)
	st	AL,@(H'0011,X)
	ld	AL,@$_theSink+H'0002
	st	AL,@(H'0002,Y)
	ld	AL,#H'0063
	bsr	$_malloc
	ld	X,@(H'0002,Y)
	st	AL,@(H'0012,X)
	ld	AL,@$_theSink+H'0002
	bsr	$_ButtonsInit
?LBE2:
?LBE_buttonManagerInit:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_buttonManagerConfigDurations:
	enterl	#6
?LBB_buttonManagerConfigDurations:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L4
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L3
?L4:
	ld	AL,#(?LC0)
	bsr	$_puts
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	or	AL,#H'0400
	st	AL,@(H'0005,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	or	AL,#H'000F
	st	AL,@(H'0005,X)
	bra	(?L2)
?L3:
	ld	X,@(H'0002,Y)
	ld	X,@(H'000F,X)
	st	X,@(H'0003,Y)
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	st	AL,@(H'0001,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
?L2:
?LBE_buttonManagerConfigDurations:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'42
	dc	H'4D
	dc	H'3A
	dc	H'20
	dc	H'44
	dc	H'45
	dc	H'46
	dc	H'41
	dc	H'55
	dc	H'4C
	dc	H'54
	dc	H'20
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'74
	dc	H'6F
	dc	H'6E
	dc	H'20
	dc	H'64
	dc	H'65
	dc	H'62
	dc	H'6F
	dc	H'75
	dc	H'6E
	dc	H'63
	dc	H'65
	dc	H'00
?LC1:
	dc	H'42
	dc	H'4D
	dc	H'3A
	dc	H'20
	dc	H'44
	dc	H'65
	dc	H'62
	dc	H'6F
	dc	H'75
	dc	H'6E
	dc	H'63
	dc	H'65
	dc	H'5B
	dc	H'25
	dc	H'78
	dc	H'5D
	dc	H'5B
	dc	H'25
	dc	H'78
	dc	H'5D
	dc	H'0A
	dc	H'00
	.CODE
$_buttonManagerAddMapping:
	enterl	#5
?LBB_buttonManagerAddMapping:
	st	AL,@H'fffa
?LBB3:
	ld	AL,@$_theSink+H'0002
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	cmp	AH,#(H'0001+H'0020)
	bcc	?L7
	st	X,@(H'0002,Y)
	bra	(?L14)
?L7:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	add	AH,#-H'0021
?L14:
	st	AH,@(-1,Y)
	ld	X,@(H'0001,Y)
	add	X,@(H'0002,Y)
	ld	AL,@$XAP_AH
	smult	#H'0003
	ld	X,@(H'0011,X)
	add	X,@$XAP_AL
	st	X,@H'fff8
	cmp	X,#H'0000
	beq	?L6
	ld	X,@H'fffa
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@H'fffa
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	and	AL,#H'C000
	and	AH,#H'0000
	lsr	#H'000E
	asl	#H'000E
	ld	X,@H'fff8
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AL,@$XAP_AH
	st	AL,@H'fff9
	st	AL,@(H'0001,X)
	ld	X,@H'fffa
	ld	AL,@(0,X)
	and	AL,#H'00FF
	asl	#H'000C
	ld	X,@H'fff8
	ld	AH,@(H'0002,X)
	and	AH,#H'0FFF
	or	AL,@$XAP_AH
	st	AL,@H'fffb
	st	AL,@(H'0002,X)
	ld	X,@H'fffa
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'0FFF
	ld	AL,@H'fffb
	and	AL,#-H'1000
	or	AH,@$XAP_AL
	st	AH,@H'fffb
	ld	X,@H'fff8
	st	AH,@(H'0002,X)
	ld	X,@H'fffa
	ld	AL,@(H'0002,X)
	and	AL,#H'3FFF
	ld	AH,@H'fff9
	and	AH,#-H'4000
	or	AL,@$XAP_AH
	st	AL,@H'fff9
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AH,@H'fffb
	lsr	#H'000C
	add	AH,#-H'0006
	cmp	AH,#(H'0001+H'0001)
	bcc	?L10
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	AH,@H'fff9
	lsr	#H'000E
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	asl	#H'0018
	or	AL,@H'fffb
	or	AH,@H'fffa
	ld	X,@(H'0001,Y)
	or	AL,@(H'0008,X)
	or	AH,@(H'0007,X)
	st	AH,@(H'0007,X)
	st	AL,@(H'0008,X)
	bra	(?L11)
?L10:
	ld	X,@H'fff8
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	cmp	AH,#H'0000
	bmi	?L11
	beq	?L11
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	asl	#H'0018
	or	AL,@H'fffa
	or	AH,@H'fff9
	ld	X,@(H'0001,Y)
	or	AL,@(H'000A,X)
	or	AH,@(H'0009,X)
	st	AH,@(H'0009,X)
	st	AL,@(H'000A,X)
?L11:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_ButtonsTranslateInput
	ld	X,@(H'0001,Y)
	or	AL,@(H'0004,X)
	or	AH,@(H'0003,X)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
?L6:
?LBE3:
?LBE_buttonManagerAddMapping:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_buttonManagerAddPatternMapping:
	enterl	#2
?LBB_buttonManagerAddPatternMapping:
	st	AL,@H'fffb
	st	AH,@H'fff8
	ld	AH,@(H'0002,Y)
	st	AH,@(-3,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(-2,Y)
?LBB4:
	ld	X,#H'0000
	st	X,@H'fffa
	smult	#H'000E
	ld	X,@H'fffb
	add	X,@$XAP_AL
	tst	@(H'0013,X)
	bne	?L15
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0013,X)
	ld	AL,@H'ffff
?L23:
?LBB5:
	ld	AH,#H'0000
	st	AH,@H'fff9
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@H'fffa
	add	X,@(-3,Y)
	tst	@(0,X)
	beq	?L21
	ld	X,@(0,X)
	add	X,#-H'0001
	ld	AL,#H'0001
	asl	@$XAP_UXL
	asl	#H'0010
	asr	#H'0010
	st	AH,@H'fff8
	st	AL,@H'fff9
?L21:
	ld	AL,@(-2,Y)
	smult	#H'0007
	add	AL,@H'fffa
	add	AL,@$XAP_AL
	ld	X,@H'fffb
	add	X,@$XAP_AL
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(H'0015,X)
	st	AL,@(H'0016,X)
	cmp	AH,#H'0000
	bne	?L25
	cmp	AL,#H'0000
	beq	?L19
?L25:
	ld	AL,@(-2,Y)
	smult	#H'000E
	ld	X,@H'fffb
	add	X,@$XAP_AL
	ld	AL,#H'0001
	add	AL,@H'fffa
	st	AL,@(H'0014,X)
?L19:
?LBE5:
	ld	AL,#H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,#H'0005
	bcz	?L23
?L15:
?LBE4:
?LBE_buttonManagerAddPatternMapping:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_BMButtonDetected:
	enterl	#5
?LBB_BMButtonDetected:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	_BMCheckForButtonMatch
	ld	AL,@(H'0005,Y)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L27
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	_BMCheckForButtonPatternMatch
?L27:
?LBE_BMButtonDetected:
	leavel	#5
_BMCheckButtonLock:
	enterl	#3
?LBB_BMCheckButtonLock:
	st	AL,@(0,Y)
?LBB6:
	bsr	$_stateManagerGetState
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0038
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L36
	ld	AL,#H'0001
	asl	@$XAP_UXL
	and	AL,#H'0F70
	cmp	AL,#H'0000
	bne	?L36
	ld	AL,@(0,Y)
	cmp	AL,#H'4031
	bcs	?L37
	cmp	AL,#H'4032
	bcz	?L36
	add	AL,#-H'4095
	cmp	AL,#(H'0001+H'0001)
	bcc	?L37
?L36:
	ld	AL,#H'0000
	bra	(?L29)
?L37:
	ld	AL,#H'0001
?L29:
?LBE6:
?LBE_BMCheckButtonLock:
	leavel	#3
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_BMCheckForButtonMatch:
	enterl	#10
?LBB_BMCheckForButtonMatch:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
?LBB7:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
?L59:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L58:
?LBB8:
	ld	X,@$_theSink+H'0002
	add	X,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	AH,@$XAP_AL
	add	AH,@(H'0011,X)
	st	AH,@(H'0005,Y)
	cmp	AH,#H'0000
	beq	?L48
	ld	X,@$XAP_AH
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	asl	#H'0018
	or	AL,@H'fff9
	or	AH,@H'fff8
	cmp	AH,@(H'0001,Y)
	bne	?L48
	cmp	AL,@(H'0002,Y)
	bne	?L48
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	cmp	AH,@(H'000A,Y)
	bne	?L48
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	st	AH,@(H'0006,Y)
	bsr	$_stateManagerGetState
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,Y)
	asr	@$XAP_UXL
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L48
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0073,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L54
	ld	AH,@$_theSink+H'001A
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L54
	bsr	$_LEDManagerCheckTimeoutState
	bra	(?L48)
?L54:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0FFF
	add	AL,#H'4000
	bsr	_BMCheckButtonLock
	cmp	AL,#H'0000
	bne	?L56
	ld	AH,@$_theSink+H'0002
	st	AH,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	and	AH,#H'0FFF
	add	AH,#H'4000
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	bra	(?L64)
?L56:
	ld	X,@$_theSink+H'0002
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'4738
?L64:
	bsr	$_MessageSend
?L48:
	ld	AH,@(H'0004,Y)
?LBE8:
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	cmp	AH,#H'0020
	bcz	?L58
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L59
?LBE7:
?LBE_BMCheckForButtonMatch:
	leavel	#10
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
_BMCheckForButtonPatternMatch:
	enterl	#10
?LBB_BMCheckForButtonPatternMatch:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@$_theSink+H'0002
	st	X,@(H'0004,Y)
?L78:
	ld	AL,@(H'0004,Y)
	add	AL,@(H'0003,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	smult	#H'0007
	ld	X,@(H'0005,Y)
	add	AL,@(H'004B,X)
	add	AL,@$XAP_AL
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	ld	AH,@(H'0015,X)
	ld	AL,@(H'0016,X)
	cmp	AH,@(H'0001,Y)
	bne	?L74
	cmp	AL,@(H'0002,Y)
	bne	?L74
	ld	X,@(H'0005,Y)
	ld	AL,@(H'004B,X)
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	st	AL,@(H'004B,X)
	ld	AL,@(H'0003,Y)
	smult	#H'000E
	ld	AH,@(H'0004,Y)
	add	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
	cmp	AL,@(H'0014,X)
	bcs	?L72
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	AL,@(H'004B,X)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AH,@(H'0013,X)
	bsr	$_MessageSend
	bra	(?L72)
?L74:
	ld	AL,@(H'0004,Y)
	add	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'004B,X)
	ld	AL,@(H'0003,Y)
	smult	#H'000E
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	ld	AH,@(H'0015,X)
	ld	AL,@(H'0016,X)
	cmp	AH,@(H'0001,Y)
	bne	?L72
	cmp	AL,@(H'0002,Y)
	bne	?L72
	ld	AL,#H'0001
	ld	X,@(H'0006,Y)
	st	AL,@(H'004B,X)
?L72:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0003
	bcz	?L78
?LBE9:
?LBE_BMCheckForButtonPatternMatch:
	leavel	#10
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_BMCheckButtonsAfterReadingConfig:
	enterl	#2
?LBB_BMCheckButtonsAfterReadingConfig:
	bsr	$_ButtonsCheckForChangeAfterInit
?LBE_BMCheckButtonsAfterReadingConfig:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 72 used[1] = 24 used[3] = 1 total = 97
;# Function pattern *movqi3 used[0] = 81 total = 81
;# Function pattern *movqi8 used[0] = 15 total = 15
;# Function pattern *movhi used[2] = 5 used[3] = 11 total = 16
;# Function pattern *andhi3 used[0] = 1 total = 1
;# Function pattern *iorhi3 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 20 used[2] = 10 total = 30
;# Function pattern *andqi3 used[0] = 19 total = 19
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *mulqi3_const used[0] = 8 total = 8
;# Function pattern *ashlhi3 used[0] = 3 total = 3
;# Function pattern *extendqihi2 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 11 total = 11
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2_1 used[0] = 3 total = 3
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern movstrqi+3 used[0] = 11 used[1] = 2 total = 13
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 8 total = 8
;# Function pattern movstrqi+6 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[1] = 3 total = 3
	MODULE	sink_buttons
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ButtonsInit:
	enterl	#3
?LBB_ButtonsInit:
	st	AL,@(0,Y)
	ld	AH,#hwrd(_ButtonsMessageHandler)
	ld	AL,#lwrd(_ButtonsMessageHandler)
	ld	X,@(0,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,@$XAP_UXL
	bsr	$_MessagePioTask
	ld	AL,@(0,Y)
	bsr	$_MessageChargerTask
?LBE_ButtonsInit:
	leavel	#3
$_ButtonsCheckForChangeAfterInit:
	enterl	#12
?LBB_ButtonsCheckForChangeAfterInit:
?LBB2:
	ld	AH,@$_theSink+H'0002
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0010,X)
	and	AL,#-H'0100
	st	AL,@(H'0010,X)
	bsr	$_PioGet32
	and	AH,#H'FCFF
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	X,@$_theSink+H'000A
	xor	AL,@(H'003B,X)
	xor	AH,@(H'003A,X)
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	bsr	$_PsuGetVregEn
	cmp	AL,#H'0000
	beq	?L3
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	or	AH,#H'0100
	bra	(?L4)
?L3:
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
?L4:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0000
	bsr	$_ButtonsTranslate
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	X,@(0,Y)
	bsr	_ButtonsLevelDetect
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	and	AL,@(H'0008,X)
	and	AH,@(H'0007,X)
	st	X,@(0,Y)
	bsr	_ButtonsEdgeDetect
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	AH,@(H'000B,X)
	st	AL,@(H'000C,X)
	bsr	$_PioGet32
	and	AH,#H'FCFF
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	X,@$_theSink+H'000A
	xor	AL,@(H'003B,X)
	xor	AH,@(H'003A,X)
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	bsr	$_PsuGetVregEn
	cmp	AL,#H'0000
	beq	?L5
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	or	AH,#H'0100
	bra	(?L6)
?L5:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?L6:
	ld	X,@(H'0004,Y)
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	and	AH,#H'FCFF
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'000F,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000F,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	st	AL,@(H'0001,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$_PioCommonDebounce
	ld	X,@(H'0004,Y)
	ld	X,@(H'000F,X)
	st	X,@(H'0009,Y)
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	st	AL,@(0,Y)
	ld	AL,#H'0003
	bsr	$_ChargerDebounce
?LBE2:
?LBE_ButtonsCheckForChangeAfterInit:
	leavel	#12
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_ButtonsMessageHandler:
	enterl	#11
?LBB_ButtonsMessageHandler:
?LBB3:
	st	AL,@(H'0003,Y)
	cmp	AH,#H'0003
	beq	?L22
	cmp	AH,#(H'0001+H'0003)
	bcc	?L25
	cmp	AH,#H'0001
	beq	?L14
	cmp	AH,#H'0002
	beq	?L17
	bra	(?L8)
?L25:
	cmp	AH,#-H'7FDD
	beq	?L10
	cmp	AH,#-H'7FD3
	beq	?L13
	bra	(?L8)
?L10:
	ld	AH,@(H'000B,Y)
?LBB4:
	st	AH,@(H'0004,Y)
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'003A,X)
	ld	AL,@(H'003B,X)
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	bsr	$_PsuGetVregEn
	cmp	AL,#H'0000
	beq	?L11
	ld	X,@(H'000B,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0003,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	or	AH,#H'0100
	xor	AL,@(H'0006,Y)
	xor	AH,@(H'0005,Y)
	bra	(?L29)
?L11:
	ld	X,@(H'0004,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0003,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	xor	AL,@H'fff9
	xor	AH,@H'fff8
	bra	(?L29)
?L13:
	ld	X,@(H'000B,Y)
?LBE4:
?LBB5:
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(0,X)
	asl	#H'0019
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	bsr	$_PioGet32
	and	AH,#H'FCFF
	ld	X,@$_theSink+H'000A
	xor	AL,@(H'003B,X)
	xor	AH,@(H'003A,X)
	or	AL,@(H'0008,Y)
	or	AH,@(H'0007,Y)
?L29:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0000
	bsr	_ButtonsCheckDetection
?LBE5:
	bra	(?L8)
?L14:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0010,X)
	lsr	#H'0008
	cmp	AH,#H'0002
	bne	?L15
	ld	AH,@(H'000D,X)
	ld	AL,@(H'000E,X)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0004
	bra	(?L26)
?L15:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000D,X)
	ld	AL,@(H'000E,X)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0008
?L26:
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	bsr	_ButtonsButtonDetected
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	st	AL,@(H'0010,X)
	ld	AL,#H'0000
	st	AL,@(H'000E,X)
	st	AL,@(H'000D,X)
	bra	(?L8)
?L17:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'000E,X)
	st	AL,@(H'000D,X)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	st	AL,@(H'0010,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0010,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	cmp	AL,#H'0003
	bne	?L18
	ld	AL,@$XAP_AH
	and	AL,#-H'0100
	or	AL,#H'000B
	bra	(?L27)
?L18:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	cmp	AL,#H'0002
	bne	?L20
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	sub	AL,@(H'0002,X)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendLater
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0010,X)
	and	AL,#-H'0100
	or	AL,#H'0003
	st	AL,@(H'0010,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471F
	bsr	$_MessageSend
	bra	(?L19)
?L20:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	sub	AL,@(H'0001,X)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendLater
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471E
	bsr	$_MessageSend
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0010,X)
	and	AL,#-H'0100
	or	AL,#H'0002
?L27:
	st	AL,@(H'0010,X)
?L19:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	bra	(?L28)
?L22:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000F,X)
	ld	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendLater
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0005
?L28:
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	bsr	_ButtonsButtonDetected
?L8:
?LBE3:
?LBE_ButtonsMessageHandler:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
_ButtonsWasButtonPressed:
	enterl	#5
?LBB_ButtonsWasButtonPressed:
	st	AH,@H'fff8
	st	AL,@H'fff9
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	_ButtonsWhichButtonChanged
	and	AL,@(H'0006,Y)
	and	AH,@(H'0005,Y)
	cmp	AH,#H'0000
	bne	?L40
	cmp	AL,#H'0000
	beq	?L39
?L40:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L39:
?LBE6:
	ld	AL,@(H'0002,Y)
?LBE_ButtonsWasButtonPressed:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_ButtonsWhichButtonChanged:
; leaf function with empty stack frame
?LBB_ButtonsWhichButtonChanged:
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
?LBB7:
	xor	AL,@H'fff9
	xor	AH,@H'fff8
?LBE7:
?LBE_ButtonsWhichButtonChanged:
	rts
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_ButtonsButtonDetected:
	enterl	#3
?LBB_ButtonsButtonDetected:
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	cmp	AH,#H'0000
	bne	?L43
	cmp	AL,#H'0000
	bne	?L43
	ld	AL,@$XAP_UXL
	ld	AH,#H'0003
	bsr	$_MessageCancelAll
	bra	(?L42)
?L43:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_BMButtonDetected
	bsr	$_stateManagerGetState
	cmp	AL,#H'0007
	bne	?L42
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_checkDUTKeyRelease
?L42:
?LBE_ButtonsButtonDetected:
	leavel	#3
_ButtonsLevelDetect:
	enterl	#9
?LBB_ButtonsLevelDetect:
	ld	X,@(H'0009,Y)
?LBB8:
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	bsr	_ButtonsWasButtonPressed
	cmp	AL,#H'0000
	beq	?L49
	ld	AH,@$_theSink+H'0018
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L50
	bsr	$_sinkEnableMultipointConnectable
?L50:
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0002
	bsr	$_MessageCancelAll
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0003
	bsr	$_MessageCancelAll
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'000F,X)
	ld	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendLater
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'000F,X)
	ld	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendLater
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	and	AL,#-H'0100
	or	AL,#H'0001
	st	AL,@(H'0010,X)
	bsr	$_stateManagerGetState
	cmp	AL,#H'0007
	bne	?L48
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_checkDUTKeyPress
	bra	(?L48)
?L49:
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,@(H'0003,Y)
	bne	?L70
	cmp	AL,@(H'0004,Y)
	beq	?L48
?L70:
	cmp	AH,#H'0000
	bne	?L71
	cmp	AL,#H'0000
	beq	?L48
?L71:
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0010,X)
	lsr	#H'0008
	st	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L55
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,@(H'000D,X)
	bne	?L55
	cmp	AL,@(H'000E,X)
	bne	?L55
	ld	AL,#H'0001
	add	AL,@H'fff8
	asl	#H'0008
	ld	AH,@(H'0010,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	st	AL,@H'fff8
	st	AL,@(H'0010,X)
	ld	AH,@$XAP_AL
	lsr	#H'0008
	cmp	AH,#H'0002
	bne	?L56
	ld	AL,@H'fff8
	and	AL,#-H'0100
	or	AL,#H'0004
	st	AL,@(H'0010,X)
	bra	(?L55)
?L56:
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0010,X)
	lsr	#H'0008
	cmp	AH,#H'0003
	bne	?L55
	ld	AL,@(H'0010,X)
	and	AL,#-H'0100
	or	AL,#H'000D
	st	AL,@(H'0010,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'000D
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	bsr	_ButtonsButtonDetected
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(H'000E,X)
	st	AL,@(H'000D,X)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	st	AL,@(H'0010,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
?L55:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	ld	X,@$XAP_AL
	and	X,#H'00FF
	cmp	X,#H'0001
	bne	?L59
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	bsr	_ButtonsButtonDetected
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0009,Y)
	st	AH,@(H'000D,X)
	st	AL,@(H'000E,X)
	ld	AH,@(H'0010,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	asl	#H'0008
	ld	AH,@(H'0010,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0010,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000F,X)
	ld	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendLater
	bra	(?L60)
?L59:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	cmp	AL,#H'0002
	bne	?L61
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0009
	bra	(?L68)
?L61:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	cmp	AL,#H'0003
	bne	?L63
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'000A
	bra	(?L68)
?L63:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	cmp	AL,#H'000B
	bne	?L60
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'000C
?L68:
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	bsr	_ButtonsButtonDetected
?L60:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L66
	ld	AL,@$XAP_UXL
	ld	AH,#H'0002
	bsr	$_MessageCancelAll
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0003
	bsr	$_MessageCancelAll
?L66:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	cmp	AH,#H'0000
	bne	?L48
	cmp	AL,#H'0000
	bne	?L48
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0010,X)
	and	AL,#-H'0100
	st	AL,@(H'0010,X)
?L48:
?LBE8:
?LBE_ButtonsLevelDetect:
	leavel	#9
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_ButtonsEdgeDetect:
	enterl	#7
?LBB_ButtonsEdgeDetect:
	ld	X,@(H'0007,Y)
?LBB9:
	and	AL,@(H'0008,X)
	and	AH,@(H'0007,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	and	AL,@(H'0008,X)
	and	AH,@(H'0007,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	_ButtonsWhichButtonChanged
	st	AH,@H'fff8
	st	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L85
	cmp	AL,#H'0000
	beq	?L80
?L85:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	and	AL,@H'fff9
	and	AH,@H'fff8
	cmp	AH,#H'0000
	bne	?L86
	cmp	AL,#H'0000
	beq	?L82
?L86:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	bsr	_ButtonsButtonDetected
	ld	AH,@$_theSink+H'0018
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L80
	bsr	$_sinkEnableMultipointConnectable
	bra	(?L80)
?L82:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	bsr	_ButtonsButtonDetected
?L80:
?LBE9:
?LBE_ButtonsEdgeDetect:
	leavel	#7
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_ButtonsCheckDetection:
	enterl	#7
?LBB_ButtonsCheckDetection:
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@$_theSink+H'0002
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UXL
	bsr	$_ButtonsTranslate
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	and	AL,@(H'0008,X)
	and	AH,@(H'0007,X)
	cmp	AH,#H'0000
	bne	?L89
	cmp	AL,#H'0000
	bne	?L89
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	and	AL,@(H'000C,X)
	and	AH,@(H'000B,X)
	cmp	AH,#H'0000
	bne	?L93
	cmp	AL,#H'0000
	beq	?L88
?L93:
?L89:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	bsr	_ButtonsEdgeDetect
?L88:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	and	AL,@(H'000A,X)
	and	AH,@(H'0009,X)
	cmp	AH,#H'0000
	bne	?L91
	cmp	AL,#H'0000
	bne	?L91
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	and	AL,@(H'000C,X)
	and	AH,@(H'000B,X)
	cmp	AH,#H'0000
	bne	?L95
	cmp	AL,#H'0000
	beq	?L90
?L95:
?L91:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	bsr	_ButtonsLevelDetect
?L90:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	st	AH,@(H'000B,X)
	st	AL,@(H'000C,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0002,Y)
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
?LBE10:
?LBE_ButtonsCheckDetection:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_ButtonsTranslate:
	enterl	#4
?LBB_ButtonsTranslate:
	ld	X,@$XAP_AL
?LBB11:
	ld	AH,@$_theSink+H'0002
	st	AH,@(-1,Y)
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AH,#H'0000
	st	AH,@H'fff8
	st	AH,@H'fffb
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?L106:
	ld	X,@H'fffb
	add	X,@(-1,Y)
	ld	AH,@(H'004F,X)
	lsr	#H'0006
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L101
	ld	X,@(H'004F,X)
	st	X,@H'fffa
	and	X,#H'003F
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	bra	(?L110)
?L101:
	ld	X,@H'fffb
	add	X,@(-1,Y)
	ld	AH,@(H'004F,X)
	lsr	#H'0006
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L99
	ld	X,@(H'004F,X)
	st	X,@H'fffa
	and	X,#H'003F
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
?L110:
	lsr	@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L99
	ld	AH,@H'fffa
	lsr	#H'0008
	ld	X,@$XAP_AH
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@$XAP_UXL
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
?L99:
	ld	AL,#H'0001
	add	AL,@H'fffb
	st	AL,@H'fffb
	cmp	AL,#H'0011
	bcz	?L106
	ld	AH,@H'fff8
	ld	AL,@H'fff9
?LBE11:
?LBE_ButtonsTranslate:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_ButtonsTranslateInput:
	enterl	#5
?LBB_ButtonsTranslateInput:
	ld	X,@$XAP_AL
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	st	AH,@H'fffb
?LBB12:
	ld	AH,@$_theSink+H'0002
	st	AH,@(-1,Y)
	add	X,@$XAP_AH
	smult	#H'0003
	ld	X,@(H'0011,X)
	add	X,@$XAP_AL
	cmp	X,#H'0000
	beq	?L114
?LBB13:
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AH,#H'0000
	st	AH,@H'fff8
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	asl	#H'0018
	or	AL,@(1,Y)
	or	AH,@(0,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0000
	st	AL,@H'fffa
?L122:
	ld	X,@H'fffa
	add	X,@(-1,Y)
	st	X,@(H'0002,Y)
	ld	AH,@(H'004F,X)
	lsr	#H'0008
	ld	X,@$XAP_AH
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L117
	tst	@H'fffb
	bne	?L121
	ld	X,@(H'0002,Y)
	ld	AH,@(H'004F,X)
	lsr	#H'0006
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L117
?L121:
	ld	X,@H'fffa
	add	X,@(-1,Y)
	ld	AL,@(H'004F,X)
	ld	X,@$XAP_AL
	and	X,#H'003F
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@$XAP_UXL
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
?L117:
	ld	AH,#H'0001
	add	AH,@H'fffa
	st	AH,@H'fffa
	cmp	AH,#H'0011
	bcz	?L122
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bra	(?L113)
?L114:
?LBE13:
	ld	AL,#H'0000
	ld	AH,#H'0000
?L113:
?LBE12:
?LBE_ButtonsTranslateInput:
	leavel	#5
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 98 used[1] = 16 total = 114
;# Function pattern *movqi3 used[0] = 151 total = 151
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[2] = 55 used[3] = 54 total = 109
;# Function pattern *andhi3 used[0] = 20 total = 20
;# Function pattern *iorhi3 used[0] = 10 total = 10
;# Function pattern *xorhi3 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 1 used[2] = 9 total = 10
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 8 total = 8
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern *lshrhi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 9 total = 9
;# Function pattern *zero_extendqihi2_1 used[0] = 4 total = 4
;# Function pattern jump used[0] = 21 total = 21
;# Function pattern *call1 used[0] = 25 total = 25
;# Function pattern *call_value1 used[0] = 24 total = 24
;# Function pattern zero_extendqihi2+1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 12 used[1] = 1 total = 13
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 20 total = 20
;# Function pattern movstrqi+6 used[0] = 10 total = 10
;# Function pattern movstrqi+7 used[1] = 2 total = 2
	MODULE	sink_callmanager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sinkHandleRingInd:
	enterl	#3
?LBB_sinkHandleRingInd:
	st	AL,@(0,Y)
	bsr	$_MPCheckRingInd
	cmp	AL,#H'0000
	bne	?L1
	ld	X,@(0,Y)
	tst	@(H'0001,X)
	bne	?L1
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L4
	ld	AL,#H'4751
	bra	(?L7)
?L4:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L1
	ld	AL,#H'4752
?L7:
	bsr	$_TonesPlayEvent
?L1:
?LBE_sinkHandleRingInd:
	leavel	#3
$_sinkAnswerOrRejectCall:
	enterl	#5
?LBB_sinkAnswerOrRejectCall:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473A
	bsr	$_MessageSend
	ld	AL,#H'0001
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L11
	ld	AH,@(H'0001,Y)
	bsr	$_HfpCallAnswerRequest
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	ld	AL,@($_theSink,X)
	or	AL,#H'0080
	st	AL,@($_theSink,X)
?L11:
	bsr	$_ToneTerminate
?LBE2:
?LBE_sinkAnswerOrRejectCall:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkHangUpCall:
	enterl	#5
?LBB_sinkHangUpCall:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	tst	@$_theSink+H'0024
	beq	?L15
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L15
	tst	@(H'0001,Y)
	beq	?L15
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0002,Y)
?L15:
	tst	@(H'0002,Y)
	bne	?L16
	ld	AL,#H'0004
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(H'0002,Y)
?L16:
	tst	@(H'0002,Y)
	bne	?L17
	ld	AL,#H'0003
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(H'0002,Y)
?L17:
	tst	@(H'0002,Y)
	bne	?L18
	ld	AL,#H'0000
	bsr	$_HfpLinkPriorityWithActiveCall
	st	AL,@(H'0002,Y)
?L18:
	tst	@(H'0002,Y)
	bne	?L19
	ld	AL,#H'0008
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(H'0002,Y)
?L19:
	tst	@(H'0002,Y)
	beq	?L14
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0008
	beq	?L26
	cmp	AL,#(H'0001+H'0008)
	bcc	?L29
	cmp	AL,#H'0005
	bcs	?L27
	bra	(?L25)
?L29:
	cmp	AL,#H'0009
	bne	?L27
?L25:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bra	(?L30)
?L26:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
?L30:
	bsr	$_HfpCallHoldActionRequest
	bra	(?L14)
?L27:
	ld	AL,@(H'0002,Y)
	bsr	$_HfpCallTerminateRequest
?L14:
?LBE3:
?LBE_sinkHangUpCall:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkInitiateLNR:
	enterl	#5
?LBB_sinkInitiateLNR:
	st	AL,@(H'0001,Y)
?LBB4:
	bsr	$_stateManagerIsConnected
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L35
	ld	AL,#H'0000
	bsr	$_sinkAvrcpCheckManualConnectReset
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4018
	bsr	$_MessageSend
	ld	AL,#H'4006
	bsr	$_sinkQueueEvent
	bra	(?L34)
?L35:
?LBB5:
	ld	X,#H'0001
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L37
	ld	AH,@$_theSink+H'0018
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L38
	ld	X,@(H'0001,Y)
	bra	(?L37)
?L38:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0005
	ld	X,@$XAP_AH
	and	X,#H'0003
?L37:
	ld	AL,@$XAP_UXL
	bsr	$_HfpDialLastNumberRequest
?L34:
?LBE5:
?LBE4:
?LBE_sinkInitiateLNR:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_sinkInitiateVoiceDial:
	enterl	#6
?LBB_sinkInitiateVoiceDial:
	st	AL,@(H'0001,Y)
?LBB6:
	bsr	$_stateManagerIsConnected
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L41
	ld	AL,#H'0000
	bsr	$_sinkAvrcpCheckManualConnectReset
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4018
	bsr	$_MessageSend
	ld	AL,#H'4004
	bsr	$_sinkQueueEvent
	ld	AL,@$_theSink+H'003A
	and	AL,#-H'0061
	st	AL,@$_theSink+H'003A
	bra	(?L40)
?L41:
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L43
	ld	AH,@$_theSink+H'0018
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L44
	ld	AL,@(H'0001,Y)
	bra	(?L46)
?L44:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0003
?L46:
	st	AL,@(H'0003,Y)
?L43:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_HfpVoiceRecognitionEnableRequest
	ld	AL,@(H'0003,Y)
	and	AL,#H'0003
	asl	#H'0005
	ld	AH,@$_theSink+H'003A
	and	AH,#-H'0061
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003A
?L40:
?LBE7:
?LBE6:
?LBE_sinkInitiateVoiceDial:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_sinkCancelVoiceDial:
	enterl	#2
?LBB_sinkCancelVoiceDial:
	st	AL,@H'fff8
?LBB8:
	ld	X,#H'0001
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L48
	ld	AH,@$_theSink+H'0018
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L49
	ld	X,@H'fff8
	bra	(?L48)
?L49:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0005
	ld	X,@$XAP_AH
	and	X,#H'0003
?L48:
	ld	AH,@$_theSink+H'003A
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L47
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_HfpVoiceRecognitionEnableRequest
	ld	AL,@$_theSink+H'003A
	and	AL,#-H'0061
	st	AL,@$_theSink+H'003A
?L47:
?LBE8:
?LBE_sinkCancelVoiceDial:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_sinkQueueEvent:
; leaf function with empty stack frame
?LBB_sinkQueueEvent:
	and	AL,#H'00FF
	ld	AH,@$_theSink+H'0039
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0039
?LBE_sinkQueueEvent:
	rts
$_sinkRecallQueuedEvent:
	enterl	#5
?LBB_sinkRecallQueuedEvent:
	ld	AL,@$_theSink+H'0039
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L54
	bsr	$_stateManagerGetState
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'0008)
	bcc	?L63
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE64,X)
	brxl
	.SEG	CONST
?JTBASE64:
	.CODE
?L64:
	.SEG	CONST
	dc	lwrd(?L54-?L64)
	dc	lwrd(?L54-?L64)
	dc	lwrd(?L54-?L64)
	dc	lwrd(?L63-?L64)
	dc	lwrd(?L54-?L64)
	dc	lwrd(?L54-?L64)
	dc	lwrd(?L54-?L64)
	dc	lwrd(?L63-?L64)
	dc	lwrd(?L54-?L64)
	.CODE
?L63:
	ld	AH,@$_theSink+H'0039
	and	AH,#H'00FF
	add	AH,#H'4000
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,#H'05DC
	st	AL,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AL,#($_theSink)
	bsr	$_MessageSendLater
?L54:
	bsr	$_sinkClearQueueudEvent
?LBE_sinkRecallQueuedEvent:
	leavel	#5
$_sinkClearQueueudEvent:
	enterl	#2
?LBB_sinkClearQueueudEvent:
	ld	AL,#H'4000
	bsr	$_sinkQueueEvent
?LBE_sinkClearQueueudEvent:
	leavel	#2
$_sinkUpdateStoredNumber:
	enterl	#4
?LBB_sinkUpdateStoredNumber:
?LBB9:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetSlcSink
	cmp	AL,#H'0000
	beq	?L67
	ld	AL,@(H'0001,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L67
	ld	AL,#H'0001
	bsr	$_HfpVoiceTagNumberRequest
	bra	(?L66)
?L67:
	ld	AL,#H'0000
	bsr	$_sinkAvrcpCheckManualConnectReset
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4018
	bsr	$_MessageSend
	ld	AL,#H'4027
	bsr	$_sinkQueueEvent
?L66:
?LBE9:
?LBE_sinkUpdateStoredNumber:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_sinkWriteStoredNumber:
	enterl	#24
?LBB_sinkWriteStoredNumber:
	st	AL,@(H'0015,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@(H'0001,X)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0012)
	bcc	?L69
?LBB11:
	ld	AL,#H'0014
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,@(H'0015,Y)
	add	AH,#H'0002
	ld	X,@(H'0015,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_memmove
	ld	X,@(H'0015,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigStore
?L69:
?LBE11:
?LBE10:
?LBE_sinkWriteStoredNumber:
	leavel	#24
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_sinkDialStoredNumber:
	enterl	#25
?LBB_sinkDialStoredNumber:
?LBB12:
	ld	AL,#H'0014
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	st	AL,@(H'0016,Y)
	cmp	AL,#H'0000
	beq	?L72
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0015
	bsr	$_HfpLinkGetSlcSink
	cmp	AL,#H'0000
	beq	?L73
	ld	AL,@(H'0015,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L73
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0016,Y)
	bsr	$_HfpDialNumberRequest
	bra	(?L71)
?L73:
	ld	AL,#H'0000
	bsr	$_sinkAvrcpCheckManualConnectReset
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4018
	bsr	$_MessageSend
	ld	AL,#H'4026
	bsr	$_sinkQueueEvent
	bra	(?L71)
?L72:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4027
	bsr	$_MessageSend
?L71:
?LBE12:
?LBE_sinkDialStoredNumber:
	leavel	#25
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_sinkPlaceIncomingCallOnHold:
	enterl	#3
?LBB_sinkPlaceIncomingCallOnHold:
?LBB13:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L77
	ld	AL,@(0,Y)
	cmp	AL,#H'0001
	bne	?L77
	ld	AL,#H'0001
	bra	(?L80)
?L77:
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(0,Y)
	cmp	AL,#H'0001
	bne	?L76
	ld	AL,#H'0002
?L80:
	ld	AH,#H'0000
	bsr	$_HfpResponseHoldActionRequest
?L76:
?LBE13:
?LBE_sinkPlaceIncomingCallOnHold:
	leavel	#3
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_sinkAcceptHeldIncomingCall:
	enterl	#3
?LBB_sinkAcceptHeldIncomingCall:
?LBB14:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L84
	ld	AL,@(0,Y)
	cmp	AL,#H'0002
	bne	?L84
	ld	AL,#H'0001
	bra	(?L87)
?L84:
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L83
	ld	AL,@(0,Y)
	cmp	AL,#H'0002
	bne	?L83
	ld	AL,#H'0002
?L87:
	ld	AH,#H'0001
	bsr	$_HfpResponseHoldActionRequest
?L83:
?LBE14:
?LBE_sinkAcceptHeldIncomingCall:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_sinkRejectHeldIncomingCall:
	enterl	#3
?LBB_sinkRejectHeldIncomingCall:
?LBB15:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L91
	ld	AL,@(0,Y)
	cmp	AL,#H'0002
	bne	?L91
	ld	AL,#H'0001
	bra	(?L94)
?L91:
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L90
	ld	AL,@(0,Y)
	cmp	AL,#H'0002
	bne	?L90
	ld	AL,#H'0002
?L94:
	ld	AH,#H'0002
	bsr	$_HfpResponseHoldActionRequest
?L90:
?LBE15:
?LBE_sinkRejectHeldIncomingCall:
	leavel	#3
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
	ENDMOD

;# Function pattern *movqi2 used[0] = 52 used[1] = 10 total = 62
;# Function pattern *movqi3 used[0] = 109 total = 109
;# Function pattern *addqi0 used[0] = 9 total = 9
;# Function pattern *addqi2 used[0] = 5 total = 5
;# Function pattern *andqi3 used[0] = 18 total = 18
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 10 total = 10
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 15 total = 15
;# Function pattern *call1 used[0] = 26 total = 26
;# Function pattern *call_value1 used[0] = 31 total = 31
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 25 used[1] = 8 total = 33
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 11 total = 11
	MODULE	sink_config
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConfigRetrieve:
	enterl	#5
?LBB_ConfigRetrieve:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
?LBB2:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_PsRetrieve
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	cmp	X,#(H'0001+H'0031)
	bcc	?L15
	ld	X,@(?JTBASE17,X)
	brxl
	.SEG	CONST
?JTBASE17:
	.CODE
?L17:
	.SEG	CONST
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L13-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L3-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L15-?L17)
	dc	lwrd(?L3-?L17)
	.CODE
?L13:
	tst	@(H'0002,Y)
	beq	?L3
?L15:
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0005,Y)
	beq	?L3
	ld	AL,@(H'0001,Y)
	bsr	$_LedsIndicateError
?L3:
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_ConfigRetrieve:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_ConfigStore:
	enterl	#3
?LBB_ConfigStore:
	ld	X,@(H'0003,Y)
?LBB3:
	st	X,@(0,Y)
	bsr	$_PsStore
?LBE3:
?LBE_ConfigStore:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConfigIndicateConfigError:
	enterl	#2
?LBB_ConfigIndicateConfigError:
	bsr	$_LedsIndicateError
?LBE_ConfigIndicateConfigError:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 3 total = 7
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	sink_configmanager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_configManagerKeyLengths:
	enterl	#5
?LBB_configManagerKeyLengths:
	st	AL,@(H'0001,Y)
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#H'0007
	ld	AH,@(H'0001,Y)
	bsr	$_ConfigRetrieve
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	asl	#H'000B
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0073,X)
	and	AH,#H'07FF
	or	AH,@$XAP_AL
	st	AH,@(H'0073,X)
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'001F
	asl	#H'0006
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0073,X)
	and	AH,#-H'07C1
	or	AH,@$XAP_AL
	st	AH,@(H'0073,X)
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'001F
	asl	#H'0001
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0073,X)
	and	AH,#-H'003F
	or	AH,@$XAP_AL
	st	AH,@(H'0073,X)
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000A,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
?LBE_configManagerKeyLengths:
	leavel	#5
_configManagerButtons:
	enterl	#8
?LBB_configManagerButtons:
?LBB2:
	ld	AL,#H'0042
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	ld	AL,#H'0042
	bsr	$_malloc
	st	AL,@(H'0002,Y)
	ld	AL,#H'0042
	bsr	$_malloc
	st	AL,@(H'0003,Y)
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	AL,#H'0042
	st	AL,@(0,Y)
	ld	AL,#H'0018
	ld	AH,@(H'0001,Y)
	bsr	$_ConfigRetrieve
	ld	X,#H'0042
	st	X,@(0,Y)
	ld	AL,#H'0019
	ld	AH,@(H'0002,Y)
	bsr	$_ConfigRetrieve
	ld	AH,#H'0042
	st	AH,@(0,Y)
	ld	AL,#H'001A
	ld	AH,@(H'0003,Y)
	bsr	$_ConfigRetrieve
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L13:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	X,@(H'0001,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	bne	?L8
	ld	AL,@(H'0002,X)
	and	AL,#-H'4000
	cmp	AL,#H'0000
	beq	?L7
?L8:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	AH,@(H'0001,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@(H'0005,Y)
	bsr	$_buttonManagerAddMapping
?L7:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	bne	?L10
	ld	AL,@(H'0002,X)
	and	AL,#-H'4000
	cmp	AL,#H'0000
	beq	?L9
?L10:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	AH,@(H'0002,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@(H'0005,Y)
	bsr	$_buttonManagerAddMapping
?L9:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	X,@(H'0003,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	bne	?L12
	ld	AL,@(H'0002,X)
	and	AL,#-H'4000
	cmp	AL,#H'0000
	beq	?L5
?L12:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	ld	AH,@(H'0003,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@(H'0005,Y)
	bsr	$_buttonManagerAddMapping
?L5:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	cmp	AH,#H'0015
	bcz	?L13
	ld	AL,@(H'0001,Y)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	bsr	$_free
	ld	AL,@(H'0003,Y)
	bsr	$_free
	bsr	$_BMCheckButtonsAfterReadingConfig
?LBE2:
?LBE_configManagerButtons:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_configManagerButtonPatterns:
	enterl	#6
?LBB_configManagerButtonPatterns:
?LBB3:
	ld	AL,#H'001C
	bsr	$_malloc
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L17
	ld	AL,#H'001C
	st	AL,@(0,Y)
	ld	AL,#H'0013
	ld	AH,@(H'0002,Y)
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0000
	beq	?L25
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L24:
	ld	AL,@(H'0003,Y)
	smult	#H'0007
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$_theSink+H'0002
	ld	AH,@(0,X)
	bsr	$_buttonManagerAddPatternMapping
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0003
	bcz	?L24
?L25:
?LBE4:
	ld	AL,@(H'0002,Y)
	bsr	$_free
?L17:
?LBE3:
?LBE_configManagerButtonPatterns:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
_configManagerLEDS:
	enterl	#11
?LBB_configManagerLEDS:
?LBB5:
	ld	AL,@$_theSink+H'0003
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,#-H'0001
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'000D)
	bcc	?L29
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_AH
	smult	#H'0005
	bsr	$_malloc
	st	AL,@(H'0003,Y)
	ld	AL,@$_theSink+H'0003
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	smult	#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$_theSink+H'0003
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	smult	#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0015
	ld	AH,@(H'0003,Y)
	bsr	$_ConfigRetrieve
	ld	AL,@$_theSink+H'0003
	st	AL,@H'fff9
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bcc	?L39
?L34:
	ld	AL,@(H'0002,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@H'fff8
	ld	X,@H'fff9
	add	X,@$XAP_AL
	st	X,@(-1,Y)
	ld	AL,#H'0002
	add	AL,@$XAP_UXL
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	add	AL,@(H'0003,Y)
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$_theSink+H'0003
	add	AL,@H'fff8
	st	AL,@(H'0008,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0003
	st	X,@H'fff9
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bcs	?L34
?L39:
	ld	AL,@(H'0003,Y)
	bsr	$_free
?L29:
?LBE6:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0006
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'079B)
	bcc	?L35
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	smult	#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0017
	ld	AH,@(H'003E,X)
	bsr	$_ConfigRetrieve
?L35:
	ld	X,@$_theSink+H'0003
	st	X,@(H'0006,Y)
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	cmp	AL,#H'0000
	bmi	?L36
	beq	?L36
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	and	AH,#H'001F
	cmp	AL,#H'0014
	ble	?L37
	ld	AH,#H'0014
?L37:
	cmp	AL,@$XAP_AH
	beq	?L43
	bcc	?L36
?L43:
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	smult	#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0014
	ld	AH,@(H'003F,X)
	bsr	$_ConfigRetrieve
?L36:
	ld	AH,@$_theSink+H'0003
	add	AH,#H'007A
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0016
	bsr	$_ConfigRetrieve
?LBE5:
?LBE_configManagerLEDS:
	leavel	#11
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_configManagerFeatureBlock:
	enterl	#3
?LBB_configManagerFeatureBlock:
?LBB7:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0006
	ld	AH,#($_theSink+H'0017)
	bsr	$_ConfigRetrieve
	ld	AL,#H'0000
	st	AL,@(-1,Y)
?L49:
	ld	AL,@(-1,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'001A
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'0001
	ld	AH,@($_theSink+H'002A,X)
	and	AH,#-H'00FF
	or	AH,@$XAP_AL
	st	AH,@($_theSink+H'002A,X)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0001
	bcz	?L49
	ld	AH,@$_theSink+H'001C
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	and	AH,#H'0010
	cmp	AH,#H'0000
	beq	?L44
	or	AL,#H'0008
	asl	#H'0005
	ld	AH,@$_theSink+H'001C
	and	AH,#-H'03E1
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'001C
?L44:
?LBE7:
?LBE_configManagerFeatureBlock:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_configManagerUserDefinedTones:
	enterl	#5
?LBB_configManagerUserDefinedTones:
	st	AL,@(H'0001,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L55
?LBB9:
	bsr	$_malloc
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,#H'001C
	ld	AH,@(H'0002,Y)
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,@(H'0002,Y)
	bra	(?L59)
?L56:
	ld	AL,@(H'0002,Y)
	bsr	$_free
?LBE9:
	bra	(?L54)
?L55:
	ld	AL,#H'0000
?L59:
	st	AL,@$_theSink+H'000C
?L54:
?LBE8:
?LBE_configManagerUserDefinedTones:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_configManagerConfiguration:
	enterl	#3
?LBB_configManagerConfiguration:
	ld	AH,@$_theSink+H'0005
	add	AH,#H'0006
	ld	AL,#H'001A
	st	AL,@(0,Y)
	ld	AL,#H'0008
	bsr	$_ConfigRetrieve
	ld	AH,@$_theSink+H'0006
	add	AH,#H'0010
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,#H'000F
	bsr	$_ConfigRetrieve
?LBE_configManagerConfiguration:
	leavel	#3
_configManagerButtonDurations:
	enterl	#3
?LBB_configManagerButtonDurations:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'0011
	ld	AH,@$_theSink+H'0005
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0000
	beq	?L61
	ld	AL,@$_theSink+H'0002
	ld	AH,@$_theSink+H'0005
	bsr	$_buttonManagerConfigDurations
?L61:
?LBE_configManagerButtonDurations:
	leavel	#3
_configManagerButtonTranslations:
	enterl	#3
?LBB_configManagerButtonTranslations:
	ld	AH,@$_theSink+H'0002
	add	AH,#H'004F
	ld	AL,#H'0012
	st	AL,@(0,Y)
	bsr	$_ConfigRetrieve
?LBE_configManagerButtonTranslations:
	leavel	#3
_configManagerPower:
	enterl	#60
?LBB_configManagerPower:
?LBB10:
	ld	AL,#H'0033
	st	AL,@(0,Y)
	ld	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	ld	AL,@$_theSink+H'0005
	add	AL,#H'0020
	ld	AH,#H'001C
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0018
	bsr	$_memcpy
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'0029
	ld	AH,@$XAP_UY
	add	AH,#H'0034
	bsr	$_PsRetrieve
?LBE10:
?LBE_configManagerPower:
	leavel	#60
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
_configManagerRadio:
	enterl	#3
?LBB_configManagerRadio:
	ld	AH,@$_theSink+H'0006
	add	AH,#H'000C
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,#H'000B
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0000
	bne	?L67
	ld	X,@$_theSink+H'0006
	ld	AH,#H'0800
	st	AH,@(H'000C,X)
	ld	X,@$_theSink+H'0006
	ld	AL,#H'0012
	st	AL,@(H'000D,X)
	ld	X,@$_theSink+H'0006
	st	AH,@(H'000E,X)
	ld	X,@$_theSink+H'0006
	st	AL,@(H'000F,X)
?L67:
?LBE_configManagerRadio:
	leavel	#3
_configManagerVolume:
	enterl	#3
?LBB_configManagerVolume:
	ld	AL,#H'0033
	st	AL,@(0,Y)
	ld	AL,#H'000C
	ld	AH,@$_theSink+H'000A
	bsr	$_ConfigRetrieve
?LBE_configManagerVolume:
	leavel	#3
_configManagerEventTones:
	enterl	#4
?LBB_configManagerEventTones:
	cmp	AL,#H'0000
	beq	?L70
	add	AL,@$XAP_AL
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,#H'001B
	ld	AH,@$_theSink+H'000B
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0000
	beq	?L70
	ld	X,@(H'0001,Y)
	add	X,@$_theSink+H'000B
	ld	AL,@(H'0001,X)
	and	AL,#-H'0100
	st	AL,@(H'0001,X)
?L70:
?LBE_configManagerEventTones:
	leavel	#4
_configManagerAudioPromptEvents:
	enterl	#4
?LBB_configManagerAudioPromptEvents:
	cmp	AL,#H'0000
	beq	?L73
	smult	#H'0003
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,#H'001E
	ld	AH,@$_theSink+H'0008
	bsr	$_ConfigRetrieve
	ld	X,@(H'0001,Y)
	add	X,@$_theSink+H'0008
	ld	AL,@(H'0001,X)
	or	AL,#H'00FF
	st	AL,@(H'0001,X)
?L73:
?LBE_configManagerAudioPromptEvents:
	leavel	#4
_configManagerAudioPromptsInit:
	enterl	#2
?LBB_configManagerAudioPromptsInit:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'0008
	ld	AH,@$_theSink+H'0037
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0037
	ld	AL,@$XAP_UXL
	bsr	$_AudioPromptConfigure
?L75:
?LBE_configManagerAudioPromptsInit:
	leavel	#2
_InitConfigMemoryAtCommands:
	enterl	#4
?LBB_InitConfigMemoryAtCommands:
	add	AL,#H'0012
	st	AL,@(H'0001,Y)
	bsr	$_malloc
	st	AL,@$_theSink+H'0007
	ld	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?LBE_InitConfigMemoryAtCommands:
	leavel	#4
_InitConfigMemory:
	enterl	#4
?LBB_InitConfigMemory:
	st	AL,@(H'0001,Y)
	ld	AL,#H'004C
	bsr	$_malloc
	st	AL,@$_theSink+H'0006
	ld	AH,#H'004C
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	add	AL,@$XAP_AL
	add	AL,#H'0002
	bsr	$_malloc
	st	AL,@$_theSink+H'000B
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	add	AH,@$XAP_AH
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0000
	st	AL,@$_theSink+H'0007
	ld	AL,#H'0015
	bsr	$_malloc
	st	AL,@$_theSink+H'0035
	ld	AH,#H'0015
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L80
	tst	@(H'0007,X)
	beq	?L79
?L80:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	smult	#H'0003
	add	AL,#H'0003
	bsr	$_malloc
	bra	(?L82)
?L79:
	ld	AL,#H'0000
?L82:
	st	AL,@$_theSink+H'0008
?LBE_InitConfigMemory:
	leavel	#4
_configManagerAtCommands:
	enterl	#3
?LBB_configManagerAtCommands:
	st	AL,@(0,Y)
	ld	AL,#H'0022
	ld	AH,@$_theSink+H'0007
	bsr	$_ConfigRetrieve
?LBE_configManagerAtCommands:
	leavel	#3
$_configManagerPioMap:
	enterl	#6
?LBB_configManagerPioMap:
?LBB11:
	ld	AL,#H'003C
	bsr	$_malloc
	st	AL,@$_theSink+H'0005
	ld	AH,#H'003C
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0042
	bsr	$_malloc
	st	AL,@$_theSink+H'000A
	ld	AH,#H'0042
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,@$_theSink+H'000A
	st	AH,@(H'0003,Y)
	add	AH,#H'0033
	st	AH,@(H'0002,Y)
	ld	AL,#H'000F
	st	AL,@(0,Y)
	ld	AL,#H'0010
	bsr	$_ConfigRetrieve
	ld	AL,@(H'0003,Y)
	add	AL,#H'003C
	st	AL,@$_theSink+H'0010
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000D,X)
	ld	AL,@(H'000E,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'000D,X)
	ld	AL,@(H'000E,X)
	bsr	$_PioSetMapPins32
?LBE11:
?LBE_configManagerPioMap:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_configManagerHFP_SupportedFeatures:
	enterl	#3
?LBB_configManagerHFP_SupportedFeatures:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'000E
	ld	AH,#($_theSink+H'0011)
	bsr	$_ConfigRetrieve
?LBE_configManagerHFP_SupportedFeatures:
	leavel	#3
$_configManagerHFP_Init:
	enterl	#3
?LBB_configManagerHFP_Init:
	ld	AH,@$XAP_AL
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'000D
	bsr	$_ConfigRetrieve
?LBE_configManagerHFP_Init:
	leavel	#3
_configManagerSetupSsr:
	enterl	#3
?LBB_configManagerSetupSsr:
	ld	AH,@$_theSink+H'0006
	add	AH,#H'0006
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'001F
	bsr	$_ConfigRetrieve
?LBE_configManagerSetupSsr:
	leavel	#3
$_configManagerEnableMultipoint:
	enterl	#2
?LBB_configManagerEnableMultipoint:
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,#H'0002
	bsr	$_HfpLinkSetMaxConnections
	cmp	AL,#H'0000
	beq	?L93
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L92
	ld	AL,#H'0002
	bsr	$_A2dpConfigureMaxRemoteDevices
	cmp	AL,#H'0000
	beq	?L93
?L92:
	ld	AL,@$_theSink+H'0037
	or	AL,#H'0080
	bra	(?L99)
?L89:
	ld	AL,#H'0001
	bsr	$_HfpLinkSetMaxConnections
	cmp	AL,#H'0000
	beq	?L93
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L96
	ld	AL,#H'0001
	bsr	$_A2dpConfigureMaxRemoteDevices
	cmp	AL,#H'0000
	beq	?L93
?L96:
	ld	AL,@$_theSink+H'0037
	and	AL,#-H'0081
?L99:
	st	AL,@$_theSink+H'0037
	bra	(?L88)
?L93:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L97
	ld	AL,#H'0002
	bra	(?L98)
?L97:
	ld	AL,#H'0001
?L98:
	bsr	$_HfpLinkSetMaxConnections
?L88:
?LBE_configManagerEnableMultipoint:
	leavel	#2
$_configManagerReadI2SConfiguration:
	enterl	#5
?LBB_configManagerReadI2SConfiguration:
?LBB12:
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	and	AL,#H'3000
	cmp	AL,#H'1000
	beq	?L102
	bsr	$_CsrMultiChanConfigRequiresI2s
	cmp	AL,#H'0000
	beq	?L100
?L102:
?LBB13:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0024
	ld	AH,#H'0000
	bsr	$_PsRetrieve
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'000C
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_AH
	bsr	$_malloc
	st	AL,@$_theSink+H'0009
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,#H'0023
	ld	AH,@$_theSink+H'0009
	bsr	$_ConfigRetrieve
	tst	@(H'0001,Y)
	beq	?L103
	ld	AH,@$_theSink+H'0009
	add	AH,#H'000B
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0024
	bsr	$_ConfigRetrieve
?L103:
	ld	AL,@$_theSink+H'0009
	bsr	$_CsrI2SInitialisePlugin
?L100:
?LBE13:
?LBE12:
?LBE_configManagerReadI2SConfiguration:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_configManagerReadSessionData:
	enterl	#35
?LBB_configManagerReadSessionData:
?LBB14:
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	ld	AH,@(H'0001,Y)
	lsr	#H'000F
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'000D
	ld	AH,@$_theSink+H'0036
	and	AH,#-H'2001
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0036
	ld	AH,@$_theSink+H'001A
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L106
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0001,Y)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'000C
	ld	AH,@(H'0074,X)
	and	AH,#-H'1001
	or	AH,@$XAP_AL
	st	AH,@(H'0074,X)
	bra	(?L107)
?L106:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	or	AL,#H'1000
	st	AL,@(H'0074,X)
?L107:
	ld	AH,@(H'0001,Y)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'000C
	ld	AH,@$_theSink+H'0037
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0037
	ld	AH,@(H'0001,Y)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0004
	ld	AH,@$_theSink+H'0036
	and	AH,#-H'0011
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0036
	ld	AH,@(H'0001,Y)
	lsr	#H'0007
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'000D
	ld	AH,@$_theSink+H'0038
	and	AH,#-H'2001
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0038
	ld	AH,@(H'0001,Y)
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0007
	ld	AH,@$_theSink+H'003A
	and	AH,#-H'0081
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003A
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0001,Y)
	and	AL,#H'0007
	st	AL,@(H'0005,X)
	ld	AH,@(H'0001,Y)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	bsr	$_configManagerEnableMultipoint
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0002,Y)
	and	AL,#H'0007
	add	AL,#H'0003
	st	AL,@(H'0046,X)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0002,Y)
	and	AL,#-H'0008
	st	AL,@(H'0047,X)
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	st	AH,@(H'0006,X)
	st	AL,@(H'0007,X)
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AH,@(H'0008,X)
	st	AL,@(H'0009,X)
	tst	@$_theSink+H'0035
	beq	?L108
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0035
	ld	AH,@$XAP_UY
	add	AH,#H'000C
	bsr	$_memcpy
?L108:
	bsr	$_sinkBleGetGapDefaultRole
	cmp	AL,#H'0000
	bne	?L105
	ld	AH,@(H'0001,Y)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	bsr	$_sinkBleSetGapDefaultRole
?L105:
?LBE14:
?LBE_configManagerReadSessionData:
	leavel	#35
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_configManagerWriteSessionData:
	enterl	#35
?LBB_configManagerWriteSessionData:
	ld	AH,#H'0015
?LBB15:
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$_theSink+H'0037
	st	AL,@H'fff8
	and	AL,#H'0001
	asl	#H'000F
	ld	X,@(H'0001,Y)
	and	X,#H'7FFF
	or	AL,@$XAP_UXL
	st	AL,@H'fff9
	st	AL,@(H'0001,Y)
	ld	AL,@$_theSink+H'0003
	ld	X,@$XAP_AL
	ld	AH,@(H'0074,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'000E
	ld	X,@H'fff9
	and	X,#-H'4001
	or	X,@$XAP_AL
	ld	AH,@H'fff8
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'000A
	and	X,#-H'3C01
	or	X,@$XAP_AL
	ld	AH,@$_theSink+H'0036
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0004
	and	X,#-H'0011
	or	X,@$XAP_AL
	ld	AH,@H'fff8
	lsr	#H'0007
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0009
	and	X,#-H'0201
	or	X,@$XAP_AL
	ld	AH,@$_theSink+H'0038
	lsr	#H'000D
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0007
	and	X,#-H'0081
	or	X,@$XAP_AL
	ld	AH,@$_theSink+H'003A
	lsr	#H'0007
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0003
	and	X,#-H'0009
	or	X,@$XAP_AL
	and	X,#-H'0101
	st	X,@(H'0001,Y)
	bsr	$_sinkBleGetGapDefaultRole
	and	AL,#H'0003
	asl	#H'0005
	ld	AH,@(H'0001,Y)
	and	AH,#-H'0061
	or	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0005,X)
	and	AL,#H'0007
	and	AH,#-H'0008
	or	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0046,X)
	add	AL,#-H'0003
	and	AL,#H'0007
	ld	AH,@(H'0047,X)
	and	AH,#-H'0008
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0008,X)
	ld	AL,@(H'0009,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@$_theSink+H'0035
	bsr	$_memcpy
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigStore
?LBE15:
?LBE_configManagerWriteSessionData:
	leavel	#35
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_configManagerRestoreDefaults:
	enterl	#3
?LBB_configManagerRestoreDefaults:
	ld	AL,@$_theSink+H'0037
	and	AL,#H'0FFE
	st	AL,@$_theSink+H'0037
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0010
	st	AL,@$_theSink+H'0036
	ld	AL,#H'0000
	bsr	$_configManagerEnableMultipoint
	ld	AL,@$_theSink+H'0038
	and	AL,#-H'2001
	st	AL,@$_theSink+H'0038
	ld	X,@$_theSink+H'0030
	ld	AL,#H'0001
	st	AL,@(H'0046,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_ConfigStore
	bsr	$_deviceManagerRemoveAllDevices
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L111
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4016
	bsr	$_MessageSend
?L111:
?LBE_configManagerRestoreDefaults:
	leavel	#3
_configManagerReadDspData:
	enterl	#2
?LBB_configManagerReadDspData:
	ld	AL,#H'0063
	ld	AH,#H'0000
	bsr	$_PblockInit
?LBE_configManagerReadDspData:
	leavel	#2
$_configManagerWriteDspData:
	enterl	#2
?LBB_configManagerWriteDspData:
	bsr	$_PblockStore
?LBE_configManagerWriteDspData:
	leavel	#2
$_configManagerFillPs:
	enterl	#5
?LBB_configManagerFillPs:
?LBB16:
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L115
?LBB17:
	ld	AL,@$XAP_AH
	bsr	$_PsFreeCount
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_malloc
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	ld	AH,@(H'0001,Y)
	cmp	AH,@$XAP_AL
	bcz	?L115
	nadd	AL,@$XAP_AH
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L115
?L122:
	ld	AH,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	AH,@(0,X)
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,#H'002F
	ld	AH,@(H'0002,Y)
	bsr	$_PsStore
	ld	AL,@(H'0001,Y)
	add	AL,#-H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L122
?L115:
?LBE17:
?LBE16:
?LBE_configManagerFillPs:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_configManagerDefragCheck:
	enterl	#2
?LBB_configManagerDefragCheck:
?LBB18:
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L126
?LBB19:
	ld	AL,@$XAP_AH
	bsr	$_PsFreeCount
	ld	X,@$_theSink+H'0004
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	cmp	AL,@$XAP_AH
	beq	?L128
	bcc	?L126
?L128:
	ld	AL,#H'0001
	bra	(?L125)
?L126:
?LBE19:
	ld	AL,#H'0000
?L125:
?LBE18:
?LBE_configManagerDefragCheck:
	leavel	#2
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_configManagerDefrag:
	enterl	#3
?LBB_configManagerDefrag:
	st	AL,@(0,Y)
	bsr	$_PsFlood
	tst	@(0,Y)
	beq	?L129
	bsr	$_BootGetMode
	bsr	$_BootSetMode
?L129:
?LBE_configManagerDefrag:
	leavel	#3
$_configManagerInitMemory:
	enterl	#4
?LBB_configManagerInitMemory:
	ld	AL,#H'003E
	bsr	$_malloc
	st	AL,@$_theSink+H'0004
	ld	AH,#H'003E
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$_theSink+H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0040
	bsr	$_malloc
	ld	X,@(H'0001,Y)
	st	AL,@(H'003D,X)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'003D,X)
	ld	AH,#H'0040
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?LBE_configManagerInitMemory:
	leavel	#4
$_configManagerAudioRouting:
	enterl	#3
?LBB_configManagerAudioRouting:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'0025
	ld	AH,@$_theSink+H'0006
	bsr	$_ConfigRetrieve
?LBE_configManagerAudioRouting:
	leavel	#3
$_configManagerSetVersionNo:
	enterl	#67
?LBB_configManagerSetVersionNo:
?LBB20:
	ld	AL,#H'0040
	st	AL,@(0,Y)
	ld	AL,#H'0031
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	ld	AH,@$XAP_AL
	cmp	AL,#H'0001
	bcz	?L135
	tst	@(H'0001,Y)
	bne	?L135
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0021
	beq	?L133
?L135:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0021
	st	AL,@(H'0002,Y)
	cmp	AH,#(H'0001+H'0001)
	bcc	?L136
	ld	AH,#H'0002
?L136:
	st	AH,@(0,Y)
	ld	AL,#H'0031
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigStore
?L133:
?LBE20:
?LBE_configManagerSetVersionNo:
	leavel	#67
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_configManagerSetUpgradeTransportType:
	enterl	#68
?LBB_configManagerSetUpgradeTransportType:
	st	AL,@(H'0041,Y)
?LBB21:
	ld	AL,#H'0040
	st	AL,@(0,Y)
	ld	AL,#H'0031
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	ld	AH,@(H'0041,Y)
	st	AH,@(H'0003,Y)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L140
	ld	AL,#H'0003
?L140:
	st	AL,@(0,Y)
	ld	AL,#H'0031
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigStore
?LBE21:
?LBE_configManagerSetUpgradeTransportType:
	leavel	#68
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_configManagerGetUpgradeTransportType:
	enterl	#67
?LBB_configManagerGetUpgradeTransportType:
?LBB22:
	ld	AL,#H'0040
	st	AL,@(0,Y)
	ld	AL,#H'0031
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0002
	bcz	?L142
	ld	AL,@(H'0003,Y)
	bra	(?L141)
?L142:
	ld	AL,#H'0000
?L141:
?LBE22:
?LBE_configManagerGetUpgradeTransportType:
	leavel	#67
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
_getLocalBdAddrFromPs:
	enterl	#3
?LBB_getLocalBdAddrFromPs:
	ld	AH,#H'0004
?LBB23:
	st	AH,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#($_theSink+H'001F)
	bsr	$_PsFullRetrieve
	ld	AH,#H'0004
	cmp	AH,@$XAP_AL
	bne	?L146
	ld	AL,#H'0001
	bra	(?L145)
?L146:
	ld	AL,#H'0000
	st	AL,@$_theSink+H'0020
	st	AL,@$_theSink+H'001F
	st	AL,@$_theSink+H'0022
	st	AL,@$_theSink+H'0021
?L145:
?LBE23:
?LBE_getLocalBdAddrFromPs:
	leavel	#3
$_configManagerInit:
	enterl	#4
?LBB_configManagerInit:
	st	AL,@(0,Y)
?LBB24:
	ld	AL,#H'000C
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	bsr	_configManagerKeyLengths
	bsr	$_LEDManagerInit
	ld	AL,@(H'0001,Y)
	bsr	_InitConfigMemory
	bsr	_getLocalBdAddrFromPs
	tst	@(0,Y)
	beq	?L150
	bsr	_configManagerButtonTranslations
	bsr	_configManagerButtonDurations
	bsr	_configManagerButtons
	bsr	_configManagerButtonPatterns
?L150:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	bsr	_configManagerEventTones
	tst	@(0,Y)
	beq	?L151
	bsr	$_configManagerAudioRouting
?L151:
	bsr	_configManagerConfiguration
	tst	@(0,Y)
	beq	?L152
	bsr	$_InitA2dp
?L152:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	bsr	_configManagerUserDefinedTones
	bsr	_configManagerLEDS
	bsr	_configManagerVolume
	tst	@(0,Y)
	beq	?L153
	bsr	_configManagerPower
	bsr	_configManagerRadio
	bsr	$_volumeInit
	bsr	$_configManagerReadSessionData
	bsr	_configManagerReadDspData
	bsr	_configManagerSetupSsr
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	bsr	_configManagerAudioPromptEvents
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	ld	AH,@(H'0002,X)
	bsr	_configManagerAudioPromptsInit
	ld	X,@(H'0001,Y)
	tst	@(H'0009,X)
	beq	?L154
	ld	AL,@(H'0009,X)
	bsr	_InitConfigMemoryAtCommands
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	add	AL,#H'0010
	bsr	_configManagerAtCommands
?L154:
	bsr	$_SinkMultiChannelReadConfig
	bsr	$_configManagerReadI2SConfiguration
?L153:
	ld	AL,@(H'0001,Y)
	bsr	$_free
?LBE24:
?LBE_configManagerInit:
	leavel	#4
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_configManagerInitFeatures:
	enterl	#2
?LBB_configManagerInitFeatures:
	bsr	_configManagerFeatureBlock
?LBE_configManagerInitFeatures:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 216 used[1] = 34 total = 250
;# Function pattern *movqi3 used[0] = 329 total = 329
;# Function pattern *movqi8 used[0] = 11 total = 11
;# Function pattern *movhi used[2] = 8 used[3] = 7 total = 15
;# Function pattern *addqi0 used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 32 used[2] = 13 total = 45
;# Function pattern *andqi3 used[0] = 71 total = 71
;# Function pattern *iorqi3 used[0] = 28 total = 28
;# Function pattern *subqi3 used[1] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 17 total = 17
;# Function pattern *lshrqi3 used[0] = 33 total = 33
;# Function pattern *ashlqi3 used[0] = 21 total = 21
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 50 total = 50
;# Function pattern *call_value1 used[0] = 87 total = 87
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 31 used[1] = 14 total = 45
;# Function pattern movstrqi+4 used[0] = 2 used[1] = 4 total = 6
;# Function pattern movstrqi+5 used[0] = 12 total = 12
	MODULE	sink_csr_features
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_csr2csrHandleTxtInd:
; leaf function with empty stack frame
?LBB_csr2csrHandleTxtInd:
?LBE_csr2csrHandleTxtInd:
	rts
$_csr2csrHandleSmsInd:
; leaf function with empty stack frame
?LBB_csr2csrHandleSmsInd:
?LBE_csr2csrHandleSmsInd:
	rts
$_csr2csrHandleSmsCfm:
; leaf function with empty stack frame
?LBB_csr2csrHandleSmsCfm:
?LBE_csr2csrHandleSmsCfm:
	rts
$_csr2csrHandleAgBatteryRequestInd:
	enterl	#3
?LBB_csr2csrHandleAgBatteryRequestInd:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'408C
	bsr	$_MessageSend
?LBE_csr2csrHandleAgBatteryRequestInd:
	leavel	#3
	.SEG	CONST
?LC0:
	dc	H'0002
	dc	H'0004
	dc	H'0007
	dc	H'0009
	.CODE
$_csr2csrHandleAgBatteryRequestRes:
	enterl	#7
?LBB_csr2csrHandleAgBatteryRequestRes:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,@?LC0
	st	AL,@(0,Y)
	ld	X,@$XAP_UY
	ld	AL,@?LC0+H'0001
	st	AL,@(H'0001,X)
	ld	AL,@?LC0+H'0002
	st	AL,@(H'0002,X)
	ld	AL,@?LC0+H'0003
	st	AL,@(H'0003,X)
	cmp	AH,#(H'0001+H'0003)
	bcc	?L5
?LBB3:
	add	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0001
	ld	AH,@(0,X)
	bsr	$_HfpCsrFeaturesBatteryLevelRequest
	ld	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_HfpCsrFeaturesBatteryLevelRequest
?L5:
?LBE3:
?LBE2:
?LBE_csr2csrHandleAgBatteryRequestRes:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 1 total = 9
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	sink_device_id
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_device_id_service_record_template:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0012
	dc	H'0000
	dc	H'0009
	dc	H'0002
	dc	H'0000
	dc	H'0009
	dc	H'0001
	dc	H'0003
	dc	H'0009
	dc	H'0002
	dc	H'0001
	dc	H'0009
	dc	H'00FF
	dc	H'00FF
	dc	H'0009
	dc	H'0002
	dc	H'0002
	dc	H'0009
	dc	H'00FF
	dc	H'00FF
	dc	H'0009
	dc	H'0002
	dc	H'0003
	dc	H'0009
	dc	H'00FF
	dc	H'00FF
	dc	H'0009
	dc	H'0002
	dc	H'0004
	dc	H'0028
	dc	H'0001
	dc	H'0009
	dc	H'0002
	dc	H'0005
	dc	H'0009
	dc	H'00FF
	dc	H'00FF
	.CODE
$_RegisterDeviceIdServiceRecord:
	enterl	#12
?LBB_RegisterDeviceIdServiceRecord:
?LBB2:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0003
	bcz	?L1
?LBB3:
	ld	AL,#H'002B
	bsr	$_malloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	AL,#H'002B
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#(_device_id_service_record_template)
	bsr	$_memmove
	ld	AH,@(H'0002,Y)
	lsr	#H'0008
	ld	X,@(H'0009,Y)
	st	AH,@(H'0012,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0013,X)
	ld	AH,@(H'0003,Y)
	lsr	#H'0008
	st	AH,@(H'0018,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0019,X)
	ld	AH,@(H'0004,Y)
	lsr	#H'0008
	st	AH,@(H'001E,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'001F,X)
	ld	AH,@(H'0001,Y)
	lsr	#H'0008
	st	AH,@(H'0029,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'002A,X)
	st	X,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'002B
	bsr	$_ConnectionRegisterServiceRecord
?L1:
?LBE3:
?LBE2:
?LBE_RegisterDeviceIdServiceRecord:
	leavel	#12
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_GetDeviceIdEirDataSize:
	enterl	#11
?LBB_GetDeviceIdEirDataSize:
?LBB4:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0003
	bcz	?L5
	ld	AL,#H'000A
	bra	(?L4)
?L5:
	ld	AL,#H'0000
?L4:
?LBE4:
?LBE_GetDeviceIdEirDataSize:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_WriteDeviceIdEirData:
	enterl	#12
?LBB_WriteDeviceIdEirData:
	st	AL,@(H'0009,Y)
?LBB5:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0003
	bcz	?L9
	ld	AL,#H'0009
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	add	X,#H'0001
	ld	AL,#H'0010
	st	AL,@(0,X)
	add	X,#H'0001
	ld	AH,@(H'0001,Y)
	st	AH,@(0,X)
	add	X,#H'0001
	lsr	#H'0008
	st	AH,@(0,X)
	add	X,#H'0001
	ld	AH,@(H'0002,Y)
	st	AH,@(0,X)
	add	X,#H'0001
	lsr	#H'0008
	st	AH,@(0,X)
	add	X,#H'0001
	ld	AH,@(H'0003,Y)
	st	AH,@(0,X)
	add	X,#H'0001
	lsr	#H'0008
	st	AH,@(0,X)
	add	X,#H'0001
	st	X,@(H'0009,Y)
	ld	AH,@(H'0004,Y)
	st	AH,@(0,X)
	lsr	#H'0008
	st	AH,@(H'0001,X)
	ld	AL,#H'000A
	bra	(?L8)
?L9:
	ld	AL,#H'0000
?L8:
?LBE5:
?LBE_WriteDeviceIdEirData:
	leavel	#12
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_GetDeviceIdFullVersion:
	enterl	#12
?LBB_GetDeviceIdFullVersion:
	st	AL,@(H'0009,Y)
?LBB6:
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_ConfigRetrieve
	cmp	AL,#H'0003
	bcz	?L12
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	bsr	$_memmove
?L12:
?LBE6:
?LBE_GetDeviceIdFullVersion:
	leavel	#12
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 33 used[1] = 2 total = 35
;# Function pattern *movqi3 used[0] = 36 total = 36
;# Function pattern *addqi0 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 8 total = 8
;# Function pattern *lshrqi3 used[0] = 8 total = 8
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	sink_devicemanager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_deviceManagerUpdateAttributesWithDeviceDefaults:
	enterl	#2
?LBB_deviceManagerUpdateAttributesWithDeviceDefaults:
	st	AL,@H'fff8
	cmp	AH,#H'0001
	bne	?L2
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#-H'0100
	st	AL,@(0,X)
	ld	AH,@$_theSink+H'001A
	lsr	#H'0004
	and	AH,#H'000F
	st	AH,@(H'0001,X)
	ld	X,@$_theSink+H'000A
	ld	AH,@$_theSink+H'001C
	lsr	#H'000C
	ld	AL,@$XAP_AH
	smult	@(0,X)
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bpl	?L3
	add	AH,#H'000F
?L3:
	asr	#H'0004
	ld	X,@H'fff8
	st	AH,@(H'0002,X)
?L2:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	and	AL,#-H'0100
	st	AL,@(0,X)
	ld	AH,@$_theSink+H'001A
	lsr	#H'0004
	and	AH,#H'000F
	st	AH,@(H'0001,X)
	ld	X,@$_theSink+H'000A
	ld	AH,@$_theSink+H'001C
	lsr	#H'000C
	ld	AL,@$XAP_AH
	smult	@(0,X)
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bpl	?L4
	add	AH,#H'000F
?L4:
	asr	#H'0004
	ld	X,@H'fff8
	st	AH,@(H'0002,X)
?LBE_deviceManagerUpdateAttributesWithDeviceDefaults:
	leavel	#2
$_deviceManagerClearAttributes:
	enterl	#3
?LBB_deviceManagerClearAttributes:
	ld	AH,#H'000A
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?LBE_deviceManagerClearAttributes:
	leavel	#3
$_deviceManagerGetDefaultAttributes:
	enterl	#4
?LBB_deviceManagerGetDefaultAttributes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_deviceManagerClearAttributes
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_deviceManagerUpdateAttributesWithDeviceDefaults
?LBE_deviceManagerGetDefaultAttributes:
	leavel	#4
$_deviceManagerGetAttributes:
	enterl	#5
?LBB_deviceManagerGetAttributes:
?LBB2:
	cmp	AL,#H'0000
	beq	?L9
	ld	X,#H'000A
	bra	(?L10)
?L9:
	ld	X,#H'0000
?L10:
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_ConnectionSmGetAttributeNowReq
?LBE2:
?LBE_deviceManagerGetAttributes:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_deviceManagerGetIndexedAttributes:
	enterl	#5
?LBB_deviceManagerGetIndexedAttributes:
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	ld	AL,#H'000A
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	st	X,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,@H'fff8
	bsr	$_ConnectionSmGetIndexedAttributeNowReq
?LBE_deviceManagerGetIndexedAttributes:
	leavel	#5
$_deviceManagerGetAddrFromProfile:
	enterl	#18
?LBB_deviceManagerGetAddrFromProfile:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'000F,Y)
?L19:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,@(H'000F,Y)
	bsr	$_ConnectionSmGetIndexedAttributeNowReq
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	and	AL,#H'00FF
	cmp	AL,@(H'000D,Y)
	bne	?L16
	cmp	AH,#H'0000
	beq	?L16
	ld	AL,#H'0001
	bra	(?L12)
?L16:
	cmp	AH,#H'0000
	bne	?L17
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,@(H'000F,Y)
	bsr	$_ConnectionSmGetIndexedAttributeNowReq
	ld	AH,@$XAP_AL
?L17:
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	st	AL,@(H'000F,Y)
	cmp	AH,#H'0000
	bne	?L19
	ld	AL,#H'0000
?L12:
?LBE3:
?LBE_deviceManagerGetAddrFromProfile:
	leavel	#18
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_deviceManagerStoreAttributes:
	enterl	#5
?LBB_deviceManagerStoreAttributes:
	st	AH,@(0,Y)
	ld	AH,#H'000A
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_ConnectionSmPutAttributeReq
?LBE_deviceManagerStoreAttributes:
	leavel	#5
$_deviceManagerStoreDefaultAttributes:
	enterl	#13
?LBB_deviceManagerStoreDefaultAttributes:
	st	AL,@(H'000A,Y)
?LBB4:
	ld	AL,@$XAP_UY
	bsr	$_deviceManagerGetDefaultAttributes
	ld	AL,@$XAP_UY
	ld	AH,@(H'000A,Y)
	bsr	$_deviceManagerStoreAttributes
?LBE4:
?LBE_deviceManagerStoreDefaultAttributes:
	leavel	#13
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_deviceManagerMarkTrusted:
	enterl	#3
?LBB_deviceManagerMarkTrusted:
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	bsr	$_ConnectionSmSetTrustLevel
?LBE_deviceManagerMarkTrusted:
	leavel	#3
_deviceManagerCompareAttributes:
	enterl	#3
?LBB_deviceManagerCompareAttributes:
	ld	X,#H'000A
	st	X,@(0,Y)
	bsr	$_memcmp
	cmp	AL,#H'0000
	beq	?L27
	ld	AL,#H'0000
	bra	(?L26)
?L27:
	ld	AL,#H'0001
?L26:
?LBE_deviceManagerCompareAttributes:
	leavel	#3
$_deviceManagerUpdateAttributes:
	enterl	#7
?LBB_deviceManagerUpdateAttributes:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB5:
	ld	AL,#H'000F
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,#H'000F
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0003,Y)
	cmp	AH,#H'0001
	bne	?L29
	ld	AL,@(H'0004,X)
	and	AL,#-H'0100
	or	AL,#H'0001
	st	AL,@(H'0004,X)
	tst	@(H'0007,Y)
	beq	?L30
	ld	AL,@(H'0007,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L31)
?L30:
	ld	X,#H'002A
?L31:
	ld	AH,@($_theSink,X)
	lsr	#H'0001
	and	AH,#H'007F
	ld	X,@(H'0004,Y)
	st	AH,@(H'0005,X)
	bra	(?L34)
?L29:
	ld	AH,@(H'0003,Y)
	cmp	AH,#H'0002
	bne	?L32
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0100
	or	AL,#H'0002
	st	AL,@(H'0004,X)
	ld	X,@(H'0008,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@$_theSink+H'0030
	add	X,@(H'0008,Y)
	ld	AL,@(H'0029,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0007,X)
?L34:
	ld	AL,#H'0001
	st	AL,@(H'000E,X)
?L32:
	ld	AL,#($_theSink)
	ld	AH,#H'4766
	bsr	$_MessageCancelAll
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4755
	bsr	$_MessageSendConditionally
?LBE5:
?LBE_deviceManagerUpdateAttributes:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_deviceManagerDelayedUpdateAttributes:
	enterl	#24
?LBB_deviceManagerDelayedUpdateAttributes:
	st	AL,@(H'0015,Y)
	ld	AL,#H'000A
?LBB6:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	X,@(H'0015,Y)
	ld	AH,@(H'000E,X)
	bsr	$_deviceManagerGetDefaultAttributes
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0015,Y)
	bsr	$_deviceManagerGetAttributes
	ld	X,@(H'0015,Y)
	ld	AL,@(H'000E,X)
	cmp	AL,#H'0001
	bne	?L38
	ld	AL,@(H'0004,X)
	and	AL,#H'00FF
	cmp	AL,#H'0001
	bne	?L39
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_memcpy
	ld	AL,@(H'000B,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	or	AH,#H'0001
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'000B,Y)
	ld	X,@(H'0015,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'000C,Y)
	bra	(?L38)
?L39:
	ld	X,@(H'0015,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00FF
	cmp	AL,#H'0002
	bne	?L38
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_memcpy
	ld	AL,@(H'000B,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	or	AH,#H'0002
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'000B,Y)
	ld	X,@(H'0015,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'000D,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000E,Y)
?L38:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	_deviceManagerCompareAttributes
	cmp	AL,#H'0000
	bne	?L37
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	ld	AH,@(H'0015,Y)
	bsr	$_deviceManagerStoreAttributes
?L37:
?LBE6:
?LBE_deviceManagerDelayedUpdateAttributes:
	leavel	#24
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_deviceManagerGetProfileAddr:
	enterl	#2
?LBB_deviceManagerGetProfileAddr:
	ld	X,@$XAP_AL
	st	AH,@H'fff9
?LBB7:
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L47
	ld	AL,@$XAP_UXL
?LBB8:
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L48
	ld	AL,#H'0001
	st	AL,@H'fff8
	bra	(?L49)
?L48:
	ld	X,#H'0002
	st	X,@H'fff8
?L49:
	tst	@H'fff8
	beq	?L51
	ld	AL,@H'fff8
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L52)
?L51:
	ld	X,#H'0026
?L52:
	ld	AH,@($_theSink,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L53
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_HfpLinkGetBdaddr
	bra	(?L46)
?L47:
	ld	AL,@$XAP_UXL
?LBE8:
	and	AL,#H'000C
	cmp	AL,#H'0000
	beq	?L53
?LBB9:
	ld	AH,@$XAP_UXL
	lsr	#H'0002
	xor	AH,#H'0001
	and	AH,#H'0001
	ld	AL,@$_theSink+H'0030
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	ld	AL,@(H'0017,X)
	cmp	AL,#H'00FF
	beq	?L53
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	ld	AL,@(H'0021,X)
	ld	X,@H'fff9
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@H'fff9
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@H'fff9
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
	bra	(?L46)
?L53:
?LBE9:
	ld	AL,#H'0000
?L46:
?LBE7:
?LBE_deviceManagerGetProfileAddr:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_deviceManagerShufflePdl:
	enterl	#6
?LBB_deviceManagerShufflePdl:
?LBB10:
	bsr	$_ConnectionSmUpdateMruDevice
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	_deviceManagerGetProfileAddr
	cmp	AL,#H'0000
	bne	?L61
	ld	AL,#H'0004
	ld	AH,@$XAP_UY
	bsr	_deviceManagerGetProfileAddr
	cmp	AL,#H'0000
	beq	?L59
?L61:
	ld	AL,@$XAP_UY
	bsr	$_ConnectionSmUpdateMruDevice
?L59:
	bsr	$_deviceManagerUpdatePriorityDevices
?LBE10:
?LBE_deviceManagerShufflePdl:
	leavel	#6
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_deviceManagerUpdatePriorityDevices:
; leaf function with empty stack frame
?LBB_deviceManagerUpdatePriorityDevices:
?LBE_deviceManagerUpdatePriorityDevices:
	rts
$_deviceManagerSetPriority:
	enterl	#25
?LBB_deviceManagerSetPriority:
	st	AL,@(H'0014,Y)
?LBB11:
	bsr	$_deviceManagerProfilesConnected
	st	AL,@(H'0015,Y)
	ld	AL,#H'0000
	st	AL,@(H'0016,Y)
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0001
	bcz	?L64
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB12:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_deviceManagerGetIndexedAttributes
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0010,Y)
	ld	X,@$XAP_UY
	add	X,#H'0010
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0014,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L77
	ld	AL,@(H'0014,Y)
	bsr	_deviceManagerShufflePdl
	ld	AL,#H'0001
	st	AL,@(H'0016,Y)
	tst	@(H'0015,Y)
	beq	?L71
	ld	AL,@(H'0015,Y)
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L70
	ld	AL,@(H'0015,Y)
	and	AL,#H'000C
	cmp	AL,#H'0000
	bne	?L71
?L70:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4754
	bra	(?L74)
?L64:
?LBE12:
	ld	AL,@(H'0014,Y)
	bsr	$_ConnectionSmUpdateMruDevice
	bsr	$_deviceManagerUpdatePriorityDevices
?L77:
	tst	@(H'0015,Y)
	beq	?L71
	ld	AL,@(H'0015,Y)
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L73
	ld	AL,@(H'0015,Y)
	and	AL,#H'000C
	cmp	AL,#H'0000
	bne	?L71
?L73:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4753
?L74:
	bsr	$_MessageSend
?L71:
?LBE11:
	ld	AL,@(H'0016,Y)
?LBE_deviceManagerSetPriority:
	leavel	#25
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_deviceManagerProfilesConnected:
	enterl	#9
?LBB_deviceManagerProfilesConnected:
	st	AL,@(H'0004,Y)
?LBB13:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L86:
	ld	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	bsr	_deviceManagerGetProfileAddr
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,@(H'0006,Y)
	or	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
?L82:
	ld	AL,@(H'0005,Y)
	asl	#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0008
	bcz	?L86
?LBE13:
	ld	AL,@(H'0006,Y)
?LBE_deviceManagerProfilesConnected:
	leavel	#9
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_deviceManagerNumConnectedDevs:
	enterl	#8
?LBB_deviceManagerNumConnectedDevs:
?LBB14:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
?L98:
	ld	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	bsr	_deviceManagerGetProfileAddr
	cmp	AL,#H'0000
	beq	?L93
	ld	AL,@(H'0004,Y)
	and	AL,#H'0003
	cmp	AL,#H'0000
	bne	?L97
	ld	AL,@$XAP_UY
	bsr	$_deviceManagerProfilesConnected
	and	AL,#H'0003
	cmp	AL,#H'0000
	bne	?L93
?L97:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
?L93:
	ld	AL,@(H'0004,Y)
	asl	#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0008
	bcz	?L98
?LBE14:
	ld	AL,@(H'0005,Y)
?LBE_deviceManagerNumConnectedDevs:
	leavel	#8
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_deviceManagerNumConnectedPeerDevs:
	enterl	#2
?LBB_deviceManagerNumConnectedPeerDevs:
?LBB15:
	ld	AL,#H'0000
	st	AL,@(-2,Y)
	ld	AH,#H'0000
	ld	AL,@$_theSink+H'0030
	st	AL,@(-1,Y)
	st	AL,@H'fff8
?L108:
	tst	@H'fff8
	beq	?L105
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	ld	AL,@(H'0017,X)
	cmp	AL,#H'00FF
	beq	?L105
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	bne	?L105
	ld	AL,#H'0001
	add	AL,@(-2,Y)
	st	AL,@(-2,Y)
?L105:
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L108
?LBE15:
	ld	AL,@(-2,Y)
?LBE_deviceManagerNumConnectedPeerDevs:
	leavel	#2
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_deviceManagerCanConnect:
	enterl	#10
?LBB_deviceManagerCanConnect:
?LBB16:
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	beq	?L121
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L116
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	_deviceManagerGetProfileAddr
	cmp	AL,#H'0000
	beq	?L116
	ld	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	_deviceManagerGetProfileAddr
	cmp	AL,#H'0000
	bne	?L116
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L121
	bra	(?L120)
?L116:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L120
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#(H'0001+H'0001)
	bcc	?L120
?L121:
	ld	AL,#H'0001
	bra	(?L114)
?L120:
	ld	AL,#H'0000
?L114:
?LBE16:
?LBE_deviceManagerCanConnect:
	leavel	#10
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_deviceManagerIsSameDevice:
	enterl	#13
?LBB_deviceManagerIsSameDevice:
	st	AL,@(H'000A,Y)
?LBB17:
	tst	@$_theSink+H'0030
	beq	?L123
	ld	X,@$_theSink+H'0030
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L123
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetBdaddr
	cmp	AL,#H'0000
	beq	?L123
	ld	X,@$_theSink+H'0030
	add	X,@(H'000A,Y)
	ld	AL,@(H'0017,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_A2dpDeviceGetBdaddr
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_BdaddrIsSame
	bra	(?L122)
?L123:
	ld	AL,#H'0000
?L122:
?LBE17:
?LBE_deviceManagerIsSameDevice:
	leavel	#13
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_deviceManagerDeviceDisconnectedInd:
	enterl	#24
?LBB_deviceManagerDeviceDisconnectedInd:
	st	AL,@(H'0014,Y)
?LBB18:
	bsr	$_deviceManagerProfilesConnected
	st	AL,@(H'0015,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_deviceManagerGetIndexedAttributes
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0010,Y)
	ld	X,@$XAP_UY
	add	X,#H'0010
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0014,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L126
	ld	AL,@(H'0015,Y)
	and	AL,#H'000F
	cmp	AL,#H'0000
	bne	?L125
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'477C
	bra	(?L130)
?L126:
	ld	AL,@(H'0015,Y)
	and	AL,#H'000F
	cmp	AL,#H'0000
	bne	?L125
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'477D
?L130:
	bsr	$_MessageSend
?L125:
?LBE18:
?LBE_deviceManagerDeviceDisconnectedInd:
	leavel	#24
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_deviceManagerRemoveAllDevices:
	enterl	#2
?LBB_deviceManagerRemoveAllDevices:
	ld	AL,#H'0000
	bsr	$_ConnectionSmDeleteAllAuthDevices
	bsr	$_sinkBleGapEmptyWhiteList
?LBE_deviceManagerRemoveAllDevices:
	leavel	#2
$_deviceManagerGetAttributeHfpVolume:
	enterl	#13
?LBB_deviceManagerGetAttributeHfpVolume:
	ld	X,@$XAP_AL
	st	AH,@(H'000A,Y)
?LBB19:
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UXL
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	beq	?L133
	ld	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L132)
?L133:
	ld	AL,#H'0000
?L132:
?LBE19:
?LBE_deviceManagerGetAttributeHfpVolume:
	leavel	#13
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
	ENDMOD

;# Function pattern *movqi2 used[0] = 139 used[1] = 33 total = 172
;# Function pattern *movqi3 used[0] = 149 total = 149
;# Function pattern *movqi8 used[0] = 8 total = 8
;# Function pattern *addqi0 used[0] = 23 total = 23
;# Function pattern *addqi2 used[0] = 12 used[2] = 5 total = 17
;# Function pattern *andqi3 used[0] = 29 total = 29
;# Function pattern *iorqi3 used[0] = 7 total = 7
;# Function pattern *xorqi3 used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 3 total = 3
;# Function pattern *mulqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 9 total = 9
;# Function pattern *ashrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 16 total = 16
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 38 total = 38
;# Function pattern movstrqi+3 used[0] = 36 used[1] = 7 total = 43
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 14 total = 14
	MODULE	sink_display
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_dut
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_sine_tone:
	dc	H'9002
	dc	H'A040
	dc	H'B000
	dc	H'1A01
	dc	H'3FE0
	dc	H'8000
	.CODE
_getDUTMode:
; leaf function with empty stack frame
?LBB_getDUTMode:
	ld	AH,@_dut?
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0003
?LBE_getDUTMode:
	rts
_isDutAudioActive:
	enterl	#2
?LBB_isDutAudioActive:
	bsr	_getDUTMode
	cmp	AL,#H'0001
	bne	?L3
	ld	AL,#H'0001
	bra	(?L2)
?L3:
	ld	AL,#H'0000
?L2:
?LBE_isDutAudioActive:
	leavel	#2
_setDUTMode:
	enterl	#3
?LBB_setDUTMode:
	st	AL,@(0,Y)
	bsr	_isDutAudioActive
	cmp	AL,#H'0000
	beq	?L6
	bsr	$_AudioStopTone
	bsr	$_AudioDisconnect
?L6:
	ld	AL,#H'0003
	and	AL,@(0,Y)
	asl	#H'000C
	ld	AH,@_dut?
	and	AH,#-H'3001
	or	AH,@$XAP_AL
	st	AH,@_dut?
?LBE_setDUTMode:
	leavel	#3
_getDUTLed:
; leaf function with empty stack frame
?LBB_getDUTLed:
	ld	AH,@_dut?
	lsr	#H'000E
	ld	AL,@$XAP_AH
?LBE_getDUTLed:
	rts
_setDUTLed:
; leaf function with empty stack frame
?LBB_setDUTLed:
	asl	#H'000E
	ld	AH,@_dut?
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@_dut?
?LBE_setDUTLed:
	rts
_enterDUTPowerOn:
	enterl	#3
?LBB_enterDUTPowerOn:
	ld	AL,#H'0001
	bsr	$_PioSetPowerPin
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0038,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bsr	$_PioSetPio
?LBE_enterDUTPowerOn:
	leavel	#3
_switchDUTLed:
	enterl	#3
?LBB_switchDUTLed:
	bsr	_getDUTLed
	cmp	AL,#H'0001
	beq	?L12
	cmp	AL,#H'0001
	bcs	?L16
	cmp	AL,#H'0002
	beq	?L13
	cmp	AL,#H'0003
	beq	?L14
	bra	(?L16)
?L12:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0002
	bra	(?L18)
?L13:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0003
	bra	(?L18)
?L14:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0000
	bra	(?L18)
?L16:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0001
?L18:
	bsr	_setDUTLed
?LBE_switchDUTLed:
	leavel	#3
$_enterDutMode:
	enterl	#2
?LBB_enterDutMode:
	ld	AL,#H'0005
	bsr	_setDUTMode
	bsr	$_ConnectionEnterDutMode
?LBE_enterDutMode:
	leavel	#2
$_enterTxContinuousTestMode:
	enterl	#3
?LBB_enterTxContinuousTestMode:
	ld	AL,#H'0004
	bsr	_setDUTMode
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0989
	ld	AH,#H'003F
	bsr	$_TestTxStart
?LBE_enterTxContinuousTestMode:
	leavel	#3
$_checkForDUTModeEntry:
	enterl	#2
?LBB_checkForDUTModeEntry:
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0034,X)
	and	AL,#H'00FF
	bsr	$_PioGetPio
	cmp	AL,#H'0000
	beq	?L26
	bsr	$_enterDutMode
	ld	AL,#H'0001
	bra	(?L25)
?L26:
	ld	AL,#H'0000
?L25:
?LBE_checkForDUTModeEntry:
	leavel	#2
$_enterServiceMode:
	enterl	#3
?LBB_enterServiceMode:
	ld	AL,#H'0003
	bsr	_setDUTMode
	bsr	$_deviceManagerRemoveAllDevices
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4727
	bsr	$_MessageSend
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4001
	bsr	$_MessageSend
	ld	X,@$_theSink+H'0005
	ld	AL,#H'0000
	st	AL,@(H'000A,X)
	ld	X,@$_theSink+H'0005
	st	AL,@(H'000D,X)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4003
	bsr	$_MessageSend
	ld	AL,#($_theSink)
	bsr	$_ConnectionReadLocalAddr
?LBE_enterServiceMode:
	leavel	#3
_hex?:
; leaf function with empty stack frame
?LBB_hex:
	cmp	AL,#H'0009
	bgt	?L29
	add	AL,#H'0030
	bra	(?L28)
?L29:
	add	AL,#H'0037
?L28:
?LBE_hex:
	rts
$_DutHandleLocalAddr:
	enterl	#43
?LBB_DutHandleLocalAddr:
	st	AL,@(H'0024,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	X,@(H'0004,X)
	st	X,@(H'0026,Y)
	ld	AH,@$XAP_UXL
	and	AH,#-H'1000
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(0,Y)
	ld	AH,@(H'0026,Y)
	and	AH,#H'0F00
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0026,Y)
	and	AH,#H'00F0
	lsr	#H'0004
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0026,Y)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'0003,Y)
	ld	X,@(H'0024,Y)
	ld	X,@(H'0003,X)
	st	X,@(H'0027,Y)
	ld	AH,@$XAP_UXL
	and	AH,#H'00F0
	lsr	#H'0004
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0027,Y)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'0005,Y)
	ld	X,@(H'0024,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	and	AL,#H'0000
	and	AH,#H'00F0
	lsr	#H'0014
	bsr	_hex?
	st	AL,@(H'0006,Y)
	ld	X,@(H'0024,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	and	AL,#H'0000
	and	AH,#H'000F
	lsr	#H'0010
	bsr	_hex?
	st	AL,@(H'0007,Y)
	ld	X,@(H'0024,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	and	AL,#H'F000
	and	AH,#H'0000
	lsr	#H'000C
	bsr	_hex?
	st	AL,@(H'0008,Y)
	ld	X,@(H'0024,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	and	AL,#H'0F00
	and	AH,#H'0000
	lsr	#H'0008
	bsr	_hex?
	st	AL,@(H'0009,Y)
	ld	X,@(H'0024,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	and	AL,#H'00F0
	and	AH,#H'0000
	lsr	#H'0004
	bsr	_hex?
	st	AL,@(H'000A,Y)
	ld	X,@(H'0024,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'000B,Y)
	ld	AH,#H'0020
	st	AH,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0020
	bsr	$_GetDeviceIdFullVersion
	ld	AL,@(H'0020,Y)
	st	AL,@(H'0028,Y)
	ld	AH,@$XAP_AL
	and	AH,#-H'1000
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'000D,Y)
	ld	AH,@(H'0028,Y)
	and	AH,#H'0F00
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'000E,Y)
	ld	AH,@(H'0028,Y)
	and	AH,#H'00F0
	lsr	#H'0004
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'000F,Y)
	ld	AL,@(H'0028,Y)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'0010,Y)
	ld	AH,@(H'0021,Y)
	and	AH,#-H'1000
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0011,Y)
	ld	AH,@(H'0021,Y)
	and	AH,#H'0F00
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0012,Y)
	ld	X,#H'0020
	st	X,@(H'0013,Y)
	ld	AH,@(H'0021,Y)
	and	AH,#H'00F0
	lsr	#H'0004
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0014,Y)
	ld	AL,@(H'0021,Y)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'0015,Y)
	ld	AH,@(H'0022,Y)
	and	AH,#-H'1000
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0016,Y)
	ld	AH,@(H'0022,Y)
	and	AH,#H'0F00
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0017,Y)
	ld	AH,@(H'0022,Y)
	and	AH,#H'00F0
	lsr	#H'0004
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'0018,Y)
	ld	AL,@(H'0022,Y)
	ld	AH,#H'001A
	st	AH,@(H'0025,Y)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'0019,Y)
	tst	@(H'0023,Y)
	beq	?L33
	ld	AL,#H'0020
	st	AL,@(H'001A,Y)
	ld	AH,@(H'0023,Y)
	and	AH,#-H'1000
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'001B,Y)
	ld	AH,@(H'0023,Y)
	and	AH,#H'0F00
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'001C,Y)
	ld	AH,@(H'0023,Y)
	and	AH,#H'00F0
	lsr	#H'0004
	ld	AL,@$XAP_AH
	bsr	_hex?
	st	AL,@(H'001D,Y)
	ld	AL,@(H'0023,Y)
	ld	X,#H'001F
	st	X,@(H'0025,Y)
	and	AL,#H'000F
	bsr	_hex?
	st	AL,@(H'001E,Y)
?L33:
	ld	X,@(H'0025,Y)
	ld	AH,@$XAP_UY
	add	X,@$XAP_AH
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,@(H'0025,Y)
	bsr	$_ConnectionChangeLocalName
?LBE2:
?LBE_DutHandleLocalAddr:
	leavel	#43
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_enterAudioTestMode:
	enterl	#13
?LBB_enterAudioTestMode:
	ld	AL,#H'0001
	bsr	_setDUTMode
	bsr	_enterDUTPowerOn
	bsr	$_AudioDisconnect
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0023
	st	AL,@(H'0001,Y)
	ld	AH,@$_theSink+H'001A
	lsr	#H'0004
	and	AH,#H'000F
	st	AH,@(H'0002,Y)
	ld	AL,#H'1F40
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0004
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'0005
	st	AL,@(H'0008,Y)
	ld	AL,@$_theSink+H'000A
	add	AL,#H'003C
	st	AL,@(H'0009,Y)
	ld	AL,#($_theSink)
	st	AL,@(H'000A,Y)
	ld	AL,#($_csr_dut_audio_plugin)
	ld	AH,#H'0000
	bsr	$_AudioConnect
?LBE_enterAudioTestMode:
	leavel	#13
$_enterToneTestMode:
	enterl	#13
?LBB_enterToneTestMode:
	ld	AL,#H'0001
	bsr	_setDUTMode
	bsr	_enterDUTPowerOn
	bsr	$_AudioDisconnect
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0023
	st	AL,@(H'0001,Y)
	ld	AH,@$_theSink+H'001A
	lsr	#H'0004
	and	AH,#H'000F
	st	AH,@(H'0002,Y)
	ld	AL,#-H'4480
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0003
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'0005
	st	AL,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,#($_theSink)
	st	AL,@(H'000A,Y)
	ld	AL,#($_csr_dut_audio_plugin)
	ld	AH,#H'0000
	bsr	$_AudioConnect
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolume
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0019
	lsr	#H'0002
	ld	AL,@$_theSink+H'0023
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,#(_sine_tone)
	and	AH,#H'0001
	bsr	$_AudioPlayTone
?LBE_enterToneTestMode:
	leavel	#13
$_enterKeyTestMode:
	enterl	#3
?LBB_enterKeyTestMode:
	ld	AL,#H'0002
	bsr	_setDUTMode
	bsr	_enterDUTPowerOn
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_LedConfigure
?LBE_enterKeyTestMode:
	leavel	#3
$_checkDUTKeyPress:
	enterl	#2
?LBB_checkDUTKeyPress:
	bsr	_getDUTMode
	cmp	AL,#H'0002
	bne	?L37
	bsr	_switchDUTLed
?L37:
?LBE_checkDUTKeyPress:
	leavel	#2
$_checkDUTKeyRelease:
	enterl	#2
?LBB_checkDUTKeyRelease:
	bsr	_getDUTMode
	cmp	AL,#H'0002
	bne	?L40
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'000C)
	bcc	?L40
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE51,X)
	brxl
	.SEG	CONST
?JTBASE51:
	.CODE
?L51:
	.SEG	CONST
	dc	lwrd(?L40-?L51)
	dc	lwrd(?L49-?L51)
	dc	lwrd(?L40-?L51)
	dc	lwrd(?L40-?L51)
	dc	lwrd(?L49-?L51)
	dc	lwrd(?L40-?L51)
	dc	lwrd(?L49-?L51)
	dc	lwrd(?L49-?L51)
	dc	lwrd(?L40-?L51)
	dc	lwrd(?L49-?L51)
	dc	lwrd(?L49-?L51)
	dc	lwrd(?L40-?L51)
	dc	lwrd(?L49-?L51)
	.CODE
?L49:
	bsr	_switchDUTLed
?L40:
?LBE_checkDUTKeyRelease:
	leavel	#2
$_dutInit:
	enterl	#2
?LBB_dutInit:
	ld	AL,#H'0000
	bsr	_setDUTMode
	ld	AL,#H'0000
	bsr	_setDUTLed
?LBE_dutInit:
	leavel	#2
$_dutDisconnect:
	enterl	#2
?LBB_dutDisconnect:
	ld	AL,#H'0000
	bsr	_setDUTMode
?LBE_dutDisconnect:
	leavel	#2
	.SEG	VAR
_dut?:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 109 used[1] = 1 total = 110
;# Function pattern *movqi3 used[0] = 140 total = 140
;# Function pattern *movhi used[2] = 5 total = 5
;# Function pattern *andhi3 used[0] = 5 total = 5
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 22 total = 22
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern *lshrhi3 used[0] = 5 total = 5
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 31 total = 31
;# Function pattern *call_value1 used[0] = 48 total = 48
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 1 total = 3
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 8 total = 8
	MODULE	sink_fm
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gaia
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleGattConnectInd:
	enterl	#4
?LBB_handleGattConnectInd:
	ld	X,@$XAP_AL
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,@(H'0005,X)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	bsr	$_GattConnectResponse
?LBE_handleGattConnectInd:
	leavel	#4
_handleGattConnectCfm:
; leaf function with empty stack frame
?LBB_handleGattConnectCfm:
?LBE_handleGattConnectCfm:
	rts
_handleGattExchangeMtuInd:
	enterl	#2
?LBB_handleGattExchangeMtuInd:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(0,X)
	ld	AH,#H'0017
	bsr	$_GattExchangeMtuResponse
?L3:
?LBE_handleGattExchangeMtuInd:
	leavel	#2
_handleGattExchangeMtuCfm:
	enterl	#3
?LBB_handleGattExchangeMtuCfm:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AL,#H'0000
	beq	?L5
?LBB3:
	ld	AL,@(0,X)
	bsr	$_gattClientFindByCid
	st	AL,@(0,Y)
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	tst	@(0,Y)
	beq	?L5
	cmp	AL,#H'0000
	beq	?L5
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	bne	?L5
	ld	AL,@(0,Y)
	bsr	$_gattDiscoverPrimaryServices
	ld	AL,#H'0001
	bsr	$_sinkBleGapSetDiscoveryInProgress
?L5:
?LBE3:
?LBE2:
?LBE_handleGattExchangeMtuCfm:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_handleGattDiscoverAllPrimaryServicesCfm:
	enterl	#6
?LBB_handleGattDiscoverAllPrimaryServicesCfm:
	ld	X,@$XAP_AL
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0003,X)
	bsr	$_gattClientStoreDiscoveredService
?LBE_handleGattDiscoverAllPrimaryServicesCfm:
	leavel	#6
$_sinkGattMsgHandler:
	enterl	#2
?LBB_sinkGattMsgHandler:
	ld	AL,@(H'0002,Y)
	add	AH,#-H'5801
	cmp	AH,#(H'0001+H'0006)
	bcc	?L9
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE17,X)
	brxl
	.SEG	CONST
?JTBASE17:
	.CODE
?L17:
	.SEG	CONST
	dc	lwrd(?L12-?L17)
	dc	lwrd(?L11-?L17)
	dc	lwrd(?L9-?L17)
	dc	lwrd(?L9-?L17)
	dc	lwrd(?L14-?L17)
	dc	lwrd(?L13-?L17)
	dc	lwrd(?L15-?L17)
	.CODE
?L11:
	bsr	_handleGattConnectInd
	bra	(?L9)
?L12:
	bsr	_handleGattConnectCfm
	bra	(?L9)
?L13:
	bsr	_handleGattExchangeMtuInd
	bra	(?L9)
?L14:
	bsr	_handleGattExchangeMtuCfm
	bra	(?L9)
?L15:
	bsr	_handleGattDiscoverAllPrimaryServicesCfm
?L9:
?LBE_sinkGattMsgHandler:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 13 used[1] = 1 total = 14
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 1 total = 5
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	sink_gatt_client
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_gattClientHasMaxClients:
	enterl	#2
?LBB_gattClientHasMaxClients:
	ld	AH,#H'0000
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0033,X)
	cmp	AL,#H'0002
	bcz	?L2
	ld	AH,#H'0001
?L2:
	ld	AL,@$XAP_AH
?LBE_gattClientHasMaxClients:
	leavel	#2
_gattClientDiscoveryComplete:
	enterl	#4
?LBB_gattClientDiscoveryComplete:
	st	AL,@(0,Y)
?LBB2:
	bsr	$_gattClientGetServiceData
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	bsr	$_PanicNull
	tst	@(H'0001,Y)
	beq	?L5
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
?L5:
	ld	X,@(0,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	cmp	AH,#H'0001
	bne	?L4
	ld	AL,@(H'0001,X)
	bsr	$_sinkBleCentralConnCompleteEvent
?L4:
?LBE2:
?LBE_gattClientDiscoveryComplete:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_initialiseGattClientService:
	enterl	#6
?LBB_initialiseGattClientService:
	st	AL,@(H'0001,Y)
?LBB3:
	bsr	$_gattClientGetDiscoveredServices
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_gattClientGetServiceData
	st	AL,@H'fff8
	ld	AL,#H'0000
	st	AL,@H'fff9
	tst	@(H'0002,Y)
	beq	?L8
	tst	@H'fff8
	beq	?L8
	st	AL,@H'fffa
	ld	X,@H'fff8
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcc	?L18
?L15:
	tst	@(H'0002,Y)
	beq	?L14
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L14
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	ld	X,@(H'0002,X)
	st	X,@(0,Y)
	bsr	$_sinkGattAncsClientAddService
	bra	(?L8)
?L14:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	X,#H'0001
	add	X,@H'fffa
	st	X,@H'fffa
	ld	X,@H'fff8
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@H'fffa
	cmp	AL,@$XAP_AH
	bcs	?L15
?L18:
	tst	@H'fff9
	bne	?L8
	ld	AL,@(H'0001,Y)
	ld	AH,@H'fff8
	bsr	$_gattClientProcessSecurityRequirements
?L8:
?LBE3:
?LBE_initialiseGattClientService:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_gattClientBdAddrtIsBonded:
	enterl	#19
?LBB_gattClientBdAddrtIsBonded:
	ld	X,@$XAP_AL
	st	AH,@(H'000F,Y)
?LBB4:
	ld	AL,#H'0000
	ld	AH,@(0,X)
	st	AH,@(H'0010,Y)
	cmp	AH,#H'0001
	bne	?L23
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	ld	AL,@(H'0010,Y)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_VmGetPublicAddress
	bra	(?L24)
?L23:
	tst	@(0,X)
	bne	?L24
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	ld	AL,#H'0001
?L24:
	cmp	AL,#H'0000
	beq	?L26
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_memcpy
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_ConnectionSmGetAttributeNowReq
?L26:
?LBE4:
?LBE_gattClientBdAddrtIsBonded:
	leavel	#19
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattDiscoverPrimaryServices:
	enterl	#2
?LBB_gattDiscoverPrimaryServices:
	ld	X,@$XAP_AL
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,@(H'0001,X)
	bsr	$_GattDiscoverAllPrimaryServicesRequest
?LBE_gattDiscoverPrimaryServices:
	leavel	#2
$_gattClientGetDiscoveredServices:
	enterl	#2
?LBB_gattClientGetDiscoveredServices:
?LBB5:
	cmp	AL,#H'0000
	beq	?L30
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L30
	ld	AL,@(0,X)
	bra	(?L29)
?L30:
	ld	AL,#H'0000
?L29:
?LBE5:
?LBE_gattClientGetDiscoveredServices:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattClientInitialiseDiscoveredServices:
	enterl	#11
?LBB_gattClientInitialiseDiscoveredServices:
	st	AL,@(H'0006,Y)
?LBB6:
	bsr	$_gattClientGetDiscoveredServices
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	ld	AH,#H'0001
	st	AH,@(H'0008,Y)
	tst	@(H'0007,Y)
	beq	?L33
	cmp	AL,#H'0000
	beq	?L33
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	smult	#H'0003
	ld	X,@(H'0007,Y)
	add	X,@$XAP_AL
	st	X,@(H'0007,Y)
	cmp	X,#H'0000
	beq	?L33
	ld	AL,@(0,X)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L33
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE50,X)
	brxl
	.SEG	CONST
?JTBASE50:
	.CODE
?L50:
	.SEG	CONST
	dc	lwrd(?L33-?L50)
	dc	lwrd(?L33-?L50)
	dc	lwrd(?L38-?L50)
	dc	lwrd(?L33-?L50)
	dc	lwrd(?L33-?L50)
	dc	lwrd(?L33-?L50)
	dc	lwrd(?L48-?L50)
	dc	lwrd(?L33-?L50)
	.CODE
?L38:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0001,X)
	bsr	$_sinkGattAncsClientAddService
	cmp	AL,#H'0000
	beq	?L33
	bra	(?L52)
?L48:
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0007
	bsr	$_MessageSend
?L52:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
?L33:
?LBE7:
	tst	@(H'0008,Y)
	beq	?L32
	ld	AL,@(H'0006,Y)
	bsr	$_gattClientDiscoveryError
?L32:
?LBE6:
?LBE_gattClientInitialiseDiscoveredServices:
	leavel	#11
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_gattClientAdd:
	enterl	#22
?LBB_gattClientAdd:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
?LBB8:
	bsr	_gattClientHasMaxClients
	cmp	AL,#H'0000
	bne	?L55
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0033,X)
	smult	#H'0009
	add	AL,@$XAP_UXL
	add	AL,#H'0018
	st	AL,@(H'0012,Y)
	ld	AL,#H'0001
	ld	AH,#H'000D
	bsr	$_calloc
	st	AL,@(H'0013,Y)
	cmp	AL,#H'0000
	beq	?L55
	ld	X,@(H'0012,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0011,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	_gattClientBdAddrtIsBonded
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_deviceManagerClearAttributes
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'000C
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0012,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0005,X)
?L56:
	ld	X,@(H'0012,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L59
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L59
	ld	AL,@(H'0005,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L58
?L59:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0008
	bsr	$_MessageCancelFirst
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0008
	bsr	$_MessageSend
?L58:
	ld	AL,@(H'0016,Y)
	asl	#H'000E
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0008,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0008,X)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0033,X)
	add	AL,#H'0001
	st	AL,@(H'0033,X)
	ld	AL,#H'0001
	ld	AH,#H'0015
	bsr	$_calloc
	ld	X,@(H'0013,Y)
	st	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L60
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0017
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_GattExchangeMtuRequest
	ld	AL,#H'0001
	bra	(?L53)
?L60:
	ld	AL,@(H'0013,Y)
	bsr	$_free
?L55:
	ld	AL,#H'0000
?L53:
?LBE8:
?LBE_gattClientAdd:
	leavel	#22
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_gattClientFindByCid:
	enterl	#2
?LBB_gattClientFindByCid:
	st	AL,@H'fff9
?LBB9:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@$_theSink+H'0004
	st	X,@H'fff8
	cmp	AL,@(H'0033,X)
	bcc	?L70
?L68:
	ld	AL,@(-1,Y)
	smult	#H'0009
	ld	AH,@$XAP_AL
	ld	X,@H'fff8
	add	X,@$XAP_AL
	tst	@(H'0019,X)
	beq	?L65
	ld	AL,@(H'0019,X)
	cmp	AL,@H'fff9
	bne	?L65
	ld	AL,@$_theSink+H'0004
	add	AL,@$XAP_AH
	add	AL,#H'0018
	bra	(?L62)
?L65:
	ld	X,#H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	ld	AL,@$_theSink+H'0004
	st	AL,@H'fff8
	ld	AL,@$XAP_UXL
	ld	X,@H'fff8
	cmp	AL,@(H'0033,X)
	bcs	?L68
?L70:
	ld	AL,#H'0000
?L62:
?LBE9:
?LBE_gattClientFindByCid:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_gattClientRemove:
	enterl	#3
?LBB_gattClientRemove:
?LBB10:
	bsr	$_gattClientFindByCid
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L75
	ld	X,@$_theSink+H'0004
	tst	@(H'0033,X)
	beq	?L75
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0008,X)
	and	AL,#H'3FFF
	st	AL,@(H'0008,X)
	tst	@(0,X)
	beq	?L76
?LBB11:
	ld	AL,@$XAP_UXL
	bsr	$_gattClientGetDiscoveredServices
	cmp	AL,#H'0000
	beq	?L77
	bsr	$_free
?L77:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(0,X)
?L76:
?LBE11:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0033,X)
	add	AL,#-H'0001
	st	AL,@(H'0033,X)
	ld	AL,#H'0001
	bra	(?L74)
?L75:
	ld	AL,#H'0000
?L74:
?LBE10:
?LBE_gattClientRemove:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
$_gattClientAddService:
	enterl	#5
?LBB_gattClientAddService:
	st	AL,@(0,Y)
?LBB12:
	cmp	AL,#H'0000
	beq	?L79
	ld	X,@$XAP_AL
?LBB13:
	ld	X,@(0,X)
	st	X,@(H'0001,Y)
	add	AH,@(H'000B,X)
	ld	AL,@$XAP_AH
	add	AL,#H'000D
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	bsr	$_realloc
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L79
	ld	X,@(H'0001,Y)
?LBB14:
	ld	AH,@(H'000B,X)
	add	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#-H'000D
	ld	X,@H'fff8
	st	AL,@(H'000B,X)
	ld	X,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,X)
	ld	AL,@H'ffff
	ld	AL,#H'000C
	add	AL,@$XAP_AH
	bra	(?L78)
?L79:
?LBE14:
?LBE13:
	ld	AL,#H'0000
?L78:
?LBE12:
?LBE_gattClientAddService:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
_gattClientDeleteLastService:
	enterl	#4
?LBB_gattClientDeleteLastService:
	st	AL,@(0,Y)
?LBB15:
	cmp	AL,#H'0000
	beq	?L81
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'000B,X)
	sub	AL,@$XAP_AH
	add	AL,#H'000D
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,Y)
	bsr	$_realloc
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L81
	ld	AL,@(H'0001,Y)
	add	AL,#-H'000D
	ld	X,@H'fff8
	st	AL,@(H'000B,X)
	ld	X,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,X)
	ld	AL,@H'ffff
?L81:
?LBE16:
?LBE15:
?LBE_gattClientDeleteLastService:
	leavel	#4
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_gattClientStoreDiscoveredService:
	enterl	#7
?LBB_gattClientStoreDiscoveredService:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB17:
	bsr	$_gattClientFindByCid
	st	AL,@(H'0002,Y)
	bsr	$_gattClientGetServiceData
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	tst	@(H'0002,Y)
	beq	?L85
	tst	@(H'0003,Y)
	beq	?L85
	ld	AL,@(H'0002,Y)
	bsr	$_gattClientGetDiscoveredServices
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L85
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	smult	#H'0003
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L85
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L88
	ld	X,@(H'0007,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	add	AL,#H'E7FF
	nop
	addc	AH,#H'FFFF
	cmp	AH,#hwrd(H'0001+H'0012)
	bcs	?L112
	bne	?L100
	cmp	AL,#lwrd(H'0001+H'0012)
	bcc	?L100
?L112:
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE99,X)
	brxl
	.SEG	CONST
?JTBASE99:
	.CODE
?L99:
	.SEG	CONST
	dc	lwrd(?L96-?L99)
	dc	lwrd(?L94-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L95-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L90-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L100-?L99)
	dc	lwrd(?L92-?L99)
	dc	lwrd(?L97-?L99)
	.CODE
?L90:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	cmp	AH,#H'0001
	bne	?L100
	ld	X,@H'fff8
	st	AH,@(0,X)
	bra	(?L110)
?L92:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	cmp	AH,#H'0001
	bne	?L100
	ld	AL,#H'0004
	bra	(?L109)
?L94:
	ld	AL,#H'0003
	bra	(?L109)
?L95:
	ld	AL,#H'0005
	bra	(?L109)
?L96:
	ld	AL,#H'0006
	bra	(?L109)
?L97:
	ld	AL,#H'0007
	bra	(?L109)
?L88:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0003
	bne	?L100
	ld	X,@(H'0007,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'7905
	bne	?L100
	cmp	AL,#H'F431
	bne	?L100
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	cmp	AH,#H'B5CE
	bne	?L100
	cmp	AL,#H'4E99
	bne	?L100
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	cmp	AH,#H'A40F
	bne	?L100
	cmp	AL,#H'4B1E
	bne	?L100
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	cmp	AH,#H'122D
	bne	?L100
	cmp	AL,#H'00D0
	bne	?L100
	ld	AL,#H'0002
?L109:
	ld	X,@H'fff8
	st	AL,@(0,X)
?L110:
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	asl	#H'0008
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
?L100:
	tst	@(H'000A,Y)
	bne	?L103
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L104
	ld	AL,@(H'0002,Y)
	bsr	_initialiseGattClientService
	bra	(?L103)
?L104:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	cmp	AH,#H'0001
	bne	?L106
	ld	AL,@(0,Y)
	bsr	$_gattClientDisconnect
	bra	(?L103)
?L106:
	ld	AL,@(0,Y)
	bsr	$_gattClientRemove
?L103:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L85:
	tst	@(H'0004,Y)
	beq	?L84
	ld	AL,@(H'0002,Y)
	bsr	$_gattClientDiscoveryError
?L84:
?LBE17:
?LBE_gattClientStoreDiscoveredService:
	leavel	#7
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_gattClientGetServiceData:
	enterl	#2
?LBB_gattClientGetServiceData:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L122
	ld	AL,@(0,X)
	bra	(?L121)
?L122:
	ld	AL,#H'0000
?L121:
?LBE_gattClientGetServiceData:
	leavel	#2
$_gattClientDiscoveredServiceInitialised:
	enterl	#4
?LBB_gattClientDiscoveredServiceInitialised:
	st	AL,@(0,Y)
?LBB18:
	bsr	$_gattClientGetServiceData
	st	AL,@(H'0001,Y)
	tst	@(0,Y)
	beq	?L124
	ld	X,@(0,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L124
	tst	@(H'0001,Y)
	beq	?L125
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
?L125:
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattClientServiceChanged
	bra	(?L123)
?L124:
	tst	@(H'0001,Y)
	beq	?L126
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	add	AL,#H'0001
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	X,@$XAP_AH
	and	X,#H'00FF
	lsr	#H'0008
	cmp	X,@$XAP_AH
	blt	?L127
	ld	AL,@(0,Y)
	bsr	_gattClientDiscoveryComplete
	bra	(?L123)
?L127:
	ld	AL,@(0,Y)
	bsr	$_gattClientInitialiseDiscoveredServices
	bra	(?L123)
?L126:
	ld	AL,@(0,Y)
	bsr	$_gattClientDiscoveryError
?L123:
?LBE18:
?LBE_gattClientDiscoveredServiceInitialised:
	leavel	#4
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_gattClientRemoveDiscoveredService:
	enterl	#6
?LBB_gattClientRemoveDiscoveredService:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB19:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	bsr	$_gattClientGetServiceData
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L132
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	beq	?L134
	cmp	AL,#H'0007
	beq	?L137
	bra	(?L132)
?L134:
	ld	X,@(H'0003,Y)
	tst	@(H'0005,X)
	beq	?L132
	ld	AL,@(H'0005,X)
	bsr	$_sinkGattAncsClientRemoveService
	ld	AL,@(0,Y)
	ld	AH,#H'000C
	bsr	_gattClientDeleteLastService
	tst	@(H'0003,Y)
	beq	?L139
	ld	X,@(H'0003,Y)
	tst	@(H'0005,X)
	beq	?L139
	ld	AL,#H'0000
	st	AL,@(H'0005,X)
	bra	(?L139)
?L137:
	ld	X,@(H'0003,Y)
	tst	@(H'000A,X)
	beq	?L132
	ld	AL,@(0,Y)
	ld	AH,#H'0007
	bsr	_gattClientDeleteLastService
	tst	@(H'0003,Y)
	beq	?L139
	ld	X,@(H'0003,Y)
	tst	@(H'000A,X)
	beq	?L139
	ld	AL,#H'0000
	st	AL,@(H'000A,X)
?L139:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L132:
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_gattClientRemoveDiscoveredService:
	leavel	#6
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_gattClientDisconnect:
	enterl	#3
?LBB_gattClientDisconnect:
	st	AL,@(0,Y)
	bsr	$_gattClientFindByCid
	cmp	AL,#H'0000
	beq	?L144
	ld	AL,@(0,Y)
	bsr	$_GattManagerDisconnectRequest
?L144:
?LBE_gattClientDisconnect:
	leavel	#3
$_gattClientDisconnectAll:
	enterl	#3
?LBB_gattClientDisconnectAll:
?LBB20:
	ld	AL,#H'0000
	st	AL,@(-2,Y)
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0004
	st	AL,@(-1,Y)
	st	AL,@H'fff8
	ld	AL,@(-2,Y)
	ld	X,@(-1,Y)
	cmp	AL,@(H'0033,X)
	bcc	?L154
?L152:
	ld	AL,@(0,Y)
	smult	#H'0009
	ld	X,@H'fff8
	add	X,@$XAP_AL
	tst	@(H'0019,X)
	beq	?L149
	ld	AL,@(H'0019,X)
	bsr	$_GattManagerDisconnectRequest
	ld	X,#H'0001
	st	X,@(-2,Y)
?L149:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0004
	st	X,@H'fff8
	cmp	AL,@(H'0033,X)
	bcs	?L152
?L154:
?LBE20:
	ld	AL,@(-2,Y)
?LBE_gattClientDisconnectAll:
	leavel	#3
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_gattClientDiscoveryError:
	enterl	#3
?LBB_gattClientDiscoveryError:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	$_sinkBleGapSetDiscoveryInProgress
	tst	@(0,Y)
	beq	?L157
	ld	AL,@(0,Y)
	bsr	_gattClientDiscoveryComplete
?L157:
?LBE_gattClientDiscoveryError:
	leavel	#3
_gattClientGetNumberOfCentralConnected:
	enterl	#2
?LBB_gattClientGetNumberOfCentralConnected:
?LBB21:
	ld	AL,#H'0000
	st	AL,@(-2,Y)
	st	AL,@(-1,Y)
	ld	AL,@$_theSink+H'0004
	st	AL,@H'fff8
?L164:
	ld	AL,@(-1,Y)
	smult	#H'0009
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0020,X)
	lsr	#H'000E
	cmp	AH,#H'0001
	bne	?L163
	ld	AL,#H'0001
	add	AL,@(-2,Y)
	st	AL,@(-2,Y)
?L163:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0002
	bcz	?L164
?LBE21:
	ld	AL,@(-2,Y)
?LBE_gattClientGetNumberOfCentralConnected:
	leavel	#2
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_gattClientHasMaxCentralClients:
; leaf function with empty stack frame
?LBB_gattClientHasMaxCentralClients:
	ld	AL,#H'0001
?LBE_gattClientHasMaxCentralClients:
	rts
$_gattClientHasNoClients:
	enterl	#2
?LBB_gattClientHasNoClients:
	ld	AL,#H'0000
	ld	X,@$_theSink+H'0004
	tst	@(H'0033,X)
	bne	?L173
	ld	AL,#H'0001
?L173:
?LBE_gattClientHasNoClients:
	leavel	#2
$_gattClientRemoveServices:
	enterl	#4
?LBB_gattClientRemoveServices:
	st	AL,@(0,Y)
?LBB22:
	bsr	$_gattClientGetServiceData
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L174
	ld	X,@$XAP_AL
	tst	@(H'0005,X)
	beq	?L181
	ld	AL,@(H'0005,X)
	bsr	$_sinkGattAncsClientRemoveService
?L181:
	ld	X,@(H'0001,Y)
	tst	@(H'0009,X)
	beq	?L174
	ld	AL,@(H'0009,X)
	ld	X,@(0,Y)
	ld	AH,@(H'0001,X)
	bsr	$_sinkGattClientServiceRemove
?L174:
?LBE22:
?LBE_gattClientRemoveServices:
	leavel	#4
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_gattClientServiceChanged:
	enterl	#10
?LBB_gattClientServiceChanged:
	st	AL,@(H'0006,Y)
?LBB23:
	bsr	$_gattClientFindByCid
	st	AL,@(H'0007,Y)
	bsr	$_gattClientGetServiceData
	ld	AH,@$XAP_AL
	tst	@(H'0007,Y)
	beq	?L184
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	or	AL,#H'2000
	st	AL,@(H'0008,X)
	cmp	AH,#H'0000
	beq	?L184
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L184
?LBB24:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_gattClientRemoveServices
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0006
	bsr	$_MessageCancelFirst
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0006
	bsr	$_MessageSend
?L184:
?LBE24:
?LBE23:
?LBE_gattClientServiceChanged:
	leavel	#10
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
$_gattClientRediscoverServices:
	enterl	#6
?LBB_gattClientRediscoverServices:
	st	AL,@(0,Y)
?LBB25:
	bsr	$_gattClientFindByCid
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	tst	@(H'0001,Y)
	beq	?L187
	ld	AH,#H'000D
	bsr	$_calloc
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L189
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	ld	AH,#H'0015
	bsr	$_calloc
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L189
	ld	AL,@(H'0001,Y)
	bsr	$_gattDiscoverPrimaryServices
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L189:
	tst	@(H'0002,Y)
	beq	?L191
	ld	AL,@(0,Y)
	bsr	$_gattClientDisconnect
?L191:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	and	AL,#-H'2001
	st	AL,@(H'0008,X)
?L187:
?LBE25:
?LBE_gattClientRediscoverServices:
	leavel	#6
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_gattClientProcessSecurityRequirements:
	enterl	#14
?LBB_gattClientProcessSecurityRequirements:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB26:
	ld	AH,#H'0000
	st	AH,@(H'000A,Y)
	bsr	$_gattClientGetDiscoveredServices
	st	AL,@H'fff9
	ld	AL,@(H'000A,Y)
	st	AL,@H'fff8
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcc	?L194
	ld	AH,@(H'0002,X)
	lsr	#H'0008
?L198:
	tst	@H'fff9
	beq	?L197
	ld	X,@H'fff9
	ld	AL,@(0,X)
	add	AL,#-H'0002
	cmp	AL,#H'0002
	bcz	?L205
?L197:
	ld	AL,#H'0003
	add	AL,@H'fff9
	st	AL,@H'fff9
	ld	X,#H'0001
	add	X,@H'fff8
	st	X,@H'fff8
	cmp	X,@$XAP_AH
	bcs	?L198
?L194:
	tst	@(H'000A,Y)
	beq	?L199
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	st	AH,@(H'000B,Y)
	cmp	AH,#H'0001
	bne	?L200
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L192
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_ConnectionDmBleSecurityReq
	bra	(?L192)
?L205:
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
	bra	(?L194)
?L200:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	bsr	$_sinkBleRemoteConnectionSuccessEvent
	bra	(?L192)
?L199:
	ld	AL,@(H'0008,Y)
	bsr	$_gattClientInitialiseDiscoveredServices
?L192:
?LBE26:
?LBE_gattClientProcessSecurityRequirements:
	leavel	#14
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_gattClientStoreConfigAttributes:
	enterl	#27
?LBB_gattClientStoreConfigAttributes:
	st	AL,@(H'0015,Y)
	st	AH,@(H'0016,Y)
?LBB27:
	bsr	$_gattClientFindByCid
	st	AL,@(H'0017,Y)
	ld	AL,#H'0000
	st	AL,@(H'0018,Y)
	tst	@(H'0017,Y)
	beq	?L210
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000A
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L210
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0010
	bsr	_gattClientBdAddrtIsBonded
	cmp	AL,#H'0000
	beq	?L210
	ld	AL,@$XAP_UY
	bsr	$_deviceManagerClearAttributes
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UY
	add	AH,#H'0011
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	bne	?L213
	ld	AL,#H'0001
	st	AL,@(H'0018,Y)
?L213:
	ld	X,@(H'0016,Y)
	cmp	X,#(H'0001+H'0004)
	bcc	?L214
	ld	X,@(?JTBASE225,X)
	brxl
	.SEG	CONST
?JTBASE225:
	.CODE
?L225:
	.SEG	CONST
	dc	lwrd(?L215-?L225)
	dc	lwrd(?L217-?L225)
	dc	lwrd(?L219-?L225)
	dc	lwrd(?L221-?L225)
	dc	lwrd(?L223-?L225)
	.CODE
?L215:
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0017,Y)
	cmp	AL,@(H'0003,X)
	beq	?L214
	ld	AL,@(H'0003,X)
	st	AL,@(H'0007,Y)
	bra	(?L227)
?L217:
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0017,Y)
	cmp	AL,@(H'0004,X)
	beq	?L214
	ld	AL,@(H'0004,X)
	st	AL,@(H'0008,Y)
	bra	(?L227)
?L219:
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0017,Y)
	cmp	AL,@(H'0005,X)
	beq	?L214
	bra	(?L228)
?L221:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0017,Y)
	cmp	AL,@(H'0002,X)
	beq	?L214
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	bra	(?L227)
?L223:
	ld	X,@(H'0017,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0008,Y)
?L228:
	ld	AL,@(H'0005,X)
	st	AL,@(H'0009,Y)
?L227:
	ld	AL,#H'0001
	st	AL,@(H'0018,Y)
?L214:
	tst	@(H'0018,Y)
	beq	?L210
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UY
	add	AH,#H'0011
	bsr	$_deviceManagerStoreAttributes
?L210:
?LBE27:
?LBE_gattClientStoreConfigAttributes:
	leavel	#27
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_gattClientGapNameReadRequested:
	enterl	#3
?LBB_gattClientGapNameReadRequested:
	st	AH,@(0,Y)
?LBB28:
	bsr	$_gattClientFindByCid
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L234
	ld	AL,#H'0001
	st	AL,@(H'0006,X)
	ld	AL,@(0,Y)
	st	AL,@(H'0007,X)
	ld	AL,#H'0001
	bra	(?L233)
?L234:
	ld	AL,#H'0000
?L233:
?LBE28:
?LBE_gattClientGapNameReadRequested:
	leavel	#3
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_gattClientGapNameReadResponse:
	enterl	#8
?LBB_gattClientGapNameReadResponse:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB29:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0033,X)
	bcc	?L246
?L244:
	ld	AL,@(H'0004,Y)
	smult	#H'0009
	add	AL,@$_theSink+H'0004
	add	AL,#H'0018
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L238
	tst	@(H'0006,X)
	beq	?L238
	ld	AL,@(H'0007,X)
	cmp	AL,@(H'0003,Y)
	bcs	?L242
	ld	AH,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bra	(?L247)
?L242:
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	sub	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0007,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0001,X)
?L247:
	bsr	$_GattGapServerReadDeviceNameResponse
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	AL,@(H'0006,X)
	st	AL,@(H'0007,X)
?L238:
	ld	X,@(H'0004,Y)
	add	X,#H'0001
	st	X,@(H'0004,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0004,Y)
	cmp	AL,@(H'0033,X)
	bcs	?L244
?L246:
?LBE29:
?LBE_gattClientGapNameReadResponse:
	leavel	#8
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
	ENDMOD

;# Function pattern *movqi2 used[0] = 189 used[1] = 53 used[3] = 2 total = 244
;# Function pattern *movqi3 used[0] = 245 total = 245
;# Function pattern *movqi8 used[0] = 13 total = 13
;# Function pattern *movhi used[2] = 5 total = 5
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 18 total = 18
;# Function pattern *addqi2 used[0] = 29 used[2] = 13 total = 42
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *mulqi3_const used[0] = 7 total = 7
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 31 total = 31
;# Function pattern *call1 used[0] = 40 total = 40
;# Function pattern *call_value1 used[0] = 46 total = 46
;# Function pattern tablejump_1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 36 used[1] = 39 total = 75
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 32 total = 32
;# Function pattern movstrqi+7 used[0] = 5 total = 5
	MODULE	sink_gatt_client_ancs
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_ancs_ble_advertising_filter:
	dc	H'0005
	dc	H'0079
	dc	H'0031
	dc	H'00F4
	dc	H'00CE
	dc	H'00B5
	dc	H'0099
	dc	H'004E
	dc	H'000F
	dc	H'00A4
	dc	H'001E
	dc	H'004B
	dc	H'002D
	dc	H'0012
	dc	H'00D0
	dc	H'0000
	.CODE
_gattAncsFindConnection:
	enterl	#5
?LBB_gattAncsFindConnection:
	st	AL,@(0,Y)
?LBB2:
	cmp	AL,#H'0000
	bne	?L2
	bra	(?L10)
?L11:
	ld	AL,@(H'0002,Y)
	add	AL,@$_theSink+H'0004
	add	AL,#H'0018
	bra	(?L1)
?L2:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0033,X)
	bcc	?L10
?L8:
	ld	AL,@(H'0001,Y)
	smult	#H'0009
	st	AL,@(H'0002,Y)
	add	AL,@$_theSink+H'0004
	add	AL,#H'0018
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@(H'0005,X)
	cmp	AL,@(0,Y)
	beq	?L11
?L5:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0033,X)
	bcs	?L8
?L10:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_gattAncsFindConnection:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_gattAncsServiceInitialised:
	enterl	#4
?LBB_gattAncsServiceInitialised:
	st	AH,@(0,Y)
?LBB3:
	bsr	_gattAncsFindConnection
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(0,Y)
	cmp	AL,#H'0004
	bne	?L17
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_gattClientRemoveDiscoveredService
?L17:
	ld	AL,@(H'0001,Y)
	bsr	$_gattClientDiscoveredServiceInitialised
?L15:
?LBE3:
?LBE_gattAncsServiceInitialised:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_gattAncsSetNSNotificationCfm:
; leaf function with empty stack frame
?LBB_gattAncsSetNSNotificationCfm:
?LBE_gattAncsSetNSNotificationCfm:
	rts
_gattAncsInitCfm:
	enterl	#4
?LBB_gattAncsInitCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	_gattAncsServiceInitialised
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L20
	ld	AL,@(0,X)
	bsr	_gattAncsFindConnection
	cmp	AL,#H'0000
	beq	?L20
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_GattAncsSetNSNotificationEnableRequest
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_GattAncsSetDSNotificationEnableRequest
?L20:
?LBE_gattAncsInitCfm:
	leavel	#4
	.SEG	CONST
?LC4:
	dc	H'0003
	dc	H'0000
	dc	H'0000
	.CODE
_gattAncsDSAttrNotificationInd:
	enterl	#22
?LBB_gattAncsDSAttrNotificationInd:
	st	AL,@(H'0010,Y)
?LBB4:
	ld	X,@$_theSink+H'0004
	ld	X,@(H'003D,X)
	st	X,@(H'0011,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0011,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0011,Y)
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'003D,X)
	add	AL,#H'0003
	ld	AH,@(H'0010,Y)
	add	AH,#H'0004
	ld	X,@(H'0010,Y)
	ld	X,@(H'0003,X)
	st	X,@(0,Y)
	bsr	$_memcpy
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L23
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE33,X)
	brxl
	.SEG	CONST
?JTBASE33:
	.CODE
?L33:
	.SEG	CONST
	dc	lwrd(?L24-?L33)
	dc	lwrd(?L25-?L33)
	dc	lwrd(?L27-?L33)
	dc	lwrd(?L28-?L33)
	dc	lwrd(?L29-?L33)
	dc	lwrd(?L30-?L33)
	dc	lwrd(?L23-?L33)
	dc	lwrd(?L23-?L33)
	.CODE
?L24:
	ld	AL,#(?LC0)
	bra	(?L42)
?L25:
	ld	AL,#(?LC1)
	bsr	$_printf
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0003,X)
	add	AL,#H'0005
	cmp	AL,#(H'0001+H'0013)
	bcc	?L23
?LBB5:
	ld	AL,#H'0004
	st	AL,@(H'000F,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000F
	st	AL,@(H'0003,Y)
	bra	(?L43)
?L27:
?LBE5:
	ld	AL,#(?LC2)
	bra	(?L42)
?L28:
	ld	AL,#(?LC3)
	bra	(?L42)
?L29:
	ld	AH,#H'0003
?LBB6:
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,#(?LC4)
	bsr	$_memcpy
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#(?LC5)
	bsr	$_printf
	ld	AL,@(H'0010,Y)
	add	AL,#H'0007
	st	AL,@(-1,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	st	AL,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'00FF
	asl	#H'0008
	ld	X,@H'fff8
	or	X,@$XAP_AL
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@(-1,Y)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_atoi
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	st	AH,@(H'0005,Y)
	ld	AH,@$XAP_AL
	lsr	#H'0008
	st	AH,@(H'0006,Y)
	ld	X,@(H'0010,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(H'0003,Y)
?L43:
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	bsr	$_GattAncsGetNotificationAttributes
?LBE6:
	bra	(?L23)
?L30:
	ld	AL,#(?LC6)
?L42:
	bsr	$_printf
?L23:
	ld	AH,#H'0000
	st	AH,@(H'0012,Y)
	ld	X,@(H'0010,Y)
	cmp	AH,@(H'0003,X)
	bcc	?L41
?L39:
	ld	X,@(H'0010,Y)
	add	X,@(H'0012,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,#(?LC7)
	bsr	$_printf
	ld	AH,@(H'0012,Y)
	add	AH,#H'0001
	st	AH,@(H'0012,Y)
	ld	X,@(H'0010,Y)
	cmp	AH,@(H'0003,X)
	bcs	?L39
?L41:
	ld	AL,#(?LC8)
	bsr	$_puts
?LBE4:
?LBE_gattAncsDSAttrNotificationInd:
	leavel	#22
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'74
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'41
	dc	H'70
	dc	H'70
	dc	H'49
	dc	H'44
	dc	H'3A
	dc	H'20
	dc	H'00
?LC1:
	dc	H'41
	dc	H'74
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'54
	dc	H'69
	dc	H'74
	dc	H'6C
	dc	H'65
	dc	H'3A
	dc	H'20
	dc	H'00
?LC2:
	dc	H'41
	dc	H'74
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'53
	dc	H'75
	dc	H'62
	dc	H'54
	dc	H'69
	dc	H'74
	dc	H'6C
	dc	H'65
	dc	H'3A
	dc	H'20
	dc	H'00
?LC3:
	dc	H'41
	dc	H'74
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'4D
	dc	H'65
	dc	H'73
	dc	H'73
	dc	H'61
	dc	H'67
	dc	H'65
	dc	H'3A
	dc	H'20
	dc	H'00
?LC5:
	dc	H'41
	dc	H'74
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'4D
	dc	H'65
	dc	H'73
	dc	H'73
	dc	H'61
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'53
	dc	H'69
	dc	H'7A
	dc	H'65
	dc	H'3A
	dc	H'20
	dc	H'00
?LC6:
	dc	H'41
	dc	H'74
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'44
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'3A
	dc	H'20
	dc	H'00
?LC7:
	dc	H'25
	dc	H'30
	dc	H'32
	dc	H'58
	dc	H'20
	dc	H'00
?LC8:
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE4
_gattAncsNSNotificationInd:
	enterl	#10
?LBB_gattAncsNSNotificationInd:
	st	AL,@(H'0007,Y)
?LBB7:
	ld	AL,#H'0005
	st	AL,@(H'0006,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'478E
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'478E
	bsr	$_MessageSend
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#(?LC9)
	bsr	$_printf
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_GattAncsGetNotificationAttributes
?LBE7:
?LBE_gattAncsNSNotificationInd:
	leavel	#10
	.SEG	CONST
?LC9:
	dc	H'65
	dc	H'76
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'5F
	dc	H'69
	dc	H'64
	dc	H'3D
	dc	H'25
	dc	H'30
	dc	H'32
	dc	H'58
	dc	H'20
	dc	H'66
	dc	H'6C
	dc	H'61
	dc	H'67
	dc	H'3D
	dc	H'25
	dc	H'30
	dc	H'32
	dc	H'58
	dc	H'20
	dc	H'63
	dc	H'61
	dc	H'74
	dc	H'5F
	dc	H'69
	dc	H'64
	dc	H'3D
	dc	H'25
	dc	H'30
	dc	H'32
	dc	H'58
	dc	H'2C
	dc	H'20
	dc	H'63
	dc	H'61
	dc	H'74
	dc	H'5F
	dc	H'63
	dc	H'6F
	dc	H'75
	dc	H'6E
	dc	H'74
	dc	H'3D
	dc	H'25
	dc	H'30
	dc	H'32
	dc	H'58
	dc	H'2C
	dc	H'20
	dc	H'75
	dc	H'69
	dc	H'64
	dc	H'3D
	dc	H'25
	dc	H'30
	dc	H'34
	dc	H'6C
	dc	H'58
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_sinkGattAncsClientSetupAdvertisingFilter:
	enterl	#4
?LBB_sinkGattAncsClientSetupAdvertisingFilter:
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,#(_ancs_ble_advertising_filter)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0007
	ld	AH,#H'0010
	bsr	$_ConnectionBleAddAdvertisingReportFilter
?LBE_sinkGattAncsClientSetupAdvertisingFilter:
	leavel	#4
$_sinkGattAncsClientAddService:
	enterl	#9
?LBB_sinkGattAncsClientAddService:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB8:
	bsr	$_gattClientFindByCid
	st	AL,@(H'0005,Y)
	ld	AH,#H'000C
	bsr	$_gattClientAddService
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L49
	ld	AL,@(H'0005,Y)
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0005,X)
	ld	AH,@$_theSink+H'0004
	add	AH,#H'000A
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_GattAncsInit
	cmp	AL,#H'0001
	bne	?L49
	ld	AL,#H'0001
	bra	(?L48)
?L49:
	ld	AL,#H'0000
?L48:
?LBE8:
?LBE_sinkGattAncsClientAddService:
	leavel	#9
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_sinkGattAncsClientRemoveService:
	enterl	#2
?LBB_sinkGattAncsClientRemoveService:
	bsr	$_GattAncsDestroy
?LBE_sinkGattAncsClientRemoveService:
	leavel	#2
	.SEG	CONST
?LC10:
	dc	H'0001
	dc	H'0014
	dc	H'0000
	.CODE
$_sinkGattAncsClientMsgHandler:
	enterl	#17
?LBB_sinkGattAncsClientMsgHandler:
?LBB9:
	ld	AL,#-H'65E0
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0007)
	bcc	?L53
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE80,X)
	brxl
	.SEG	CONST
?JTBASE80:
	.CODE
?L80:
	.SEG	CONST
	dc	lwrd(?L78-?L80)
	dc	lwrd(?L76-?L80)
	dc	lwrd(?L75-?L80)
	dc	lwrd(?L53-?L80)
	dc	lwrd(?L74-?L80)
	dc	lwrd(?L68-?L80)
	dc	lwrd(?L53-?L80)
	dc	lwrd(?L55-?L80)
	.CODE
?L55:
	ld	AH,@(H'0011,Y)
?LBB10:
	st	AH,@(H'0009,Y)
	ld	X,@$_theSink+H'0004
	ld	X,@(H'003D,X)
	st	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	add	AL,@(H'0001,X)
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0004,X)
	and	AH,#H'00FF
	st	AH,@(H'000C,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	asl	#H'0008
	or	AL,@(H'000C,Y)
	st	AL,@(H'000C,Y)
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
	ld	X,@(H'0011,Y)
	cmp	AL,@(H'0001,X)
	bcc	?L82
?L60:
	ld	X,@(H'0009,Y)
	add	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,#(?LC7)
	bsr	$_printf
	ld	AH,@(H'000B,Y)
	add	AH,#H'0001
	st	AH,@(H'000B,Y)
	ld	X,@(H'0009,Y)
	cmp	AH,@(H'0001,X)
	bcs	?L60
?L82:
	ld	AL,#(?LC8)
	bsr	$_puts
	ld	AL,@(H'000C,Y)
	add	AL,#H'0003
	ld	X,@(H'000A,Y)
	cmp	AL,@(0,X)
	bne	?L53
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L64
	cmp	AL,#H'0001
	bcs	?L63
	cmp	AL,#H'0005
	beq	?L65
	bra	(?L53)
?L63:
?LBB11:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	X,@(H'000C,Y)
	add	X,@(H'000A,Y)
	st	AL,@(H'0006,X)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0001
	st	AH,@(H'000C,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	bsr	$_GattAncsGetAppAttributes
?LBE11:
	bra	(?L53)
?L64:
?LBB12:
	ld	AL,#H'0004
	st	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	st	AL,@(H'0003,Y)
	bra	(?L85)
?L65:
	ld	AH,#H'0003
?LBE12:
?LBB13:
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,#(?LC10)
	bsr	$_memcpy
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(H'0003,Y)
?L85:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	bsr	$_GattAncsGetNotificationAttributes
?LBE13:
	bra	(?L53)
?L68:
	ld	AH,@(H'0011,Y)
?LBE10:
?LBB14:
	st	AH,@(H'000D,Y)
	ld	AL,#H'0000
	st	AL,@(H'000E,Y)
	ld	AL,#(?LC11)
	bsr	$_printf
	ld	AH,@(H'000E,Y)
	ld	X,@(H'0011,Y)
	cmp	AH,@(H'0001,X)
	bcc	?L84
?L73:
	ld	X,@(H'000D,Y)
	add	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,#(?LC7)
	bsr	$_printf
	ld	AL,@(H'000E,Y)
	add	AL,#H'0001
	st	AL,@(H'000E,Y)
	ld	X,@(H'000D,Y)
	cmp	AL,@(H'0001,X)
	bcs	?L73
?L84:
	ld	AL,#(?LC8)
	bsr	$_puts
?LBE14:
	bra	(?L53)
?L74:
	ld	AL,@(H'0011,Y)
	bsr	_gattAncsDSAttrNotificationInd
	bra	(?L53)
?L75:
	ld	AL,@(H'0011,Y)
	bsr	_gattAncsSetNSNotificationCfm
	bra	(?L53)
?L76:
	ld	AL,@(H'0011,Y)
	bsr	_gattAncsInitCfm
	bra	(?L53)
?L78:
	ld	AL,@(H'0011,Y)
	bsr	_gattAncsNSNotificationInd
?L53:
?LBE9:
?LBE_sinkGattAncsClientMsgHandler:
	leavel	#17
	.SEG	CONST
?LC11:
	dc	H'61
	dc	H'70
	dc	H'70
	dc	H'20
	dc	H'6E
	dc	H'61
	dc	H'6D
	dc	H'65
	dc	H'3A
	dc	H'20
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
	ENDMOD

;# Function pattern *movqi2 used[0] = 79 used[1] = 11 total = 90
;# Function pattern *movqi3 used[0] = 131 total = 131
;# Function pattern *movqi8 used[0] = 5 total = 5
;# Function pattern *movhi used[2] = 7 used[3] = 7 total = 14
;# Function pattern *addqi0 used[0] = 11 total = 11
;# Function pattern *addqi2 used[0] = 21 used[2] = 1 total = 22
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 16 total = 16
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 28 total = 28
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 1 total = 6
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 15 total = 15
	MODULE	sink_gatt_client_battery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_client_dis
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_client_gatt
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_gattServiceInitialised:
	enterl	#5
?LBB_gattServiceInitialised:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0033,X)
	bcc	?L9
?L7:
	ld	AL,@(H'0001,Y)
	smult	#H'0009
	add	AL,@$_theSink+H'0004
	add	AL,#H'0018
	st	AL,@(H'0002,Y)
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@(H'0009,X)
	cmp	AL,@(0,Y)
	bne	?L4
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UXL
	bsr	$_gattClientProcessSecurityRequirements
?L4:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0033,X)
	bcs	?L7
?L9:
?LBE2:
?LBE_gattServiceInitialised:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_sinkGattClientInitCfm:
	enterl	#2
?LBB_sinkGattClientInitCfm:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	_gattServiceInitialised
?LBE_sinkGattClientInitCfm:
	leavel	#2
_sinkGattClientServiceChangedInd:
	enterl	#2
?LBB_sinkGattClientServiceChangedInd:
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	bsr	$_gattClientServiceChanged
?LBE_sinkGattClientServiceChangedInd:
	leavel	#2
$_sinkGattClientServiceAdd:
	enterl	#11
?LBB_sinkGattClientServiceAdd:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB3:
	bsr	$_gattClientFindByCid
	st	AL,@(H'0007,Y)
	ld	AH,#H'0005
	bsr	$_gattClientAddService
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L16
	ld	AL,@(H'0007,Y)
	bsr	$_gattClientGetServiceData
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0009,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_GattClientInit
	cmp	AL,#H'0000
	bne	?L16
	ld	AL,#H'0001
	bra	(?L15)
?L16:
	ld	AL,#H'0000
?L15:
?LBE3:
?LBE_sinkGattClientServiceAdd:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkGattClientServiceRemove:
	enterl	#2
?LBB_sinkGattClientServiceRemove:
	bsr	$_GattClientDestroy
?LBE_sinkGattClientServiceRemove:
	leavel	#2
$_sinkGattClientServiceMsgHandler:
	enterl	#2
?LBB_sinkGattClientServiceMsgHandler:
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'6600
	beq	?L21
	cmp	AH,#H'6601
	beq	?L22
	bra	(?L19)
?L21:
	bsr	_sinkGattClientInitCfm
	bra	(?L19)
?L22:
	bsr	_sinkGattClientServiceChangedInd
?L19:
?LBE_sinkGattClientServiceMsgHandler:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 4 total = 23
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	sink_gatt_client_hid
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_client_ias
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_client_spc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_db
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_gattDatabase:
	dc	H'0002
	dc	H'0118
	dc	H'3005
	dc	H'2003
	dc	H'0005
	dc	H'2A00
	dc	H'D000
	dc	H'6400
	dc	H'0002
	dc	H'0018
	dc	H'3005
	dc	H'0207
	dc	H'0000
	dc	H'2A00
	dc	H'D400
	dc	H'3005
	dc	H'0209
	dc	H'0001
	dc	H'2A00
	dc	H'D400
	dc	H'0002
	dc	H'0F18
	dc	H'3005
	dc	H'120C
	dc	H'0019
	dc	H'2A00
	dc	H'D401
	dc	H'0000
	dc	H'8C07
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'6C00
	.CODE
$_GattGetDatabase:
	enterl	#5
?LBB_GattGetDatabase:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0022
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,#H'0022
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#($_gattDatabase)
	bsr	$_memmove
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_GattGetDatabase:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_GattGetDatabaseSize:
; leaf function with empty stack frame
?LBB_GattGetDatabaseSize:
	ld	AL,#H'0022
?LBE_GattGetDatabaseSize:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 2 total = 6
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	sink_gatt_hid_remote_control
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_calculateOptionalGattServerSize:
	enterl	#2
?LBB_calculateOptionalGattServerSize:
?LBB2:
	bsr	$_sinkGattBatteryServerCalculateSize
?LBE2:
?LBE_calculateOptionalGattServerSize:
	leavel	#2
_calculateCompleteGattServerSize:
	enterl	#2
?LBB_calculateCompleteGattServerSize:
?LBB3:
	bsr	_calculateOptionalGattServerSize
	add	AL,#H'0006
?LBE3:
?LBE_calculateCompleteGattServerSize:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_initialiseOptionalServerTasks:
	enterl	#2
?LBB_initialiseOptionalServerTasks:
	cmp	AL,#H'0000
	beq	?L4
	bsr	$_sinkGattBatteryServerInitialise
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,#H'0001
	bra	(?L3)
?L4:
	ld	AL,#H'0000
?L3:
?LBE_initialiseOptionalServerTasks:
	leavel	#2
_initialiseGattServers:
	enterl	#4
?LBB_initialiseGattServers:
?LBB4:
	bsr	_calculateCompleteGattServerSize
	ld	AH,@$_theSink+H'0004
	st	AH,@(0,Y)
	bsr	$_malloc
	ld	X,@(0,Y)
	st	AL,@(H'0036,X)
	ld	X,@$_theSink+H'0004
	tst	@(H'0036,X)
	beq	?L10
?LBB5:
	add	X,#H'0036
	st	X,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	$_sinkGattServerInitialiseTask
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@(H'0001,Y)
	bsr	$_sinkGattGapServerInitialiseTask
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@(H'0001,Y)
	bsr	_initialiseOptionalServerTasks
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,#H'0001
	bra	(?L9)
?L11:
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0036,X)
	bsr	$_free
?L10:
?LBE5:
	ld	AL,#H'0000
?L9:
?LBE4:
?LBE_initialiseGattServers:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
_initialiseGattWithServers:
	enterl	#2
?LBB_initialiseGattWithServers:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	bsr	$_GattManagerInit
	cmp	AL,#H'0000
	beq	?L15
	bsr	$_GattGetDatabaseSize
	ld	AH,@$XAP_AL
	ld	AL,#($_gattDatabase)
	bsr	$_GattManagerRegisterConstDB
	cmp	AL,#H'0000
	beq	?L15
	bsr	_initialiseGattServers
	cmp	AL,#H'0000
	beq	?L15
	bsr	$_GattManagerRegisterWithGatt
	ld	AL,#H'0001
	bra	(?L14)
?L15:
	ld	AL,#H'0000
?L14:
?LBE_initialiseGattWithServers:
	leavel	#2
_initialiseGattClient:
; leaf function with empty stack frame
?LBB_initialiseGattClient:
?LBE_initialiseGattClient:
	rts
$_sinkGattInitInitialiseDevice:
	enterl	#3
?LBB_sinkGattInitInitialiseDevice:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'0018
	ld	AH,#H'0025
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	bsr	_initialiseGattClient
	bsr	_initialiseGattWithServers
?LBE_sinkGattInitInitialiseDevice:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 2 total = 8
;# Function pattern *movqi3 used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern movstrqi+3 used[0] = 8 used[1] = 1 total = 9
	MODULE	sink_gatt_manager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleGattManagerRegistrationCfm:
	enterl	#3
?LBB_handleGattManagerRegistrationCfm:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L2
	tst	@(0,X)
	bne	?L2
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_handleGattManagerRegistrationCfm:
	leavel	#3
_handleGattManagerRemoteClientConnectCfm:
	enterl	#4
?LBB_handleGattManagerRemoteClientConnectCfm:
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L5
	ld	X,@$XAP_AL
	tst	@(0,X)
	bne	?L5
	ld	AL,@(H'0007,X)
	bsr	$_gattServerConnectionAdd
	cmp	AL,#H'0000
	beq	?L5
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	bsr	$_sinkBleRemoteConnectionSuccessEvent
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	bsr	$_gattClientAdd
	ld	AL,#H'0001
	bra	(?L4)
?L5:
	bsr	$_sinkBleRemoteConnectionFailEvent
	ld	AL,#H'0000
?L4:
?LBE_handleGattManagerRemoteClientConnectCfm:
	leavel	#4
_handleGattManagerRemoteServerConnectCfm:
	enterl	#4
?LBB_handleGattManagerRemoteServerConnectCfm:
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L9
	ld	X,@$XAP_AL
	tst	@(0,X)
	bne	?L9
	ld	AH,@$XAP_AL
	add	AH,#H'0001
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0007,X)
	bsr	$_gattClientAdd
	cmp	AL,#H'0000
	bne	?L11
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	bsr	$_GattManagerDisconnectRequest
	bra	(?L9)
?L11:
	bsr	$_sinkBleLocalConnectionSuccessEvent
	ld	AL,#H'0001
	bra	(?L8)
?L9:
	ld	AL,#H'0000
?L8:
?LBE_handleGattManagerRemoteServerConnectCfm:
	leavel	#4
_handleGattManagerDisconnectInd:
	enterl	#5
?LBB_handleGattManagerDisconnectInd:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0001,X)
	bsr	$_gattClientFindByCid
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattServerConnectionFindByCid
	st	AL,@(H'0002,Y)
	tst	@(0,Y)
	beq	?L13
	tst	@(H'0001,Y)
	beq	?L14
	ld	AL,@(H'0001,Y)
	bsr	$_gattClientRemoveServices
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattClientRemove
	bsr	$_sinkBleCentralDisconnectionEvent
?L14:
	tst	@(H'0002,Y)
	beq	?L16
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattServerConnectionRemove
?L16:
	bsr	$_sinkBleCheckNoConnectionsEvent
	ld	AL,#H'0001
	bra	(?L12)
?L13:
	ld	AL,#H'0000
?L12:
?LBE2:
?LBE_handleGattManagerDisconnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handleGattManagerCancelRemoteClientConnectCfm:
	enterl	#2
?LBB_handleGattManagerCancelRemoteClientConnectCfm:
	bsr	$_sinkBleCancelAdvertisingEvent
?LBE_handleGattManagerCancelRemoteClientConnectCfm:
	leavel	#2
$_sinkGattManagerStartAdvertising:
	enterl	#3
?LBB_sinkGattManagerStartAdvertising:
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_GattManagerWaitForRemoteClient
?LBE_sinkGattManagerStartAdvertising:
	leavel	#3
$_sinkGattManagerStopAdvertising:
	enterl	#2
?LBB_sinkGattManagerStopAdvertising:
	bsr	$_GattManagerCancelWaitForRemoteClient
?LBE_sinkGattManagerStopAdvertising:
	leavel	#2
$_sinkGattManagerMsgHandler:
	enterl	#5
?LBB_sinkGattManagerMsgHandler:
	ld	AL,#-H'6400
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0009)
	bcc	?L22
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE37,X)
	brxl
	.SEG	CONST
?JTBASE37:
	.CODE
?L37:
	.SEG	CONST
	dc	lwrd(?L24-?L37)
	dc	lwrd(?L33-?L37)
	dc	lwrd(?L27-?L37)
	dc	lwrd(?L22-?L37)
	dc	lwrd(?L32-?L37)
	dc	lwrd(?L26-?L37)
	dc	lwrd(?L30-?L37)
	dc	lwrd(?L22-?L37)
	dc	lwrd(?L22-?L37)
	dc	lwrd(?L29-?L37)
	.CODE
?L24:
	ld	AL,@(H'0005,Y)
	bsr	_handleGattManagerRegistrationCfm
	cmp	AL,#H'0000
	bne	?L22
	bsr	$_Panic
	bra	(?L22)
?L26:
	ld	AL,@(H'0005,Y)
	bsr	_handleGattManagerRemoteClientConnectCfm
	bra	(?L22)
?L27:
	ld	AL,@(H'0005,Y)
	bsr	_handleGattManagerRemoteServerConnectCfm
	cmp	AL,#H'0000
	bne	?L22
	ld	AL,#H'0000
	bsr	$_sinkBleCentralConnCompleteEvent
	bra	(?L22)
?L29:
	ld	AL,@(H'0005,Y)
	bsr	_handleGattManagerDisconnectInd
	bra	(?L22)
?L30:
	ld	AL,@(H'0005,Y)
	bsr	_handleGattManagerCancelRemoteClientConnectCfm
	bra	(?L22)
?L32:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_GattManagerIndicationResponse
	bra	(?L22)
?L33:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_GattAccessResponse
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_sinkGattServerSendServiceChanged
?L22:
?LBE_sinkGattManagerMsgHandler:
	leavel	#5
$_sinkGattManagerStartConnection:
	enterl	#4
?LBB_sinkGattManagerStartConnection:
	ld	AH,@$XAP_AL
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	X,#H'0001
	st	X,@(0,Y)
	st	X,@(H'0001,Y)
	bsr	$_GattManagerConnectToRemoteServer
?LBE_sinkGattManagerStartConnection:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 21 used[1] = 6 total = 27
;# Function pattern *movqi3 used[0] = 43 total = 43
;# Function pattern *addqi2 used[0] = 5 used[2] = 1 total = 6
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 7 used[1] = 6 total = 13
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	sink_gatt_server
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattServerConnectionAdd:
	enterl	#2
?LBB_gattServerConnectionAdd:
	ld	X,@$_theSink+H'0004
	st	AL,@(H'0035,X)
	ld	AL,#H'0001
?LBE_gattServerConnectionAdd:
	leavel	#2
$_gattServerConnectionFindByCid:
	enterl	#2
?LBB_gattServerConnectionFindByCid:
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0035,X)
	bne	?L3
	ld	AL,#H'0001
	bra	(?L2)
?L3:
	ld	AL,#H'0000
?L2:
?LBE_gattServerConnectionFindByCid:
	leavel	#2
$_gattServerConnectionRemove:
	enterl	#2
?LBB_gattServerConnectionRemove:
	ld	X,@$_theSink+H'0004
	cmp	AL,@(H'0035,X)
	bne	?L6
	ld	AL,#H'0000
	st	AL,@(H'0035,X)
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE_gattServerConnectionRemove:
	leavel	#2
$_gattServerDisconnectAll:
	enterl	#2
?LBB_gattServerDisconnectAll:
	ld	X,@$_theSink+H'0004
	tst	@(H'0035,X)
	beq	?L9
	ld	AL,@(H'0035,X)
	bsr	$_GattManagerDisconnectRequest
	ld	AL,#H'0001
	bra	(?L8)
?L9:
	ld	AL,#H'0000
?L8:
?LBE_gattServerDisconnectAll:
	leavel	#2
$_gattServerIsFullyDisconnected:
	enterl	#2
?LBB_gattServerIsFullyDisconnected:
	ld	AL,#H'0000
	ld	X,@$_theSink+H'0004
	tst	@(H'0035,X)
	bne	?L11
	ld	AL,#H'0001
?L11:
?LBE_gattServerIsFullyDisconnected:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 16 total = 16
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	sink_gatt_server_battery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sinkBleBatteryLevelReadSendAndRepeat:
	enterl	#7
?LBB_sinkBleBatteryLevelReadSendAndRepeat:
?LBB2:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$_theSink+H'0004
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	cmp	AH,@(H'0033,X)
	bcc	?L10
?L7:
?LBB3:
	ld	AL,@(H'0003,Y)
	smult	#H'0009
	add	AL,@$_theSink+H'0004
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001B,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L4
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0039,X)
	ld	AH,#H'0019
	add	AH,@(-1,Y)
	st	AH,@(0,Y)
	ld	AH,#-H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_GattBatteryServerSendLevelNotification
?L4:
	ld	AH,@(H'0003,Y)
?LBE3:
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
	ld	AL,@$_theSink+H'0004
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	cmp	AH,@(H'0033,X)
	bcs	?L7
?L10:
	tst	@(H'0004,Y)
	beq	?L1
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'7530
	st	AH,@(H'0002,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_MessageSendLater
?L1:
?LBE2:
?LBE_sinkBleBatteryLevelReadSendAndRepeat:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_sinkGattGetBatteryServerHandles:
	enterl	#2
?LBB_sinkGattGetBatteryServerHandles:
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,#H'0000
	tst	@(H'0002,Y)
	bne	?L14
	ld	AL,#H'000A
	st	AL,@(0,X)
	ld	AL,#-H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0001
?L14:
?LBE4:
?LBE_sinkGattGetBatteryServerHandles:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_sinkGattGetBatteryServerUpdateRundata:
	enterl	#2
?LBB_sinkGattGetBatteryServerUpdateRundata:
	st	AL,@H'fff8
?LBB5:
	ld	AL,#H'0000
	cmp	AH,#H'0000
	bne	?L21
	ld	AH,@$_theSink+H'0004
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0039,X)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,#H'0004
	st	AL,@(0,X)
	ld	AL,#H'0001
?L21:
?LBE5:
?LBE_sinkGattGetBatteryServerUpdateRundata:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_sinkGattBatteryServerInitTask:
	enterl	#10
?LBB_sinkGattBatteryServerInitTask:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB6:
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
	tst	@(H'0006,Y)
	beq	?L32
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	_sinkGattGetBatteryServerHandles
	cmp	AL,#H'0000
	beq	?L32
	ld	AH,@$_theSink+H'0004
	add	AH,#H'000A
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	bsr	$_GattBatteryServerInit
	cmp	AL,#H'0000
	bne	?L32
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	_sinkGattGetBatteryServerUpdateRundata
	cmp	AL,#H'0000
	bne	?L31
?L32:
	ld	AL,#H'0000
	bra	(?L27)
?L31:
	ld	AL,#H'0001
?L27:
?LBE6:
?LBE_sinkGattBatteryServerInitTask:
	leavel	#10
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_sinkGattBatteryServerCalculateSize:
; leaf function with empty stack frame
?LBB_sinkGattBatteryServerCalculateSize:
	ld	AL,#H'0004
?LBE_sinkGattBatteryServerCalculateSize:
	rts
$_sinkGattBatteryServerInitialise:
	enterl	#2
?LBB_sinkGattBatteryServerInitialise:
	ld	AH,#H'0000
	bsr	_sinkGattBatteryServerInitTask
	cmp	AL,#H'0000
	bne	?L35
	ld	AL,#H'0000
	bra	(?L34)
?L35:
	ld	AL,#H'0001
?L34:
?LBE_sinkGattBatteryServerInitialise:
	leavel	#2
_handleReadBatteryLevel:
	enterl	#3
?LBB_handleReadBatteryLevel:
	ld	X,@$XAP_AL
	ld	AL,#-H'0001
?LBB7:
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_GattBatteryServerReadLevelResponse
?LBE7:
?LBE_handleReadBatteryLevel:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_handleReadBatteryLevelClientConfig:
	enterl	#6
?LBB_handleReadBatteryLevelClientConfig:
	st	AL,@(H'0001,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattClientFindByCid
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L39
	ld	AL,@$_theSink+H'0004
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'0039,X)
	bne	?L40
	ld	X,@$XAP_AH
	ld	AH,@(H'0003,X)
	bra	(?L45)
?L40:
	ld	AL,@$_theSink+H'0004
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'003A,X)
	bne	?L42
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	bra	(?L45)
?L42:
	ld	AL,@$_theSink+H'0004
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'003B,X)
	bne	?L39
	ld	X,@$XAP_AH
	ld	AH,@(H'0005,X)
?L45:
	st	AH,@(H'0002,Y)
?L39:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_GattBatteryServerReadClientConfigResponse
?LBE8:
?LBE_handleReadBatteryLevelClientConfig:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_handleWriteBatteryLevelClientConfig:
	enterl	#6
?LBB_handleWriteBatteryLevelClientConfig:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,@(H'0001,X)
	bsr	$_gattClientFindByCid
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L49
?LBB10:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(H'0039,X)
	bne	?L51
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0000
	bsr	$_gattClientStoreConfigAttributes
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L53
	ld	AL,#H'0001
	bra	(?L61)
?L51:
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(H'003A,X)
	bne	?L54
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0001
	bsr	$_gattClientStoreConfigAttributes
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	bra	(?L62)
?L54:
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(H'003B,X)
	bne	?L53
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0002
	bsr	$_gattClientStoreConfigAttributes
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
?L62:
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L53
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
?L61:
	st	AL,@(H'0003,Y)
?L53:
	tst	@(H'0003,Y)
	beq	?L49
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0008
	bsr	$_MessageCancelFirst
	ld	AL,@$_theSink+H'0004
	add	AL,#H'000A
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0008
	bsr	$_MessageSend
?L49:
?LBE10:
?LBE9:
?LBE_handleWriteBatteryLevelClientConfig:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
_handleReadBatteryPresentation:
	enterl	#6
?LBB_handleReadBatteryPresentation:
	ld	AH,@$XAP_AL
?LBB11:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0004
	st	X,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'0039,X)
	bne	?L67
	ld	AL,#H'010F
	bra	(?L72)
?L67:
	ld	X,@$_theSink+H'0004
	st	X,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'003A,X)
	bne	?L69
	ld	AL,#H'0002
	bra	(?L72)
?L69:
	ld	X,@$_theSink+H'0004
	st	X,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'003B,X)
	bne	?L68
	ld	AL,#H'0003
?L72:
	st	AL,@(H'0002,Y)
?L68:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_GattBatteryServerReadPresentationResponse
?LBE11:
?LBE_handleReadBatteryPresentation:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_sinkGattBatteryServerMsgHandler:
	enterl	#2
?LBB_sinkGattBatteryServerMsgHandler:
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'6441
	beq	?L79
	cmp	AH,#(H'0001+H'6441)
	bcc	?L84
	cmp	AH,#H'6440
	beq	?L78
	bra	(?L76)
?L84:
	cmp	AH,#H'6442
	beq	?L80
	cmp	AH,#H'6443
	beq	?L81
	bra	(?L76)
?L78:
	bsr	_handleReadBatteryLevel
	bra	(?L76)
?L79:
	bsr	_handleReadBatteryLevelClientConfig
	bra	(?L76)
?L80:
	bsr	_handleWriteBatteryLevelClientConfig
	bra	(?L76)
?L81:
	bsr	_handleReadBatteryPresentation
?L76:
?LBE_sinkGattBatteryServerMsgHandler:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 67 used[1] = 6 total = 73
;# Function pattern *movqi3 used[0] = 117 total = 117
;# Function pattern *movqi8 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 9 used[2] = 1 total = 10
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[0] = 10 used[1] = 4 total = 14
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 15 total = 15
	MODULE	sink_gatt_server_gap
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sinkGattGapServerInitialiseTask:
	enterl	#5
?LBB_sinkGattGapServerInitialiseTask:
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AH,@$_theSink+H'0004
	add	AH,#H'000A
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_GattGapServerInit
	cmp	AL,#H'0000
	bne	?L2
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0038,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	add	AL,#H'0003
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_sinkGattGapServerInitialiseTask:
	leavel	#5
_sinkGattGapServerHandleReadAppearanceInd:
	enterl	#6
?LBB_sinkGattGapServerHandleReadAppearanceInd:
?LBB2:
	ld	AL,#H'0000
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0038,X)
	ld	AH,@(H'0035,X)
	bsr	$_GattGapServerReadAppearanceResponse
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE2:
?LBE_sinkGattGapServerHandleReadAppearanceInd:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkGattGapServerSendLocalNameResponse:
	enterl	#3
?LBB_sinkGattGapServerSendLocalNameResponse:
	ld	AH,@$XAP_AL
	ld	X,@$_theSink+H'0004
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0038,X)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	bsr	$_gattClientGapNameReadResponse
?LBE_sinkGattGapServerSendLocalNameResponse:
	leavel	#3
$_sinkGattGapServerMsgHandler:
	enterl	#3
?LBB_sinkGattGapServerMsgHandler:
	ld	X,@(H'0003,Y)
?LBB3:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AH,#H'6420
	beq	?L10
	cmp	AH,#H'6421
	beq	?L12
	bra	(?L9)
?L10:
?LBB4:
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_gattClientGapNameReadRequested
	cmp	AL,#H'0000
	beq	?L9
	ld	AL,#H'0002
	bra	(?L15)
?L12:
?LBE4:
	bsr	_sinkGattGapServerHandleReadAppearanceInd
	ld	AL,#H'0000
?L15:
	st	AL,@(0,Y)
?L9:
?LBE3:
	ld	AL,@(0,Y)
?LBE_sinkGattGapServerMsgHandler:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 used[1] = 1 total = 16
;# Function pattern *movqi3 used[0] = 28 total = 28
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	sink_gatt_server_gatt
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handle_read_client_config_indication:
	enterl	#6
?LBB_handle_read_client_config_indication:
?LBB2:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_gattClientFindByCid
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L3
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
?L3:
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0037,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	$_GattServerReadClientConfigResponse
?LBE2:
?LBE_handle_read_client_config_indication:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handle_write_client_config_indication:
	enterl	#3
?LBB_handle_write_client_config_indication:
?LBB3:
	bsr	$_PanicNull
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_gattClientFindByCid
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L5
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bsr	$_gattClientStoreConfigAttributes
?L5:
?LBE3:
?LBE_handle_write_client_config_indication:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkGattServerInitialiseTask:
	enterl	#5
?LBB_sinkGattServerInitialiseTask:
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L9
	ld	AH,@$_theSink+H'0004
	add	AH,#H'000A
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_GattServerInit
	cmp	AL,#H'0000
	bne	?L9
	ld	AH,@$_theSink+H'0004
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0037,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	add	AL,#H'0003
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L8)
?L9:
	ld	AL,#H'0000
?L8:
?LBE_sinkGattServerInitialiseTask:
	leavel	#5
$_sinkGattServerMsgHandler:
	enterl	#2
?LBB_sinkGattServerMsgHandler:
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'6641
	beq	?L15
	cmp	AH,#(H'0001+H'6641)
	bcc	?L12
	cmp	AH,#H'6640
	bne	?L12
	bsr	_handle_read_client_config_indication
	bra	(?L12)
?L15:
	bsr	_handle_write_client_config_indication
?L12:
?LBE_sinkGattServerMsgHandler:
	leavel	#2
$_sinkGattServerSendServiceChanged:
	enterl	#3
?LBB_sinkGattServerSendServiceChanged:
	st	AL,@(0,Y)
?LBB4:
	bsr	$_gattClientFindByCid
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L22
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L22
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0037,X)
	ld	AH,@(0,Y)
	bsr	$_GattServerSendServiceChangedIndication
?L22:
?LBE4:
?LBE_sinkGattServerSendServiceChanged:
	leavel	#3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 21 used[1] = 1 total = 22
;# Function pattern *movqi3 used[0] = 32 total = 32
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+3 used[0] = 6 total = 6
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	sink_gatt_server_ias
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_server_lls
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_gatt_server_tps
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_indicators
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_indicatorsHandleServiceInd:
	enterl	#3
?LBB_indicatorsHandleServiceInd:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0036
	lsr	#H'000C
	and	AH,#H'0001
	ld	AL,@(H'0001,X)
	cmp	AL,@$XAP_AH
	beq	?L1
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471A
	bsr	$_MessageSend
	ld	AL,@$_theSink+H'0036
	or	AL,#H'1000
	bra	(?L6)
?L3:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L1
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4719
	bsr	$_MessageSend
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'1001
?L6:
	st	AL,@$_theSink+H'0036
?L1:
?LBE_indicatorsHandleServiceInd:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	sink_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_SetupPowerTable:
	enterl	#4
?LBB_SetupPowerTable:
	ld	AH,#H'0000
?LBB2:
	st	AH,@(0,Y)
	ld	AL,#H'0360
	bsr	$_PsFullRetrieve
	st	AL,@H'fff8
	ld	AL,#H'0000
	st	AL,@$_theSink+H'000E
	tst	@H'fff8
	beq	?L1
	ld	AL,@H'fff8
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,#H'0360
	ld	AH,@(H'0001,Y)
	bsr	$_PsFullRetrieve
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'000C
	ld	X,@$XAP_AH
	and	X,#H'0003
	st	X,@(-1,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'0003
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'0003
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	ld	AL,@$XAP_UXL
	smult	#H'0006
	add	AL,#H'0001
	ld	AH,@H'fff8
	cmp	AH,@$XAP_AL
	bne	?L3
	ld	AL,@(H'0001,Y)
	st	AL,@$_theSink+H'000E
	bra	(?L1)
?L3:
	ld	AL,@(H'0001,Y)
	bsr	$_free
?L1:
?LBE2:
?LBE_SetupPowerTable:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkHfpInit:
	enterl	#10
?LBB_sinkHfpInit:
?LBB3:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_memset
	bsr	$_configManagerInitFeatures
	bsr	$_sinkClearQueueudEvent
	bsr	$_configManagerHFP_SupportedFeatures
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_configManagerHFP_Init
	ld	AH,@$_theSink+H'001A
	lsr	#H'0008
	ld	AL,#H'0002
	and	AH,#H'000F
	bsr	$_audioHfpGetPlugin
	cmp	AL,#H'0000
	bne	?L7
	ld	AH,@(H'0001,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,@$XAP_AH
	and	AL,#-H'0005
	or	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	and	AL,#H'0001
	st	AL,@(H'0003,Y)
?L7:
	ld	AL,@(H'0001,Y)
	and	AL,#H'0007
	asl	#H'0008
	ld	AH,@$_theSink+H'003A
	and	AH,#-H'0701
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003A
	ld	AH,@(H'0006,Y)
	and	AH,#H'00FF
	ld	AL,@$_theSink+H'003B
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@$_theSink+H'003B
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpInit
	bsr	$_AudioLibraryInit
?LBE3:
?LBE_sinkHfpInit:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkInitComplete:
	enterl	#8
?LBB_sinkInitComplete:
	ld	X,@$XAP_AL
?LBB4:
	tst	@(0,X)
	bne	?L9
	ld	AH,#H'0000
	st	AH,@H'fff8
?L14:
	ld	AL,@H'fff8
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@($_theSink+H'0026,X)
	or	AL,#-H'0100
	st	AL,@($_theSink+H'0026,X)
	ld	X,@$_theSink+H'0030
	add	X,@H'fff8
	ld	AL,#H'00FF
	st	AL,@(H'001F,X)
	ld	AH,#H'0001
	add	AH,@H'fff8
	st	AH,@H'fff8
	cmp	AH,#H'0001
	bcz	?L14
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,#H'0000
	bsr	$_ConnectionSmSetSecurityLevel
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	bsr	$_ConnectionSmSecModeConfig
	ld	AH,@$_theSink+H'0019
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L15
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,#H'0000
	bsr	$_ConnectionSmSetSecurityLevel
?L15:
	bsr	$_RegisterDeviceIdServiceRecord
	ld	AL,#H'0000
	st	AL,@$_theSink+H'0034
	bsr	$_sinkAvrcpInit
	ld	AL,@$_theSink+H'003B
	and	AL,#H'00FF
	st	AL,@$_theSink+H'003B
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	bne	?L16
	bsr	$_InitUserFeatures
?L16:
	bsr	$_SetupPowerTable
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'003C,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'003D,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
	bra	(?L17)
?L9:
	bsr	$_Panic
?L17:
	bsr	$_sinkBleInitialiseDevice
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'4001
	st	AL,@$_theSink+H'0036
?LBE4:
?LBE_sinkInitComplete:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_initPreAmp:
	enterl	#6
?LBB_initPreAmp:
	st	AL,@(H'0002,Y)
?LBB5:
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	tst	@(H'0002,Y)
	bne	?L24
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'003C,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L23
?L24:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L22
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'003D,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L22
?L23:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0309
	bsr	$_SourceConfigure
?L22:
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
?LBE5:
?LBE_initPreAmp:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_initDefaultA2DPVolumeLevels:
	enterl	#2
?LBB_initDefaultA2DPVolumeLevels:
?LBB6:
	ld	X,@$_theSink+H'000A
	ld	AH,@$_theSink+H'001C
	lsr	#H'000C
	ld	AL,@$XAP_AH
	smult	@(0,X)
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bpl	?L28
	ld	AH,#H'000F
	add	AH,@$XAP_AL
?L28:
	asr	#H'0004
	st	AH,@H'fff9
	ld	X,@$_theSink+H'000A
	ld	AH,@$_theSink+H'001C
	lsr	#H'000C
	ld	AL,@$XAP_AH
	smult	@(H'0007,X)
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bpl	?L29
	ld	AH,#H'000F
	add	AH,@$XAP_AL
?L29:
	asr	#H'0004
	st	AH,@H'fff8
	ld	AH,#H'0000
?L34:
	ld	AL,@$XAP_AH
	add	AL,@$XAP_AH
	st	AL,@(-1,Y)
	add	AL,@$_theSink+H'000D
	ld	X,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,X)
	ld	AL,@H'ffff
	ld	X,@$_theSink+H'000D
	add	X,@(-1,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,@H'ffff
	add	AH,#H'0001
	cmp	AH,#H'0001
	bcz	?L34
?LBE6:
?LBE_initDefaultA2DPVolumeLevels:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_InitEarlyUserFeatures:
	enterl	#2
?LBB_InitEarlyUserFeatures:
	ld	AL,#H'0003
	ld	AH,#H'0001
	bsr	$_ChargerConfigure
	bsr	$_buttonManagerInit
	ld	AL,#H'0001
	bsr	$_configManagerInit
	bsr	$_dutInit
	ld	AL,#H'0000
	bsr	_initPreAmp
	ld	AL,#H'0001
	bsr	_initPreAmp
	bsr	$_stateManagerEnterLimboState
?LBE_InitEarlyUserFeatures:
	leavel	#2
$_InitUserFeatures:
	enterl	#3
?LBB_InitUserFeatures:
	ld	AL,@$_theSink+H'003A
	and	AL,#-H'0061
	st	AL,@$_theSink+H'003A
	ld	AL,@$_theSink+H'0038
	and	AL,#-H'1001
	st	AL,@$_theSink+H'0038
	ld	AH,@$_theSink+H'0036
	or	AH,#H'0020
	and	AH,#-H'0241
	st	AH,@$_theSink+H'0036
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L40
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'408E
	bsr	$_MessageSend
?L40:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L41
	bsr	$_LedManagerEnableLEDS
	bra	(?L42)
?L41:
	bsr	$_LedManagerDisableLEDS
?L42:
	ld	X,@$_theSink+H'0006
	ld	AL,@(H'0010,X)
	bsr	$_ConnectionWriteInquiryTx
	ld	AL,#($_theSink)
	ld	AH,#H'0002
	bsr	$_ConnectionWriteInquiryMode
	bsr	$_powerManagerCheckPanic
	ld	AH,@$_theSink+H'0036
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L43
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'474F
	bra	(?L46)
?L43:
	ld	AH,@$_theSink+H'001A
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L44
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4001
?L46:
	bsr	$_MessageSend
?L44:
	bsr	_initDefaultA2DPVolumeLevels
	ld	AL,#($_theSink)
	bsr	$_MessageSystemTask
?LBE_InitUserFeatures:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 61 used[1] = 7 used[3] = 2 total = 70
;# Function pattern *movqi3 used[0] = 86 total = 86
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 4 used[2] = 7 total = 11
;# Function pattern *andqi3 used[0] = 23 total = 23
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *mulqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 13 total = 13
;# Function pattern *ashrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 32 total = 32
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[0] = 12 used[1] = 3 total = 15
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	sink_input_manager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_inquiry
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_inquiryResetEntry:
	enterl	#2
?LBB_inquiryResetEntry:
	smult	#H'0005
	ld	X,@$_theSink+H'0034
	add	X,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(H'0001,X)
	st	AH,@(0,X)
	st	AH,@(H'0003,X)
	st	AH,@(H'0002,X)
	ld	AH,@$_theSink+H'0034
	add	AH,@$XAP_AL
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'4000
	bne	?L2
	ld	X,@$_theSink+H'0006
	ld	AL,@(H'0015,X)
	bra	(?L3)
?L2:
	ld	X,@$_theSink+H'0006
	ld	AL,@(H'0011,X)
?L3:
	ld	X,@$XAP_AH
	st	AL,@(H'0004,X)
?LBE_inquiryResetEntry:
	leavel	#2
$_inquiryReset:
	enterl	#3
?LBB_inquiryReset:
?LBB2:
	tst	@$_theSink+H'0034
	beq	?L6
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	ld	AL,#H'0000
	cmp	AL,@$XAP_AH
	bcc	?L6
?L11:
	ld	AL,@(0,Y)
	bsr	_inquiryResetEntry
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bcs	?L11
?L6:
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'0781
	st	AL,@$_theSink+H'0033
?LBE2:
?LBE_inquiryReset:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_inquiryResume:
	enterl	#8
?LBB_inquiryResume:
	ld	AL,@$_theSink+H'0033
	and	AL,#H'1800
	cmp	AL,#H'0000
	bne	?L15
	bsr	$_inquiryReset
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'1801
	or	AL,#H'0800
	st	AL,@$_theSink+H'0033
	and	AL,#-H'8000
	cmp	AL,#H'0000
	bne	?L17
	ld	AL,#-H'74CD
	st	AL,@(H'0001,Y)
	ld	AL,#H'009E
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0017,X)
	lsr	#H'0008
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0017,X)
	and	AL,#H'00FF
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0013,X)
	ld	AL,@(H'0014,X)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	bra	(?L22)
?L17:
	ld	AH,@$_theSink+H'001D
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L19
	ld	AL,#-H'7500
	bra	(?L21)
?L19:
	ld	AL,#-H'74CD
?L21:
	st	AL,@(H'0001,Y)
	ld	AL,#H'009E
	st	AL,@(0,Y)
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,#H'002E
	st	AL,@(H'0003,Y)
	ld	AL,#H'0400
	st	AL,@(H'0005,Y)
	ld	AL,#H'0020
	st	AL,@(H'0004,Y)
?L22:
	ld	AL,#($_theSink)
	bsr	$_ConnectionInquire
?L15:
?LBE_inquiryResume:
	leavel	#8
$_inquiryPair:
	enterl	#2
?LBB_inquiryPair:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,@$_theSink+H'0033
	ld	AL,@$XAP_AH
	and	AL,#H'6000
	cmp	AL,#H'0000
	bne	?L24
	ld	X,@$XAP_AH
	or	X,#H'2000
	ld	AL,@H'fff8
	asl	#H'000F
	and	X,#H'3FFF
	or	X,@$XAP_AL
	st	X,@$_theSink+H'0033
	ld	AL,@H'fff9
	bsr	$_inquiryStart
	ld	AL,#H'0001
	bra	(?L23)
?L24:
	ld	AL,#H'0000
?L23:
?LBE_inquiryPair:
	leavel	#2
$_inquiryStart:
	enterl	#6
?LBB_inquiryStart:
	st	AL,@(H'0003,Y)
	tst	@$_theSink+H'0034
	bne	?L25
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L27
	ld	AL,#($_theSink)
	ld	AH,#H'4018
	bsr	$_MessageCancelAll
	ld	AL,@(H'0003,Y)
	bsr	$_stateManagerEnterConnDiscoverableState
?L27:
	bsr	$_slcReset
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0005
	add	AL,#H'0005
	bsr	$_malloc
	st	AL,@$_theSink+H'0034
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'1801
	st	AL,@$_theSink+H'0033
	ld	AL,#H'4000
	bsr	$_ConnectionSetPageTimeout
	bsr	$_inquiryResume
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473D
	bsr	$_MessageSendLater
	ld	X,@$_theSink+H'0005
	tst	@(H'0010,X)
	beq	?L25
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0010,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473E
	bsr	$_MessageSendLater
?L25:
?LBE_inquiryStart:
	leavel	#6
$_inquiryStop:
	enterl	#3
?LBB_inquiryStop:
?LBB3:
	tst	@$_theSink+H'0034
	beq	?L31
	ld	AL,#($_theSink)
	bsr	$_ConnectionInquireCancel
	ld	AL,#($_theSink)
	ld	AH,#H'473F
	bsr	$_MessageCancelFirst
	ld	AL,#($_theSink)
	ld	AH,#H'473D
	bsr	$_MessageCancelFirst
	ld	AL,#($_theSink)
	ld	AH,#H'473E
	bsr	$_MessageCancelFirst
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageCancelFirst
	ld	AL,@$_theSink+H'0034
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@$_theSink+H'0034
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'1801
	st	AL,@$_theSink+H'0033
	ld	AL,#H'0000
	bsr	$_ConnectionSetPageTimeout
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'4000
	bne	?L32
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageSend
?L32:
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'6001
	st	AL,@$_theSink+H'0033
?L31:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L30
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'6001
	st	AL,@$_theSink+H'0033
	bsr	$_stateManagerGetState
	cmp	AL,#(H'0001+H'0002)
	bcc	?L30
	bsr	$_stateManagerEnterConnectedState
	bra	(?L30)
?L34:
?LBB4:
	bsr	$_ConnectionTrustedDeviceListSize
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0019
	lsr	#H'000C
	cmp	X,@$XAP_AH
	bcc	?L30
	ld	AL,@$_theSink+H'0033
	and	AL,#H'7FFF
	st	AL,@$_theSink+H'0033
	ld	AL,#H'0001
	bsr	$_stateManagerEnterConnDiscoverableState
?L30:
?LBE4:
?LBE3:
?LBE_inquiryStop:
	leavel	#3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_inquiryTimeout:
	enterl	#2
?LBB_inquiryTimeout:
	tst	@$_theSink+H'0034
	beq	?L41
	ld	AH,@$_theSink+H'0033
	ld	AL,@$XAP_AH
	and	AL,#H'1800
	cmp	AL,#H'1000
	bne	?L41
	ld	AL,@$XAP_AH
	or	AL,#H'1800
	st	AL,@$_theSink+H'0033
	bra	(?L40)
?L41:
	bsr	$_inquiryStop
?L40:
?LBE_inquiryTimeout:
	leavel	#2
_inquiryCheckBdaddr:
	enterl	#5
?LBB_inquiryCheckBdaddr:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L54
?L52:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	smult	#H'0005
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0034
	ld	AL,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L49
	ld	AL,#H'0001
	bra	(?L46)
?L49:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bcs	?L52
?L54:
	ld	AL,#H'0000
?L46:
?LBE_inquiryCheckBdaddr:
	leavel	#5
_inquiryGetIndex:
	enterl	#3
?LBB_inquiryGetIndex:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L65
?L63:
	ld	X,@H'fff8
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	AL,@$XAP_UXL
	smult	#H'0005
	ld	X,@$_theSink+H'0034
	add	X,@$XAP_AL
	ld	AL,@H'fff9
	cmp	AL,@(H'0004,X)
	bgt	?L57
	ld	X,#H'0001
	add	X,@(-1,Y)
	st	X,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	ld	X,@(0,Y)
	cmp	X,@$XAP_AH
	bcs	?L63
?L65:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(0,X)
?L57:
?LBE_inquiryGetIndex:
	leavel	#3
_inquiryConnect:
	enterl	#8
?LBB_inquiryConnect:
	st	AL,@H'fff9
?LBB5:
	tst	@$_theSink+H'0034
	beq	?L69
	ld	AH,@$_theSink+H'0006
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	st	AH,@H'fff8
	ld	AH,@H'fff9
	cmp	AH,@H'fff8
	bcs	?L72
	ld	AH,@(H'0018,X)
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L71
	ld	AL,#H'0001
	add	AL,@H'fff8
	ld	X,@H'fff9
	cmp	X,@$XAP_AL
	bcc	?L71
?L72:
?LBB6:
	ld	AL,@H'fff9
	smult	#H'0005
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0034
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_AH
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L71
?LBB7:
	ld	X,@$_theSink+H'0034
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L74
	add	X,#H'000A
	bra	(?L75)
?L74:
	add	X,#H'0005
?L75:
	ld	X,@(H'0004,X)
	st	X,@H'fff8
	ld	AL,@$_theSink+H'0006
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0018,X)
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L77
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	sub	AH,@H'fff8
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'4000
	bne	?L78
	ld	X,@(H'0005,Y)
	cmp	AH,@(H'0016,X)
	bge	?L77
	bra	(?L71)
?L78:
	ld	X,@$_theSink+H'0006
	cmp	AH,@(H'0012,X)
	blt	?L71
?L77:
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L81
	ld	AL,@$_theSink+H'0033
	and	AL,#H'1800
	cmp	AL,#H'1800
	beq	?L71
?L81:
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L82
	ld	AL,#H'0000
	ld	AH,@(H'0004,Y)
	bsr	$_ConnectionSmDeleteAuthDeviceReq
?L82:
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'1801
	or	AL,#H'1000
	st	AL,@$_theSink+H'0033
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0001
	bsr	$_slcConnectDevice
	bra	(?L69)
?L71:
?LBE7:
?LBE6:
	ld	AH,@$_theSink+H'0033
	ld	AL,@$XAP_AH
	and	AL,#-H'0781
	st	AL,@$_theSink+H'0033
	ld	AL,@$XAP_AH
	and	AL,#H'6000
	cmp	AL,#H'4000
	beq	?L84
	ld	AL,@$XAP_AH
	and	AL,#H'1800
	cmp	AL,#H'1800
	beq	?L84
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	beq	?L83
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'8000
	cmp	AL,#H'0000
	bne	?L83
?L84:
	bsr	$_inquiryStop
	bra	(?L69)
?L83:
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'1801
	st	AL,@$_theSink+H'0033
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	smult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473F
	bsr	$_MessageSendLater
?L69:
?LBE5:
?LBE_inquiryConnect:
	leavel	#8
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
_inquiryConnectFirst:
	enterl	#2
?LBB_inquiryConnectFirst:
	ld	AH,@$_theSink+H'0033
	and	AH,#-H'0781
	st	AH,@$_theSink+H'0033
	lsr	#H'0007
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	_inquiryConnect
?LBE_inquiryConnectFirst:
	leavel	#2
$_inquiryGetConnectingDevice:
; leaf function with empty stack frame
?LBB_inquiryGetConnectingDevice:
?LBB8:
	ld	AL,#H'0000
	tst	@$_theSink+H'0034
	beq	?L97
	ld	AH,@$_theSink+H'0033
	lsr	#H'0007
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0005
	add	AL,@$_theSink+H'0034
?L97:
?LBE8:
?LBE_inquiryGetConnectingDevice:
	rts
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_inquiryConnectNext:
	enterl	#2
?LBB_inquiryConnectNext:
	ld	AH,@$_theSink+H'0033
	lsr	#H'0007
	ld	X,@$XAP_AH
	and	X,#H'000F
	add	X,#H'0001
	ld	AL,@$XAP_UXL
	and	AL,#H'000F
	asl	#H'0007
	ld	AH,@$_theSink+H'0033
	and	AH,#-H'0781
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0033
	ld	AL,@$XAP_UXL
	and	AL,#H'000F
	bsr	_inquiryConnect
?LBE_inquiryConnectNext:
	leavel	#2
$_inquiryHandleResult:
	enterl	#16
?LBB_inquiryHandleResult:
	st	AL,@(H'000D,Y)
?LBB9:
	tst	@$_theSink+H'0034
	beq	?L99
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L101
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'4000
	bne	?L103
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L104
	ld	AH,@(H'000D,Y)
	add	AH,#H'0001
	ld	AL,#H'0000
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	bne	?L104
	bra	(?L99)
?L103:
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0002
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L104
	ld	AH,@(H'000D,Y)
	add	AH,#H'0001
	ld	AL,#H'0000
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	bne	?L99
?L104:
	ld	X,@(H'000D,Y)
?LBB10:
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	_inquiryGetIndex
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'000C
	bsr	_inquiryCheckBdaddr
	cmp	AL,#H'0000
	beq	?L105
	ld	AL,@(H'000B,Y)
	cmp	AL,@(H'000C,Y)
	beq	?L116
	bcc	?L99
?L116:
	ld	AL,@(H'000C,Y)
	bsr	_inquiryResetEntry
?L105:
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	cmp	AH,@(H'000B,Y)
	bcz	?L99
?L110:
?LBB11:
	ld	AL,@(H'000B,Y)
	smult	#H'0005
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0034
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_memcpy
	ld	AL,@(H'000B,Y)
	smult	#H'0005
	add	AL,@$_theSink+H'0034
	ld	X,#H'0005
	st	X,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_memcpy
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_memcpy
	ld	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	bsr	_inquiryGetIndex
?LBE11:
	ld	X,@$_theSink+H'0006
	ld	AH,@(H'0018,X)
	lsr	#H'0004
	and	AH,#H'000F
	add	AH,#H'0001
	cmp	AH,@(H'000B,Y)
	beq	?L118
	bcc	?L110
?L118:
?LBE10:
	bra	(?L99)
?L101:
	bsr	_inquiryConnectFirst
?L99:
?LBE9:
?LBE_inquiryHandleResult:
	leavel	#16
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
	ENDMOD

;# Function pattern *movqi2 used[0] = 96 used[1] = 14 total = 110
;# Function pattern *movqi3 used[0] = 150 total = 150
;# Function pattern *movqi8 used[0] = 7 total = 7
;# Function pattern *movhi used[2] = 1 used[3] = 3 total = 4
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 22 used[2] = 5 total = 27
;# Function pattern *andqi3 used[0] = 50 total = 50
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqihi3_const used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 8 total = 8
;# Function pattern *lshrqi3 used[0] = 23 total = 23
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 27 total = 27
;# Function pattern *call_value1 used[0] = 19 total = 19
;# Function pattern movstrqi+3 used[0] = 19 used[1] = 8 total = 27
;# Function pattern movstrqi+4 used[1] = 1 used[2] = 2 total = 3
;# Function pattern movstrqi+5 used[0] = 24 total = 24
	MODULE	sink_ir_remote_control
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_led_manager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_LedManagerMemoryInit:
	enterl	#3
?LBB_LedManagerMemoryInit:
	ld	AL,#H'0080
	bsr	$_malloc
	st	AL,@$_theSink+H'0003
	ld	AH,#H'0080
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?LBE_LedManagerMemoryInit:
	leavel	#3
$_LEDManagerInit:
	enterl	#5
?LBB_LEDManagerInit:
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'0006
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L3
	ld	AH,#H'0014
?L3:
	ld	AL,@$XAP_AH
	smult	#H'0005
	bsr	$_malloc
	ld	X,@(H'0001,Y)
	st	AL,@(H'003E,X)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0006
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L4
	ld	AH,#H'0014
?L4:
	ld	AL,@$XAP_AH
	smult	#H'0005
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'003E,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L5
	ld	AH,#H'0014
?L5:
	ld	AL,@$XAP_AH
	smult	#H'0003
	bsr	$_malloc
	ld	X,@(H'0002,Y)
	st	AL,@(H'003F,X)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L6
	ld	AH,#H'0014
?L6:
	ld	AL,@$XAP_AH
	smult	#H'0003
	ld	AH,@$XAP_AL
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'003F,X)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0801
	st	AL,@(H'0074,X)
	bsr	_LEDManagerInitStatePatterns
	bsr	_LEDManagerInitActiveLEDS
	bsr	_LEDManagerInitEventPatterns
	ld	X,@$_theSink+H'0003
	ld	AL,#H'0000
	st	AL,@(H'0077,X)
	st	AL,@(H'0076,X)
	st	AL,@(H'0079,X)
	st	AL,@(H'0078,X)
	bsr	_LEDManagerCreateFilterPatterns
	bsr	$_LedsInit
?LBE_LEDManagerInit:
	leavel	#5
_LEDManagerInitActiveLEDS:
	enterl	#5
?LBB_LEDManagerInitActiveLEDS:
?LBB2:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
?L16:
	ld	AL,@(H'0002,Y)
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	add	AL,#H'0040
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_LedsSetLedActivity
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'000F
	bcz	?L16
?LBE2:
?LBE_LEDManagerInitActiveLEDS:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_LEDManagerInitStatePatterns:
	enterl	#2
?LBB_LEDManagerInitStatePatterns:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(-2,Y)
?L25:
?LBB4:
	ld	AL,@(-2,Y)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@$_theSink+H'0003
	st	AL,@(-1,Y)
	ld	AH,#H'0002
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	AL,#H'0001
	st	AL,@(H'0003,X)
?LBE4:
	ld	X,#H'0001
	add	X,@(-2,Y)
	st	X,@(-2,Y)
	cmp	X,#H'000E
	bcz	?L25
?LBE3:
?LBE_LEDManagerInitStatePatterns:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
_LEDManagerInitEventPatterns:
	enterl	#5
?LBB_LEDManagerInitEventPatterns:
?LBB5:
	ld	AL,#H'0000
	bra	(?L36)
?L35:
?LBB6:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0001,Y)
	smult	#H'0005
	add	AL,@(H'003E,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0008
	or	AL,#H'0001
	st	AL,@(H'0004,X)
	ld	AL,@(H'0001,Y)
?LBE6:
	add	AL,#H'0001
?L36:
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0006
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L34
	ld	AH,#H'0014
?L34:
	ld	X,@(H'0001,Y)
	cmp	X,@$XAP_AH
	bcs	?L35
?LBE5:
?LBE_LEDManagerInitEventPatterns:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
_LEDManagerCreateFilterPatterns:
	enterl	#2
?LBB_LEDManagerCreateFilterPatterns:
?LBB7:
	ld	AL,#H'0000
	bra	(?L46)
?L45:
?LBB8:
	ld	X,@$_theSink+H'0003
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	X,@(H'003F,X)
	add	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	st	AL,@(H'0002,X)
?LBE8:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
?L46:
	st	AL,@(-1,Y)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L44
	ld	AH,#H'0014
?L44:
	ld	AL,@(-1,Y)
	cmp	AL,@$XAP_AH
	bcs	?L45
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0010
	st	AL,@(H'0074,X)
	ld	X,@$_theSink+H'0003
	ld	AL,#H'0000
	st	AL,@(H'0075,X)
?LBE7:
?LBE_LEDManagerCreateFilterPatterns:
	leavel	#2
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
_ledManagerCanPlayPattern:
	enterl	#3
?LBB_ledManagerCanPlayPattern:
	st	AL,@H'fff8
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L50
	ld	AL,#H'0000
	bra	(?L49)
?L50:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L52
	ld	X,@H'fff8
	ld	AH,@(H'0004,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L52
	bsr	$_LedActiveFiltersCanOverideDisable
	cmp	AL,#H'0000
	beq	?L51
?L52:
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L51:
	ld	AL,@(0,Y)
?L49:
?LBE_ledManagerCanPlayPattern:
	leavel	#3
$_LEDManagerIndicateEvent:
	enterl	#6
?LBB_LEDManagerIndicateEvent:
	st	AL,@(H'0001,Y)
?LBB9:
	st	AL,@H'fff9
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	ld	AL,#H'00FF
	st	AL,@(H'0002,Y)
	st	AH,@(-2,Y)
	ld	X,@$_theSink+H'0003
	st	X,@(-1,Y)
	ld	AH,@(H'0073,X)
	lsr	#H'0006
	and	AH,#H'001F
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L55
?L59:
	ld	AL,@(-2,Y)
	smult	#H'0005
	ld	AH,@$XAP_AL
	ld	X,@(-1,Y)
	add	AL,@(H'003E,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@H'fff9
	beq	?L75
	ld	AH,#H'0001
	add	AH,@(-2,Y)
	st	AH,@(-2,Y)
	ld	AL,@$_theSink+H'0003
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'0006
	and	AH,#H'001F
	ld	AL,@(-2,Y)
	cmp	AL,@$XAP_AH
	bcs	?L59
?L55:
	ld	X,@(H'0002,Y)
	cmp	X,#H'00FF
	beq	?L72
	ld	AL,@(H'0003,Y)
	bsr	_ledManagerCanPlayPattern
	cmp	AL,#H'0000
	beq	?L72
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L62
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_ledsIndicateLedsPattern
	bra	(?L72)
?L75:
	ld	AL,@(-2,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(-1,Y)
	add	AH,@(H'003E,X)
	st	AH,@(H'0003,Y)
	bra	(?L55)
?L76:
	ld	AH,@(H'0001,Y)
?LBB10:
	st	AH,@(H'0076,X)
	bra	(?L72)
?L62:
?LBE10:
	ld	AH,@$_theSink+H'0019
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L72
?LBB11:
	ld	AL,#H'0000
	ld	X,@$_theSink+H'0003
	st	X,@(-1,Y)
?L70:
	ld	X,@$XAP_AL
	add	X,@(-1,Y)
	tst	@(H'0076,X)
	beq	?L76
	add	AL,#H'0001
	cmp	AL,#H'0003
	bcz	?L70
?L72:
?LBE11:
	ld	AL,@(H'0001,Y)
	bsr	$_LedsCheckForFilter
?LBE9:
?LBE_LEDManagerIndicateEvent:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE9
$_LedManagerIndicateQueuedEvent:
	enterl	#2
?LBB_LedManagerIndicateQueuedEvent:
?LBB12:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0076,X)
	bsr	$_LEDManagerIndicateEvent
	ld	AH,#H'0001
?L87:
	ld	X,@$_theSink+H'0003
	add	X,@$XAP_AH
	ld	AL,@(H'0076,X)
	st	AL,@(H'0075,X)
	add	AH,#H'0001
	cmp	AH,#H'0003
	bcz	?L87
	ld	X,@$_theSink+H'0003
	ld	AL,#H'0000
	st	AL,@(H'0079,X)
?LBE12:
?LBE_LedManagerIndicateQueuedEvent:
	leavel	#2
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_LEDManagerIndicateState:
	enterl	#13
?LBB_LEDManagerIndicateState:
	st	AL,@(H'0006,Y)
?LBB13:
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	st	AH,@H'fffa
	st	AH,@(-3,Y)
	ld	AL,#H'00FF
	st	AL,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	st	AH,@(-1,Y)
	ld	X,@$_theSink+H'0003
	st	X,@(-2,Y)
	st	X,@(H'000A,Y)
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@H'fffa
	cmp	AL,@$XAP_AH
	bcc	?L120
	st	X,@H'fffb
	ld	AH,@(-2,Y)
	st	AH,@H'fff9
?L99:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@H'fff8
	ld	X,@(H'000A,Y)
	add	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,@(H'0006,Y)
	bne	?L96
	ld	AL,@(-1,Y)
	st	AL,@(H'0008,Y)
	ld	X,@H'fff9
	add	X,@H'fff8
	ld	AH,#H'0002
	add	AH,@$XAP_UXL
	st	AH,@H'fffa
	bra	(?L94)
?L96:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@H'fff8
	ld	X,@H'fffb
	add	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'000E
	bne	?L94
	ld	AL,@(-1,Y)
	st	AL,@(H'0009,Y)
	ld	X,@H'fff9
	add	X,@H'fff8
	ld	AH,#H'0002
	add	AH,@$XAP_UXL
	st	AH,@(-3,Y)
?L94:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'000A,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff9
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@(-1,Y)
	cmp	AL,@$XAP_AH
	bcs	?L99
?L120:
	tst	@H'fffa
	bne	?L106
	ld	AL,#H'0000
	bra	(?L105)
?L106:
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L105:
	cmp	AL,#H'0000
	beq	?L108
	tst	#H'0000
	beq	?L109
	ld	X,@(-3,Y)
?LBB14:
	ld	AH,@(0,X)
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0005,Y)
	ld	X,@$_theSink+H'0003
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0008
	ld	AH,@(H'0074,X)
	and	AH,#-H'0101
	or	AH,@$XAP_AL
	st	AH,@(H'0074,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_ledManagerCanPlayPattern
	cmp	AL,#H'0000
	beq	?L108
	ld	AH,@$_theSink+H'0003
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0002
	beq	?L91
	ld	AH,@(H'0005,Y)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0002
	beq	?L91
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0009,Y)
	bra	(?L121)
?L109:
?LBE14:
	tst	@(H'0007,Y)
	beq	?L91
	ld	X,@H'fffa
?LBB15:
	ld	AH,@(0,X)
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0005,Y)
	ld	X,@$_theSink+H'0003
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0008
	ld	AH,@(H'0074,X)
	and	AH,#-H'0101
	or	AH,@$XAP_AL
	st	AH,@(H'0074,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_ledManagerCanPlayPattern
	cmp	AL,#H'0000
	beq	?L108
	ld	AH,@$_theSink+H'0003
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0002
	beq	?L91
	ld	AH,@(H'0005,Y)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0002
	beq	?L91
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0008,Y)
?L121:
	bsr	$_ledsIndicateLedsPattern
	bra	(?L91)
?L108:
?LBE15:
	bsr	$_LedsIndicateNoState
?L91:
?LBE13:
?LBE_LEDManagerIndicateState:
	leavel	#13
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE13
$_LedManagerDisableLEDS:
	enterl	#2
?LBB_LedManagerDisableLEDS:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L131
	bsr	$_LedActiveFiltersCanOverideDisable
	cmp	AL,#H'0000
	bne	?L131
	bsr	$_LedsIndicateNoState
?L131:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'1001
	st	AL,@(H'0074,X)
?LBE_LedManagerDisableLEDS:
	leavel	#2
$_LedManagerEnableLEDS:
	enterl	#2
?LBB_LedManagerEnableLEDS:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	or	AL,#H'1000
	st	AL,@(H'0074,X)
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
?LBE_LedManagerEnableLEDS:
	leavel	#2
$_LedManagerToggleLEDS:
	enterl	#3
?LBB_LedManagerToggleLEDS:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L134
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4017
	bra	(?L136)
?L134:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4016
?L136:
	bsr	$_MessageSend
?LBE_LedManagerToggleLEDS:
	leavel	#3
$_LedManagerResetLEDIndications:
	enterl	#2
?LBB_LedManagerResetLEDIndications:
	bsr	$_LedsResetAllLeds
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0401
	st	AL,@(H'0074,X)
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
?LBE_LedManagerResetLEDIndications:
	leavel	#2
$_LEDManagerResetStateIndNumRepeatsComplete:
	enterl	#3
?LBB_LEDManagerResetStateIndNumRepeatsComplete:
?LBB16:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bsr	$_stateManagerGetState
	st	AL,@H'fff9
	ld	X,#H'0000
	st	X,@(-2,Y)
	ld	AL,@$_theSink+H'0003
	st	AL,@(-1,Y)
	st	AL,@H'fffa
	ld	X,@$XAP_AL
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bcc	?L140
?L144:
	ld	AL,@(-2,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@H'fff8
	ld	X,@H'fffa
	add	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,@H'fff9
	bne	?L141
	ld	X,@(-1,Y)
	add	X,@H'fff8
	add	X,#H'0002
	st	X,@(0,Y)
	bra	(?L140)
?L141:
	ld	AL,#H'0001
	add	AL,@(-2,Y)
	st	AL,@(-2,Y)
	ld	X,@(-1,Y)
	st	X,@H'fffa
	ld	AH,@(H'0073,X)
	lsr	#H'000B
	ld	AL,@(-2,Y)
	cmp	AL,@$XAP_AH
	bcs	?L144
?L140:
	tst	@(0,Y)
	beq	?L138
	ld	X,@(0,Y)
?LBB17:
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@$_theSink+H'0003
	add	X,@$XAP_AL
	add	X,#H'0040
	cmp	X,#H'0000
	beq	?L138
	ld	AL,@(H'0001,X)
	and	AL,#-H'0400
	st	AL,@(H'0001,X)
?L138:
?LBE17:
?LBE16:
?LBE_LEDManagerResetStateIndNumRepeatsComplete:
	leavel	#3
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_LEDManagerCheckTimeoutState:
	enterl	#3
?LBB_LEDManagerCheckTimeoutState:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0073,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L152
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4733
	bsr	$_MessageSend
	bra	(?L151)
?L152:
	bsr	$_LEDManagerResetStateIndNumRepeatsComplete
?L151:
?LBE_LEDManagerCheckTimeoutState:
	leavel	#3
$_LedManagerForceDisable:
	enterl	#2
?LBB_LedManagerForceDisable:
	st	AL,@H'fff8
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'000B
	and	AH,#H'0001
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	beq	?L154
	tst	@H'fff8
	beq	?L156
	bsr	$_LedsResetAllLeds
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0401
	st	AL,@(H'0074,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	or	AL,#H'0800
	st	AL,@(H'0074,X)
	ld	AL,#H'0000
	bra	(?L158)
?L156:
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0801
	st	AL,@(H'0074,X)
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
	ld	AL,#H'0001
?L158:
	bsr	$_LedsEnableFilterOverrides
?L154:
?LBE_LedManagerForceDisable:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 128 used[1] = 35 used[3] = 1 total = 164
;# Function pattern *movqi3 used[0] = 148 total = 148
;# Function pattern *movqi8 used[0] = 13 total = 13
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 13 used[2] = 21 total = 34
;# Function pattern *andqi3 used[0] = 38 total = 38
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *mulqi3_const used[0] = 17 total = 17
;# Function pattern *lshrqi3 used[0] = 36 total = 36
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 14 total = 14
;# Function pattern *call1 used[0] = 21 total = 21
;# Function pattern *call_value1 used[0] = 16 total = 16
;# Function pattern movstrqi+3 used[0] = 15 used[1] = 6 total = 21
;# Function pattern movstrqi+5 used[0] = 28 total = 28
	MODULE	sink_leds
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_LedpPIOtoHW:
	enterl	#3
?LBB_LedpPIOtoHW:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0004,X)
	ld	AL,@H'fff8
	cmp	AL,#H'000C
	bcz	?L11
	ld	AL,#H'0001
	ld	X,@(0,Y)
	st	AL,@(H'0004,X)
	ld	AL,@H'fff8
	cmp	AL,#H'000E
	beq	?L6
	cmp	AL,#(H'0001+H'000E)
	bcc	?L10
	cmp	AL,#H'000D
	beq	?L5
	bra	(?L1)
?L10:
	cmp	AL,#H'000F
	beq	?L7
	bra	(?L1)
?L5:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'007A,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	ld	AH,@(0,Y)
	bsr	_LedGetInfo
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'007A,X)
	lsr	#H'0008
	bra	(?L12)
?L6:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'007A,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	ld	AH,@(0,Y)
	bsr	_LedGetInfo
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'007A,X)
	lsr	#H'0004
?L12:
	ld	AL,@$XAP_AH
	ld	AH,@(0,Y)
	add	AH,#H'0002
	and	AL,#H'000F
	bra	(?L11)
?L7:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'007A,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	ld	AH,@(0,Y)
	bsr	_LedGetInfo
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'007A,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	ld	AH,@(0,Y)
	add	AH,#H'0002
?L11:
	bsr	_LedGetInfo
?L1:
?LBE_LedpPIOtoHW:
	leavel	#3
_LedGetInfo:
	enterl	#3
?LBB_LedGetInfo:
	st	AH,@H'fff9
?LBB2:
	cmp	AL,#(H'0001+H'0009)
	bcc	?L18
	asl	#H'0008
	ld	X,@H'fff9
	ld	AH,@(0,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	and	AH,#-H'00C1
	st	AH,@(0,X)
	ld	AL,@(H'0001,X)
	and	AL,#H'000F
	st	AL,@(H'0001,X)
	bra	(?L17)
?L18:
	cmp	AL,#(H'0001+H'000C)
	bcc	?L17
?LBB3:
	add	AL,#-H'000A
	st	AL,@H'fff8
	asl	#H'0008
	ld	X,@H'fff9
	ld	AH,@(0,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	or	AH,#H'0040
	st	AH,@(0,Y)
	st	AH,@(0,X)
	ld	X,@$_theSink+H'0003
	add	X,@H'fff8
	ld	AH,@(H'0070,X)
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0007
	ld	AH,@(0,Y)
	and	AH,#-H'0081
	or	AH,@$XAP_AL
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	X,@$_theSink+H'0003
	add	X,@H'fff8
	ld	AH,@(H'0070,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	asl	#H'0004
	ld	X,@H'fff9
	ld	AH,@(H'0001,X)
	and	AH,#H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L17:
?LBE3:
?LBE2:
?LBE_LedGetInfo:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_LedSetgState:
	enterl	#2
?LBB_LedSetgState:
	st	AH,@H'fff8
	ld	AH,@$_theSink+H'0003
	st	AH,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	ld	AL,@H'fff8
	and	AL,#H'0001
	asl	#H'0003
	ld	AH,@(H'0070,X)
	and	AH,#-H'0009
	or	AH,@$XAP_AL
	st	AH,@(H'0070,X)
?LBE_LedSetgState:
	leavel	#2
_PioSetLedAndgState:
	enterl	#5
?LBB_PioSetLedAndgState:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L23
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0FFF
	bsr	_PioSetLedDim
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_LedSetgState
	bra	(?L22)
?L23:
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
?L22:
?LBE_PioSetLedAndgState:
	leavel	#5
_PioSetLedDim:
	enterl	#4
?LBB_PioSetLedDim:
	st	AL,@(H'0001,Y)
	st	AH,@H'fff8
	ld	AH,@$_theSink+H'0003
	st	AH,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	ld	AL,@H'fff8
	asl	#H'0004
	ld	AH,@(H'0070,X)
	and	AH,#H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'0070,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$_LedConfigure
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_LedConfigure
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
?LBE_PioSetLedDim:
	leavel	#4
$_PioSetLedPin:
	enterl	#11
?LBB_PioSetLedPin:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB4:
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	add	AL,#H'0040
	st	AL,@(H'0005,Y)
	ld	X,@$_theSink+H'0003
	add	X,#H'007B
	st	X,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	_LedpPIOtoHW
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bmi	?L27
	beq	?L27
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L27
	ld	AH,@(H'0002,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L28
	tst	@(H'0004,X)
	bne	?L27
?L28:
	ld	X,@(H'0006,Y)
	tst	@(H'0004,X)
	bne	?L31
	ld	AH,@(0,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,@(H'0004,Y)
	bne	?L30
?L31:
	ld	X,@(H'0006,Y)
	tst	@(H'0004,X)
	beq	?L26
	ld	AH,@(0,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,@(H'0004,Y)
	bne	?L30
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,@(H'0004,Y)
	beq	?L26
?L30:
?LBB5:
	tst	@(H'0004,Y)
	bne	?L32
	ld	AL,#H'000F
	bra	(?L33)
?L32:
	ld	AL,#H'0000
?L33:
	asl	#H'0009
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AL
	and	X,#H'00FF
	ld	AL,@(H'0004,Y)
	and	AL,#H'0001
	asl	#H'0008
	ld	AH,@$XAP_UXL
	or	AH,@H'fff8
	or	AH,@$XAP_AL
	ld	X,@(H'0005,Y)
	st	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'0008
	st	AL,@(H'0007,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,@(H'0004,Y)
	beq	?L34
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	ld	AL,@(H'0007,Y)
	cmp	AL,@$XAP_AH
	bcc	?L36
	ld	X,#H'0001
	st	X,@H'fff8
?L36:
	ld	AL,@(H'0004,Y)
	cmp	AL,@H'fff8
	beq	?L35
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	_PioSetLedDim
?L35:
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0004,Y)
	bsr	_LedSetgState
?L34:
	ld	X,@(H'0006,Y)
	tst	@(H'0004,X)
	beq	?L37
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,@(H'0004,Y)
	beq	?L37
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AH,@(H'0003,X)
	lsr	#H'0004
	ld	AL,@(H'0007,Y)
	cmp	AL,@$XAP_AH
	bcc	?L40
	ld	X,#H'0001
	st	X,@H'fff8
?L40:
	ld	AL,@(H'0004,Y)
	cmp	AL,@H'fff8
	beq	?L39
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	_PioSetLedDim
?L39:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	_LedSetgState
?L37:
	ld	X,@(H'0003,Y)
	add	X,#H'1000
	st	X,@(H'0008,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@$XAP_UXL
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0008,Y)
	bsr	$_MessageSendLater
?LBE5:
	bra	(?L26)
?L27:
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0004,Y)
	bsr	_PioSetLedAndgState
	ld	X,@(H'0006,Y)
	tst	@(H'0004,X)
	beq	?L26
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	_PioSetLedAndgState
?L26:
?LBE4:
?LBE_PioSetLedPin:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_PioSetDimState:
	enterl	#11
?LBB_PioSetDimState:
	st	AL,@(H'0003,Y)
?LBB6:
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	add	AL,#H'0040
	st	AL,@(H'0005,Y)
	ld	X,@$_theSink+H'0003
	add	X,#H'007B
	st	X,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	_LedpPIOtoHW
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L53
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	cmp	AH,#H'000E
	ble	?L53
	ld	AL,#H'0FFF
	bra	(?L66)
?L53:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#-H'0100
	cmp	AL,#H'0000
	bne	?L55
	ld	AL,#H'0000
?L66:
	st	AL,@(H'0004,Y)
	bra	(?L54)
?L55:
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L57
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	bra	(?L65)
?L57:
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	add	AL,#-H'0001
?L65:
	asl	#H'0009
	ld	AH,@(H'0002,X)
	and	AH,#H'01FF
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'0008
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'1000
	st	AL,@(H'0007,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0007,Y)
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0007,Y)
	bsr	$_MessageSendLater
?L54:
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'0007
	and	AH,#H'0001
	ld	AL,@(H'0008,Y)
	cmp	AL,@$XAP_AH
	bne	?L59
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	ld	AL,@(H'0004,Y)
	cmp	AL,@$XAP_AH
	bcc	?L61
	ld	X,#H'0001
	st	X,@H'fff8
?L61:
	ld	AL,@(H'0008,Y)
	cmp	AL,@H'fff8
	beq	?L59
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0004,Y)
	bsr	_PioSetLedDim
?L59:
	ld	X,@(H'0006,Y)
	tst	@(H'0004,X)
	beq	?L52
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	ld	AL,@(H'0008,Y)
	cmp	AL,@$XAP_AH
	bne	?L52
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0004
	ld	AL,@(H'0004,Y)
	cmp	AL,@$XAP_AH
	bcc	?L64
	ld	X,#H'0001
	st	X,@H'fff8
?L64:
	ld	AL,@(H'0008,Y)
	cmp	AL,@H'fff8
	beq	?L52
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	_PioSetLedDim
?L52:
?LBE6:
?LBE_PioSetDimState:
	leavel	#11
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_LedsInit:
	enterl	#2
?LBB_LedsInit:
	ld	X,@$_theSink+H'0003
	ld	AH,#hwrd(_LedsMessageHandler)
	ld	AL,#lwrd(_LedsMessageHandler)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0401
	st	AL,@(H'0074,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'007A,X)
	and	AL,#H'0FFF
	st	AL,@(H'007A,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'007A,X)
	and	AL,#-H'0F01
	st	AL,@(H'007A,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'007A,X)
	and	AL,#-H'00F1
	st	AL,@(H'007A,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0201
	st	AL,@(H'0074,X)
?LBE_LedsInit:
	leavel	#2
$_LedsCheckForFilter:
	enterl	#8
?LBB_LedsCheckForFilter:
	st	AL,@(0,Y)
?LBB7:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	st	X,@H'fff8
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	ld	AL,#H'0000
	cmp	AL,@$XAP_AH
	bcc	?L92
?L90:
?LBB8:
	ld	AL,@(H'0001,Y)
	smult	#H'0003
	ld	X,@H'fff8
	add	AL,@(H'003F,X)
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@(0,Y)
	bne	?L78
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0000
	beq	?L78
	cmp	AH,#H'0001
	beq	?L81
	ld	AL,@(H'0001,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	bne	?L78
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	_LedsEnableFilter
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0003
	bne	?L78
?LBB9:
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@H'fff8
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	ld	X,@$XAP_AL
	ld	AL,@(H'0040,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L78
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_PioSetLedPin
?LBE9:
	bra	(?L78)
?L81:
	ld	X,@(H'0002,Y)
?LBB10:
	ld	AH,@(H'0001,X)
	lsr	#H'0005
	and	AH,#H'001F
	cmp	AH,#H'0000
	beq	?L78
?LBB11:
	add	AH,#-H'0001
	st	AH,@(-1,Y)
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_AH
	smult	#H'0003
	ld	X,@(H'0004,Y)
	add	AL,@(H'003F,X)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(H'0005,Y)
	ld	AL,@(-1,Y)
	ld	AH,#H'0000
	bsr	_LedsEnableFilter
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	ld	X,@$XAP_AL
	ld	AL,@(H'0040,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L78
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0003
	bne	?L78
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_PioSetLedPin
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
?L78:
	ld	AL,@(H'0001,Y)
?LBE11:
?LBE10:
?LBE8:
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	st	X,@H'fff8
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L90
?L92:
?LBE7:
?LBE_LedsCheckForFilter:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_LedsEnableFilterOverrides:
	enterl	#5
?LBB_LedsEnableFilterOverrides:
	st	AL,@(0,Y)
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	st	X,@H'fff8
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L108
?L106:
?LBB13:
	ld	AL,@(H'0001,Y)
	smult	#H'0003
	ld	X,@H'fff8
	add	AL,@(H'003F,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L102
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0003
	bne	?L102
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	and	AH,#H'000F
	ld	X,#H'0000
	tst	@(0,Y)
	beq	?L105
	ld	X,#H'0001
?L105:
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UXL
	bsr	$_PioSetLedPin
?L102:
	ld	AL,@(H'0001,Y)
?LBE13:
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	st	X,@H'fff8
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L106
?L108:
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
?LBE12:
?LBE_LedsEnableFilterOverrides:
	leavel	#5
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_ledsIndicateLedsPattern:
	enterl	#10
?LBB_ledsIndicateLedsPattern:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB14:
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(H'0006,Y)
	ld	X,@(H'000A,Y)
	cmp	X,#H'0002
	bne	?L113
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0005,Y)
	bsr	$_MessageCancelAll
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0006,Y)
	bsr	$_MessageCancelAll
?L113:
	bsr	$_LedsIndicateNoState
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0003
	add	X,#H'0040
	st	X,@(-1,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@(-1,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_LedsSetLedActivity
	ld	AL,@(H'0006,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0003
	add	X,#H'0040
	st	X,@(-1,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@(-1,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_LedsSetLedActivity
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	_LedsTurnOffLEDPair
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	cmp	AH,#H'0000
	bne	?L114
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	smult	#H'000A
	st	AL,@H'fff8
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@H'fff8
	asl	@$XAP_UXL
	cmp	AL,#H'0000
	beq	?L115
	ld	AH,@(H'0007,Y)
	add	AH,@$_theSink+H'0003
	add	AH,#H'0040
	ld	AL,@(H'0003,Y)
	bsr	_LedsTurnOnLEDPair
	bra	(?L112)
?L115:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	smult	#H'000A
	st	AL,@H'fff8
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@H'fff8
	asl	@$XAP_UXL
	cmp	AL,#H'0000
	beq	?L112
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	_LedsTurnOffLEDPair
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	_LedsSendEventComplete
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	add	X,@$_theSink+H'0003
	add	X,#H'0040
	ld	AL,@(H'0006,Y)
	smult	#H'0003
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0003
	add	AH,#H'0040
	ld	AL,@$XAP_UXL
	bsr	_LedsEventComplete
	bra	(?L112)
?L114:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0002
	bne	?L119
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0005,Y)
	bsr	$_MessageSend
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	or	AL,#H'0400
	st	AL,@(H'0074,X)
	bra	(?L112)
?L119:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'012C
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0005,Y)
	bsr	$_MessageSendLater
?L112:
?LBE14:
?LBE_ledsIndicateLedsPattern:
	leavel	#10
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_LedsIndicateNoState:
	enterl	#9
?LBB_LedsIndicateNoState:
?LBB15:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
?L129:
?LBB16:
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	st	AL,@(-1,Y)
	ld	X,#H'0040
	add	X,@$XAP_AL
	st	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L126
?LBB17:
	ld	AL,@$_theSink+H'0003
	st	AL,@H'fff8
	ld	X,@(-1,Y)
	ld	AH,@(H'0040,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	X,@(-1,Y)
	ld	AH,@(H'0040,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,#H'0002
	add	AH,@$XAP_UXL
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'0005,Y)
	bsr	$_MessageCancelAll
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'0C01
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UY
	ld	AH,#H'0001
	bsr	_LedsTurnOffLEDPair
?L126:
	ld	AL,@(H'0005,Y)
?LBE17:
?LBE16:
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'000F
	bcz	?L129
?LBE15:
?LBE_LedsIndicateNoState:
	leavel	#9
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
$_LedActiveFiltersCanOverideDisable:
	enterl	#3
?LBB_LedActiveFiltersCanOverideDisable:
?LBB18:
	ld	AL,#H'0000
	bra	(?L143)
?L142:
	ld	AL,@(0,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L137
	ld	X,@$_theSink+H'0003
	ld	AL,@(0,Y)
	smult	#H'0003
	ld	X,@(H'003F,X)
	add	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L137
	ld	AL,#H'0001
	bra	(?L134)
?L137:
	ld	AL,@(0,Y)
	add	AL,#H'0001
?L143:
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L139
	ld	AH,#H'0014
?L139:
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bcs	?L142
	ld	AL,#H'0000
?L134:
?LBE18:
?LBE_LedActiveFiltersCanOverideDisable:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
_LedsMessageHandler:
	enterl	#17
?LBB_LedsMessageHandler:
	st	AH,@(H'0008,Y)
?LBB19:
	ld	AL,@$XAP_AH
	smult	#H'0003
	add	AL,@$_theSink+H'0003
	add	AL,#H'0040
	st	AL,@(H'000B,Y)
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	st	AL,@(H'000D,Y)
	ld	AL,@(H'0008,Y)
	cmp	AL,#(H'0001+H'0FFF)
	bcc	?L147
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L148
	ld	AL,@$_theSink+H'0003
	st	AL,@H'fff8
	ld	AH,@(0,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	st	AH,@(H'0003,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,#H'0002
	add	AH,@$XAP_UXL
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0007,Y)
	bra	(?L149)
?L148:
	ld	AL,@$_theSink+H'0003
	st	AL,@(H'000E,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	smult	#H'0005
	ld	AH,@$XAP_AL
	ld	X,@(H'000E,Y)
	add	AH,@(H'003E,X)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
?L149:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	_LedsGetPatternColour
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0007,Y)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@$_theSink+H'0003
	add	X,@$XAP_AL
	ld	AL,@(H'0040,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L150
	ld	AL,@(H'0004,Y)
	and	AL,#H'00FF
	smult	#H'000A
	st	AL,@(H'0009,Y)
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@(H'0009,Y)
	asl	@$XAP_UXL
	st	AL,@(H'0009,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	add	AL,#H'0001
	and	AL,#H'00FF
	asl	#H'0001
	ld	AH,@(0,X)
	and	AH,#-H'01FF
	or	AH,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	bsr	_LedsTurnOnLEDPair
	bra	(?L151)
?L150:
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	lsr	#H'0001
	ld	X,@$XAP_AH
	and	X,#H'00FF
	ld	AH,@(H'0007,Y)
	lsr	#H'000C
	cmp	X,@$XAP_AH
	blt	?L152
	ld	AL,@(H'0005,Y)
	and	AL,#H'00FF
	smult	#H'0032
	st	AL,@(H'0009,Y)
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@(H'0009,Y)
	asl	@$XAP_UXL
	st	AL,@(H'0009,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	and	AL,#-H'01FF
	st	AL,@(0,X)
	ld	AH,@(H'0001,X)
	ld	AL,@$XAP_AH
	and	AL,#H'03FF
	add	AL,#H'0001
	and	AL,#H'03FF
	and	AH,#-H'0400
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	and	AL,#H'00FF
	smult	#H'0032
	st	AL,@H'fff8
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@H'fff8
	asl	@$XAP_UXL
	cmp	AL,#H'0000
	bne	?L153
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L153:
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	cmp	AH,#H'0000
	beq	?L154
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'03FF
	cmp	AL,@$XAP_AH
	blt	?L154
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L154:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L155
	ld	AL,#H'0001
	st	AL,@(H'000D,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	_LedsGetLedFollowerRepeatTimeLeft
	bra	(?L172)
?L155:
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L159
	bsr	_LedsCheckFiltersForLEDFollower
	cmp	AL,#H'0000
	beq	?L159
	bsr	_LedsGetLedFollowerStartDelay
	st	AL,@(H'0009,Y)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	or	AL,#H'0200
	st	AL,@(H'0074,X)
	bra	(?L159)
?L152:
	ld	AH,@(H'0005,Y)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	smult	#H'000A
	st	AL,@(H'0009,Y)
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@(H'0009,Y)
	asl	@$XAP_UXL
?L172:
	st	AL,@(H'0009,Y)
?L159:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	_LedsGetPatternColour
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0003
	beq	?L160
	tst	@(H'0009,Y)
	bne	?L161
	tst	@(H'000C,Y)
	bne	?L161
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bra	(?L173)
?L161:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0001
?L173:
	bsr	_LedsTurnOffLEDPair
	bra	(?L163)
?L160:
	ld	AH,@(H'0007,Y)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@$_theSink+H'0003
	add	X,@$XAP_AL
	ld	AL,@(H'0040,X)
	and	AL,#-H'0002
	st	AL,@(H'0040,X)
?L163:
	tst	@(H'000D,Y)
	beq	?L151
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0201
	st	AL,@(H'0074,X)
?L151:
	tst	@(H'000C,Y)
	beq	?L165
	ld	AL,@(H'0008,Y)
	smult	#H'0003
	ld	X,@$_theSink+H'0003
	add	X,@$XAP_AL
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0002
	bne	?L166
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	_LedsSendEventComplete
	ld	AH,@(H'0007,Y)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'0003
	add	AH,#H'0040
	ld	AL,@(H'000B,Y)
	bsr	_LedsEventComplete
	bra	(?L167)
?L166:
	ld	AL,@$_theSink+H'0003
	st	AL,@H'fff8
	ld	AL,@(H'0008,Y)
	smult	#H'0003
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L167
	ld	X,@H'fff8
	ld	AL,@(H'0073,X)
	or	AL,#H'0001
	st	AL,@(H'0073,X)
?L167:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0003
	bne	?L146
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0001
	bsr	_LedsTurnOffLEDPair
	bra	(?L146)
?L165:
	ld	AL,@(H'0009,Y)
	bsr	_LedsApplyFilterToTime
	st	AL,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0009,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theSink+H'0003
	ld	AH,@(H'0008,Y)
	bsr	$_MessageSendLater
	bra	(?L146)
?L147:
	ld	AL,@(H'0008,Y)
	add	AL,#-H'1000
	bsr	$_PioSetDimState
?L146:
?LBE19:
?LBE_LedsMessageHandler:
	leavel	#17
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
_ledsTurnOnAltLeds:
	enterl	#3
?LBB_ledsTurnOnAltLeds:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_PioSetLedPin
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetLedPin
?LBE_ledsTurnOnAltLeds:
	leavel	#3
_LedsTurnOnLEDPair:
	enterl	#8
?LBB_LedsTurnOnLEDPair:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB20:
	bsr	_LedsGetPatternColour
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(H'0004,Y)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L184
?LBB21:
	ld	AH,@(H'0074,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(H'0005,Y)
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	_LedsTurnOffLEDPair
	ld	AL,@(H'0005,Y)
	cmp	AL,#(H'0001+H'0010)
	bcc	?L186
	bra	(?L206)
?L184:
?LBE21:
	ld	AL,#H'0001
	bsr	_LedsSetEnablePin
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	beq	?L191
	cmp	AL,#(H'0001+H'0002)
	bcc	?L200
	cmp	AL,#H'0001
	beq	?L188
	bra	(?L186)
?L200:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0003
	beq	?L194
	cmp	AL,#H'0004
	beq	?L197
	bra	(?L186)
?L188:
	ld	AL,@(H'0003,Y)
	cmp	AL,@(H'0004,Y)
	beq	?L189
	ld	AL,@(H'0004,Y)
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	bne	?L189
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_PioSetLedPin
?L189:
	ld	AL,@(H'0003,Y)
	bra	(?L206)
?L191:
	ld	AL,@(H'0003,Y)
	cmp	AL,@(H'0004,Y)
	beq	?L205
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	bne	?L205
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bra	(?L207)
?L194:
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L195
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bra	(?L204)
?L195:
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
?L204:
	bsr	_ledsTurnOnAltLeds
	bra	(?L186)
?L197:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
?L207:
	bsr	$_PioSetLedPin
?L205:
	ld	AL,@(H'0004,Y)
?L206:
	ld	AH,#H'0001
	bsr	$_PioSetLedPin
?L186:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0003
	cmp	AL,#H'0001
	bcz	?L201
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	cmp	AH,#H'0000
	beq	?L201
	ld	AL,@(H'0003,Y)
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	beq	?L203
	ld	AL,@(H'0004,Y)
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	bne	?L201
?L203:
	ld	AL,#H'0000
	bsr	_LedsHandleOverideLED
?L201:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	or	AL,#H'0001
	st	AL,@(0,X)
?LBE20:
?LBE_LedsTurnOnLEDPair:
	leavel	#8
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
_LedsTurnOffLEDPair:
	enterl	#4
?LBB_LedsTurnOffLEDPair:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	bne	?L216
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	ld	AH,#H'0000
	bsr	$_PioSetLedPin
?L216:
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	bne	?L217
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	ld	AH,#H'0000
	bsr	$_PioSetLedPin
?L217:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L218
	ld	AH,@(H'0074,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_isOverideFilterActive
	cmp	AL,#H'0000
	bne	?L218
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0074,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	ld	AH,#H'0000
	bsr	$_PioSetLedPin
?L218:
	tst	@(H'0001,Y)
	beq	?L219
	ld	AL,#H'0001
	bsr	_LedsHandleOverideLED
?L219:
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	smult	#H'0003
	ld	X,@$_theSink+H'0003
	add	X,@$XAP_AL
	ld	AL,@(H'0040,X)
	and	AL,#-H'0002
	st	AL,@(H'0040,X)
	ld	AL,#H'0000
	bsr	_LedsSetEnablePin
?LBE_LedsTurnOffLEDPair:
	leavel	#4
_LedsHandleOverideLED:
	enterl	#4
?LBB_LedsHandleOverideLED:
	st	AL,@(0,Y)
?LBB22:
	ld	AL,#H'0000
	bra	(?L229)
?L228:
	ld	AL,@(H'0001,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L223
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0001,Y)
	smult	#H'0003
	ld	X,@(H'003F,X)
	add	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0003
	bne	?L223
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	ld	AH,@(0,Y)
	bsr	$_PioSetLedPin
?L223:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
?L229:
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L225
	ld	AH,#H'0014
?L225:
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L228
?LBE22:
?LBE_LedsHandleOverideLED:
	leavel	#4
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
_LedsGetPatternColour:
	enterl	#4
?LBB_LedsGetPatternColour:
	ld	X,@$XAP_AL
?LBB23:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0004,X)
	ld	AL,@$XAP_UXL
	and	AL,#H'0007
	st	AL,@(H'0001,Y)
	bra	(?L234)
?L241:
	ld	AL,@(0,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L236
	ld	X,@$_theSink+H'0003
	ld	AL,@(0,Y)
	smult	#H'0003
	ld	X,@(H'003F,X)
	add	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#H'0000
	beq	?L236
	and	AH,#H'0007
	st	AH,@(H'0001,Y)
?L236:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
?L234:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L238
	ld	AH,#H'0014
?L238:
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bcs	?L241
?LBE23:
	ld	AL,@(H'0001,Y)
?LBE_LedsGetPatternColour:
	leavel	#4
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
_LedsApplyFilterToTime:
	enterl	#4
?LBB_LedsApplyFilterToTime:
?LBB24:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	bra	(?L245)
?L255:
	ld	AL,@(0,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L247
?LBB25:
	ld	X,@$_theSink+H'0003
	ld	AL,@(0,Y)
	smult	#H'0003
	ld	X,@(H'003F,X)
	add	X,@$XAP_AL
	st	X,@H'fff8
	ld	AH,@(H'0002,X)
	ld	X,@$XAP_AH
	and	X,#H'00FF
	cmp	X,#H'0000
	beq	?L247
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L252
	ld	AL,@(H'0001,Y)
	smult	@$XAP_UXL
	bra	(?L256)
?L252:
	tst	@(H'0001,Y)
	beq	?L247
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AL
	and	X,#H'00FF
	ld	AH,#H'0000
	ld	AL,@(H'0001,Y)
	udiv	@$XAP_UXL
?L256:
	st	AL,@(H'0001,Y)
?L247:
	ld	AH,@(0,Y)
?LBE25:
	add	AH,#H'0001
	st	AH,@(0,Y)
?L245:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L249
	ld	AH,#H'0014
?L249:
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bcs	?L255
?LBE24:
	ld	AL,@(H'0001,Y)
?LBE_LedsApplyFilterToTime:
	leavel	#4
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
_LedsSendEventComplete:
	enterl	#5
?LBB_LedsSendEventComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB26:
	add	AL,#-H'4001
	cmp	AL,#(H'0001+H'079B)
	bcc	?L259
?LBB27:
	ld	AL,#H'0002
	bsr	$_malloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4706
	bsr	$_MessageSend
?L259:
?LBE27:
?LBE26:
?LBE_LedsSendEventComplete:
	leavel	#5
_LedsEventComplete:
	enterl	#2
?LBB_LedsEventComplete:
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	and	AL,#-H'0C01
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	and	AL,#-H'0C01
	st	AL,@(H'0001,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#-H'0401
	st	AL,@(H'0074,X)
?LBE_LedsEventComplete:
	leavel	#2
_LedsEnableFilter:
	enterl	#9
?LBB_LedsEnableFilter:
	st	AL,@(0,Y)
	st	AH,@H'fff8
?LBB28:
	ld	AH,@$_theSink+H'0003
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	X,@(H'0074,X)
	st	X,@(H'0002,Y)
	and	X,#H'000F
	ld	AH,@$XAP_UXL
	ld	AL,#H'0000
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	X,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0075,X)
	or	AL,@H'fffb
	or	AH,@H'fffa
	st	AH,@H'fffa
	st	AL,@H'fffb
	tst	@H'fff8
	beq	?L263
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@(0,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@H'fffa
	ld	AL,@H'fffb
	or	AL,@H'fff9
	or	AH,@H'fff8
	lsr	#H'0010
	ld	AH,@$XAP_AL
	and	AH,#H'000F
	ld	AL,@(H'0002,Y)
	and	AL,#-H'0010
	or	AL,@$XAP_AH
	st	AL,@(H'0074,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@H'fffb
	or	AL,@H'fff9
	bra	(?L266)
?L263:
	ld	AH,@$_theSink+H'0003
	st	AH,@(H'0003,Y)
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@(0,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	xor	AL,#H'FFFF
	xor	AH,#H'FFFF
	lsr	#H'0010
	ld	X,@H'fffb
	and	X,@$XAP_AL
	ld	AH,@$XAP_UXL
	and	AH,#H'000F
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0074,X)
	and	AL,#-H'0010
	or	AL,@$XAP_AH
	st	AL,@(H'0074,X)
	ld	X,@$_theSink+H'0003
	ld	AL,@H'fff9
	xor	AL,#-H'0001
	and	AL,@H'fffb
?L266:
	st	AL,@(H'0075,X)
	ld	AH,@$_theSink+H'0003
	st	AH,@(H'0004,Y)
	ld	AL,@(0,Y)
	smult	#H'0003
	ld	X,@(H'0004,Y)
	add	AL,@(H'003F,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L262
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0074,X)
	and	AL,#H'000F
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0075,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@H'fffa
	ld	AL,@H'fffb
	cmp	AH,@H'fff8
	bne	?L267
	cmp	AL,@H'fff9
	beq	?L262
?L267:
	bsr	$_stateManagerGetState
	bsr	$_LEDManagerIndicateState
?L262:
?LBE28:
?LBE_LedsEnableFilter:
	leavel	#9
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
_LedsIsFilterEnabled:
	enterl	#4
?LBB_LedsIsFilterEnabled:
	st	AL,@H'fffa
?LBB29:
	ld	AH,#H'0000
	st	AH,@(-1,Y)
	ld	X,@$_theSink+H'0003
	ld	AL,@(H'0074,X)
	and	AL,#H'000F
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0075,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	lsr	@H'fffa
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L269
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L269:
?LBE29:
	ld	AL,@(-1,Y)
?LBE_LedsIsFilterEnabled:
	leavel	#4
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_LedsSetLedActivity:
	enterl	#2
?LBB_LedsSetLedActivity:
	ld	X,@$XAP_AL
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'000A
	ld	AH,@(H'0001,X)
	and	AH,#-H'0C01
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	asl	#H'0009
	ld	AH,@(0,X)
	and	AH,#H'01FF
	or	AH,@$XAP_AL
	st	AH,@(0,X)
	ld	AH,@(H'0003,Y)
	and	AH,#H'00FF
	ld	AL,@(H'0002,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'0002,X)
?LBE_LedsSetLedActivity:
	leavel	#2
_LedsCheckFiltersForLEDFollower:
	enterl	#6
?LBB_LedsCheckFiltersForLEDFollower:
?LBB30:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	bra	(?L272)
?L279:
	ld	AL,@(H'0001,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L274
?LBB31:
	ld	X,@$_theSink+H'0003
	st	X,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	smult	#H'0003
	add	AL,@(H'003F,X)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0005
	bne	?L274
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0074,X)
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	st	AH,@(H'0074,X)
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L274:
	ld	X,@(H'0001,Y)
?LBE31:
	add	X,#H'0001
	st	X,@(H'0001,Y)
?L272:
	ld	X,@$_theSink+H'0003
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L276
	ld	AH,#H'0014
?L276:
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L279
?LBE30:
	ld	AL,@(0,Y)
?LBE_LedsCheckFiltersForLEDFollower:
	leavel	#6
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
_LedsGetLedFollowerRepeatTimeLeft:
	enterl	#4
?LBB_LedsGetLedFollowerRepeatTimeLeft:
	ld	X,@$XAP_AL
?LBB32:
	ld	AH,@(H'0002,X)
	st	AH,@H'fff9
	and	AH,#H'00FF
	ld	AL,@$XAP_AH
	smult	#H'0032
	st	AL,@(0,Y)
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	st	AL,@H'fff8
	ld	AL,@(0,Y)
	asl	@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	smult	#H'000A
	asl	@H'fff8
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,Y)
	smult	@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AH,@H'fff9
	lsr	#H'0008
	ld	AL,@$XAP_AH
	smult	#H'000A
	asl	@H'fff8
	add	X,#-H'0001
	smult	@$XAP_UXL
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	bsr	_LedsGetLedFollowerStartDelay
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	cmp	AH,@(0,Y)
	bcc	?L284
	ld	AL,@(0,Y)
	sub	AL,@$XAP_AH
	st	AL,@(0,Y)
?L284:
?LBE32:
	ld	AL,@(0,Y)
?LBE_LedsGetLedFollowerRepeatTimeLeft:
	leavel	#4
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
_LedsGetLedFollowerStartDelay:
	enterl	#6
?LBB_LedsGetLedFollowerStartDelay:
?LBB33:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@$_theSink+H'0003
	st	X,@(H'0002,Y)
	bra	(?L287)
?L294:
	ld	AL,@(H'0001,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L289
	ld	AL,@(H'0001,Y)
	smult	#H'0003
	ld	X,@(H'0002,Y)
	add	AL,@(H'003F,X)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0005
	bne	?L289
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(0,Y)
	ld	AH,@$_theSink+H'0018
	lsr	#H'0002
	ld	X,@$XAP_AH
	and	X,#H'0003
	ld	AL,@(0,Y)
	asl	@$XAP_UXL
	smult	#H'0032
	st	AL,@(0,Y)
?L289:
	ld	X,@(H'0001,Y)
	add	X,#H'0001
	st	X,@(H'0001,Y)
?L287:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L291
	ld	AH,#H'0014
?L291:
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L294
?LBE33:
	ld	AL,@(0,Y)
?LBE_LedsGetLedFollowerStartDelay:
	leavel	#6
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_LedsResetAllLeds:
	enterl	#4
?LBB_LedsResetAllLeds:
?LBB34:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L304:
	ld	X,@$_theSink+H'0003
	st	X,@H'fff8
	ld	AL,@(0,Y)
	smult	#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	add	X,@H'fff8
	ld	AH,@(H'0041,X)
	lsr	#H'000A
	and	AH,#H'0003
	cmp	AH,#H'0002
	bne	?L301
	ld	AL,@H'fff8
	ld	AH,@(0,Y)
	bsr	$_MessageCancelAll
	ld	X,@(H'0001,Y)
	add	X,@$_theSink+H'0003
	ld	AL,@(H'0041,X)
	and	AL,#-H'0C01
	st	AL,@(H'0041,X)
	ld	AL,@$_theSink+H'0003
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	add	X,@$XAP_AL
	ld	AH,@(H'0040,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	smult	#H'0005
	ld	X,@H'fff8
	add	AL,@(H'003E,X)
	ld	AH,#H'0001
	bsr	_LedsTurnOffLEDPair
?L301:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'000F
	bcz	?L304
	bsr	$_LedsIndicateNoState
?LBE34:
?LBE_LedsResetAllLeds:
	leavel	#4
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
_LedsSetEnablePin:
	enterl	#2
?LBB_LedsSetEnablePin:
	st	AL,@H'fff8
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0039,X)
	lsr	#H'0008
	cmp	AH,#H'00FE
	bgt	?L309
	ld	AL,@$XAP_AH
	ld	AH,@H'fff8
	bsr	$_PioSetLedPin
?L309:
?LBE_LedsSetEnablePin:
	leavel	#2
$_isOverideFilterActive:
	enterl	#6
?LBB_isOverideFilterActive:
	st	AL,@(0,Y)
?LBB35:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AH,@$_theSink+H'0017
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L323
	ld	X,@$_theSink+H'0003
	st	X,@(H'0002,Y)
	bra	(?L314)
?L322:
	ld	AL,@(H'0001,Y)
	bsr	_LedsIsFilterEnabled
	cmp	AL,#H'0000
	beq	?L316
	ld	AL,@(H'0001,Y)
	smult	#H'0003
	ld	X,@(H'0002,Y)
	add	AL,@(H'003F,X)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000D
	cmp	AH,#H'0003
	bne	?L316
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	and	AH,#H'000F
	cmp	AH,#H'0000
	beq	?L316
	cmp	AH,@(0,Y)
	beq	?L324
?L316:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
?L314:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0073,X)
	lsr	#H'0001
	and	AH,#H'001F
	cmp	AH,#H'0014
	ble	?L318
	ld	AH,#H'0014
?L318:
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L322
	bra	(?L323)
?L324:
	ld	AL,#H'0001
	bra	(?L312)
?L323:
	ld	AL,#H'0000
?L312:
?LBE35:
?LBE_isOverideFilterActive:
	leavel	#6
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_LedsIndicateError:
	enterl	#7
?LBB_LedsIndicateError:
	st	AL,@(H'0001,Y)
?LBB36:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L334:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_LedConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0003
	bsr	$_LedConfigure
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_LedConfigure
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bcz	?L334
?L361:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L360:
?LBB37:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	cmp	AL,@(H'0001,Y)
	bcc	?L366
?L355:
?LBB38:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L354:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_LedConfigure
	ld	AL,#H'0000
?L353:
	add	AL,#H'0001
	cmp	AL,#H'09FE
	bcz	?L353
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0FFF
	bcz	?L354
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_LedConfigure
	ld	AL,@(H'0003,Y)
?LBE38:
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,@(H'0001,Y)
	bcs	?L355
?L366:
	ld	AL,#H'0000
?L359:
	add	AL,#H'0001
	cmp	AL,#H'0FFE
	bcz	?L359
	ld	AL,@(H'0002,Y)
?LBE37:
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bcz	?L360
	bra	(?L361)
?LBE36:
?LBE_LedsIndicateError:
	leavel	#7
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
	ENDMOD

;# Function pattern *movqi2 used[0] = 350 used[1] = 129 used[3] = 1 total = 480
;# Function pattern *movqi3 used[0] = 444 total = 444
;# Function pattern *movqi8 used[0] = 49 total = 49
;# Function pattern *movhi used[2] = 7 used[3] = 13 total = 20
;# Function pattern *iorhi3 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 74 used[2] = 18 total = 92
;# Function pattern *andqi3 used[0] = 143 total = 143
;# Function pattern *iorqi3 used[0] = 23 total = 23
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *udivqi3 used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 46 total = 46
;# Function pattern *mulqi3 used[0] = 3 total = 3
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 120 total = 120
;# Function pattern *ashlqi3 used[0] = 23 total = 23
;# Function pattern *lshrhi3 used[0] = 3 total = 3
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern one_cmplhi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2_1 used[0] = 2 used[1] = 2 total = 4
;# Function pattern jump used[0] = 44 total = 44
;# Function pattern *call1 used[0] = 64 total = 64
;# Function pattern *call_value1 used[0] = 43 total = 43
;# Function pattern zero_extendqihi2+1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 47 used[1] = 15 total = 62
;# Function pattern movstrqi+4 used[1] = 7 total = 7
;# Function pattern movstrqi+5 used[0] = 78 total = 78
;# Function pattern movstrqi+7 used[1] = 1 total = 1
	MODULE	sink_link_policy
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_lp_powertable_default:
	dc	H'00FF
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'001E
	dc	H'0001
	dc	H'0320
	dc	H'0320
	dc	H'0002
	dc	H'0001
	dc	H'0000
_lp_powertable_sco:
	dc	H'00FF
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'001E
	dc	H'0001
	dc	H'00A0
	dc	H'00A0
	dc	H'0002
	dc	H'0001
	dc	H'0000
_lp_powertable_a2dp_default:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'000A
	dc	H'0001
	dc	H'0320
	dc	H'0320
	dc	H'0002
	dc	H'0001
	dc	H'0000
_lp_powertable_a2dp_stream_sink:
	dc	H'00FF
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
_lp_powertable_a2dp_stream_source:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
_lp_powertable_avrcp:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'000A
	dc	H'0001
	dc	H'0320
	dc	H'0320
	dc	H'0002
	dc	H'0001
	dc	H'0000
	.CODE
_linkPolicyNumberPhysicalConnections:
	enterl	#7
?LBB_linkPolicyNumberPhysicalConnections:
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetSlcSink
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetSlcSink
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingGetSink
	st	AL,@(H'0003,Y)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0018,X)
	bsr	$_A2dpSignallingGetSink
	st	AL,@(H'0004,Y)
	tst	@(0,Y)
	beq	?L2
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L2:
	tst	@(H'0001,Y)
	beq	?L3
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
?L3:
	tst	@(H'0003,Y)
	beq	?L4
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L4
	ld	AL,#H'0000
	ld	AH,#H'0002
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L4
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
?L4:
	tst	@(H'0004,Y)
	beq	?L5
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L5
	ld	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L5
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
?L5:
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_linkPolicyNumberPhysicalConnections:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_linkPolicyUseDefaultSettings:
	enterl	#5
?LBB_linkPolicyUseDefaultSettings:
	st	AL,@(H'0002,Y)
?LBB3:
	ld	AL,@$_theSink+H'0006
	st	AL,@(-1,Y)
	ld	X,#H'0006
	add	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(-1,Y)
	ld	AH,@(H'0006,X)
	bsr	$_ConnectionSetSniffSubRatePolicy
	tst	@$_theSink+H'000E
	beq	?L7
	ld	X,@$_theSink+H'000E
	ld	AH,@(0,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	and	AH,#H'0003
	bra	(?L9)
?L7:
	ld	AL,#(_lp_powertable_default)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
?L9:
	bsr	$_ConnectionSetLinkPolicy
?LBE3:
?LBE_linkPolicyUseDefaultSettings:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_linkPolicyUseA2dpSettings:
	enterl	#9
?LBB_linkPolicyUseA2dpSettings:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetAudioSink
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetAudioSink
	tst	@(H'0001,Y)
	bne	?L11
	tst	@(H'0002,Y)
	bne	?L11
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	bne	?L11
	tst	@$_theSink+H'000E
	beq	?L12
	ld	AL,@$_theSink+H'000E
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0004
	st	AH,@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L12
	ld	AH,@(0,X)
	lsr	#H'000C
	ld	X,@$XAP_AH
	and	X,#H'0003
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'0003
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	ld	AL,@$XAP_UXL
	smult	#H'0006
	add	AL,@$_theSink+H'000E
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@H'fff8
	and	AH,#H'0003
	bra	(?L21)
?L12:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_A2dpMediaGetRole
	cmp	AL,#H'0000
	bne	?L17
	ld	AL,#(_lp_powertable_a2dp_stream_source)
	bra	(?L22)
?L11:
	tst	@(H'0001,Y)
	bne	?L17
	tst	@(H'0002,Y)
	bne	?L17
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	beq	?L17
?LBB5:
	ld	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_getA2dpIndex
	cmp	AL,#H'0000
	beq	?L18
	ld	X,@$_theSink+H'0030
	add	X,@(H'0003,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0002
	bne	?L18
	ld	AL,#(_lp_powertable_a2dp_default)
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0002
	bra	(?L21)
?L18:
	ld	AL,@(H'0009,Y)
	bsr	_linkPolicyUseDefaultSettings
?LBE5:
	bra	(?L10)
?L17:
	ld	AL,#(_lp_powertable_a2dp_stream_sink)
?L22:
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0001
?L21:
	bsr	$_ConnectionSetLinkPolicy
?L10:
?LBE4:
?LBE_linkPolicyUseA2dpSettings:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_linkPolicyUseHfpSettings:
	enterl	#6
?LBB_linkPolicyUseHfpSettings:
	st	AH,@(H'0003,Y)
?LBB6:
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L27
?LBB7:
	ld	AL,@$_theSink+H'0006
	st	AL,@(-1,Y)
	ld	X,#H'0009
	add	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(-1,Y)
	ld	AH,@(H'0009,X)
	bsr	$_ConnectionSetSniffSubRatePolicy
	tst	@$_theSink+H'000E
	beq	?L28
	ld	X,@$_theSink+H'000E
	ld	AH,@(0,X)
	lsr	#H'0008
	st	AH,@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L28
	ld	AH,@(0,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	smult	#H'0006
	add	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@H'fff8
	and	AH,#H'0003
	bra	(?L31)
?L28:
	ld	AL,#(_lp_powertable_sco)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
?L31:
	bsr	$_ConnectionSetLinkPolicy
?LBE7:
	bra	(?L26)
?L27:
	ld	AL,@(H'0003,Y)
	bsr	_linkPolicyUseDefaultSettings
?L26:
?LBE6:
?LBE_linkPolicyUseHfpSettings:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_linkPolicyUseAvrcpSettings:
	enterl	#3
?LBB_linkPolicyUseAvrcpSettings:
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,#(_lp_powertable_avrcp)
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0002
	bsr	$_ConnectionSetLinkPolicy
?L32:
?LBE_linkPolicyUseAvrcpSettings:
	leavel	#3
$_linkPolicyGetRole:
	enterl	#3
?LBB_linkPolicyGetRole:
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L34
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,#($_theSink)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	bsr	$_ConnectionGetRole
?L34:
?LBE_linkPolicyGetRole:
	leavel	#3
$_linkPolicyHandleRoleInd:
	enterl	#12
?LBB_linkPolicyHandleRoleInd:
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB8:
	tst	@(H'0004,X)
	bne	?L37
?LBB9:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L37
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0005,X)
	bsr	$_sinkA2dpSetLinkRole
?L37:
?LBE9:
?LBE8:
?LBE_linkPolicyHandleRoleInd:
	leavel	#12
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_linkPolicyHandleRoleCfm:
	enterl	#5
?LBB_linkPolicyHandleRoleCfm:
	st	AL,@(H'0001,Y)
?LBB10:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L41
	ld	AH,@$_theSink+H'001A
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L41
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L42
	bsr	_linkPolicyNumberPhysicalConnections
	cmp	AL,#H'0001
	bcz	?L42
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'1F80
	bsr	$_ConnectionSetLinkSupervisionTimeout
	bra	(?L46)
?L42:
	tst	@$_theSink+H'000E
	beq	?L55
	bra	(?L53)
?L41:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0021
	bne	?L47
	ld	AH,@$_theSink+H'001A
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L46
?L47:
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L46
	tst	@$_theSink+H'000E
	beq	?L46
	bsr	$_stateManagerGetState
	cmp	AL,#H'000D
	bne	?L51
	ld	X,@$_theSink+H'000E
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L51
	ld	AH,@(0,X)
	lsr	#H'0006
	bra	(?L63)
?L51:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0003
	bcz	?L53
	tst	@$_theSink+H'0024
	beq	?L53
	ld	X,@$_theSink+H'000E
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L53
	ld	AH,@(0,X)
	lsr	#H'000A
?L63:
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	bra	(?L61)
?L53:
	ld	X,@$_theSink+H'000E
	ld	AH,@(0,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L55
	ld	AH,@(0,X)
	lsr	#H'000E
	st	AH,@(H'0002,Y)
	bra	(?L46)
?L55:
	ld	AL,#H'0001
?L61:
	st	AL,@(H'0002,Y)
?L46:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	beq	?L57
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,@(H'0002,Y)
	beq	?L57
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,@(0,X)
	bsr	$_ConnectionSetRole
	bra	(?L40)
?L57:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_sinkA2dpSetLinkRole
?L40:
?LBE10:
?LBE_linkPolicyHandleRoleCfm:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_linkPolicyCheckRoles:
	enterl	#6
?LBB_linkPolicyCheckRoles:
?LBB11:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetSlcSink
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetSlcSink
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0017,X)
	bsr	$_A2dpSignallingGetSink
	st	AL,@(H'0002,Y)
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0018,X)
	bsr	$_A2dpSignallingGetSink
	st	AL,@(H'0003,Y)
	tst	@(0,Y)
	beq	?L71
	ld	AL,@$XAP_UY
	bsr	$_linkPolicyGetRole
?L71:
	tst	@(H'0001,Y)
	beq	?L72
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_linkPolicyGetRole
?L72:
	tst	@(H'0002,Y)
	beq	?L73
	ld	AL,#H'0000
	ld	AH,#H'0001
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L73
	ld	AL,#H'0000
	ld	AH,#H'0002
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L73
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_linkPolicyGetRole
?L73:
	tst	@(H'0003,Y)
	beq	?L70
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L70
	ld	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_deviceManagerIsSameDevice
	cmp	AL,#H'0000
	bne	?L70
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_linkPolicyGetRole
?L70:
?LBE11:
?LBE_linkPolicyCheckRoles:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_linkPolicyUpdateSwatLink:
; leaf function with empty stack frame
?LBB_linkPolicyUpdateSwatLink:
?LBE_linkPolicyUpdateSwatLink:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 63 used[1] = 23 total = 86
;# Function pattern *movqi3 used[0] = 111 total = 111
;# Function pattern *addqi0 used[0] = 12 total = 12
;# Function pattern *addqi2 used[0] = 8 used[2] = 4 total = 12
;# Function pattern *andqi3 used[0] = 16 total = 16
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 17 total = 17
;# Function pattern *call_value1 used[0] = 28 total = 28
;# Function pattern movstrqi+3 used[0] = 24 used[1] = 21 total = 45
;# Function pattern movstrqi+5 used[0] = 9 total = 9
	MODULE	sink_mapc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_multi_channel
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sinkGetMappedHardwareTypeFromPSKey:
	enterl	#2
?LBB_sinkGetMappedHardwareTypeFromPSKey:
	st	AL,@H'fff8
?LBB2:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@H'fff8
	add	X,@$XAP_AH
	ld	AL,@(0,X)
	and	AL,#H'0001
	cmp	AL,#H'0001
	bne	?L2
	cmp	AH,#H'0001
	bcz	?L5
	cmp	AH,#H'0002
	beq	?L7
	bra	(?L8)
?L5:
	ld	AL,#H'0002
	st	AL,@(-1,Y)
	ld	X,@H'fff8
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0001
	bne	?L2
	ld	AL,#H'0004
	bra	(?L10)
?L7:
	ld	AL,#H'0001
	bra	(?L10)
?L8:
	ld	AL,#H'0000
?L10:
	st	AL,@(-1,Y)
?L2:
?LBE2:
	ld	AL,@(-1,Y)
?LBE_sinkGetMappedHardwareTypeFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_sinkGetMappedHardwareInstanceFromPSKey:
; leaf function with empty stack frame
?LBB_sinkGetMappedHardwareInstanceFromPSKey:
?LBB3:
	ld	AL,#H'0000
	cmp	AH,#H'0001
	bne	?L16
	ld	AL,#H'0001
?L16:
?LBE3:
?LBE_sinkGetMappedHardwareInstanceFromPSKey:
	rts
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sinkGetMappedLeftChannelFromPSKey:
	enterl	#2
?LBB_sinkGetMappedLeftChannelFromPSKey:
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0001
	bne	?L19
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L19:
?LBE4:
	ld	AL,@(-1,Y)
?LBE_sinkGetMappedLeftChannelFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_sinkGetMappedRightChannelFromPSKey:
	enterl	#2
?LBB_sinkGetMappedRightChannelFromPSKey:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,#H'0001
	st	AL,@(-1,Y)
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0001
	bne	?L22
	ld	AL,#H'0000
	st	AL,@(-1,Y)
?L22:
?LBE5:
	ld	AL,@(-1,Y)
?LBE_sinkGetMappedRightChannelFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_sinkGetMappedLeftMultiChannelOutFromPSKey:
	enterl	#2
?LBB_sinkGetMappedLeftMultiChannelOutFromPSKey:
?LBB6:
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L26
	cmp	AH,#H'0002
	bcz	?L30
	cmp	AH,#H'0003
	beq	?L27
	cmp	AH,#H'0004
	beq	?L28
	bra	(?L30)
?L26:
	ld	AL,#H'0002
	bra	(?L25)
?L27:
	ld	AL,#H'0004
	bra	(?L25)
?L28:
	ld	AL,#H'0005
	bra	(?L25)
?L30:
	ld	AL,#H'0000
?L25:
?LBE6:
?LBE_sinkGetMappedLeftMultiChannelOutFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_sinkGetMappedRightMultiChannelOutFromPSKey:
	enterl	#2
?LBB_sinkGetMappedRightMultiChannelOutFromPSKey:
?LBB7:
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L39
	cmp	AH,#H'0002
	bcz	?L42
	cmp	AH,#H'0004
	beq	?L40
	bra	(?L42)
?L39:
	ld	AL,#H'0003
	bra	(?L38)
?L40:
	ld	AL,#H'0006
	bra	(?L38)
?L42:
	ld	AL,#H'0001
?L38:
?LBE7:
?LBE_sinkGetMappedRightMultiChannelOutFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_sinkGetMappedVolumeTrimFromPSKey:
	enterl	#2
?LBB_sinkGetMappedVolumeTrimFromPSKey:
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L49
	add	X,@$XAP_AH
	ld	X,@(H'0005,X)
	st	X,@(-1,Y)
?L49:
?LBE8:
	ld	AL,@(-1,Y)
?LBE_sinkGetMappedVolumeTrimFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_sinkGetMappedLeftChannelVolumeTrimFromPSKey:
	enterl	#2
?LBB_sinkGetMappedLeftChannelVolumeTrimFromPSKey:
	st	AL,@H'fff8
?LBB9:
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L52
	cmp	AH,#H'0002
	bcz	?L55
	cmp	AH,#H'0004
	beq	?L53
	bra	(?L55)
?L52:
	ld	AH,#H'0002
	bra	(?L51)
?L53:
	ld	AH,#H'0005
	bra	(?L51)
?L55:
	ld	AH,#H'0000
?L51:
	ld	AL,@H'fff8
	bsr	_sinkGetMappedVolumeTrimFromPSKey
?LBE9:
?LBE_sinkGetMappedLeftChannelVolumeTrimFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_sinkGetMappedRightChannelVolumeTrimFromPSKey:
	enterl	#2
?LBB_sinkGetMappedRightChannelVolumeTrimFromPSKey:
	st	AL,@H'fff8
?LBB10:
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L63
	cmp	AH,#H'0002
	bcz	?L66
	cmp	AH,#H'0004
	beq	?L64
	bra	(?L66)
?L63:
	ld	AH,#H'0003
	bra	(?L62)
?L64:
	ld	AH,#H'0006
	bra	(?L62)
?L66:
	ld	AH,#H'0001
?L62:
	ld	AL,@H'fff8
	bsr	_sinkGetMappedVolumeTrimFromPSKey
?LBE10:
?LBE_sinkGetMappedRightChannelVolumeTrimFromPSKey:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
_sinkGetMappedGroupGainTypeFromPSKey:
; leaf function with empty stack frame
?LBB_sinkGetMappedGroupGainTypeFromPSKey:
?LBB11:
	ld	AH,#H'0000
	cmp	AL,#H'0001
	beq	?L75
	cmp	AL,#H'0001
	bcs	?L74
	cmp	AL,#H'0002
	beq	?L76
	bra	(?L73)
?L74:
	ld	AH,#H'0000
	bra	(?L73)
?L75:
	ld	AH,#H'0001
	bra	(?L73)
?L76:
	ld	AH,#H'0002
?L73:
?LBE11:
	ld	AL,@$XAP_AH
?LBE_sinkGetMappedGroupGainTypeFromPSKey:
	rts
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
_sinkGetMappedMainGroupGainTypeFromPSKey:
	enterl	#2
?LBB_sinkGetMappedMainGroupGainTypeFromPSKey:
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#H'0003
	bsr	_sinkGetMappedGroupGainTypeFromPSKey
?LBE_sinkGetMappedMainGroupGainTypeFromPSKey:
	leavel	#2
_sinkGetMappedAuxGroupGainTypeFromPSKey:
	enterl	#2
?LBB_sinkGetMappedAuxGroupGainTypeFromPSKey:
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	bsr	_sinkGetMappedGroupGainTypeFromPSKey
?LBE_sinkGetMappedAuxGroupGainTypeFromPSKey:
	leavel	#2
_sinkGetMappedFixedHardwareGainFromPSKey:
	enterl	#2
?LBB_sinkGetMappedFixedHardwareGainFromPSKey:
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
?LBE_sinkGetMappedFixedHardwareGainFromPSKey:
	leavel	#2
_sinkPopulateMultiChannelHardwareMappingStructure:
	enterl	#5
?LBB_sinkPopulateMultiChannelHardwareMappingStructure:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_sinkGetMappedHardwareTypeFromPSKey
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@(H'0005,Y)
	ld	AH,@(0,X)
	and	AH,#-H'00F1
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_sinkGetMappedHardwareInstanceFromPSKey
	and	AL,#H'0003
	asl	#H'0002
	ld	AH,@(H'0002,Y)
	and	AH,#-H'000D
	or	AH,@$XAP_AL
	ld	X,@(H'0005,Y)
	st	AH,@(0,X)
?LBE_sinkPopulateMultiChannelHardwareMappingStructure:
	leavel	#5
_sinkPopulateMultiChannelHardwareMappingStructureLeft:
	enterl	#6
?LBB_sinkPopulateMultiChannelHardwareMappingStructureLeft:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	bsr	_sinkGetMappedLeftMultiChannelOutFromPSKey
	add	AL,@$XAP_AL
	ld	AH,@(H'0006,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkPopulateMultiChannelHardwareMappingStructure
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkGetMappedLeftChannelFromPSKey
	and	AL,#H'0003
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	and	AH,#-H'0004
	or	AH,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkGetMappedLeftChannelVolumeTrimFromPSKey
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
?LBE12:
?LBE_sinkPopulateMultiChannelHardwareMappingStructureLeft:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_sinkPopulateMultiChannelHardwareMappingStructureRight:
	enterl	#6
?LBB_sinkPopulateMultiChannelHardwareMappingStructureRight:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB13:
	bsr	_sinkGetMappedRightMultiChannelOutFromPSKey
	add	AL,@$XAP_AL
	ld	AH,@(H'0006,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	add	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0007
	cmp	AH,#H'0003
	beq	?L87
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkPopulateMultiChannelHardwareMappingStructure
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkGetMappedRightChannelFromPSKey
	and	AL,#H'0003
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	and	AH,#-H'0004
	or	AH,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sinkGetMappedRightChannelVolumeTrimFromPSKey
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
?L87:
?LBE13:
?LBE_sinkPopulateMultiChannelHardwareMappingStructureRight:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_sinkIsInterfaceConfiguredForPrimaryOrSecondary:
	enterl	#2
?LBB_sinkIsInterfaceConfiguredForPrimaryOrSecondary:
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L91
	ld	AL,@$XAP_AH
	and	AL,#H'000E
	cmp	AL,#H'0002
	beq	?L93
	cmp	AL,#H'0004
	bne	?L91
?L93:
	ld	AL,#H'0001
	bra	(?L90)
?L91:
	ld	AL,#H'0000
?L90:
?LBE_sinkIsInterfaceConfiguredForPrimaryOrSecondary:
	leavel	#2
_sinkIsInterfaceMultichannelRoutingDuplicated:
	enterl	#2
?LBB_sinkIsInterfaceMultichannelRoutingDuplicated:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(0,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L97
	ld	X,@H'fff8
	ld	X,@(0,X)
	ld	AL,@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L97
	and	AH,#H'000E
	ld	AL,@$XAP_UXL
	and	AL,#H'000E
	cmp	AH,@$XAP_AL
	bne	?L97
	ld	AL,#H'0001
	bra	(?L96)
?L97:
	ld	AL,#H'0000
?L96:
?LBE_sinkIsInterfaceMultichannelRoutingDuplicated:
	leavel	#2
_sinkIsPSKeyMultichhannelRoutingValid:
	enterl	#3
?LBB_sinkIsPSKeyMultichhannelRoutingValid:
	st	AL,@(0,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0001
	bsr	_sinkIsInterfaceMultichannelRoutingDuplicated
	cmp	AL,#H'0000
	bne	?L104
	ld	AH,@(0,Y)
	add	AH,#H'0002
	ld	AL,@(0,Y)
	bsr	_sinkIsInterfaceMultichannelRoutingDuplicated
	cmp	AL,#H'0000
	bne	?L104
	ld	AL,@(0,Y)
	add	AL,#H'0001
	ld	AH,@(0,Y)
	add	AH,#H'0002
	bsr	_sinkIsInterfaceMultichannelRoutingDuplicated
	cmp	AL,#H'0000
	beq	?L103
?L104:
	ld	AL,#H'0000
	bra	(?L100)
?L103:
	ld	AL,#H'0001
?L100:
?LBE_sinkIsPSKeyMultichhannelRoutingValid:
	leavel	#3
_sinkIsPSKeyMultichannelGroupingValid:
	enterl	#3
?LBB_sinkIsPSKeyMultichannelGroupingValid:
	st	AL,@(0,Y)
	add	AL,#H'0002
	bsr	_sinkIsInterfaceConfiguredForPrimaryOrSecondary
	cmp	AL,#H'0000
	beq	?L106
	ld	AL,@(0,Y)
	bsr	_sinkIsInterfaceConfiguredForPrimaryOrSecondary
	cmp	AL,#H'0000
	bne	?L109
	ld	AL,@(0,Y)
	add	AL,#H'0001
	bsr	_sinkIsInterfaceConfiguredForPrimaryOrSecondary
	cmp	AL,#H'0000
	beq	?L106
?L109:
	ld	AL,#H'0000
	bra	(?L105)
?L106:
	ld	AL,#H'0001
?L105:
?LBE_sinkIsPSKeyMultichannelGroupingValid:
	leavel	#3
_sinkVerifyPSKeyConfigIsValid:
	enterl	#3
?LBB_sinkVerifyPSKeyConfigIsValid:
	st	AL,@(0,Y)
	bsr	_sinkIsPSKeyMultichhannelRoutingValid
	cmp	AL,#H'0000
	beq	?L112
	ld	AL,@(0,Y)
	bsr	_sinkIsPSKeyMultichannelGroupingValid
	cmp	AL,#H'0000
	bne	?L110
?L112:
	ld	AL,#H'002B
	bsr	$_ConfigIndicateConfigError
?L110:
?LBE_sinkVerifyPSKeyConfigIsValid:
	leavel	#3
_sinkPopulateMultiChannelConfigStructure:
	enterl	#7
?LBB_sinkPopulateMultiChannelConfigStructure:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB14:
	bsr	_sinkVerifyPSKeyConfigIsValid
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L120:
	ld	X,@(H'0003,Y)
	add	X,@(H'0001,Y)
	st	X,@(H'0004,Y)
	ld	AL,@(0,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L116
	ld	AH,@(0,X)
	lsr	#H'0001
	and	AH,#H'0007
	cmp	AH,#H'0000
	beq	?L116
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	bsr	_sinkPopulateMultiChannelHardwareMappingStructureLeft
	ld	X,@(H'0004,Y)
	ld	AH,@(0,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0001
	bne	?L116
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	bsr	_sinkPopulateMultiChannelHardwareMappingStructureRight
?L116:
	ld	X,@(H'0003,Y)
	add	X,#H'0001
	st	X,@(H'0003,Y)
	cmp	X,#H'0002
	bcz	?L120
	ld	AL,@(H'0001,Y)
	bsr	_sinkGetMappedFixedHardwareGainFromPSKey
	ld	X,@(H'0002,Y)
	st	AL,@(H'0010,X)
	ld	AL,@(H'0001,Y)
	bsr	_sinkGetMappedMainGroupGainTypeFromPSKey
	ld	X,@(H'0002,Y)
	st	AL,@(H'000E,X)
	ld	AL,@(H'0001,Y)
	bsr	_sinkGetMappedAuxGroupGainTypeFromPSKey
	ld	X,@(H'0002,Y)
	st	AL,@(H'000F,X)
?LBE14:
?LBE_sinkPopulateMultiChannelConfigStructure:
	leavel	#7
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_sinkPopulateMultiChannelConfigStructureFromPSKey:
	enterl	#5
?LBB_sinkPopulateMultiChannelConfigStructureFromPSKey:
	st	AL,@(H'0001,Y)
?LBB15:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#H'002B
	ld	AH,@(H'0002,Y)
	bsr	$_ConfigRetrieve
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	bsr	_sinkPopulateMultiChannelConfigStructure
	ld	AL,@(H'0002,Y)
	bsr	$_free
?LBE15:
?LBE_sinkPopulateMultiChannelConfigStructureFromPSKey:
	leavel	#5
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_SinkMultiChannelReadConfig:
	enterl	#4
?LBB_SinkMultiChannelReadConfig:
?LBB16:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	ld	AL,#H'0011
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0001,Y)
	bsr	_sinkPopulateMultiChannelConfigStructureFromPSKey
	ld	AL,@(H'0001,Y)
	bsr	$_CsrMultiChanInitialisePlugin
	bsr	$_PanicNull
?LBE16:
?LBE_SinkMultiChannelReadConfig:
	leavel	#4
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
	ENDMOD

;# Function pattern *movqi2 used[0] = 64 used[1] = 38 total = 102
;# Function pattern *movqi3 used[0] = 90 total = 90
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 14 used[2] = 8 total = 22
;# Function pattern *andqi3 used[0] = 29 total = 29
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 11 total = 11
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 23 total = 23
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 29 total = 29
;# Function pattern movstrqi+3 used[0] = 14 total = 14
;# Function pattern movstrqi+5 used[0] = 29 total = 29
	MODULE	sink_multipoint
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sinkHandleCallEnd:
	enterl	#5
?LBB_sinkHandleCallEnd:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	xor	AL,#H'0003
	bsr	$_getScoPriorityFromHfpPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0004
	bne	?L1
	ld	AL,@(0,Y)
	xor	AL,#H'0003
	ld	AH,@(H'0001,Y)
	bsr	$_setScoPriorityFromHfpPriority
?L1:
?LBE2:
?LBE_sinkHandleCallEnd:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkHandleCallInd:
	enterl	#9
?LBB_sinkHandleCallInd:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	X,@(0,X)
	xor	X,#H'0003
	st	X,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	bsr	$_stateManagerGetState
	st	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	tst	@(0,X)
	beq	?L5
	ld	AL,@(0,X)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L6)
?L5:
	ld	X,#H'0026
?L6:
	ld	AH,@($_theSink,X)
	lsr	#H'0007
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	X,@(H'0002,Y)
	tst	@(0,X)
	beq	?L7
	ld	AL,@(0,X)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L8)
?L7:
	ld	X,#H'0026
?L8:
	ld	AL,@($_theSink,X)
	and	AL,#-H'0081
	st	AL,@($_theSink,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	cmp	AL,@(H'0001,X)
	bne	?L9
?L10:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
?L9:
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	st	AL,@(H'0004,Y)
	ld	AL,@(0,Y)
	cmp	AL,#(H'0001+H'0009)
	bcc	?L11
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE62,X)
	brxl
	.SEG	CONST
?JTBASE62:
	.CODE
?L62:
	.SEG	CONST
	dc	lwrd(?L12-?L62)
	dc	lwrd(?L36-?L62)
	dc	lwrd(?L39-?L62)
	dc	lwrd(?L42-?L62)
	dc	lwrd(?L47-?L62)
	dc	lwrd(?L56-?L62)
	dc	lwrd(?L57-?L62)
	dc	lwrd(?L59-?L62)
	dc	lwrd(?L11-?L62)
	dc	lwrd(?L61-?L62)
	.CODE
?L12:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0005
	beq	?L14
	cmp	AL,#H'0008
	bne	?L13
?L14:
	tst	@(H'0006,Y)
	bne	?L13
	bsr	$_ToneTerminate
?L13:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0005
	beq	?L17
	cmp	AL,#H'0008
	beq	?L17
	cmp	AL,#H'000A
	beq	?L17
	cmp	AL,#H'0009
	bne	?L16
?L17:
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0002
	st	AL,@$_theSink+H'0036
?L16:
	tst	@(H'0004,Y)
	beq	?L18
	ld	AL,@(H'0001,Y)
	cmp	AL,#(H'0001+H'0009)
	bcc	?L18
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE31,X)
	brxl
	.SEG	CONST
?JTBASE31:
	.CODE
?L31:
	.SEG	CONST
	dc	lwrd(?L18-?L31)
	dc	lwrd(?L27-?L31)
	dc	lwrd(?L26-?L31)
	dc	lwrd(?L28-?L31)
	dc	lwrd(?L25-?L31)
	dc	lwrd(?L24-?L31)
	dc	lwrd(?L23-?L31)
	dc	lwrd(?L23-?L31)
	dc	lwrd(?L32-?L31)
	dc	lwrd(?L20-?L31)
	.CODE
?L20:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	_sinkHandleCallEnd
	bsr	$_stateManagerEnterThreeWayMulticallState
	bra	(?L32)
?L23:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	_sinkHandleCallEnd
	bra	(?L26)
?L24:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	_sinkHandleCallEnd
	bsr	$_stateManagerEnterThreeWayCallWaitingState
	bra	(?L32)
?L25:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	_sinkHandleCallEnd
	bsr	$_stateManagerEnterActiveCallState
	bra	(?L32)
?L26:
	bsr	$_stateManagerEnterThreeWayCallOnHoldState
	bra	(?L32)
?L27:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bsr	_sinkHandleCallEnd
	bsr	$_stateManagerEnterIncomingCallEstablishState
	bra	(?L32)
?L28:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	_sinkHandleCallEnd
	bsr	$_stateManagerEnterOutgoingCallEstablishState
	bra	(?L32)
?L18:
	bsr	$_stateManagerEnterConnectedState
?L32:
	ld	X,@(H'0002,Y)
	tst	@(0,X)
	beq	?L34
	ld	AL,@(0,X)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L35)
?L34:
	ld	X,#H'002A
?L35:
	ld	AL,@($_theSink,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L11
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000A
	bsr	$_VolumeSetHfpMicrophoneGainCheckMute
	bra	(?L11)
?L36:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bsr	$_setScoPriorityFromHfpPriority
	tst	@(H'0004,Y)
	beq	?L37
	tst	@(H'0001,Y)
	bne	?L56
?L37:
	bsr	$_stateManagerEnterIncomingCallEstablishState
	bra	(?L11)
?L39:
	tst	@(H'0004,Y)
	beq	?L40
	ld	AL,@(H'0001,Y)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L59
?L40:
	bsr	$_stateManagerEnterIncomingCallOnHoldState
	bra	(?L11)
?L42:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	and	AL,#H'0003
	asl	#H'0005
	ld	AH,@$_theSink+H'0036
	and	AH,#-H'0061
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0036
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	tst	@(H'0004,Y)
	beq	?L43
	ld	AL,@(H'0001,Y)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L64
?L43:
	tst	@(H'0004,Y)
	beq	?L45
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	beq	?L56
?L45:
	bsr	$_stateManagerEnterOutgoingCallEstablishState
	bra	(?L11)
?L47:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0005
	beq	?L49
	cmp	AL,#H'0008
	bne	?L48
?L49:
	tst	@(H'0006,Y)
	bne	?L50
	bsr	$_ToneTerminate
?L50:
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0002
	st	AL,@$_theSink+H'0036
?L48:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0003
	bne	?L51
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
?L51:
	tst	@(H'0004,Y)
	beq	?L52
	ld	AL,@(H'0001,Y)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L64
?L52:
	tst	@(H'0004,Y)
	beq	?L54
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	beq	?L56
?L54:
	bsr	$_stateManagerEnterActiveCallState
	bra	(?L11)
?L56:
	bsr	$_stateManagerEnterThreeWayCallWaitingState
	bra	(?L11)
?L57:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	and	AL,#H'0003
	asl	#H'0005
	ld	AH,@$_theSink+H'0036
	and	AH,#-H'0061
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0036
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	tst	@(H'0004,Y)
	beq	?L59
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	bcz	?L59
?L64:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
?L59:
	bsr	$_stateManagerEnterThreeWayCallOnHoldState
	bra	(?L11)
?L61:
	bsr	$_stateManagerEnterThreeWayMulticallState
?L11:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
?LBE3:
?LBE_sinkHandleCallInd:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_MPCheckRingInd:
	enterl	#5
?LBB_MPCheckRingInd:
	st	AL,@(H'0002,Y)
?LBB4:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L79
	tst	@$_theSink+H'0024
	beq	?L79
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	ld	X,@(H'0002,Y)
	cmp	AL,@(0,X)
	beq	?L79
?LBB5:
	ld	AL,@(0,X)
	xor	AL,#H'0003
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	tst	@(H'0001,Y)
	beq	?L79
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4736
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L78)
?L79:
?LBE5:
	ld	AL,#H'0000
?L78:
?LBE4:
?LBE_MPCheckRingInd:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_MpReleaseAllHeld:
	enterl	#6
?LBB_MpReleaseAllHeld:
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0001
	bcz	?L84
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L83
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	ld	AL,@(H'0003,Y)
	xor	AL,#H'0003
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetCallState
	tst	@(H'0001,Y)
	beq	?L86
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	beq	?L87
	cmp	AL,#H'0005
	beq	?L87
	cmp	AL,#H'0006
	beq	?L87
	cmp	AL,#H'0008
	beq	?L87
	cmp	AL,#H'0002
	bne	?L86
?L87:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_HfpCallHoldActionRequest
?L86:
	tst	@(H'0002,Y)
	beq	?L83
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0007
	beq	?L90
	cmp	AL,#H'0005
	beq	?L90
	cmp	AL,#H'0006
	beq	?L90
	cmp	AL,#H'0009
	beq	?L90
	cmp	AL,#H'0008
	beq	?L90
	cmp	AL,#H'0002
	bne	?L89
?L90:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	xor	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_HfpCallHoldActionRequest
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0008
	beq	?L89
	cmp	AL,#H'0002
	beq	?L89
	ld	AL,@(H'0003,Y)
	xor	AL,#H'0003
	bsr	$_HfpCallTerminateRequest
?L89:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0003
	cmp	AL,#(H'0001+H'0001)
	bcc	?L92
	ld	AL,@(H'0003,Y)
	xor	AL,#H'0003
	bsr	$_HfpCallTerminateRequest
?L92:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L83
	ld	AL,@(H'0003,Y)
	xor	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_HfpCallAnswerRequest
	bra	(?L83)
?L84:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_HfpCallHoldActionRequest
?L83:
?LBE6:
?LBE_MpReleaseAllHeld:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_MpAcceptWaitingReleaseActive:
	enterl	#6
?LBB_MpAcceptWaitingReleaseActive:
?LBB7:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0003
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L111
	ld	AL,#H'0006
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L111
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0003,Y)
?L111:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetCallState
	tst	@(H'0003,Y)
	bne	?L113
	ld	AL,@(H'0001,Y)
	add	AL,#-H'0007
	cmp	AL,#(H'0001+H'0001)
	bcc	?L114
	ld	AL,#H'0001
	bra	(?L145)
?L114:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0007
	cmp	AL,#(H'0001+H'0001)
	bcc	?L113
	ld	AL,#H'0002
?L145:
	st	AL,@(H'0003,Y)
?L113:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L117
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L117
	bsr	$_HfpGetFirstIncomingCallPriority
	xor	AL,#H'0003
	st	AL,@(H'0003,Y)
?L117:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bne	?L118
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	beq	?L119
	cmp	AL,#H'0005
	beq	?L119
	cmp	AL,#H'0008
	beq	?L119
	cmp	AL,#H'0007
	bne	?L118
?L119:
	ld	AL,#H'0001
	bsr	$_MpDropCall
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L120
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	$_HfpCallAnswerRequest
	ld	AL,@$_theSink+H'002B
	or	AL,#H'0080
	st	AL,@$_theSink+H'002B
	bsr	$_ToneTerminate
	bra	(?L121)
?L120:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
?L121:
	ld	AL,#H'0001
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,#H'0002
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,@$_theSink+H'002F
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L124
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	beq	?L148
	bra	(?L151)
?L118:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0002
	bne	?L125
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	beq	?L126
	cmp	AL,#H'0005
	beq	?L126
	cmp	AL,#H'0008
	beq	?L126
	cmp	AL,#H'0007
	bne	?L125
?L126:
	ld	AL,#H'0002
	bsr	$_MpDropCall
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L127
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_HfpCallAnswerRequest
	ld	AL,@$_theSink+H'0026
	or	AL,#H'0080
	st	AL,@$_theSink+H'0026
	bsr	$_ToneTerminate
	bra	(?L128)
?L127:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
?L128:
	ld	AL,#H'0001
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,#H'0002
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,@$_theSink+H'002A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L124
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	beq	?L149
	bra	(?L150)
?L125:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bne	?L132
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0005
	beq	?L133
	cmp	AL,#H'0007
	beq	?L133
	cmp	AL,#H'0009
	bne	?L132
?L133:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_HfpCallHoldActionRequest
	ld	AL,@$_theSink+H'002A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L124
	ld	AL,@(H'0001,Y)
?L150:
	cmp	AL,#H'0005
	bne	?L124
?L149:
	ld	AL,#H'0001
	bra	(?L147)
?L132:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0002
	bne	?L136
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0005
	beq	?L137
	cmp	AL,#H'0007
	beq	?L137
	cmp	AL,#H'0009
	bne	?L136
?L137:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	$_HfpCallHoldActionRequest
	ld	AL,@$_theSink+H'002F
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L124
	ld	AL,@(H'0002,Y)
?L151:
	cmp	AL,#H'0005
	bne	?L124
?L148:
	ld	AL,#H'0002
?L147:
	ld	AH,#H'000A
	bsr	$_VolumeSetHfpMicrophoneGainCheckMute
	bra	(?L124)
?L136:
	tst	@(H'0003,Y)
	beq	?L140
	ld	AL,@(H'0003,Y)
	bra	(?L146)
?L140:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0004
	bne	?L142
	ld	AL,#H'0001
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0000
	bne	?L142
	ld	AL,#H'0001
	bra	(?L146)
?L142:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0004
	bne	?L124
	ld	AL,#H'0002
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0000
	bne	?L124
	ld	AL,#H'0002
?L146:
	bsr	$_MpDropCall
?L124:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
?LBE7:
?LBE_MpAcceptWaitingReleaseActive:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_MpAcceptWaitingHoldActive:
	enterl	#8
?LBB_MpAcceptWaitingHoldActive:
?LBB8:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0005,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L181
	ld	AH,@(H'0001,Y)
	ld	AL,#-H'0004
	add	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L183
	cmp	AH,#H'0008
	beq	?L183
	cmp	AH,#H'0009
	bne	?L182
?L183:
	ld	AL,#H'0001
	bra	(?L235)
?L182:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L181
	ld	AL,#H'0002
?L235:
	st	AL,@(H'0003,Y)
?L181:
	ld	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L186
	ld	AH,@(H'0002,Y)
	ld	AL,#-H'0004
	add	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L188
	cmp	AH,#H'0008
	beq	?L188
	cmp	AH,#H'0009
	bne	?L187
?L188:
	ld	AL,#H'0001
	bra	(?L236)
?L187:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0007
	bne	?L186
	ld	AL,#H'0002
?L236:
	st	AL,@(H'0004,Y)
?L186:
	ld	AL,#H'0005
	bsr	$_HfpLinkPriorityFromCallState
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L191
	ld	AL,#H'0007
	bsr	$_HfpLinkPriorityFromCallState
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L191
	ld	AL,#H'0006
	bsr	$_HfpLinkPriorityFromCallState
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L191
	ld	AL,#H'0004
	bsr	$_HfpLinkPriorityFromCallState
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L191
	ld	AL,#H'0008
	bsr	$_HfpLinkPriorityFromCallState
	ld	AH,@$XAP_AL
?L191:
	tst	@(H'0003,Y)
	beq	?L196
	tst	@(H'0004,Y)
	bne	?L195
?L196:
	tst	@(H'0003,Y)
	beq	?L198
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	beq	?L197
?L198:
	tst	@(H'0004,Y)
	beq	?L195
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L195
?L197:
	bsr	$_MpTwcAnswerCall
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	asl	#H'0008
	ld	AH,@$_theSink+H'0038
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0038
	bra	(?L199)
?L195:
	tst	@(H'0003,Y)
	beq	?L200
	tst	@(H'0004,Y)
	beq	?L200
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	beq	?L202
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L201
?L202:
	bsr	$_MpTwcAnswerCall
	bra	(?L199)
?L201:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0005
	bne	?L205
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
	ld	AL,#H'0001
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0004
	bne	?L206
	ld	AL,#H'0001
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,#H'0002
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
?L206:
	ld	AL,@$_theSink+H'002A
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L199
	ld	AL,#H'0001
	bra	(?L239)
?L205:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0005
	bne	?L209
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
	ld	AL,#H'0002
	bsr	$_getScoPriorityFromHfpPriority
	cmp	AL,#H'0004
	bne	?L210
	ld	AL,#H'0002
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,#H'0001
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
?L210:
	ld	AL,@$_theSink+H'002F
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L199
	ld	AL,#H'0002
?L239:
	ld	AH,#H'000A
	bsr	$_VolumeSetHfpMicrophoneGainCheckMute
	bra	(?L199)
?L209:
	ld	AH,@$_theSink+H'0038
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	and	AL,#H'000F
	asl	#H'0008
	ld	AH,@$_theSink+H'0038
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0038
	lsr	#H'0008
	and	AH,#H'000F
	cmp	AH,@(H'0003,Y)
	bcz	?L213
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0004,Y)
	cmp	AH,@$XAP_AL
	beq	?L260
	bcc	?L214
?L260:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0002
	bne	?L240
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bcz	?L217
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	bra	(?L237)
?L217:
	tst	@(H'0003,Y)
	beq	?L199
	bra	(?L242)
?L214:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0001
	beq	?L221
	ld	AL,@$_theSink+H'0038
	and	AL,#-H'0F01
	or	AL,#H'0100
	st	AL,@$_theSink+H'0038
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bcz	?L222
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
?L222:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L223
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
?L223:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0001
	beq	?L199
	bra	(?L242)
?L221:
	tst	@(H'0004,Y)
	beq	?L199
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	asl	#H'0008
	ld	AH,@$_theSink+H'0038
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0038
	bra	(?L240)
?L213:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0001
	beq	?L228
?L242:
	ld	AL,#H'0001
	bra	(?L238)
?L228:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L230
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	bra	(?L237)
?L230:
	tst	@(H'0004,Y)
	beq	?L199
?L240:
	ld	AL,#H'0002
?L238:
	bsr	$_mpSwitchToAG
	bra	(?L199)
?L200:
	cmp	AH,#H'0000
	beq	?L199
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
?L237:
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
?L199:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
?LBE8:
?LBE_MpAcceptWaitingHoldActive:
	leavel	#8
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_mpSwitchToAG:
	enterl	#6
?LBB_mpSwitchToAG:
	st	AL,@(H'0002,Y)
?LBB9:
	cmp	AL,#H'0001
	bne	?L270
	ld	AL,#H'0002
	bra	(?L273)
?L270:
	ld	AL,#H'0001
?L273:
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0005
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0008
	bne	?L269
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_HfpCallHoldActionRequest
?L269:
?LBE9:
?LBE_mpSwitchToAG:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_mpHandleCallWaitingInd:
	enterl	#4
?LBB_mpHandleCallWaitingInd:
	st	AL,@(H'0001,Y)
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	beq	?L276
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4736
	bsr	$_MessageSend
?L276:
?LBE_mpHandleCallWaitingInd:
	leavel	#4
$_MpTwcAnswerCall:
	enterl	#3
?LBB_MpTwcAnswerCall:
?LBB10:
	ld	AL,#H'0001
	bsr	$_HfpLinkPriorityFromCallState
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L279
	tst	@$_theSink+H'0024
	beq	?L281
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	ld	AH,#H'0004
	bsr	$_setScoPriorityFromHfpPriority
?L281:
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_HfpCallAnswerRequest
	tst	@(0,Y)
	beq	?L282
	ld	AL,@(0,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L283)
?L282:
	ld	X,#H'0026
?L283:
	ld	AL,@($_theSink,X)
	or	AL,#H'0080
	st	AL,@($_theSink,X)
	bsr	$_ToneTerminate
	tst	@(0,Y)
	beq	?L285
	ld	AL,@(0,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L286)
?L285:
	ld	X,#H'002A
?L286:
	ld	AL,@($_theSink,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L279
	ld	AL,@(0,Y)
	ld	AH,#H'000A
	bsr	$_VolumeSetHfpMicrophoneGainCheckMute
?L279:
?LBE10:
?LBE_MpTwcAnswerCall:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_MpDropCall:
	enterl	#5
?LBB_MpDropCall:
	st	AL,@(H'0002,Y)
?LBB11:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L287
	ld	AL,@(H'0001,Y)
	add	AL,#-H'0003
	cmp	AL,#(H'0001+H'0006)
	bcc	?L287
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE297,X)
	brxl
	.SEG	CONST
?JTBASE297:
	.CODE
?L297:
	.SEG	CONST
	dc	lwrd(?L292-?L297)
	dc	lwrd(?L292-?L297)
	dc	lwrd(?L287-?L297)
	dc	lwrd(?L292-?L297)
	dc	lwrd(?L294-?L297)
	dc	lwrd(?L295-?L297)
	dc	lwrd(?L294-?L297)
	.CODE
?L292:
	ld	AL,@(H'0002,Y)
	bsr	$_HfpCallTerminateRequest
	bra	(?L287)
?L294:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bra	(?L298)
?L295:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
?L298:
	bsr	$_HfpCallHoldActionRequest
?L287:
?LBE11:
?LBE_MpDropCall:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_MpHandleConferenceCall:
	enterl	#6
?LBB_MpHandleConferenceCall:
	st	AL,@(H'0002,Y)
?LBB12:
	tst	@$_theSink+H'0024
	beq	?L299
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L299
	tst	@(H'0002,Y)
	beq	?L302
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L302
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0003
	bra	(?L305)
?L302:
	tst	@(H'0002,Y)
	bne	?L299
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0009
	bne	?L299
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0004
?L305:
	bsr	$_HfpCallHoldActionRequest
?L299:
?LBE12:
?LBE_MpHandleConferenceCall:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 88 used[1] = 19 total = 107
;# Function pattern *movqi3 used[0] = 283 total = 283
;# Function pattern *addqi0 used[0] = 11 total = 11
;# Function pattern *addqi2 used[0] = 13 used[2] = 2 total = 15
;# Function pattern *andqi3 used[0] = 22 total = 22
;# Function pattern *iorqi3 used[0] = 11 total = 11
;# Function pattern *xorqi3 used[0] = 10 total = 10
;# Function pattern *mulqi3_const used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 5 total = 5
;# Function pattern jump used[0] = 47 total = 47
;# Function pattern *call1 used[0] = 77 total = 77
;# Function pattern *call_value1 used[0] = 39 total = 39
;# Function pattern tablejump_1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 25 used[1] = 35 total = 60
;# Function pattern movstrqi+4 used[0] = 1 used[1] = 9 total = 10
;# Function pattern movstrqi+5 used[0] = 88 total = 88
	MODULE	sink_partymode
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_pbap
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_peer
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_peer_qualification
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_pio
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_PioSetPio:
	enterl	#3
?LBB_PioSetPio:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_PioCommonSetPin
?LBE_PioSetPio:
	leavel	#3
$_PioGetPio:
	enterl	#2
?LBB_PioGetPio:
	bsr	$_PioCommonGetPin
?LBE_PioGetPio:
	leavel	#2
$_PioSetPowerPin:
	enterl	#3
?LBB_PioSetPowerPin:
	cmp	AL,#H'0000
	bne	?L3
	st	AL,@(0,Y)
	ld	AL,#H'0006
	ld	AH,#H'0000
	bsr	$_PsuConfigure
?L3:
?LBE_PioSetPowerPin:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	sink_powermanager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_default_charge_setting:
	dc	H'0000
	dc	H'0000
	.CODE
$_powerManagerCheckPanic:
	enterl	#3
?LBB_powerManagerCheckPanic:
?LBB2:
	bsr	$_VmGetResetSource
	st	AL,@(0,Y)
	bsr	$_VmGetPowerSource
	ld	X,@$XAP_AL
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0081
	st	AL,@$_theSink+H'0036
	ld	AH,@$_theSink+H'0017
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L1
	ld	AL,@(0,Y)
	cmp	AL,#H'0001
	beq	?L4
	cmp	AL,#H'0004
	beq	?L4
	cmp	X,#H'0002
	bne	?L1
?L4:
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0080
	st	AL,@$_theSink+H'0036
?L1:
?LBE2:
?LBE_powerManagerCheckPanic:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	sink_scan
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_a2dp_uuids:
	dc	H'000D
	dc	H'0011
	dc	H'000B
	dc	H'0011
_avrcp_uuids:
	dc	H'000E
	dc	H'0011
	dc	H'000F
	dc	H'0011
_hfp_uuids:
	dc	H'001E
	dc	H'0011
_hsp_uuids:
	dc	H'0008
	dc	H'0011
	dc	H'0031
	dc	H'0011
	.CODE
$_sinkWriteEirData:
	enterl	#8
?LBB_sinkWriteEirData:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L2
	ld	X,#H'0004
	bra	(?L3)
?L2:
	ld	X,#H'0000
?L3:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L4
	ld	AL,#H'0004
	add	AL,@$XAP_UXL
	bra	(?L5)
?L4:
	ld	AL,@$XAP_UXL
?L5:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'003A
	lsr	#H'0008
	and	AH,#H'0006
	cmp	AH,#H'0000
	beq	?L6
	add	X,#H'0002
?L6:
	st	X,@(H'0002,Y)
	ld	AH,@$_theSink+H'003A
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L7
	ld	AH,@$XAP_UXL
	add	AH,#H'0004
	st	AH,@(H'0002,Y)
?L7:
	bsr	$_GetDeviceIdEirDataSize
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	add	AL,@(H'0001,X)
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	add	AH,#H'0008
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	bsr	$_malloc
	st	AL,@(H'0004,Y)
	bsr	$_WriteDeviceIdEirData
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	ld	AH,#H'0002
	st	AH,@(0,X)
	add	X,#H'0001
	ld	AL,#H'000A
	st	AL,@(0,X)
	add	X,#H'0001
	ld	AL,@$_theSink+H'0038
	and	AL,#H'00FF
	st	AL,@(0,X)
	add	X,#H'0001
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(0,X)
	add	X,#H'0001
	st	AH,@(0,X)
	add	X,#H'0001
	st	X,@(H'0005,Y)
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L8
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#(_a2dp_uuids)
	bsr	$_memmove
	ld	AH,@(H'0005,Y)
	add	AH,#H'0004
	st	AH,@(H'0005,Y)
?L8:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L9
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#(_avrcp_uuids)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@(H'0005,Y)
?L9:
	ld	AH,@$_theSink+H'003A
	lsr	#H'0008
	and	AH,#H'0006
	cmp	AH,#H'0000
	beq	?L10
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#(_hfp_uuids)
	bsr	$_memmove
	ld	X,@(H'0005,Y)
	add	X,#H'0002
	st	X,@(H'0005,Y)
?L10:
	ld	AH,@$_theSink+H'003A
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L11
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#(_hsp_uuids)
	bsr	$_memmove
	ld	AH,@(H'0005,Y)
	add	AH,#H'0004
	st	AH,@(H'0005,Y)
?L11:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	add	AL,#H'0001
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	add	X,#H'0001
	ld	AL,#H'0009
	st	AL,@(0,X)
	add	X,#H'0001
	st	X,@(H'0005,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_memmove
	ld	AH,@(H'0005,Y)
	ld	X,@(H'0001,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0005,Y)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_ConnectionWriteEirData
	ld	AL,@(H'0004,Y)
	bsr	$_free
?LBE2:
?LBE_sinkWriteEirData:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sinkEnableConnectable:
	enterl	#2
?LBB_sinkEnableConnectable:
?LBB3:
	ld	X,@$_theSink+H'0006
	ld	AL,@(H'000C,X)
	ld	AH,@(H'000D,X)
	bsr	$_ConnectionWritePagescanActivity
	ld	AH,@$_theSink+H'0036
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L13
	ld	AL,#H'0003
	bra	(?L14)
?L13:
	ld	AL,#H'0002
?L14:
	bsr	$_ConnectionWriteScanEnable
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0400
	st	AL,@$_theSink+H'0036
?LBE3:
?LBE_sinkEnableConnectable:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sinkDisableConnectable:
	enterl	#2
?LBB_sinkDisableConnectable:
?LBB4:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L16
	ld	AL,#H'0001
	bra	(?L17)
?L16:
	ld	AL,#H'0000
?L17:
	bsr	$_ConnectionWriteScanEnable
	ld	AH,@$_theSink+H'0036
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L15
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0401
	st	AL,@$_theSink+H'0036
?L15:
?LBE4:
?LBE_sinkDisableConnectable:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_sinkEnableDiscoverable:
	enterl	#7
?LBB_sinkEnableDiscoverable:
	ld	AL,#-H'74CD
?LBB5:
	st	AL,@(H'0002,Y)
	ld	AH,#H'009E
	st	AH,@(H'0001,Y)
	ld	AL,#-H'7500
	st	AL,@(H'0004,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'8000
	cmp	AL,#H'0000
	beq	?L21
	ld	AH,@$_theSink+H'001D
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L20
?L21:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bra	(?L25)
?L20:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
?L25:
	bsr	$_ConnectionWriteInquiryAccessCode
	ld	X,@$_theSink+H'0006
	ld	AL,@(H'000E,X)
	ld	AH,@(H'000F,X)
	bsr	$_ConnectionWriteInquiryscanActivity
	ld	AH,@$_theSink+H'0036
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L23
	ld	AL,#H'0003
	bra	(?L24)
?L23:
	ld	AL,#H'0001
?L24:
	bsr	$_ConnectionWriteScanEnable
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0800
	st	AL,@$_theSink+H'0036
?LBE5:
?LBE_sinkEnableDiscoverable:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_sinkDisableDiscoverable:
	enterl	#2
?LBB_sinkDisableDiscoverable:
?LBB6:
	ld	AH,@$_theSink+H'0036
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L27
	ld	AL,#H'0002
	bra	(?L28)
?L27:
	ld	AL,#H'0000
?L28:
	bsr	$_ConnectionWriteScanEnable
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0801
	st	AL,@$_theSink+H'0036
?LBE6:
?LBE_sinkDisableDiscoverable:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_sinkEnableMultipointConnectable:
	enterl	#5
?LBB_sinkEnableMultipointConnectable:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L29
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L29
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#(H'0001+H'0001)
	bcc	?L29
	bsr	$_sinkEnableConnectable
	ld	AL,#($_theSink)
	ld	AH,#H'472F
	bsr	$_MessageCancelAll
	ld	X,@$_theSink+H'0005
	tst	@(H'000C,X)
	beq	?L29
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000C,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472F
	bsr	$_MessageSendLater
?L29:
?LBE_sinkEnableMultipointConnectable:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 44 used[1] = 6 total = 50
;# Function pattern *movqi3 used[0] = 81 total = 81
;# Function pattern *movhi used[3] = 1 total = 1
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 21 used[2] = 1 total = 22
;# Function pattern *andqi3 used[0] = 19 total = 19
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 11 total = 11
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[0] = 17 used[1] = 1 total = 18
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	sink_slc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
_gSlcData:
	DS	2
	.CODE
$_slcConnectFail:
	enterl	#5
?LBB_slcConnectFail:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4724
	bsr	$_MessageSend
	bsr	$_sinkClearQueueudEvent
	tst	@_gSlcData
	bne	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AH,#H'0000
	ld	AL,@(H'0011,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageSendLater
?L2:
	tst	@$_theSink+H'0025
	beq	?L1
	ld	AL,@$_theSink+H'0025
	add	AL,#-H'0001
	st	AL,@$_theSink+H'0025
?L1:
?LBE_slcConnectFail:
	leavel	#5
$_sinkHandleSlcConnectInd:
	enterl	#2
?LBB_sinkHandleSlcConnectInd:
	ld	X,@$XAP_AL
	tst	@(H'0004,X)
	beq	?L4
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'6000
	beq	?L6
	bsr	$_inquiryStop
?L6:
	ld	AL,#H'0001
	st	AL,@_gSlcData
?L4:
?LBE_sinkHandleSlcConnectInd:
	leavel	#2
$_sinkHandleSlcDisconnectInd:
	enterl	#7
?LBB_sinkHandleSlcDisconnectInd:
	st	AL,@(H'0002,Y)
?LBB2:
	add	AL,#H'0001
	bsr	$_deviceManagerProfilesConnected
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0001
	bcz	?L10
	cmp	AL,#H'0003
	bne	?L9
?L10:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0001
	bsr	$_deviceManagerUpdateAttributes
	ld	AL,@(H'0004,Y)
	bsr	$_deviceManagerDeviceDisconnectedInd
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L11
	tst	@$_theSink+H'0030
	beq	?L12
	ld	X,@$_theSink+H'0030
	tst	@(H'0001,X)
	beq	?L12
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	ld	AL,@(H'0004,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0017,X)
	bra	(?L29)
?L12:
	tst	@$_theSink+H'0030
	beq	?L13
	ld	X,@$_theSink+H'0030
	tst	@(H'0002,X)
	beq	?L13
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	ld	AH,#H'0025
	add	AH,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L13
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0018,X)
?L29:
	ld	AH,#H'0001
	bsr	$_A2dpDeviceManageLinkloss
?L13:
	bsr	$_linkPolicyCheckRoles
	bsr	$_sinkEnableMultipointConnectable
?L11:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0006
	beq	?L16
	bsr	$_stateManagerGetState
	cmp	AL,#H'000C
	bne	?L15
?L16:
	ld	AL,@_gSlcData+H'0001
	or	AL,#-H'8000
	bra	(?L30)
?L15:
	ld	AL,@_gSlcData+H'0001
	and	AL,#H'7FFF
?L30:
	st	AL,@_gSlcData+H'0001
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0061
	or	AL,#H'0020
	st	AL,@$_theSink+H'0036
	ld	X,@(H'0002,Y)
	tst	@(0,X)
	beq	?L18
	ld	AL,@(0,X)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L19)
?L18:
	ld	X,#H'0026
?L19:
	ld	AL,@($_theSink,X)
	or	AL,#-H'0100
	st	AL,@($_theSink,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0001
	beq	?L20
	ld	AL,@(H'0003,Y)
	and	AL,#H'0003
	cmp	AL,#H'0000
	bne	?L20
	tst	@(0,X)
	beq	?L21
	ld	AL,@(0,X)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L22)
?L21:
	ld	X,#H'0026
?L22:
	ld	AL,@($_theSink,X)
	and	AL,#-H'0041
	st	AL,@($_theSink,X)
?L20:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L23
	ld	AH,@$_theSink+H'002B
	lsr	#H'0008
	cmp	AH,#H'00FF
	beq	?L23
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#($_theSink+H'0026)
	ld	AH,#($_theSink+H'002B)
	bsr	$_memcpy
	ld	AL,@$_theSink+H'002B
	or	AL,#-H'0100
	st	AL,@$_theSink+H'002B
?L23:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0001
	bne	?L25
	ld	AH,#H'4724
	bra	(?L26)
?L25:
	ld	AH,#H'4716
?L26:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	bsr	$_MessageSend
?L9:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L8
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L8
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	bne	?L8
	ld	AL,#H'0000
	bsr	$_stateManagerEnterConnectableState
?L8:
?LBE2:
?LBE_sinkHandleSlcDisconnectInd:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_slcConnectionSetup:
	enterl	#8
?LBB_slcConnectionSetup:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB3:
	cmp	AL,#H'0000
	beq	?L40
	ld	AH,@$XAP_AL
	add	AH,#-H'0001
	st	AH,@(H'0005,Y)
	bra	(?L41)
?L40:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
?L41:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'1F80
	bsr	$_ConnectionSetLinkSupervisionTimeout
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_linkPolicyUseHfpSettings
	ld	AL,#($_theSink)
	ld	AH,#H'4740
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_theSink+H'0004
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4740
	bsr	$_MessageSendConditionally
	ld	AL,@(H'0005,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AH,@($_theSink+H'002A,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	and	AL,#H'007F
	ld	AH,#H'0000
	bsr	$_VolumeSendAndSetHeadsetVolume
	ld	AL,@$_theSink+H'001B
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L42
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_HfpCallerIdEnableRequest
?L42:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_HfpCallWaitingEnableRequest
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4725
	bsr	$_MessageSendLater
	ld	AH,@$_theSink+H'0019
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L43
	ld	AH,@$_theSink+H'0037
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L43
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472D
	bra	(?L45)
?L43:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4715
?L45:
	bsr	$_MessageSend
	ld	AL,@$_theSink+H'0037
	and	AL,#-H'0041
	st	AL,@$_theSink+H'0037
?LBE3:
?LBE_slcConnectionSetup:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_slcConnectionComplete:
	enterl	#7
?LBB_slcConnectionComplete:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L47
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0021
	bra	(?L48)
?L47:
	ld	X,#H'0026
?L48:
	ld	AL,@($_theSink,X)
	or	AL,#H'0040
	st	AL,@($_theSink,X)
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	bne	?L49
	bsr	$_stateManagerEnterConnectedState
?L49:
	ld	AH,@$_theSink+H'0019
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L50
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,@(H'0004,Y)
	bsr	$_ConnectionSmEncrypt
?L50:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L51
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4735
	bsr	$_MessageSend
?L51:
	tst	@_gSlcData
	bne	?L52
	ld	AL,@$_theSink+H'0039
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L53
	ld	AL,@(H'0003,Y)
	bsr	$_HfpHsButtonPressRequest
?L53:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AH,#H'0000
	ld	AL,@(H'0011,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageSendLater
?L52:
	ld	AL,@_gSlcData+H'0001
	and	AL,#H'7FFF
	st	AL,@_gSlcData+H'0001
?LBE_slcConnectionComplete:
	leavel	#7
$_sinkHandleSlcConnectCfm:
	enterl	#18
?LBB_sinkHandleSlcConnectCfm:
	st	AL,@(H'000B,Y)
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_deviceManagerGetDefaultAttributes
	ld	AH,@(H'000B,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_deviceManagerGetAttributes
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageCancelAll
	ld	X,@(H'000B,Y)
	tst	@(H'0007,X)
	bne	?L55
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
	tst	@(0,X)
	beq	?L56
	ld	AL,@(0,X)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L57)
?L56:
	ld	X,#H'002A
?L57:
	ld	AL,@(H'0002,Y)
	and	AL,#H'007F
	asl	#H'0001
	ld	AH,@($_theSink,X)
	and	AH,#-H'00FF
	or	AH,@$XAP_AL
	st	AH,@($_theSink,X)
	ld	X,@(H'000B,Y)
	add	X,#H'0001
	st	X,@(H'000D,Y)
	st	X,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0005,X)
	bsr	_slcConnectionComplete
	ld	AL,@(H'000D,Y)
	st	AL,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0005,X)
	bsr	_slcConnectionSetup
	ld	X,@(H'000B,Y)
	tst	@(0,X)
	beq	?L58
	ld	AL,@(0,X)
	smult	#H'0005
	add	AL,#H'0021
	st	AL,@(H'000E,Y)
	bra	(?L59)
?L58:
	ld	X,#H'0026
	st	X,@(H'000E,Y)
?L59:
	ld	AL,@(H'000B,Y)
	add	AL,#H'0001
	st	AL,@(H'000F,Y)
	bsr	$_deviceManagerSetPriority
	asl	#H'0008
	ld	X,@(H'000E,Y)
	ld	AH,@($_theSink,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@($_theSink,X)
	ld	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	or	AH,#H'0001
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'000F,Y)
	bsr	$_deviceManagerStoreAttributes
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L60
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L62
	bsr	$_ConnectionTrustedDeviceListSize
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	X,@$XAP_AH
	bcs	?L60
?L62:
	bsr	$_inquiryStop
?L60:
	tst	@$_theSink+H'0030
	beq	?L63
	ld	X,@$_theSink+H'0030
	tst	@(H'0001,X)
	beq	?L63
	ld	AL,@(H'000B,Y)
	add	AL,#H'0001
	ld	AH,#H'0021
	add	AH,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L63
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0017,X)
	bra	(?L79)
?L63:
	tst	@$_theSink+H'0030
	beq	?L64
	ld	X,@$_theSink+H'0030
	tst	@(H'0002,X)
	beq	?L64
	ld	AL,@(H'000B,Y)
	add	AL,#H'0001
	ld	AH,#H'0025
	add	AH,@$XAP_UXL
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L64
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0018,X)
?L79:
	ld	AH,#H'0000
	bsr	$_A2dpDeviceManageLinkloss
?L64:
	ld	AH,@$_theSink+H'0017
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L67
	ld	AL,#H'0001
	bsr	$_HfpLinkPriorityFromCallState
	ld	X,@(H'000B,Y)
	cmp	AL,@(0,X)
	bne	?L67
	bsr	$_stateManagerGetState
	cmp	AL,#(H'0001+H'0005)
	bcc	?L67
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4008
	bsr	$_MessageSend
	bra	(?L67)
?L55:
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L69
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L67
?L69:
	bsr	$_slcConnectFail
?L67:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L70
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0002
	bne	?L70
	ld	AL,#($_theSink)
	ld	AH,#H'472F
	bsr	$_MessageCancelAll
	bsr	$_sinkDisableConnectable
?L70:
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L71
	ld	X,@(H'000B,Y)
	tst	@(0,X)
	beq	?L72
	tst	@(H'0007,X)
	beq	?L72
	ld	AL,@(H'0007,X)
	cmp	AL,#H'0001
	beq	?L72
	cmp	AL,#H'0007
	bne	?L71
?L72:
	bsr	$_slcDetermineConnectAction
	and	AL,#H'0002
	cmp	AL,#H'0000
	bne	?L73
	ld	AL,@(H'0001,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L71
?L73:
	bsr	$_slcDetermineConnectAction
	and	AL,#H'0002
	cmp	AL,#H'0000
	bne	?L74
	bsr	$_stateManagerGetState
	cmp	AL,#H'0002
	beq	?L71
?L74:
	ld	X,@$_theSink+H'0030
	ld	AL,@_gSlcData
	st	AL,@(0,X)
	ld	AL,@(H'000B,Y)
	add	AL,#H'0001
	bsr	$_A2dpSignallingConnectRequest
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageCancelFirst
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L78
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L77
	bsr	$_ConnectionTrustedDeviceListSize
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	X,@$XAP_AH
	bcs	?L78
?L77:
	bsr	$_inquiryStop
	bra	(?L78)
?L71:
	ld	AL,#H'0000
	st	AL,@_gSlcData
?L78:
?LBE4:
	ld	AL,@(H'000C,Y)
?LBE_sinkHandleSlcConnectCfm:
	leavel	#18
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_slcHandleLinkLossInd:
	enterl	#21
?LBB_slcHandleLinkLossInd:
	st	AL,@(H'0012,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0001
	bne	?L90
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageSend
	ld	AH,@$_theSink+H'001A
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L89
	bsr	$_sinkEnableConnectable
	bra	(?L89)
?L90:
	ld	X,@(H'0012,Y)
	tst	@(H'0001,X)
	bne	?L89
?LBB6:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0011
	bsr	$_HfpLinkGetSlcSink
	ld	AL,@(H'0011,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0012,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0011,Y)
	bsr	_slcConnectionSetup
	ld	AH,@$_theSink+H'001A
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L94
	bsr	$_sinkDisableConnectable
	bsr	$_sinkEnableMultipointConnectable
?L94:
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L89
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_deviceManagerGetAttributes
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0007,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_A2dpSignallingConnectRequest
?L89:
?LBE6:
?LBE5:
?LBE_slcHandleLinkLossInd:
	leavel	#21
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_sinkDisconnectAllSlc:
	enterl	#2
?LBB_sinkDisconnectAllSlc:
	ld	AL,#H'0001
	bsr	$_HfpSlcDisconnectRequest
	ld	AL,#H'0002
	bsr	$_HfpSlcDisconnectRequest
?LBE_sinkDisconnectAllSlc:
	leavel	#2
$_slcEstablishSLCRequest:
	enterl	#3
?LBB_slcEstablishSLCRequest:
?LBB7:
	bsr	$_deviceManagerCanConnect
	cmp	AL,#H'0000
	beq	?L98
?LBB8:
	bsr	$_slcDetermineConnectAction
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0001
	st	AL,@(H'0004,X)
	ld	AL,@(0,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L100
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'6001
	or	AL,#H'4000
	st	AL,@$_theSink+H'0033
	ld	AL,#H'0001
	bsr	$_inquiryStart
	bra	(?L98)
?L100:
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'6000
	beq	?L102
	bsr	$_inquiryStop
?L102:
	tst	@(0,Y)
	bne	?L103
	ld	AL,@$_theSink+H'001C
	and	AL,#H'0007
	bra	(?L108)
?L103:
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'000E,X)
?L108:
	st	AL,@$_theSink+H'0025
	ld	AL,#H'0000
	st	AL,@_gSlcData
	ld	AL,@_gSlcData+H'0001
	and	AL,#-H'7801
	st	AL,@_gSlcData+H'0001
	bsr	$_ConnectionTrustedDeviceListSize
	and	AL,#H'000F
	asl	#H'0007
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'0781
	or	AH,@$XAP_AL
	st	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
	cmp	AL,#H'0000
	bne	?L105
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	and	AL,#H'000F
	asl	#H'000B
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'7801
	or	AH,@$XAP_AL
	st	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
?L105:
	cmp	AL,#H'0000
	beq	?L106
	bsr	$_slcAttemptConnection
	bra	(?L98)
?L106:
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
?L98:
?LBE8:
?LBE7:
?LBE_slcEstablishSLCRequest:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_slcContinueEstablishSLCRequest:
	enterl	#4
?LBB_slcContinueEstablishSLCRequest:
	tst	@_gSlcData
	bne	?L111
	bsr	$_deviceManagerCanConnect
	cmp	AL,#H'0000
	beq	?L111
	bsr	$_stateManagerGetState
	cmp	AL,#H'0000
	beq	?L111
	bsr	$_slcDetermineConnectAction
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L112
	bsr	$_inquiryConnectNext
	bra	(?L118)
?L112:
	bsr	$_slcGetNextListID
	cmp	AL,#H'0000
	beq	?L114
	bsr	$_slcAttemptConnection
	bra	(?L118)
?L114:
	ld	AH,@$_theSink+H'0017
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L119
	bsr	$_stateManagerIsConnected
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L119
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4003
	bsr	$_MessageSend
	ld	X,@$_theSink+H'0004
	ld	AL,@(H'0001,Y)
	bra	(?L122)
?L111:
	bsr	$_slcDetermineConnectAction
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L119
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'6000
	beq	?L119
	bsr	$_inquiryStop
?L119:
	ld	X,@$_theSink+H'0004
	ld	AL,#H'0000
?L122:
	st	AL,@(H'0004,X)
?L118:
	ld	AL,#H'0000
	st	AL,@_gSlcData
?LBE_slcContinueEstablishSLCRequest:
	leavel	#4
$_slcConnectDevice:
	enterl	#4
?LBB_slcConnectDevice:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L125
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0007
	bsr	$_HfpSlcConnectRequest
	bra	(?L130)
?L125:
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L127
	ld	AL,@$_theSink+H'0036
	or	AL,#H'1000
	st	AL,@$_theSink+H'0036
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0007
	bsr	$_HfpSlcConnectRequest
	bra	(?L124)
?L127:
	ld	AH,@$_theSink+H'001C
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L124
	ld	AL,@$XAP_UXL
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L124
?L130:
	ld	AL,@(H'0001,Y)
	bsr	$_A2dpSignallingConnectRequest
?L124:
?LBE_slcConnectDevice:
	leavel	#4
$_slcAttemptConnection:
	enterl	#18
?LBB_slcAttemptConnection:
?LBB9:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	st	AH,@(0,Y)
	and	AL,#H'000F
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_deviceManagerGetIndexedAttributes
	cmp	AL,#H'0000
	beq	?L133
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	and	AL,#H'0007
	cmp	AL,#H'0000
	beq	?L133
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_slcConnectDevice
	bra	(?L132)
?L133:
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageSend
?L132:
?LBE9:
?LBE_slcAttemptConnection:
	leavel	#18
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_slcDetermineConnectAction:
; leaf function with empty stack frame
?LBB_slcDetermineConnectAction:
?LBB10:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L138
	ld	AH,@$_theSink+H'0018
	lsr	#H'0004
	bra	(?L145)
?L138:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L140
	ld	AH,@$_theSink+H'001B
	lsr	#H'0001
	bra	(?L145)
?L140:
	ld	AH,@$_theSink+H'0018
?L145:
	and	AH,#H'0003
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'0000
	bne	?L142
	and	AH,#-H'0003
	bra	(?L143)
?L142:
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	bne	?L143
	or	AH,#H'0002
?L143:
?LBE10:
	ld	AL,@$XAP_AH
?LBE_slcDetermineConnectAction:
	rts
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_slcReset:
; leaf function with empty stack frame
?LBB_slcReset:
	ld	AL,@_gSlcData+H'0001
	and	AL,#-H'7801
	st	AL,@_gSlcData+H'0001
?LBE_slcReset:
	rts
$_slcGetNextListID:
	enterl	#2
?LBB_slcGetNextListID:
	bsr	$_slcDetermineConnectAction
	cmp	AL,#H'0001
	bne	?L149
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	and	AL,#H'000F
	asl	#H'000B
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'7801
	or	AH,@$XAP_AL
	st	AH,@_gSlcData+H'0001
	ld	X,@$_theSink+H'0005
	tst	@(H'000E,X)
	beq	?L151
	tst	@(H'000E,X)
	beq	?L169
	tst	@$_theSink+H'0025
	beq	?L169
?L151:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
	cmp	AL,#H'0000
	bne	?L152
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	X,@$XAP_AH
	and	X,#H'000F
	ld	AH,@_gSlcData+H'0001
	lsr	#H'0007
	and	AH,#H'000F
	cmp	X,@$XAP_AH
	bne	?L152
	cmp	X,#H'0000
	beq	?L152
	ld	X,@$_theSink+H'0005
	tst	@(H'000E,X)
	beq	?L169
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'7801
	st	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
	cmp	AL,#H'0000
	bne	?L170
	ld	AL,@_gSlcData+H'0001
	and	AL,#-H'7801
	or	AL,#H'0800
	st	AL,@_gSlcData+H'0001
	bra	(?L170)
?L152:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
	cmp	AL,#H'0000
	bne	?L170
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	and	AL,#H'000F
	asl	#H'000B
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'7801
	or	AH,@$XAP_AL
	st	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
	cmp	AL,#H'0000
	bne	?L170
	bra	(?L169)
?L149:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L163
	tst	@$_theSink+H'0025
	beq	?L169
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	bne	?L169
?L170:
	ld	AL,#H'0001
	bra	(?L148)
?L163:
	tst	@$_theSink+H'0025
	bne	?L167
?L169:
	ld	AL,#H'0000
	bra	(?L148)
?L167:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	and	AL,#H'000F
	asl	#H'000B
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'7801
	or	AH,@$XAP_AL
	st	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
	cmp	AL,#H'0000
	bne	?L168
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	and	AL,#H'000F
	asl	#H'000B
	ld	AH,@_gSlcData+H'0001
	and	AH,#-H'7801
	or	AH,@$XAP_AL
	st	AH,@_gSlcData+H'0001
?L168:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_slcIsListIdAvailable
?L148:
?LBE_slcGetNextListID:
	leavel	#2
$_slcIsListIdAvailable:
	enterl	#19
?LBB_slcIsListIdAvailable:
	st	AL,@(H'0010,Y)
?LBB11:
	ld	AH,@_gSlcData+H'0001
	lsr	#H'0007
	and	AH,#H'000F
	ld	AL,@(H'0010,Y)
	cmp	AL,@$XAP_AH
	bcc	?L174
	bsr	$_isPdlEntryAvailable
	cmp	AL,#H'0000
	beq	?L174
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB12:
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_deviceManagerGetIndexedAttributes
	cmp	AL,#H'0000
	beq	?L175
	ld	AL,@(H'0006,Y)
	and	AL,#H'0007
	cmp	AL,#H'0000
	beq	?L174
?L175:
	ld	AL,#H'0001
	bra	(?L173)
?L174:
?LBE12:
	ld	AL,#H'0000
?L173:
?LBE11:
?LBE_slcIsListIdAvailable:
	leavel	#19
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_isPdlEntryAvailable:
	enterl	#2
?LBB_isPdlEntryAvailable:
	st	AL,@H'fff8
?LBB13:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	AL,@$_theSink+H'0030
	st	AL,@(-2,Y)
?L185:
	ld	AL,@(-1,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AH,@($_theSink+H'0026,X)
	lsr	#H'0008
	cmp	AH,@H'fff8
	bne	?L182
	ld	AL,@(-1,Y)
	ld	X,@$XAP_AL
	add	X,@(-2,Y)
	ld	AL,@(H'001F,X)
	cmp	AL,@H'fff8
	bne	?L182
	ld	AL,#H'0000
	bra	(?L179)
?L182:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0001
	bcz	?L185
	ld	AL,#H'0001
?L179:
?LBE13:
?LBE_isPdlEntryAvailable:
	leavel	#2
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
	ENDMOD

;# Function pattern *movqi2 used[0] = 119 used[1] = 19 total = 138
;# Function pattern *movqi3 used[0] = 249 total = 249
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[3] = 2 total = 2
;# Function pattern *addqi0 used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 22 used[2] = 6 total = 28
;# Function pattern *andqi3 used[0] = 90 total = 90
;# Function pattern *iorqi3 used[0] = 19 total = 19
;# Function pattern *mulqi3_const used[0] = 7 total = 7
;# Function pattern *lshrqi3 used[0] = 42 total = 42
;# Function pattern *ashlqi3 used[0] = 8 total = 8
;# Function pattern *zero_extendqihi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 32 total = 32
;# Function pattern *call1 used[0] = 50 total = 50
;# Function pattern *call_value1 used[0] = 60 total = 60
;# Function pattern movstrqi+3 used[0] = 63 used[1] = 28 total = 91
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 29 total = 29
	MODULE	sink_speech_recognition
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_statemanager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_stateManagerSetState:
	enterl	#4
?LBB_stateManagerSetState:
	st	AL,@(H'0001,Y)
?LBB2:
	cmp	AL,#(H'0001+H'000E)
	bcc	?L1
	cmp	AL,@_gTheSinkState
	beq	?L4
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4786
	bsr	$_MessageSend
?L4:
	ld	AL,@(H'0001,Y)
?LBE3:
	st	AL,@_gTheSinkState
?L1:
?LBE2:
?LBE_stateManagerSetState:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_stateManagerGetState:
; leaf function with empty stack frame
?LBB_stateManagerGetState:
	ld	AL,@_gTheSinkState
?LBE_stateManagerGetState:
	rts
$_stateManagerEnterConnectableState:
	enterl	#6
?LBB_stateManagerEnterConnectableState:
	st	AL,@(H'0001,Y)
?LBB4:
	bsr	$_stateManagerGetState
	st	AL,@(H'0002,Y)
	tst	@(H'0001,Y)
	bne	?L9
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	beq	?L8
?L9:
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L10
	tst	@(H'0001,Y)
	beq	?L10
	bsr	$_sinkDisconnectAllSlc
?L10:
	bsr	_stateManagerResetPIOs
	bsr	$_sinkEnableConnectable
	ld	AL,#H'0001
	bsr	_stateManagerSetState
	ld	AH,@$_theSink+H'0017
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L11
	bsr	$_sinkEnableDiscoverable
?L11:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bne	?L12
	ld	AH,@$_theSink+H'0017
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L13
	bsr	$_sinkDisableDiscoverable
?L13:
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
	bra	(?L8)
?L12:
?LBB5:
	bsr	$_ConnectionTrustedDeviceListSize
	st	AL,@(H'0003,Y)
	ld	AL,@$_theSink+H'0017
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(H'0001,Y)
	bsr	$_stateManagerEnterConnDiscoverableState
?L15:
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L16
	ld	AL,@(H'0003,Y)
	cmp	AL,@$XAP_AH
	bcc	?L16
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4723
	bsr	$_MessageSend
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4034
	bra	(?L20)
?L16:
	ld	AH,@$_theSink+H'0019
	lsr	#H'000C
	cmp	AH,#H'0000
	beq	?L8
	ld	AL,@(H'0003,Y)
	cmp	AL,@$XAP_AH
	bcc	?L8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4723
?L20:
	bsr	$_MessageSend
?L8:
?LBE5:
?LBE4:
?LBE_stateManagerEnterConnectableState:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_stateManagerEnterConnDiscoverableState:
	enterl	#6
?LBB_stateManagerEnterConnDiscoverableState:
	st	AL,@(H'0003,Y)
?LBB6:
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageCancelAll
	ld	AH,@$_theSink+H'0019
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L26
	bsr	$_HfpLinkLoss
	cmp	AL,#H'0000
	bne	?L25
?L26:
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L28
	tst	@(H'0003,Y)
	beq	?L28
	bsr	$_sinkDisconnectAllSlc
	ld	AL,@$_theSink+H'0033
	and	AL,#-H'8000
	cmp	AL,#H'0000
	beq	?L29
	ld	AL,#H'0001
	bra	(?L38)
?L29:
	ld	AL,#H'0000
?L38:
	bsr	$_disconnectAllA2dpAvrcp
?L28:
	bsr	$_sinkEnableConnectable
	bsr	$_sinkEnableDiscoverable
	ld	X,@$_theSink+H'0005
	tst	@(H'000D,X)
	beq	?L31
?LBB7:
	bsr	$_ConnectionTrustedDeviceListSize
	cmp	AL,#H'0000
	bne	?L31
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'000D,X)
	bra	(?L39)
?L31:
?LBE7:
	ld	X,@$_theSink+H'0005
	tst	@(H'000A,X)
	beq	?L35
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000A,X)
?L39:
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageSendLater
?L35:
	bsr	_stateManagerResetPIOs
	ld	AL,#H'0002
	bsr	_stateManagerSetState
?L25:
?LBE6:
?LBE_stateManagerEnterConnDiscoverableState:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_stateManagerEnterConnectedState:
	enterl	#5
?LBB_stateManagerEnterConnectedState:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0003
	beq	?L41
	ld	AL,@$_theSink+H'0033
	and	AL,#H'6000
	cmp	AL,#H'2000
	beq	?L41
	ld	AH,@$_theSink+H'0017
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L43
	bsr	$_sinkDisableDiscoverable
?L43:
	ld	AH,@$_theSink+H'0037
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L66
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0002
	bne	?L46
?L66:
	bsr	$_sinkDisableConnectable
	bra	(?L45)
?L46:
	bsr	$_sinkEnableConnectable
	ld	AL,#($_theSink)
	ld	AH,#H'472F
	bsr	$_MessageCancelAll
	ld	X,@$_theSink+H'0005
	tst	@(H'000C,X)
	beq	?L45
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000C,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'472F
	bsr	$_MessageSendLater
?L45:
	bsr	$_stateManagerGetState
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'0008)
	bcc	?L49
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE59,X)
	brxl
	.SEG	CONST
?JTBASE59:
	.CODE
?L59:
	.SEG	CONST
	dc	lwrd(?L57-?L59)
	dc	lwrd(?L50-?L59)
	dc	lwrd(?L57-?L59)
	dc	lwrd(?L49-?L59)
	dc	lwrd(?L57-?L59)
	dc	lwrd(?L57-?L59)
	dc	lwrd(?L57-?L59)
	dc	lwrd(?L49-?L59)
	dc	lwrd(?L57-?L59)
	.CODE
?L50:
	ld	X,@$_theSink+H'0005
	tst	@(H'0012,X)
	beq	?L57
	tst	@(H'0013,X)
	beq	?L57
	ld	AL,@(H'0013,X)
	asl	#H'0008
	ld	AH,@$_theSink+H'0039
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0039
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4741
	bsr	$_MessageSend
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473A
	bsr	$_MessageSend
?L57:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4705
	bsr	$_MessageSend
?L49:
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
	bsr	_stateManagerResetPIOs
	ld	X,@$_theSink+H'0030
	tst	@(H'0001,X)
	bne	?L61
	tst	@(H'0002,X)
	beq	?L60
?L61:
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	beq	?L63
	ld	X,@$_theSink+H'0030
	ld	AL,@(H'0018,X)
	ld	AH,@(H'001A,X)
	bsr	$_A2dpMediaGetState
	cmp	AL,#H'0007
	bne	?L60
?L63:
	ld	AL,#H'000D
	bra	(?L67)
?L60:
	ld	AL,#H'0003
?L67:
	bsr	_stateManagerSetState
?L41:
?LBE_stateManagerEnterConnectedState:
	leavel	#5
$_stateManagerEnterIncomingCallEstablishState:
	enterl	#3
?LBB_stateManagerEnterIncomingCallEstablishState:
	ld	AL,#H'0005
	bsr	_stateManagerSetState
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0036,X)
	and	AL,#H'00FF
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bsr	$_PioSetPio
?LBE_stateManagerEnterIncomingCallEstablishState:
	leavel	#3
$_stateManagerEnterOutgoingCallEstablishState:
	enterl	#3
?LBB_stateManagerEnterOutgoingCallEstablishState:
	ld	AL,#H'0004
	bsr	_stateManagerSetState
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0037,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bsr	$_PioSetPio
?LBE_stateManagerEnterOutgoingCallEstablishState:
	leavel	#3
$_stateManagerEnterActiveCallState:
	enterl	#3
?LBB_stateManagerEnterActiveCallState:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0004
	beq	?L77
	cmp	AL,#H'0005
	bne	?L76
?L77:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4722
	bsr	$_MessageSend
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473A
	bsr	$_MessageSend
?L76:
	tst	@$_theSink+H'0024
	beq	?L78
	ld	AL,#H'0006
	bra	(?L80)
?L78:
	ld	AL,#H'000C
?L80:
	bsr	_stateManagerSetState
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0036,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0037,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0036,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bsr	$_PioSetPio
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
?LBE_stateManagerEnterActiveCallState:
	leavel	#3
$_stateManagerEnterA2dpStreamingState:
	enterl	#2
?LBB_stateManagerEnterA2dpStreamingState:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0003
	bne	?L83
	ld	AL,#H'000D
	bsr	_stateManagerSetState
?L83:
?LBE_stateManagerEnterA2dpStreamingState:
	leavel	#2
$_stateManagerPowerOn:
	enterl	#4
?LBB_stateManagerPowerOn:
?LBB8:
	bsr	$_checkForDUTModeEntry
	cmp	AL,#H'0000
	bne	?L86
	ld	AL,@$_theSink+H'0036
	or	AL,#H'0002
	st	AL,@$_theSink+H'0036
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageCancelAll
	ld	AL,#H'0001
	bsr	$_PioSetPowerPin
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0038,X)
	lsr	#H'0008
	cmp	AH,#H'00FF
	beq	?L88
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_PioSetPio
?L88:
	ld	AL,#H'0001
	bsr	$_stateManagerEnterConnectableState
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L90
	ld	AH,@$_theSink+H'0018
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L90
	ld	AH,@$_theSink+H'0036
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L89
?L90:
?LBB9:
	bsr	$_ConnectionTrustedDeviceListSize
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'001B
	lsr	#H'0004
	and	AH,#H'0003
	cmp	X,@$XAP_AH
	bcc	?L91
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4723
	bsr	$_MessageSend
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4034
	bra	(?L97)
?L91:
	ld	AH,@$_theSink+H'0018
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L94
	ld	AH,@$_theSink+H'0036
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L89
?L94:
?LBB10:
	ld	AL,#H'4018
	st	AL,@(H'0001,Y)
	ld	AH,@$_theSink+H'001B
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L95
	ld	AL,#H'0000
	bsr	$_sinkAvrcpCheckManualConnectReset
?L95:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L96
	ld	AL,#H'472E
	st	AL,@(H'0001,Y)
?L96:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,@(H'0001,Y)
?L97:
	bsr	$_MessageSend
?L89:
?LBE10:
?LBE9:
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
?L86:
?LBE8:
?LBE_stateManagerPowerOn:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
$_stateManagerIsConnected:
	enterl	#2
?LBB_stateManagerIsConnected:
?LBB11:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0002
	bcz	?L105
	cmp	AL,#H'0007
	bne	?L106
?L105:
	ld	AL,#H'0000
	bra	(?L101)
?L106:
	ld	AL,#H'0001
?L101:
?LBE11:
?LBE_stateManagerIsConnected:
	leavel	#2
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_stateManagerEnterLimboState:
	enterl	#5
?LBB_stateManagerEnterLimboState:
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0007,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageSendLater
	ld	AL,#H'0000
	bsr	_stateManagerSetState
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0081
	st	AL,@$_theSink+H'0036
	bsr	$_inquiryStop
	ld	AL,#($_theSink)
	ld	AH,#H'4732
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'472C
	bsr	$_MessageCancelAll
	ld	AL,#($_theSink)
	ld	AH,#H'4717
	bsr	$_MessageCancelAll
	bsr	$_sinkDisconnectAllSlc
	ld	AL,#H'0001
	bsr	$_disconnectAllA2dpAvrcp
	bsr	$_slcReset
	ld	AL,#H'0001
	bsr	$_PioSetPowerPin
	bsr	$_sinkDisableDiscoverable
	bsr	$_sinkDisableConnectable
	ld	AL,#H'0000
	bsr	$_audioHandleRouting
?LBE_stateManagerEnterLimboState:
	leavel	#5
$_stateManagerAmpPowerControl:
	enterl	#4
?LBB_stateManagerAmpPowerControl:
	st	AL,@(H'0001,Y)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L111
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0039,X)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	cmp	AH,#H'00FF
	beq	?L113
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_PioSetPio
?L113:
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0038,X)
	lsr	#H'0008
	cmp	AH,#H'00FF
	beq	?L114
	ld	AL,#H'0000
	tst	@(H'0001,Y)
	beq	?L115
	ld	AL,#H'0001
?L115:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_PioSetPio
	ld	AL,#H'0000
	tst	@(H'0001,Y)
	beq	?L116
	ld	AL,#H'0001
?L116:
	and	AL,#H'0001
	asl	#H'0004
	ld	AH,@$_theSink+H'0037
	and	AH,#-H'0011
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0037
?L114:
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0039,X)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	cmp	AH,#H'00FF
	beq	?L111
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_PioSetPio
?L111:
?LBE_stateManagerAmpPowerControl:
	leavel	#4
$_stateManagerUpdateLimboState:
	enterl	#6
?LBB_stateManagerUpdateLimboState:
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AH,@$_theSink+H'0017
	lsr	#H'0002
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L126
	bsr	$_PsuGetVregEn
	cmp	AL,#H'0000
	bne	?L122
?L126:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L122:
	tst	@(H'0003,Y)
	beq	?L127
	bsr	$_configManagerDefragCheck
	cmp	AL,#H'0000
	beq	?L128
	ld	AL,#H'0000
	bsr	$_configManagerDefrag
?L128:
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0038,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
	ld	AL,#H'0000
	bsr	$_PioSetPowerPin
	bra	(?L121)
?L127:
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@$_theSink+H'0005
	ld	AL,@(H'0007,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4718
	bsr	$_MessageSendLater
?L121:
?LBE12:
?LBE_stateManagerUpdateLimboState:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_stateManagerEnterTestModeState:
	enterl	#2
?LBB_stateManagerEnterTestModeState:
	ld	AL,#H'0007
	bsr	_stateManagerSetState
?LBE_stateManagerEnterTestModeState:
	leavel	#2
$_stateManagerEnterThreeWayCallWaitingState:
	enterl	#2
?LBB_stateManagerEnterThreeWayCallWaitingState:
	ld	AL,#H'0008
	bsr	_stateManagerSetState
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
?LBE_stateManagerEnterThreeWayCallWaitingState:
	leavel	#2
$_stateManagerEnterThreeWayCallOnHoldState:
	enterl	#2
?LBB_stateManagerEnterThreeWayCallOnHoldState:
	ld	AL,#H'0009
	bsr	_stateManagerSetState
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
?LBE_stateManagerEnterThreeWayCallOnHoldState:
	leavel	#2
$_stateManagerEnterThreeWayMulticallState:
	enterl	#2
?LBB_stateManagerEnterThreeWayMulticallState:
	ld	AL,#H'000A
	bsr	_stateManagerSetState
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
?LBE_stateManagerEnterThreeWayMulticallState:
	leavel	#2
$_stateManagerEnterIncomingCallOnHoldState:
	enterl	#3
?LBB_stateManagerEnterIncomingCallOnHoldState:
	bsr	$_stateManagerGetState
	cmp	AL,#H'0005
	bne	?L135
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'473A
	bsr	$_MessageSend
?L135:
	ld	AL,#H'000B
	bsr	_stateManagerSetState
	ld	AL,#($_theSink)
	ld	AH,#H'4700
	bsr	$_MessageCancelAll
?LBE_stateManagerEnterIncomingCallOnHoldState:
	leavel	#3
_stateManagerResetPIOs:
	enterl	#3
?LBB_stateManagerResetPIOs:
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0036,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0037,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
	ld	X,@$_theSink+H'000A
	ld	AH,@(H'0036,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_PioSetPio
?LBE_stateManagerResetPIOs:
	leavel	#3
	.SEG	VAR
_gTheSinkState:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 61 used[1] = 2 total = 63
;# Function pattern *movqi3 used[0] = 219 total = 219
;# Function pattern *movhi used[3] = 4 total = 4
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 28 total = 28
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *umulqihi3_const used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 24 total = 24
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 67 total = 67
;# Function pattern *call_value1 used[0] = 41 total = 41
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 24 used[1] = 14 total = 38
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 21 total = 21
	MODULE	sink_swat
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_tones
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_tone_B:
	dc	H'90C8
	dc	H'A0FF
	dc	H'B000
	dc	H'2184
	dc	H'3FA0
	dc	H'8000
_tone_C:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2401
	dc	H'3F83
	dc	H'8000
_tone_D:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2601
	dc	H'3F83
	dc	H'8000
_tone_E:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2781
	dc	H'3F83
	dc	H'8000
_tone_F:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2901
	dc	H'3F83
	dc	H'8000
_tone_G:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2A01
	dc	H'3F83
	dc	H'8000
_tone_H:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2B01
	dc	H'8000
_tone_I:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2C01
	dc	H'3F83
	dc	H'8000
_tone_J:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2D01
	dc	H'3F83
	dc	H'8000
_tone_K:
	dc	H'90C8
	dc	H'A0FF
	dc	H'B000
	dc	H'2E04
	dc	H'3FA0
	dc	H'8000
_tone_L:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'1C04
	dc	H'3FA0
	dc	H'1F84
	dc	H'3FA0
	dc	H'2204
	dc	H'3FA0
	dc	H'2404
	dc	H'3F90
	dc	H'8000
_tone_M:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2404
	dc	H'3FA0
	dc	H'2204
	dc	H'3FA0
	dc	H'1F84
	dc	H'3FA0
	dc	H'1C04
	dc	H'3F90
	dc	H'8000
_tone_N:
	dc	H'9096
	dc	H'A0FF
	dc	H'B000
	dc	H'2608
	dc	H'3FA0
	dc	H'2888
	dc	H'3FB0
	dc	H'8000
_tone_O:
	dc	H'9096
	dc	H'A0FF
	dc	H'B000
	dc	H'2888
	dc	H'3FA0
	dc	H'2608
	dc	H'3FB0
	dc	H'8000
_tone_P:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2181
	dc	H'3F90
	dc	H'2D84
	dc	H'3F8C
	dc	H'8000
_tone_Q:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2E01
	dc	H'3F83
	dc	H'8000
_tone_R:
	dc	H'9078
	dc	H'A0FF
	dc	H'B000
	dc	H'2E04
	dc	H'3FB0
	dc	H'8000
_tone_S:
	dc	H'9078
	dc	H'A0FF
	dc	H'B000
	dc	H'2184
	dc	H'3FB0
	dc	H'8000
_tone_T:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2781
	dc	H'3F83
	dc	H'8000
_tone_U:
	dc	H'9096
	dc	H'A0FF
	dc	H'B000
	dc	H'2782
	dc	H'3FB0
	dc	H'8000
_tone_V:
	dc	H'9078
	dc	H'A0FF
	dc	H'B000
	dc	H'2784
	dc	H'3FB0
	dc	H'8000
_tone_W:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2183
	dc	H'3F88
	dc	H'2183
	dc	H'3F88
	dc	H'8000
_tone_X:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2783
	dc	H'3F88
	dc	H'2783
	dc	H'3F88
	dc	H'8000
_battery_low_tone:
	dc	H'90F0
	dc	H'A0FF
	dc	H'B000
	dc	H'2608
	dc	H'2908
	dc	H'2608
	dc	H'2908
	dc	H'2608
	dc	H'3F98
	dc	H'8000
_low_500ms_tone:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'3F90
	dc	H'9078
	dc	H'A0FF
	dc	H'B000
	dc	H'2184
	dc	H'3F8C
	dc	H'8000
_mute_reminder_tone:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'3F90
	dc	H'9078
	dc	H'A0FF
	dc	H'B000
	dc	H'2184
	dc	H'3F84
	dc	H'2184
	dc	H'3F8C
	dc	H'8000
_ring_twilight:
	dc	H'90B4
	dc	H'A0FF
	dc	H'B000
	dc	H'2C08
	dc	H'2C88
	dc	H'2C08
	dc	H'2A08
	dc	H'2C08
	dc	H'2C88
	dc	H'2C08
	dc	H'2A08
	dc	H'3FA0
	dc	H'8000
_ring_g_s_t_q:
	dc	H'90E6
	dc	H'A0FF
	dc	H'B000
	dc	H'2D84
	dc	H'2D84
	dc	H'2E84
	dc	H'2D04
	dc	H'6D08
	dc	H'2D88
	dc	H'2E84
	dc	H'2F84
	dc	H'2F84
	dc	H'3004
	dc	H'2F84
	dc	H'6F88
	dc	H'2E88
	dc	H'2D84
	dc	H'2E84
	dc	H'2D84
	dc	H'2D04
	dc	H'2D82
	dc	H'6D84
	dc	H'3FA0
	dc	H'8000
_ring_valkyries:
	dc	H'90F0
	dc	H'A0FF
	dc	H'B000
	dc	H'2008
	dc	H'6010
	dc	H'1F10
	dc	H'2008
	dc	H'2184
	dc	H'6188
	dc	H'2004
	dc	H'6008
	dc	H'2188
	dc	H'6190
	dc	H'2090
	dc	H'2188
	dc	H'2384
	dc	H'6388
	dc	H'2184
	dc	H'6188
	dc	H'3F98
	dc	H'8000
_ring_greensleeves:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2684
	dc	H'2802
	dc	H'2904
	dc	H'2A04
	dc	H'6A08
	dc	H'2A88
	dc	H'2A04
	dc	H'2902
	dc	H'2784
	dc	H'2584
	dc	H'6588
	dc	H'3F90
	dc	H'8000
_ring_two_beeps:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2390
	dc	H'2190
	dc	H'2390
	dc	H'2190
	dc	H'2390
	dc	H'3F88
	dc	H'2390
	dc	H'2190
	dc	H'2390
	dc	H'2190
	dc	H'2390
	dc	H'3F98
	dc	H'8000
_ring_fairground:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2604
	dc	H'2504
	dc	H'2488
	dc	H'2508
	dc	H'2488
	dc	H'2408
	dc	H'2484
	dc	H'2404
	dc	H'2384
	dc	H'2404
	dc	H'3F98
	dc	H'8000
_ring_counterpoint:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2604
	dc	H'2504
	dc	H'2604
	dc	H'2484
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2384
	dc	H'3F90
	dc	H'8000
_ring_major_arp:
	dc	H'90DC
	dc	H'A0FF
	dc	H'B000
	dc	H'2008
	dc	H'2208
	dc	H'2388
	dc	H'2608
	dc	H'2808
	dc	H'2988
	dc	H'2C08
	dc	H'3FA0
	dc	H'8000
_ring_major_scale:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2608
	dc	H'2708
	dc	H'2808
	dc	H'2888
	dc	H'2988
	dc	H'2A88
	dc	H'2B88
	dc	H'2C08
	dc	H'3F98
	dc	H'8000
_ring_minor_arp:
	dc	H'90DC
	dc	H'A0FF
	dc	H'B000
	dc	H'2008
	dc	H'2188
	dc	H'2388
	dc	H'2608
	dc	H'2788
	dc	H'2988
	dc	H'2C08
	dc	H'3FA0
	dc	H'8000
_ring_harmonic_minor_scale:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2008
	dc	H'2108
	dc	H'2188
	dc	H'2288
	dc	H'2388
	dc	H'2408
	dc	H'2588
	dc	H'2608
	dc	H'3F98
	dc	H'8000
_ring_more_than_a_feeling:
	dc	H'90C8
	dc	H'A0FF
	dc	H'B000
	dc	H'2508
	dc	H'2888
	dc	H'2B08
	dc	H'2D84
	dc	H'2888
	dc	H'2D04
	dc	H'3FA0
	dc	H'8000
_ring_eight_beeps:
	dc	H'90C8
	dc	H'A0FF
	dc	H'B000
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'3FA0
	dc	H'8000
_ring_four_beeps:
	dc	H'90B4
	dc	H'A0FF
	dc	H'B000
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'2388
	dc	H'3FA0
	dc	H'8000
_ring_bumble_bee:
	dc	H'9046
	dc	H'A0FF
	dc	H'B000
	dc	H'2C20
	dc	H'2BA0
	dc	H'2B20
	dc	H'2AA0
	dc	H'2BA0
	dc	H'2B20
	dc	H'2AA0
	dc	H'2A20
	dc	H'2B20
	dc	H'2AA0
	dc	H'2A20
	dc	H'29A0
	dc	H'2AA0
	dc	H'2A20
	dc	H'29A0
	dc	H'2920
	dc	H'3FE0
	dc	H'8000
_ring_aug_scale:
	dc	H'9118
	dc	H'A0FF
	dc	H'B000
	dc	H'2604
	dc	H'2A84
	dc	H'2C84
	dc	H'2E84
	dc	H'3F98
	dc	H'8000
_ring_dim_scale:
	dc	H'9118
	dc	H'A0FF
	dc	H'B000
	dc	H'2604
	dc	H'2784
	dc	H'2904
	dc	H'2A84
	dc	H'3F98
	dc	H'8000
_CustomRingTone:
	dc	H'9118
	dc	H'A0FF
	dc	H'B000
	dc	H'2604
	dc	H'2784
	dc	H'2904
	dc	H'2A84
	dc	H'3F98
	dc	H'8000
_tone_A1:
	dc	H'9640
	dc	H'A0FF
	dc	H'B000
	dc	H'2184
	dc	H'2504
	dc	H'2784
	dc	H'2384
	dc	H'3F84
	dc	H'8000
_tone_A2:
	dc	H'9640
	dc	H'A0FF
	dc	H'B000
	dc	H'2384
	dc	H'2784
	dc	H'2504
	dc	H'2184
	dc	H'3F84
	dc	H'8000
_tone_A3:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2384
	dc	H'3F8C
	dc	H'8000
_tone_A4:
	dc	H'9280
	dc	H'A0FF
	dc	H'B000
	dc	H'2984
	dc	H'2984
	dc	H'2984
	dc	H'2984
	dc	H'2984
	dc	H'3F88
	dc	H'8000
_tone_A5:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2B84
	dc	H'3F88
	dc	H'2D84
	dc	H'3F8C
	dc	H'8000
_tone_A6:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2D84
	dc	H'3F88
	dc	H'2B84
	dc	H'3F8C
	dc	H'8000
_tone_S1:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'3184
	dc	H'3F86
	dc	H'8000
_tone_S2:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2984
	dc	H'3384
	dc	H'2984
	dc	H'3384
	dc	H'2984
	dc	H'3384
	dc	H'2984
	dc	H'3384
	dc	H'2984
	dc	H'3384
	dc	H'2984
	dc	H'3384
	dc	H'3F86
	dc	H'8000
_tone_S3:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2984
	dc	H'3F86
	dc	H'8000
_tone_S4:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2404
	dc	H'3F84
	dc	H'2404
	dc	H'3F84
	dc	H'2404
	dc	H'3F84
	dc	H'2404
	dc	H'3F84
	dc	H'2404
	dc	H'3F84
	dc	H'8000
_tone_S5:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2984
	dc	H'3F84
	dc	H'3184
	dc	H'3F86
	dc	H'8000
_tone_S6:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'3184
	dc	H'3F84
	dc	H'2984
	dc	H'3F86
	dc	H'8000
_tone_Q21:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2502
	dc	H'3F90
	dc	H'8000
_tone_Q22:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2186
	dc	H'3F98
	dc	H'2506
	dc	H'3F98
	dc	H'2786
	dc	H'3F98
	dc	H'2982
	dc	H'3F90
	dc	H'8000
_tone_Q23:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2986
	dc	H'3F98
	dc	H'2786
	dc	H'3F98
	dc	H'2506
	dc	H'3F98
	dc	H'2182
	dc	H'3F90
	dc	H'8000
_tone_Q24:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'2782
	dc	H'3F98
	dc	H'2502
	dc	H'3F98
	dc	H'2182
	dc	H'3F90
	dc	H'8000
_tone_Q25:
	dc	H'90C8
	dc	H'A0FF
	dc	H'B000
	dc	H'2504
	dc	H'3FB0
	dc	H'2183
	dc	H'618C
	dc	H'3FA0
	dc	H'8000
_tone_Q26:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2501
	dc	H'3F84
	dc	H'2181
	dc	H'3F83
	dc	H'8000
_tone_Q27:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2181
	dc	H'3F84
	dc	H'2501
	dc	H'3F83
	dc	H'8000
_tone_Q28:
	dc	H'91E0
	dc	H'A0FF
	dc	H'B000
	dc	H'2181
	dc	H'3F8C
	dc	H'2181
	dc	H'3F8C
	dc	H'8000
_tone_Q29:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2D81
	dc	H'3F83
	dc	H'8000
_tone_Q2A:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'3F90
	dc	H'2181
	dc	H'3F8C
	dc	H'8000
_tone_Q2B:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2182
	dc	H'3F84
	dc	H'2182
	dc	H'3F8C
	dc	H'8000
_tone_Q2C:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2783
	dc	H'2983
	dc	H'2B03
	dc	H'2D83
	dc	H'3F8C
	dc	H'8000
_tone_Q2D:
	dc	H'9258
	dc	H'A0FF
	dc	H'B000
	dc	H'2D83
	dc	H'2B03
	dc	H'2983
	dc	H'2783
	dc	H'3F8C
	dc	H'8000
_tone_Q2E:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2D82
	dc	H'3F88
	dc	H'8000
_tone_Q2F:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2182
	dc	H'3F88
	dc	H'8000
_tone_Q210:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2184
	dc	H'3F98
	dc	H'8000
_tone_Q211:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2181
	dc	H'3F81
	dc	H'2D81
	dc	H'3F98
	dc	H'8000
_tone_Q212:
	dc	H'9064
	dc	H'A0FF
	dc	H'B000
	dc	H'2DB0
	dc	H'21B0
	dc	H'2DB0
	dc	H'21B0
	dc	H'2DB0
	dc	H'21B0
	dc	H'3F90
	dc	H'7F98
	dc	H'2DB0
	dc	H'21B0
	dc	H'2DB0
	dc	H'21B0
	dc	H'2DB0
	dc	H'21B0
	dc	H'3FC0
	dc	H'8000
_tone_Q213:
	dc	H'9960
	dc	H'A0FF
	dc	H'B000
	dc	H'2181
	dc	H'2181
	dc	H'2D81
	dc	H'3F83
	dc	H'8000
_tone_Q214:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2781
	dc	H'3F83
	dc	H'2781
	dc	H'3F88
	dc	H'8000
_tone_Q31:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2404
	dc	H'2504
	dc	H'2884
	dc	H'3F86
	dc	H'8000
_tone_Q32:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2884
	dc	H'2504
	dc	H'2404
	dc	H'3F86
	dc	H'8000
_tone_Q33:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'1E04
	dc	H'2004
	dc	H'3F88
	dc	H'8000
_tone_Q34:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2284
	dc	H'3F84
	dc	H'2284
	dc	H'3F88
	dc	H'8000
_tone_Q35:
	dc	H'91E0
	dc	H'A0FF
	dc	H'B000
	dc	H'2604
	dc	H'2084
	dc	H'3F8C
	dc	H'8000
_tone_Q36:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2284
	dc	H'1C84
	dc	H'3F86
	dc	H'8000
_tone_Q37:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'1C84
	dc	H'2284
	dc	H'3F86
	dc	H'8000
_tone_Q38:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2284
	dc	H'3F86
	dc	H'8000
_tone_Q39:
	dc	H'912C
	dc	H'A0FF
	dc	H'B000
	dc	H'2282
	dc	H'1C84
	dc	H'3F98
	dc	H'8000
_tone_Q3A:
	dc	H'94B0
	dc	H'A0FF
	dc	H'B000
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'3F84
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'2604
	dc	H'2404
	dc	H'3F86
	dc	H'8000
_tone_Q3B:
	dc	H'9190
	dc	H'A0FF
	dc	H'B000
	dc	H'1E08
	dc	H'3FA0
	dc	H'2008
	dc	H'3FA0
	dc	H'2188
	dc	H'3FA0
	dc	H'2384
	dc	H'3F81
	dc	H'2402
	dc	H'6408
	dc	H'3F90
	dc	H'8000
_tone_Q3C:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2284
	dc	H'3F84
	dc	H'2284
	dc	H'3F88
	dc	H'8000
_tone_Q3D:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2584
	dc	H'3F88
	dc	H'8000
_tone_Q3E:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2504
	dc	H'3F88
	dc	H'8000
_tone_Q3F:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2484
	dc	H'3F88
	dc	H'8000
_tone_Q40:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2404
	dc	H'3F88
	dc	H'8000
_tone_Q41:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2384
	dc	H'3F88
	dc	H'8000
_tone_Q42:
	dc	H'9320
	dc	H'A0FF
	dc	H'B000
	dc	H'2304
	dc	H'3F88
	dc	H'8000
_gFixedTones:
	dc	_tone_B
	dc	_tone_C
	dc	_tone_D
	dc	_tone_E
	dc	_tone_F
	dc	_tone_G
	dc	_tone_H
	dc	_tone_I
	dc	_tone_J
	dc	_tone_K
	dc	_tone_L
	dc	_tone_M
	dc	_tone_N
	dc	_tone_O
	dc	_tone_P
	dc	_tone_Q
	dc	_tone_R
	dc	_tone_S
	dc	_tone_T
	dc	_tone_U
	dc	_tone_V
	dc	_tone_W
	dc	_tone_X
	dc	_battery_low_tone
	dc	_low_500ms_tone
	dc	_mute_reminder_tone
	dc	_ring_twilight
	dc	_ring_g_s_t_q
	dc	_ring_valkyries
	dc	_ring_greensleeves
	dc	_ring_two_beeps
	dc	_ring_fairground
	dc	_ring_counterpoint
	dc	_ring_major_arp
	dc	_ring_major_scale
	dc	_ring_minor_arp
	dc	_ring_harmonic_minor_scale
	dc	_ring_more_than_a_feeling
	dc	_ring_eight_beeps
	dc	_ring_four_beeps
	dc	_ring_bumble_bee
	dc	_ring_aug_scale
	dc	_ring_dim_scale
	dc	_CustomRingTone
	dc	_tone_A1
	dc	_tone_A2
	dc	_tone_A3
	dc	_tone_A4
	dc	_tone_A5
	dc	_tone_A6
	dc	_tone_S1
	dc	_tone_S2
	dc	_tone_S3
	dc	_tone_S4
	dc	_tone_S5
	dc	_tone_S6
	dc	_tone_Q21
	dc	_tone_Q22
	dc	_tone_Q23
	dc	_tone_Q24
	dc	_tone_Q25
	dc	_tone_Q26
	dc	_tone_Q27
	dc	_tone_Q28
	dc	_tone_Q29
	dc	_tone_Q2A
	dc	_tone_Q2B
	dc	_tone_Q2C
	dc	_tone_Q2D
	dc	_tone_Q2E
	dc	_tone_Q2F
	dc	_tone_Q210
	dc	_tone_Q211
	dc	_tone_Q212
	dc	_tone_Q213
	dc	_tone_Q214
	dc	_tone_Q31
	dc	_tone_Q32
	dc	_tone_Q33
	dc	_tone_Q34
	dc	_tone_Q35
	dc	_tone_Q36
	dc	_tone_Q37
	dc	_tone_Q38
	dc	_tone_Q39
	dc	_tone_Q3A
	dc	_tone_Q3B
	dc	_tone_Q3C
	dc	_tone_Q3D
	dc	_tone_Q3E
	dc	_tone_Q3F
	dc	_tone_Q40
	dc	_tone_Q41
	dc	_tone_Q42
	.CODE
$_TonesPlayEvent:
	enterl	#8
?LBB_TonesPlayEvent:
	st	AL,@(H'0003,Y)
?LBB2:
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'400C
	beq	?L1
	bsr	$_VolumeAllOutputsMuted
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'471B
	beq	?L4
	cmp	AL,#H'40E0
	beq	?L4
	cmp	AL,#H'40E2
	bne	?L1
?L4:
	ld	AH,@$_theSink+H'0036
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L5
	ld	AL,@(H'0003,Y)
	bsr	$_AudioPromptPlayEvent
	cmp	AL,#H'0000
	bne	?L1
?L5:
	ld	AL,@$_theSink+H'000B
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	add	X,@$XAP_UXL
	ld	AH,@$XAP_UXL
	add	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L1
?L17:
	ld	X,@H'fff8
	add	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,@(H'0004,Y)
	bne	?L10
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0037,X)
	and	AL,#H'00FF
	ld	AH,#H'0001
	st	AH,@(0,Y)
	bsr	$_PioSetPio
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4757
	bsr	$_MessageSendLater
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'471B
	beq	?L14
	cmp	AL,#H'471B
	bcs	?L15
	add	AL,#-H'4751
	cmp	AL,#(H'0001+H'0001)
	bcc	?L15
?L14:
	ld	X,@(H'0005,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000B
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	AH,@$_theSink+H'0019
	and	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bra	(?L19)
?L15:
	ld	X,@(H'0005,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000B
	ld	X,@(H'0001,X)
	and	X,#H'00FF
	ld	AH,@$_theSink+H'0019
	lsr	#H'0002
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	and	AH,#H'0001
?L19:
	bsr	$_TonesPlayTone
?L10:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@$_theSink+H'000B
	st	AL,@H'fff8
	ld	AH,@(H'0005,Y)
	add	AH,@$XAP_AH
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L17
?L1:
?LBE2:
?LBE_TonesPlayEvent:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_TonesGetToneVolume:
	enterl	#2
?LBB_TonesGetToneVolume:
	ld	X,@$XAP_AL
?LBB3:
	ld	AH,@$_theSink+H'0017
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L28
	ld	AH,@$_theSink+H'001B
	lsr	#H'000A
	and	AH,#H'001F
	bra	(?L29)
?L28:
	ld	AH,@$_theSink+H'001A
	lsr	#H'0004
	and	AH,#H'000F
	cmp	X,#H'0000
	bne	?L49
	bsr	$_sinkAudioRouteAvailable
	cmp	AL,#H'0008
	beq	?L36
	cmp	AL,#(H'0001+H'0008)
	bcc	?L46
	cmp	AL,#H'0001
	beq	?L33
	cmp	AL,#H'0001
	bcs	?L42
	cmp	AL,#H'0002
	beq	?L34
	cmp	AL,#H'0004
	beq	?L35
	bra	(?L42)
?L46:
	cmp	AL,#H'0020
	beq	?L38
	cmp	AL,#(H'0001+H'0020)
	bcc	?L47
	cmp	AL,#H'0010
	beq	?L37
	bra	(?L42)
?L47:
	cmp	AL,#H'0040
	beq	?L39
	cmp	AL,#H'0080
	beq	?L40
	bra	(?L42)
?L33:
	ld	X,@$_theSink+H'000D
	ld	AH,@(0,X)
	bra	(?L29)
?L34:
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0002,X)
	bra	(?L29)
?L35:
	ld	AH,@$_theSink+H'002A
?L50:
	lsr	#H'0001
	and	AH,#H'007F
?L49:
	ld	X,@$XAP_AH
	add	X,@$XAP_AH
	add	X,@$_theSink+H'000A
	bra	(?L48)
?L36:
	ld	AH,@$_theSink+H'002F
	bra	(?L50)
?L37:
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0008,X)
	bra	(?L29)
?L38:
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0004,X)
	bra	(?L29)
?L39:
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'0006,X)
	bra	(?L29)
?L40:
	ld	X,@$_theSink+H'000D
	ld	AH,@(H'000A,X)
	bra	(?L29)
?L42:
?LBB4:
	ld	AL,#H'0001
	bsr	$_audioGetLinkPriority
	cmp	AL,#H'0000
	beq	?L43
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L44)
?L43:
	ld	X,#H'002A
?L44:
	ld	AH,@($_theSink,X)
	lsr	#H'0001
	and	AH,#H'007F
	add	AH,@$XAP_AH
	ld	X,@$_theSink+H'000A
	add	X,@$XAP_AH
?L48:
	ld	AH,@(H'0014,X)
	and	AH,#H'00FF
?L29:
?LBE4:
?LBE3:
	ld	AL,@$XAP_AH
?LBE_TonesGetToneVolume:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_TonesPlayTone:
	enterl	#7
?LBB_TonesPlayTone:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0007,Y)
?LBB5:
	bsr	$_TonesGetToneVolume
	st	AL,@H'fff8
	ld	AL,@(H'0003,Y)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'005D)
	bcc	?L61
	ld	AL,@$_theSink+H'0023
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	X,@$_theSink+H'0006
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(_gFixedTones-H'0001,X)
	bra	(?L64)
?L61:
	tst	@$_theSink+H'000C
	beq	?L60
	ld	AL,@$_theSink+H'000C
	ld	X,@(H'0003,Y)
	add	X,@$XAP_AL
	tst	@(-H'005F,X)
	beq	?L60
	add	AL,@(-H'005F,X)
	ld	AH,@$_theSink+H'0023
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	X,@$_theSink+H'0006
	ld	AH,@(0,X)
	st	AH,@(H'0002,Y)
?L64:
	ld	AH,@(H'0004,Y)
	bsr	$_AudioPlayTone
?L60:
?LBE5:
?LBE_TonesPlayTone:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ToneTerminate:
	enterl	#2
?LBB_ToneTerminate:
	bsr	$_AudioStopTone
	bsr	$_AudioPromptTerminate
?LBE_ToneTerminate:
	leavel	#2
$_TonesGetToneVolumeInDb:
	enterl	#4
?LBB_TonesGetToneVolumeInDb:
?LBB6:
	smult	#H'0007
	add	AL,@$_theSink+H'000A
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolume
	ld	X,@(H'0001,Y)
	smult	@(0,X)
	ld	AH,@$XAP_AL
	lsr	#H'0004
	ld	AL,@$XAP_AH
	ld	AH,#H'003C
	st	AH,@(0,Y)
	ld	AH,@$XAP_UXL
	bsr	$_VolumeConvertStepsToDB
?LBE6:
?LBE_TonesGetToneVolumeInDb:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 29 used[1] = 2 used[3] = 2 total = 33
;# Function pattern *movqi3 used[0] = 54 total = 54
;# Function pattern *movqi8 used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 15 used[2] = 5 total = 20
;# Function pattern *andqi3 used[0] = 14 total = 14
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *mulqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 8 total = 8
;# Function pattern jump used[0] = 15 total = 15
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern movstrqi+3 used[0] = 8 used[1] = 2 total = 10
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 16 total = 16
	MODULE	sink_upgrade
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_usb
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	sink_utils
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_bitCounter16:
	enterl	#2
?LBB_bitCounter16:
	ld	X,@$XAP_AL
?LBB2:
	ld	AH,@$XAP_AL
	lsr	#H'0001
	and	AH,#H'5555
	sub	X,@$XAP_AH
	ld	AH,@$XAP_UXL
	lsr	#H'0002
	and	AH,#H'3333
	ld	AL,@$XAP_UXL
	and	AL,#H'3333
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AH,@$XAP_UXL
	lsr	#H'0004
	add	X,@$XAP_AH
	and	X,#H'0F0F
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	add	X,@$XAP_AH
	and	X,#H'00FF
?LBE2:
	ld	AL,@$XAP_UXL
?LBE_bitCounter16:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_bitCounter32:
	enterl	#2
?LBB_bitCounter32:
	st	AH,@H'fff8
	st	AL,@H'fff9
	lsr	#H'0001
	and	AL,#H'5555
	and	AH,#H'5555
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	sub	AL,@H'fffb
	nop
	subc	AH,@H'fffa
	st	AH,@H'fff8
	st	AL,@H'fff9
	and	AL,#H'3333
	and	AH,#H'3333
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	lsr	#H'0002
	and	AL,#H'3333
	and	AH,#H'3333
	add	AL,@H'fffb
	nop
	addc	AH,@H'fffa
	st	AH,@H'fff8
	st	AL,@H'fff9
	lsr	#H'0004
	add	AL,@H'fff9
	nop
	addc	AH,@H'fff8
	and	AL,#H'0F0F
	and	AH,#H'0F0F
	st	AH,@(-1,Y)
	st	AL,@(-2,Y)
	ld	AL,@(-2,Y)
	smult	#H'0101
	ld	X,@$XAP_AL
	ld	AL,@(-1,Y)
	smult	#H'0101
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(-2,Y)
	umult	#H'0101
	add	AH,@$XAP_UXL
	lsr	#H'0018
?LBE_bitCounter32:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 9 used[1] = 3 total = 12
;# Function pattern *movhi used[0] = 1 used[2] = 2 used[3] = 5 total = 8
;# Function pattern *addhi3 used[0] = 2 total = 2
;# Function pattern *andhi3 used[0] = 4 total = 4
;# Function pattern *subhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 4 used[2] = 1 total = 5
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqihi3_const used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *lshrhi3 used[0] = 4 total = 4
	MODULE	sink_volume
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_volumeInit:
	enterl	#3
?LBB_volumeInit:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@$_theSink+H'000D
	ld	AH,#H'000C
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?LBE_volumeInit:
	leavel	#3
_volumeSyncAffectsGain:
	enterl	#3
?LBB_volumeSyncAffectsGain:
?LBB2:
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L3
	tst	@$_theSink+H'0024
	beq	?L3
	ld	AL,@$_theSink+H'0024
	cmp	AL,@(0,Y)
	bne	?L3
	ld	AL,#H'0001
	bra	(?L2)
?L3:
	ld	AL,#H'0000
?L2:
?LBE2:
?LBE_volumeSyncAffectsGain:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_volumeGetMuteState:
	enterl	#2
?LBB_volumeGetMuteState:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'003A
	lsr	#H'000D
	asr	@$XAP_UXL
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L7
	ld	AL,#H'0001
	bra	(?L6)
?L7:
	ld	AL,#H'0000
?L6:
?LBE_volumeGetMuteState:
	leavel	#2
_volumeSetMuteState:
	enterl	#2
?LBB_volumeSetMuteState:
	st	AL,@H'fff9
	st	AH,@H'fffa
	ld	AH,@$_theSink+H'003A
	lsr	#H'000D
	ld	X,@$XAP_AH
	ld	AL,#H'0001
	asl	@H'fff9
	xor	AL,#-H'0001
	and	AL,@$XAP_UXL
	asl	#H'000D
	ld	X,@$_theSink+H'003A
	and	X,#H'1FFF
	or	X,@$XAP_AL
	ld	AH,@$XAP_UXL
	lsr	#H'000D
	st	AH,@H'fff8
	ld	AL,@H'fffa
	asl	@H'fff9
	or	AL,@H'fff8
	asl	#H'000D
	and	X,#H'1FFF
	or	X,@$XAP_AL
	st	X,@$_theSink+H'003A
?LBE_volumeSetMuteState:
	leavel	#2
_volumeGetMuteAllStatus:
; leaf function with empty stack frame
?LBB_volumeGetMuteAllStatus:
	ld	AL,@$_theSink+H'0036
	and	AL,#H'0001
?LBE_volumeGetMuteAllStatus:
	rts
_volumeSetMuteAllStatus:
; leaf function with empty stack frame
?LBB_volumeSetMuteAllStatus:
	and	AL,#H'0001
	ld	AH,@$_theSink+H'0036
	and	AH,#-H'0002
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'0036
?LBE_volumeSetMuteAllStatus:
	rts
$_VolumeApplySoftMuteStates:
	enterl	#3
?LBB_VolumeApplySoftMuteStates:
?LBB3:
	ld	AH,@$_theSink+H'003A
	lsr	#H'000D
	ld	AL,@$XAP_AH
	asl	#H'000D
	ld	AH,@(0,Y)
	and	AH,#H'1FFF
	or	AH,@$XAP_AL
	st	AH,@(0,Y)
	bsr	_volumeGetMuteAllStatus
	cmp	AL,#H'0000
	beq	?L13
	ld	AH,@(0,Y)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	or	AL,#H'0001
	asl	#H'000D
	ld	AH,@(0,Y)
	and	AH,#H'1FFF
	or	AH,@$XAP_AL
	st	AH,@(0,Y)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	or	AL,#H'0002
	asl	#H'000D
	ld	AH,@(0,Y)
	and	AH,#H'1FFF
	or	AH,@$XAP_AL
	st	AH,@(0,Y)
?L13:
	ld	AL,@$XAP_UY
	bsr	$_AudioSetSoftMute
?LBE3:
?LBE_VolumeApplySoftMuteStates:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_VolumeAllOutputsMuted:
	enterl	#3
?LBB_VolumeAllOutputsMuted:
	bsr	_volumeGetMuteAllStatus
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,#H'0001
	bra	(?L14)
?L15:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bsr	_volumeGetMuteState
	cmp	AL,#H'0000
	beq	?L16
	ld	AL,#H'0001
	bsr	_volumeGetMuteState
	cmp	AL,#H'0000
	beq	?L16
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L16:
	ld	AL,@(0,Y)
?L14:
?LBE_VolumeAllOutputsMuted:
	leavel	#3
$_VolumeUpdateMuteState:
	enterl	#4
?LBB_VolumeUpdateMuteState:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_volumeGetMuteState
	cmp	AL,@(H'0001,Y)
	beq	?L17
	tst	@$_theSink+H'0024
	beq	?L17
	ld	AL,@(0,Y)
	cmp	AL,#H'0002
	bne	?L20
	ld	AL,@(H'0001,Y)
	bsr	$_VolumeSetMicrophoneMute
	bra	(?L17)
?L20:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_volumeSetMuteState
	bsr	$_VolumeApplySoftMuteStates
?L17:
?LBE_VolumeUpdateMuteState:
	leavel	#4
$_VolumeUpdateMuteStatusAllOutputs:
	enterl	#3
?LBB_VolumeUpdateMuteStatusAllOutputs:
	st	AL,@(0,Y)
	bsr	_volumeGetMuteAllStatus
	cmp	AL,@(0,Y)
	beq	?L24
	ld	AL,@(0,Y)
	bsr	_volumeSetMuteAllStatus
	bsr	$_VolumeApplySoftMuteStates
?L24:
?LBE_VolumeUpdateMuteStatusAllOutputs:
	leavel	#3
$_VolumeUpdateMuteStatusMicrophone:
	enterl	#3
?LBB_VolumeUpdateMuteStatusMicrophone:
	st	AL,@(0,Y)
?LBB4:
	cmp	AL,#H'0000
	beq	?L28
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L28:
	ld	AL,#H'0002
	bsr	_volumeGetMuteState
	cmp	AL,@(0,Y)
	beq	?L27
	ld	AL,@(0,Y)
	bsr	$_VolumeSetMicrophoneMute
?L27:
?LBE4:
?LBE_VolumeUpdateMuteStatusMicrophone:
	leavel	#3
$_VolumeToggleMute:
	enterl	#3
?LBB_VolumeToggleMute:
?LBB5:
	cmp	AL,#H'0001
	beq	?L36
	cmp	AL,#H'0001
	bcs	?L33
	cmp	AL,#H'0002
	beq	?L39
	bra	(?L31)
?L33:
	bsr	_volumeGetMuteState
	cmp	AL,#H'0000
	beq	?L34
	ld	AH,#H'40E3
	bra	(?L32)
?L34:
	ld	AH,#H'40E2
	bra	(?L32)
?L36:
	bsr	_volumeGetMuteState
	cmp	AL,#H'0000
	beq	?L37
	ld	AH,#H'40E1
	bra	(?L32)
?L37:
	ld	AH,#H'40E0
	bra	(?L32)
?L39:
	bsr	_volumeGetMuteState
	cmp	AL,#H'0000
	beq	?L40
	ld	AH,#H'401A
	bra	(?L32)
?L40:
	ld	AH,#H'4019
?L32:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	bsr	$_MessageSend
?L31:
?LBE5:
?LBE_VolumeToggleMute:
	leavel	#3
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_VolumeSetMicrophoneMute:
	enterl	#4
?LBB_VolumeSetMicrophoneMute:
	st	AL,@(0,Y)
?LBB6:
	ld	AL,@$_theSink+H'0024
	bsr	$_audioGetStatus
	st	AL,@(H'0001,Y)
	ld	AL,@$_theSink+H'0024
	ld	X,@(H'0001,Y)
	cmp	AL,@(H'0001,X)
	beq	?L49
	cmp	AL,@(H'0002,X)
	bne	?L48
?L49:
?LBB7:
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	cmp	AL,#H'0000
	beq	?L48
	tst	@(0,Y)
	bne	?L51
	ld	AH,#H'000A
	bra	(?L52)
?L51:
	ld	AH,#H'0000
?L52:
	bsr	$_VolumeSetHfpMicrophoneGain
?L48:
?LBE7:
	ld	AL,@(H'0001,Y)
	bsr	$_free
?LBE6:
?LBE_VolumeSetMicrophoneMute:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_VolumeSetHfpMicrophoneGain:
	enterl	#8
?LBB_VolumeSetHfpMicrophoneGain:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB8:
	cmp	AL,#H'0000
	bne	?L56
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L56
?LBB9:
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_HfpLinkGetCallState
	tst	@(H'0003,Y)
	beq	?L58
	ld	AL,#H'0001
	bra	(?L72)
?L58:
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_HfpLinkGetCallState
	tst	@(H'0003,Y)
	beq	?L56
	ld	AL,#H'0002
?L72:
	st	AL,@(H'0004,Y)
?L56:
?LBE9:
	tst	@(H'0004,Y)
	beq	?L55
	tst	@(H'0005,Y)
	bne	?L62
	ld	AL,@(H'0004,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	ld	AL,@($_theSink,X)
	or	AL,#H'0001
	st	AL,@($_theSink,X)
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	_volumeSetMuteState
	ld	AH,@$_theSink+H'0017
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L65
	ld	AL,#H'0001
	bsr	_volumeSetMuteAllStatus
?L65:
	ld	AL,#($_theSink)
	ld	AH,#H'471B
	bsr	$_MessageCancelAll
	ld	X,@$_theSink+H'0005
	tst	@(H'000B,X)
	beq	?L67
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000B,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'471B
	bsr	$_MessageSendLater
	bra	(?L67)
?L62:
	tst	@(H'0004,Y)
	beq	?L68
	ld	AL,@(H'0004,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L69)
?L68:
	ld	X,#H'002A
?L69:
	ld	AL,@($_theSink,X)
	and	AL,#-H'0002
	st	AL,@($_theSink,X)
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	_volumeSetMuteState
	ld	AH,@$_theSink+H'0017
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L70
	ld	AL,#H'0000
	bsr	_volumeSetMuteAllStatus
?L70:
	ld	AL,@$_theSink+H'002A
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L67
	ld	AL,@$_theSink+H'002F
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L67
	ld	AL,#($_theSink)
	ld	AH,#H'471B
	bsr	$_MessageCancelAll
?L67:
	bsr	$_VolumeApplySoftMuteStates
?L55:
?LBE8:
?LBE_VolumeSetHfpMicrophoneGain:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_VolumeSetHfpMicrophoneGainCheckMute:
	enterl	#5
?LBB_VolumeSetHfpMicrophoneGainCheckMute:
	st	AL,@(H'0001,Y)
	st	AH,@H'fff8
	cmp	AL,#H'0000
	beq	?L73
	cmp	AH,#H'0000
	beq	?L75
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@($_theSink+H'0025,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,@(H'0001,Y)
	bsr	_volumeSyncAffectsGain
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'401A
	bsr	$_MessageSend
	bra	(?L79)
?L78:
	ld	AL,@(H'0001,Y)
	xor	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L81
	ld	AL,@(H'0001,Y)
	xor	AL,#H'0003
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L82)
?L81:
	ld	X,#H'002A
?L82:
	ld	AL,@($_theSink,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L79
	ld	AL,#($_theSink)
	ld	AH,#H'471B
	bsr	$_MessageCancelAll
?L79:
	tst	@(H'0001,Y)
	beq	?L83
	ld	AL,@(H'0001,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L84)
?L83:
	ld	X,#H'002A
?L84:
	ld	AL,@($_theSink,X)
	and	AL,#-H'0002
	bra	(?L92)
?L75:
	tst	@H'fff8
	bne	?L73
	tst	@(H'0001,Y)
	beq	?L87
	ld	AL,@(H'0001,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L88)
?L87:
	ld	X,#H'002A
?L88:
	ld	AL,@($_theSink,X)
	and	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L73
	ld	AL,@(H'0001,Y)
	bsr	_volumeSyncAffectsGain
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4019
	bsr	$_MessageSend
?L89:
	tst	@(H'0001,Y)
	beq	?L90
	ld	AL,@(H'0001,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L91)
?L90:
	ld	X,#H'002A
?L91:
	ld	AL,@($_theSink,X)
	or	AL,#H'0001
?L92:
	st	AL,@($_theSink,X)
?L73:
?LBE_VolumeSetHfpMicrophoneGainCheckMute:
	leavel	#5
$_VolumeSendHfpMicrophoneGain:
	enterl	#3
?LBB_VolumeSendHfpMicrophoneGain:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	cmp	AL,#H'0000
	beq	?L93
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	ld	AH,#H'0000
	tst	@(0,Y)
	bne	?L97
	ld	AH,#H'0001
?L97:
	ld	AL,@($_theSink,X)
	and	AL,#-H'0002
	or	AL,@$XAP_AH
	st	AL,@($_theSink,X)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UY
	bsr	$_HfpVolumeSyncMicrophoneGainRequest
?L93:
?LBE_VolumeSendHfpMicrophoneGain:
	leavel	#3
$_VolumePlayMuteToneQuery:
	enterl	#2
?LBB_VolumePlayMuteToneQuery:
?LBB10:
	ld	AL,#H'0001
	bsr	$_audioGetLinkPriority
	cmp	AL,#H'0000
	beq	?L99
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@($_theSink+H'0025,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L99
	ld	AL,#H'0000
	bra	(?L98)
?L99:
	ld	AL,#H'0001
?L98:
?LBE10:
?LBE_VolumePlayMuteToneQuery:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
_volumeSetMessageMainVolumeInDb:
	enterl	#3
?LBB_volumeSetMessageMainVolumeInDb:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolumeInDb
	ld	X,@(0,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'000E,X)
	ld	X,@(0,Y)
	st	AL,@(H'0003,X)
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'000F,X)
	ld	X,@(0,Y)
	st	AL,@(H'0004,X)
?LBE_volumeSetMessageMainVolumeInDb:
	leavel	#3
_volumeSetMessageAuxVolumeInDb:
	enterl	#3
?LBB_volumeSetMessageAuxVolumeInDb:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	st	AH,@(H'0005,X)
	ld	AL,#H'0001
	bsr	$_TonesGetToneVolumeInDb
	ld	X,@(0,Y)
	st	AL,@(H'0006,X)
?LBE_volumeSetMessageAuxVolumeInDb:
	leavel	#3
_VolumeSetMainAndAuxVolumeIndB:
	enterl	#10
?LBB_VolumeSetMainAndAuxVolumeIndB:
	ld	X,@$XAP_AL
	st	AH,@(H'0007,Y)
?LBB11:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UXL
	bsr	_volumeSetMessageMainVolumeInDb
	ld	AL,@$XAP_UY
	ld	AH,@(H'0007,Y)
	bsr	_volumeSetMessageAuxVolumeInDb
	ld	AL,@$XAP_UY
	bsr	$_AudioSetGroupVolume
?LBE11:
?LBE_VolumeSetMainAndAuxVolumeIndB:
	leavel	#10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
_VolumeSetMainVolumeIndB:
	enterl	#9
?LBB_VolumeSetMainVolumeIndB:
	ld	AH,@$XAP_AL
?LBB12:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	bsr	_volumeSetMessageMainVolumeInDb
	ld	AL,@$XAP_UY
	bsr	$_AudioSetGroupVolume
?LBE12:
?LBE_VolumeSetMainVolumeIndB:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_VolumeSetAuxVolumeIndB:
	enterl	#9
?LBB_VolumeSetAuxVolumeIndB:
	ld	AH,@$XAP_AL
?LBB13:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	bsr	_volumeSetMessageAuxVolumeInDb
	ld	AL,@$XAP_UY
	bsr	$_AudioSetGroupVolume
?LBE13:
?LBE_VolumeSetAuxVolumeIndB:
	leavel	#9
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_VolumeGetVolumeIndB:
	enterl	#4
?LBB_VolumeGetVolumeIndB:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB14:
	smult	#H'0007
	ld	AH,@$XAP_AL
	add	AH,@$_theSink+H'000A
	ld	AL,#H'003C
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_VolumeConvertStepsToDB
	tst	@(H'0001,Y)
	bne	?L109
	ld	AL,#-H'1C20
?L109:
?LBE14:
?LBE_VolumeGetVolumeIndB:
	leavel	#4
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_VolumeSetVolumeIndB:
	enterl	#4
?LBB_VolumeSetVolumeIndB:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0002
	bne	?L111
	ld	AH,@$XAP_AL
	bsr	_VolumeSetMainAndAuxVolumeIndB
?L111:
	tst	@(H'0001,Y)
	bne	?L112
	ld	AL,@(0,Y)
	bsr	_VolumeSetMainVolumeIndB
	bra	(?L110)
?L112:
	ld	AL,@(0,Y)
	bsr	_VolumeSetAuxVolumeIndB
?L110:
?LBE_VolumeSetVolumeIndB:
	leavel	#4
_VolumeGetGroupVolumeFromInputVolumes:
	enterl	#2
?LBB_VolumeGetGroupVolumeFromInputVolumes:
	ld	X,@$XAP_AL
	cmp	AH,#H'0001
	bne	?L116
	ld	AL,@(H'0001,X)
	bra	(?L115)
?L116:
	ld	AL,@(0,X)
?L115:
?LBE_VolumeGetGroupVolumeFromInputVolumes:
	leavel	#2
_VolumeSetDSPOperatingMode:
	enterl	#3
?LBB_VolumeSetDSPOperatingMode:
	st	AL,@(0,Y)
	bsr	_VolumeGetGroupVolumeFromInputVolumes
	cmp	AL,@(H'0003,Y)
	beq	?L118
	tst	@(H'0003,Y)
	bne	?L120
	ld	X,@(0,Y)
	tst	@(H'0001,X)
	beq	?L121
	tst	@(0,X)
	bne	?L120
?L121:
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0004
	bra	(?L124)
?L120:
	tst	@(H'0003,Y)
	beq	?L118
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L118
	tst	@(H'0001,X)
	bne	?L118
	ld	AH,@$_theSink+H'0030
	add	AH,#H'0046
	ld	AL,#H'0008
?L124:
	bsr	$_AudioSetMode
?L118:
?LBE_VolumeSetDSPOperatingMode:
	leavel	#3
_VolumeSetNewVolume:
	enterl	#5
?LBB_VolumeSetNewVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	ld	AH,@(H'0005,Y)
	bsr	_VolumeGetGroupVolumeFromInputVolumes
	ld	AH,@(H'0005,Y)
	bsr	_VolumeGetVolumeIndB
	ld	AH,@(H'0005,Y)
	bsr	_VolumeSetVolumeIndB
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	bsr	_VolumeSetDSPOperatingMode
?LBE15:
?LBE_VolumeSetNewVolume:
	leavel	#5
_VolumeIncrementGroupVolumeAndCheckLimit:
	enterl	#4
?LBB_VolumeIncrementGroupVolumeAndCheckLimit:
?LBB16:
	st	AL,@H'fff8
	cmp	AH,#H'0001
	bne	?L129
	add	AL,#H'0001
	st	AL,@H'fff8
?L129:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_AH
	smult	#H'0007
	ld	X,@$_theSink+H'000A
	add	X,@$XAP_AL
	ld	AL,@(0,X)
	add	AL,#-H'0001
	ld	AH,@(H'0001,Y)
	cmp	AH,@$XAP_AL
	blt	?L128
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4744
	bsr	$_MessageSend
?L128:
?LBE16:
?LBE_VolumeIncrementGroupVolumeAndCheckLimit:
	leavel	#4
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_VolumeDecrementGroupVolumeAndCheckLimit:
	enterl	#3
?LBB_VolumeDecrementGroupVolumeAndCheckLimit:
?LBB17:
	ld	X,@$XAP_AL
	cmp	AH,#H'0001
	bne	?L134
	add	X,#H'0001
?L134:
	ld	AL,@(0,X)
	add	AL,#-H'0001
	st	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L137
	bpl	?L133
?L137:
	ld	AL,#H'0000
	st	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4745
	bsr	$_MessageSend
?L133:
?LBE17:
?LBE_VolumeDecrementGroupVolumeAndCheckLimit:
	leavel	#3
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
_VolumeUnmuteOnVolumeChange:
	enterl	#4
?LBB_VolumeUnmuteOnVolumeChange:
	st	AL,@(H'0001,Y)
	ld	AH,@$_theSink+H'0017
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L138
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	beq	?L141
	cmp	AL,#H'0000
	bne	?L140
?L141:
	ld	AL,#H'0000
	bsr	_volumeGetMuteState
	cmp	AL,#H'0001
	bne	?L140
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'40E3
	bsr	$_MessageSend
?L140:
	ld	AL,@(H'0001,Y)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L138
	ld	AL,#H'0001
	bsr	_volumeGetMuteState
	cmp	AL,#H'0001
	bne	?L138
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'40E1
	bsr	$_MessageSend
?L138:
?LBE_VolumeUnmuteOnVolumeChange:
	leavel	#4
$_VolumeCheckA2dpMute:
	enterl	#3
?LBB_VolumeCheckA2dpMute:
?LBB18:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L154:
	ld	AL,@$_theSink+H'0030
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L149
	tst	@$_theSink+H'0024
	beq	?L149
	ld	AL,@(H'0017,X)
	ld	AH,@(H'0019,X)
	bsr	$_A2dpMediaGetSink
	ld	AH,@$_theSink+H'0024
	cmp	AH,@$XAP_AL
	bne	?L149
	ld	X,@(0,Y)
?LBB19:
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000D
	tst	@(0,X)
	bne	?L149
	ld	AL,#H'0001
	bra	(?L146)
?L149:
	ld	AL,@(0,Y)
?LBE19:
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0001
	bcz	?L154
	ld	AL,#H'0000
?L146:
?LBE18:
?LBE_VolumeCheckA2dpMute:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_VolumeSetHeadsetVolume:
	enterl	#9
?LBB_VolumeSetHeadsetVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB20:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AH,@$_theSink+H'0017
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AH,@$_theSink+H'0017
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	bsr	_volumeSyncAffectsGain
	st	AL,@(H'0006,Y)
	tst	@(H'0009,Y)
	beq	?L162
	ld	AL,@(H'0009,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L163)
?L162:
	ld	X,#H'002A
?L163:
	ld	AL,@($_theSink,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L161
	tst	@(H'0004,Y)
	bne	?L161
	tst	@(H'0005,Y)
	beq	?L160
?L161:
	tst	@(H'0009,Y)
	beq	?L165
	ld	AL,@(H'0009,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L166)
?L165:
	ld	X,#H'002A
?L166:
	ld	AL,@($_theSink,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L164
	tst	@(H'0004,Y)
	beq	?L164
	ld	AL,@(H'0009,Y)
	ld	AH,#H'000A
	bsr	$_VolumeSetHfpMicrophoneGainCheckMute
?L164:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	tst	@(H'0009,Y)
	beq	?L167
	ld	AL,@(H'0009,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L168)
?L167:
	ld	X,#H'002A
?L168:
	ld	AL,@(H'0001,Y)
	and	AL,#H'007F
	asl	#H'0001
	ld	AH,@($_theSink,X)
	and	AH,#-H'00FF
	or	AH,@$XAP_AL
	st	AH,@($_theSink,X)
	tst	@(H'0006,Y)
	beq	?L160
	ld	AL,#H'0000
	bsr	$_TonesGetToneVolume
	ld	AH,@$XAP_AL
	ld	X,@(H'0001,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000A
	ld	AL,@(H'0014,X)
	and	AL,#H'00FF
	ld	X,@$_theSink+H'0023
	st	X,@(0,Y)
	bsr	$_AudioSetVolume
?L160:
	tst	@(H'0002,Y)
	beq	?L170
	tst	@(H'0003,Y)
	beq	?L170
	ld	X,@(H'0001,Y)
	add	X,@$XAP_UXL
	add	X,@$_theSink+H'000A
	ld	AL,@(H'0013,X)
	ld	X,@$XAP_AL
	and	X,#H'00FF
	cmp	X,#H'0000
	beq	?L170
	ld	AH,@$_theSink+H'0019
	lsr	#H'0003
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	and	AH,#H'0001
	bsr	$_TonesPlayTone
?L170:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'000E
	bcz	?L171
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4744
	bra	(?L174)
?L171:
	tst	@(H'0001,Y)
	bne	?L159
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,#($_theSink)
	ld	AH,#H'4745
?L174:
	bsr	$_MessageSend
?L159:
?LBE20:
?LBE_VolumeSetHeadsetVolume:
	leavel	#9
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_storeCurrentSinkVolume:
	enterl	#11
?LBB_storeCurrentSinkVolume:
?LBB21:
	bsr	$_sinkAudioRouteAvailable
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L176
	ld	AL,@$_theSink+H'0024
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_SinkGetBdAddr
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0008
	beq	?L182
	cmp	AL,#(H'0001+H'0008)
	bcc	?L176
	cmp	AL,#H'0001
	beq	?L179
	cmp	AL,#H'0001
	bcs	?L176
	cmp	AL,#H'0002
	beq	?L180
	cmp	AL,#H'0004
	beq	?L181
	bra	(?L176)
?L179:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bra	(?L194)
?L180:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
?L194:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0002
	bra	(?L193)
?L181:
	ld	AL,#H'0001
	bra	(?L192)
?L182:
	ld	AL,#H'0002
?L192:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0001
?L193:
	bsr	$_deviceManagerUpdateAttributes
?L176:
?LBE21:
?LBE_storeCurrentSinkVolume:
	leavel	#11
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_VolumeSendAndSetHeadsetVolume:
	enterl	#5
?LBB_VolumeSendAndSetHeadsetVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	tst	@(H'0005,Y)
	beq	?L200
	bsr	$_stateManagerIsConnected
	cmp	AL,#H'0000
	beq	?L204
	ld	AL,@(H'0005,Y)
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@($_theSink+H'0025,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L203
?L204:
	ld	AL,@$_theSink+H'0017
	and	AL,#H'0018
	cmp	AL,#H'0000
	beq	?L202
?L203:
	ld	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpVolumeSyncSpeakerGainRequest
?L202:
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_VolumeSetHeadsetVolume
?L200:
?LBE_VolumeSendAndSetHeadsetVolume:
	leavel	#5
_VolumeIfHFPConnectedModifyAndUpdateVolume:
	enterl	#5
?LBB_VolumeIfHFPConnectedModifyAndUpdateVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB22:
	bsr	$_deviceManagerNumConnectedDevs
	cmp	AL,#H'0000
	beq	?L208
	tst	@(H'0002,Y)
	bne	?L209
?LBB23:
	ld	AL,#H'0001
	bsr	$_audioGetLinkPriority
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L210
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,#H'0025
	bra	(?L211)
?L210:
	ld	X,#H'002A
?L211:
	ld	AH,@($_theSink,X)
	lsr	#H'0001
	and	AH,#H'007F
	ld	X,@$XAP_AH
	add	X,@$XAP_AH
	add	X,@$_theSink+H'000A
	add	X,#H'0013
	tst	@(H'0001,Y)
	bne	?L212
	ld	AH,@(0,X)
	lsr	#H'000C
	bra	(?L213)
?L212:
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'000F
?L213:
	cmp	AH,#H'000E
	bcz	?L214
	ld	AH,#H'000F
?L214:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_VolumeSendAndSetHeadsetVolume
?L209:
?LBE23:
	ld	AL,#H'0001
	bra	(?L207)
?L208:
	ld	AL,#H'0000
?L207:
?LBE22:
?LBE_VolumeIfHFPConnectedModifyAndUpdateVolume:
	leavel	#5
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
_VolumeIfHFPAudioRoutedModifyAndUpdateVolume:
	enterl	#4
?LBB_VolumeIfHFPAudioRoutedModifyAndUpdateVolume:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$_theSink+H'0024
	bsr	$_HfpLinkPriorityFromAudioSink
	cmp	AL,#H'0000
	beq	?L217
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfHFPConnectedModifyAndUpdateVolume
	bra	(?L216)
?L217:
	ld	AL,#H'0000
?L216:
?LBE_VolumeIfHFPAudioRoutedModifyAndUpdateVolume:
	leavel	#4
_VolumeModifyAndUpdateVolume:
	enterl	#6
?LBB_VolumeModifyAndUpdateVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB24:
	ld	AL,@(H'0006,Y)
	bsr	_VolumeGetGroupVolumeFromInputVolumes
	st	AL,@(H'0003,Y)
	tst	@(H'0001,Y)
	bne	?L219
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0002,Y)
	bsr	_VolumeIncrementGroupVolumeAndCheckLimit
	bra	(?L220)
?L219:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bne	?L220
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0002,Y)
	bsr	_VolumeDecrementGroupVolumeAndCheckLimit
?L220:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	bsr	_VolumeSetNewVolume
	ld	AL,@(H'0002,Y)
	bsr	_VolumeUnmuteOnVolumeChange
?LBE24:
?LBE_VolumeModifyAndUpdateVolume:
	leavel	#6
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
_volumeModifyAndUpdateAvrcpAbsoluteVolume:
	enterl	#5
?LBB_volumeModifyAndUpdateAvrcpAbsoluteVolume:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB25:
	bsr	$_avrcpAvrcpIsEnabled
	cmp	AL,#H'0000
	beq	?L223
	tst	@(H'0006,Y)
	bne	?L223
?LBB26:
	ld	X,@$_theSink+H'000A
	ld	X,@(0,X)
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0001
	ld	AH,@(H'0005,Y)
	cmp	AH,@$XAP_AL
	ble	?L225
	sub	AH,@(H'0002,Y)
	bra	(?L226)
?L225:
	ld	AH,@(H'0002,Y)
	sub	AH,@(H'0005,Y)
?L226:
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_sinkAvrcpVolumeStepChange
?L223:
?LBE26:
?LBE25:
?LBE_volumeModifyAndUpdateAvrcpAbsoluteVolume:
	leavel	#5
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
_volumeIfPeerAudioRoutedModifyAndUpdateVolume:
; leaf function with empty stack frame
?LBB_volumeIfPeerAudioRoutedModifyAndUpdateVolume:
	ld	AL,#H'0000
?LBE_volumeIfPeerAudioRoutedModifyAndUpdateVolume:
	rts
_VolumeIfA2dpAudioRoutedModifyAndUpdateVolume:
	enterl	#9
?LBB_VolumeIfA2dpAudioRoutedModifyAndUpdateVolume:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB27:
	bsr	$_a2dpA2dpAudioIsRouted
	cmp	AL,#H'0000
	beq	?L230
?LBB28:
	bsr	$_a2dpGetRoutedInstanceIndex
	st	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_volumeIfPeerAudioRoutedModifyAndUpdateVolume
	cmp	AL,#H'0000
	beq	?L231
	ld	AL,@(H'0003,Y)
	bsr	_VolumeUnmuteOnVolumeChange
	bra	(?L232)
?L231:
	ld	AL,@(H'0004,Y)
?LBB29:
	add	AL,@$XAP_AL
	st	AL,@(H'0005,Y)
	add	AL,@$_theSink+H'000D
	st	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	_VolumeGetGroupVolumeFromInputVolumes
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_VolumeModifyAndUpdateVolume
	ld	AL,@(H'0005,Y)
	add	AL,@$_theSink+H'000D
	ld	AH,@(H'0003,Y)
	bsr	_VolumeGetGroupVolumeFromInputVolumes
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	_volumeModifyAndUpdateAvrcpAbsoluteVolume
?L232:
?LBE29:
	ld	AL,#H'0001
	bra	(?L229)
?L230:
?LBE28:
	ld	AL,#H'0000
?L229:
?LBE27:
?LBE_VolumeIfA2dpAudioRoutedModifyAndUpdateVolume:
	leavel	#9
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
_VolumeIfWiredAudioRoutedModifyAndUpdateVolume:
	enterl	#3
?LBB_VolumeIfWiredAudioRoutedModifyAndUpdateVolume:
	ld	AL,#H'0000
?LBE_VolumeIfWiredAudioRoutedModifyAndUpdateVolume:
	leavel	#3
_VolumeIfFmIsOnModifyAndUpdateVolume:
	enterl	#3
?LBB_VolumeIfFmIsOnModifyAndUpdateVolume:
	ld	AL,#H'0000
?LBE_VolumeIfFmIsOnModifyAndUpdateVolume:
	leavel	#3
_VolumeModifyAndUpdateUsbVolume:
	enterl	#3
?LBB_VolumeModifyAndUpdateUsbVolume:
	ld	X,@$XAP_AL
	cmp	AH,#H'0001
	bne	?L238
	ld	AL,@$_theSink+H'000D
	add	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	_VolumeModifyAndUpdateVolume
?L238:
?LBE_VolumeModifyAndUpdateUsbVolume:
	leavel	#3
_VolumeIfCurrentSinkIsUSBModifyAndUpdateVolume:
; leaf function with empty stack frame
?LBB_VolumeIfCurrentSinkIsUSBModifyAndUpdateVolume:
	ld	AL,#H'0000
?LBE_VolumeIfCurrentSinkIsUSBModifyAndUpdateVolume:
	rts
_VolumeIfUSBSinkExistsModifyAndUpdateVolume:
; leaf function with empty stack frame
?LBB_VolumeIfUSBSinkExistsModifyAndUpdateVolume:
	ld	AL,#H'0000
?LBE_VolumeIfUSBSinkExistsModifyAndUpdateVolume:
	rts
_VolumeModifyAndUpdateRoutedAudioVolume:
	enterl	#4
?LBB_VolumeModifyAndUpdateRoutedAudioVolume:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_VolumeIfA2dpAudioRoutedModifyAndUpdateVolume
	cmp	AL,#H'0000
	bne	?L248
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfHFPAudioRoutedModifyAndUpdateVolume
	cmp	AL,#H'0000
	bne	?L248
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfCurrentSinkIsUSBModifyAndUpdateVolume
	cmp	AL,#H'0000
	bne	?L248
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfWiredAudioRoutedModifyAndUpdateVolume
	cmp	AL,#H'0000
	bne	?L248
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfFmIsOnModifyAndUpdateVolume
	cmp	AL,#H'0000
	bne	?L248
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfUSBSinkExistsModifyAndUpdateVolume
	cmp	AL,#H'0000
	bne	?L248
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_VolumeIfHFPConnectedModifyAndUpdateVolume
?L248:
?LBE_VolumeModifyAndUpdateRoutedAudioVolume:
	leavel	#4
$_VolumeHandleSpeakerGainInd:
	enterl	#3
?LBB_VolumeHandleSpeakerGainInd:
	ld	X,@$XAP_AL
	ld	AH,@$_theSink+H'0019
	lsr	#H'0006
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,X)
	and	AH,#H'0001
	bsr	$_VolumeSetHeadsetVolume
?LBE_VolumeHandleSpeakerGainInd:
	leavel	#3
$_VolumeModifyAndUpdateRoutedAudioMainVolume:
	enterl	#2
?LBB_VolumeModifyAndUpdateRoutedAudioMainVolume:
	ld	AH,#H'0000
	bsr	_VolumeModifyAndUpdateRoutedAudioVolume
?LBE_VolumeModifyAndUpdateRoutedAudioMainVolume:
	leavel	#2
$_VolumeModifyAndUpdateRoutedAudioAuxVolume:
	enterl	#2
?LBB_VolumeModifyAndUpdateRoutedAudioAuxVolume:
	ld	AH,#H'0001
	bsr	_VolumeModifyAndUpdateRoutedAudioVolume
?LBE_VolumeModifyAndUpdateRoutedAudioAuxVolume:
	leavel	#2
$_VolumeModifyAndUpdateRoutedA2DPAudioMainVolume:
	enterl	#2
?LBB_VolumeModifyAndUpdateRoutedA2DPAudioMainVolume:
	ld	AH,#H'0000
	bsr	_VolumeIfA2dpAudioRoutedModifyAndUpdateVolume
?LBE_VolumeModifyAndUpdateRoutedA2DPAudioMainVolume:
	leavel	#2
$_VolumeUpdateRoutedAudioMainAndAuxVolume:
	enterl	#2
?LBB_VolumeUpdateRoutedAudioMainAndAuxVolume:
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	_VolumeModifyAndUpdateRoutedAudioVolume
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	_VolumeModifyAndUpdateRoutedAudioVolume
?LBE_VolumeUpdateRoutedAudioMainAndAuxVolume:
	leavel	#2
$_VolumeSetNewMainVolume:
	enterl	#3
?LBB_VolumeSetNewMainVolume:
	ld	X,#H'0000
	st	X,@(0,Y)
	bsr	_VolumeSetNewVolume
?LBE_VolumeSetNewMainVolume:
	leavel	#3
$_VolumeSetAndUpdateMainAndAuxVolume:
	enterl	#5
?LBB_VolumeSetAndUpdateMainAndAuxVolume:
	st	AL,@(H'0001,Y)
	ld	AL,#H'003C
?LBB30:
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@$_theSink+H'000A
	bsr	$_VolumeConvertStepsToDB
	st	AL,@(H'0002,Y)
	ld	AH,@$_theSink+H'000A
	add	AH,#H'0007
	ld	AL,#H'003C
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	bsr	$_VolumeConvertStepsToDB
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	bsr	_VolumeSetMainAndAuxVolumeIndB
?LBE30:
?LBE_VolumeSetAndUpdateMainAndAuxVolume:
	leavel	#5
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_VolumeSetInitialMuteState:
	enterl	#2
?LBB_VolumeSetInitialMuteState:
	ld	AL,@$_theSink+H'003A
	and	AL,#H'1FFF
	st	AL,@$_theSink+H'003A
	ld	X,@$_theSink+H'000A
	ld	AL,@(H'0035,X)
	and	AL,#H'00FF
	cmp	AL,#H'00FF
	beq	?L263
	bsr	$_PioGetPio
	cmp	AL,#H'0000
	beq	?L264
	ld	AH,@$_theSink+H'003A
	lsr	#H'000D
	ld	AL,@$XAP_AH
	or	AL,#H'0001
	bra	(?L266)
?L264:
	ld	AH,@$_theSink+H'003A
	lsr	#H'000D
	ld	AL,@$XAP_AH
	or	AL,#H'0002
?L266:
	asl	#H'000D
	ld	AH,@$_theSink+H'003A
	and	AH,#H'1FFF
	or	AH,@$XAP_AL
	st	AH,@$_theSink+H'003A
?L263:
	ld	AL,@$_theSink+H'0036
	and	AL,#-H'0002
	st	AL,@$_theSink+H'0036
?LBE_VolumeSetInitialMuteState:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 180 used[1] = 67 used[3] = 1 total = 248
;# Function pattern *movqi3 used[0] = 239 total = 239
;# Function pattern *movqi8 used[0] = 6 total = 6
;# Function pattern *movhi used[3] = 1 total = 1
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 35 used[2] = 3 total = 38
;# Function pattern *andqi3 used[0] = 40 total = 40
;# Function pattern *iorqi3 used[0] = 16 total = 16
;# Function pattern *xorqi3 used[0] = 2 total = 2
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 16 total = 16
;# Function pattern *lshrqi3 used[0] = 18 total = 18
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 9 total = 9
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 42 total = 42
;# Function pattern *call1 used[0] = 56 total = 56
;# Function pattern *call_value1 used[0] = 64 total = 64
;# Function pattern movstrqi+3 used[0] = 51 used[1] = 40 total = 91
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 32 total = 32
	MODULE	sink_wired
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/ADK4.0.0/tools/include/firmware
;# -IC:/ADK4.0.0/tools/include/standard
;# -IC:/ADK4.0.0/tools/include/profiles/BlueLab-7.0.1-Release -I./ -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEVICE_ID_PSKEY -DGATT_ENABLED -DGATT_ANCS_CLIENT
;# -DGATT_BATTERY_SERVER -DENABLE_AVRCP -MD -MQ -massisted-crt0
;# -mlarge-mode -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first
;# -mleaf-optim -mno-function-sizeof -mworkaround-b96516 -ansi
;# -auxbase-strip -g -O -pedantic -Wall -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	ENDMOD

	MODULE	avrcp_absolute_volume
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpSetAbsoluteVolumeRequest:
	enterl	#9
?LBB_AvrcpSetAbsoluteVolumeRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0005,Y)
?LBB2:
	cmp	AH,#H'007F
	bcz	?L2
	ld	AL,#H'007F
	st	AL,@(H'0005,Y)
?L2:
	ld	AL,#H'0050
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0050
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_avrcpSendAbsoluteVolumeCfm
?L1:
?LBE2:
?LBE_AvrcpSetAbsoluteVolumeRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpSendAbsoluteVolumeCfm:
	enterl	#5
?LBB_avrcpSendAbsoluteVolumeCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	AH,@(H'0002,Y)
	and	AH,#H'0080
	cmp	AH,#H'0000
	bne	?L6
	tst	@(H'0005,Y)
	beq	?L6
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
?L6:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E35
	bsr	$_MessageSend
?LBE3:
?LBE_avrcpSendAbsoluteVolumeCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_AvrcpSetAbsoluteVolumeResponse:
	enterl	#5
?LBB_AvrcpSetAbsoluteVolumeResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'5000
	bne	?L7
?LBB5:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'007F
	bcz	?L9
	ld	AL,#H'007F
?L9:
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'002E
	bsr	$_MessageSend
?L7:
?LBE5:
?LBE4:
?LBE_AvrcpSetAbsoluteVolumeResponse:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_AvrcpEventVolumeChangedResponse:
	enterl	#5
?LBB_AvrcpEventVolumeChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'000C,X)
	and	AL,#H'2000
	cmp	AL,#H'0000
	beq	?L13
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'007F
	bcz	?L15
	ld	AL,#H'007F
?L15:
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'002F
	bsr	$_MessageSend
?L13:
?LBE7:
?LBE6:
?LBE_AvrcpEventVolumeChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_avrcpHandleSetAbsoluteVolumeCommand:
	enterl	#5
?LBB_avrcpHandleSetAbsoluteVolumeCommand:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB8:
	and	AL,#H'007F
	st	AL,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E34
	bsr	$_MessageSend
?LBE9:
?LBE8:
?LBE_avrcpHandleSetAbsoluteVolumeCommand:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_avrcpHandleInternalAbsoluteVolumeRsp:
	enterl	#12
?LBB_avrcpHandleInternalAbsoluteVolumeRsp:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	ld	X,@$XAP_AH
?LBB10:
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,#H'0000
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'000A
	beq	?L20
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0007,Y)
?L20:
	ld	AL,#H'0050
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_avrcpSendMetadataResponse
?LBE10:
?LBE_avrcpHandleInternalAbsoluteVolumeRsp:
	leavel	#12
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
	ENDMOD

;# Function pattern *movqi2 used[0] = 50 used[1] = 9 used[3] = 1 total = 60
;# Function pattern *movqi3 used[0] = 40 total = 40
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 1 total = 4
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	avrcp_browsing
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpBrowseSetPlayerRequest:
	enterl	#6
?LBB_AvrcpBrowseSetPlayerRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0002,Y)
?LBB2:
	ld	X,@(H'0003,X)
	st	X,@(H'0003,Y)
	cmp	X,#H'0000
	beq	?L2
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L2
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000E
	bsr	$_MessageSendConditionally
?LBE3:
	bra	(?L1)
?L2:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000C
	bsr	$_avrcpBrowseSetPlayerCfm
?L1:
?LBE2:
?LBE_AvrcpBrowseSetPlayerRequest:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_AvrcpBrowseChangePathRequest:
	enterl	#10
?LBB_AvrcpBrowseChangePathRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0006,Y)
?LBB4:
	ld	X,@(H'0003,X)
	st	X,@(H'0007,Y)
	cmp	X,#H'0000
	beq	?L6
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L6
?LBB5:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0005,X)
	st	X,@(0,Y)
	ld	AL,@(H'0007,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'000F
	bsr	$_MessageSendConditionally
?LBE5:
	bra	(?L5)
?L6:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'000C
	bsr	$_avrcpChangePathCfm
?L5:
?LBE4:
?LBE_AvrcpBrowseChangePathRequest:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_AvrcpBrowseGetItemAttributesRequest:
	enterl	#11
?LBB_AvrcpBrowseGetItemAttributesRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0006,Y)
?LBB6:
	ld	X,@(H'0003,X)
	st	X,@(H'0007,Y)
	ld	AL,@(H'0010,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0008,Y)
	tst	@(H'0010,Y)
	beq	?L11
	ld	AL,@(H'0010,Y)
	cmp	AL,#H'00FF
	bne	?L10
?L11:
	tst	@(H'0011,Y)
	beq	?L12
?LBB7:
	ld	AL,@(H'0011,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0011,Y)
	bsr	$_SourceDrop
?L12:
?LBE7:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	st	AL,@(H'0011,Y)
	bra	(?L14)
?L10:
	ld	AL,@(H'0011,Y)
	bsr	$_SourceBoundary
	cmp	AL,@(H'0008,Y)
	bcc	?L14
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0082
	bsr	$_avrcpGetItemAttributesCfm
	tst	@(H'0011,Y)
	beq	?L9
	bra	(?L22)
?L14:
	tst	@(H'0007,Y)
	beq	?L18
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L18
?LBB8:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0007,X)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0008,X)
	st	X,@(0,Y)
	ld	AL,@(H'0007,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0010
	bsr	$_MessageSendConditionally
?LBE8:
	bra	(?L9)
?L18:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'000C
	bsr	$_avrcpGetItemAttributesCfm
	tst	@(H'0011,Y)
	beq	?L9
?L22:
?LBB9:
	ld	AL,@(H'0011,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0011,Y)
	bsr	$_SourceDrop
?L9:
?LBE9:
?LBE6:
?LBE_AvrcpBrowseGetItemAttributesRequest:
	leavel	#11
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE6
$_AvrcpBrowseGetFolderItemsRequest:
	enterl	#7
?LBB_AvrcpBrowseGetFolderItemsRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0002,Y)
?LBB10:
	ld	X,@(H'0003,X)
	st	X,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0004,Y)
	tst	@(H'000B,Y)
	beq	?L28
	ld	AH,@(H'000B,Y)
	cmp	AH,#H'00FF
	bne	?L27
?L28:
	tst	@(H'000C,Y)
	beq	?L29
?LBB11:
	ld	AL,@(H'000C,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000C,Y)
	bsr	$_SourceDrop
?L29:
?LBE11:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'000C,Y)
	bra	(?L31)
?L27:
	ld	AL,@(H'000C,Y)
	bsr	$_SourceBoundary
	cmp	AL,@(H'0004,Y)
	bcc	?L31
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0082
	bsr	$_avrcpGetFolderItemsCfm
	tst	@(H'000C,Y)
	beq	?L26
	bra	(?L42)
?L31:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	cmp	AH,@(H'0009,Y)
	bcs	?L35
	bne	?L45
	cmp	AL,@(H'000A,Y)
	bcz	?L35
?L45:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'008B
	bsr	$_avrcpGetFolderItemsCfm
	tst	@(H'000C,Y)
	beq	?L26
	bra	(?L42)
?L35:
	tst	@(H'0003,Y)
	beq	?L38
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L38
?LBB12:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,Y)
	st	AH,@(0,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(H'0006,X)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0007,X)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0011
	bsr	$_MessageSendConditionally
?LBE12:
	bra	(?L26)
?L38:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000C
	bsr	$_avrcpGetFolderItemsCfm
	tst	@(H'000C,Y)
	beq	?L26
?L42:
?LBB13:
	ld	AL,@(H'000C,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000C,Y)
	bsr	$_SourceDrop
?L26:
?LBE13:
?LBE10:
?LBE_AvrcpBrowseGetFolderItemsRequest:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE10
$_AvrcpBrowseGetNumberOfItemsRequest:
	enterl	#6
?LBB_AvrcpBrowseGetNumberOfItemsRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0002,Y)
?LBB14:
	ld	X,@(H'0003,X)
	st	X,@(H'0003,Y)
	cmp	AH,#H'0003
	bcz	?L48
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'008A
	bra	(?L51)
?L48:
	tst	@(H'0003,Y)
	beq	?L49
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L49
?LBB15:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0012
	bsr	$_MessageSendConditionally
?LBE15:
	bra	(?L47)
?L49:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000C
?L51:
	bsr	$_avrcpGetNumberOfItemsCfm
?L47:
?LBE14:
?LBE_AvrcpBrowseGetNumberOfItemsRequest:
	leavel	#6
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
$_AvrcpBrowseSearchRequest:
	enterl	#6
?LBB_AvrcpBrowseSearchRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0002,Y)
?LBB16:
	ld	X,@(H'0003,X)
	st	X,@(H'0003,Y)
	tst	@(H'0007,Y)
	beq	?L56
	tst	@(H'0006,Y)
	bne	?L55
?L56:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0081
	bra	(?L65)
?L55:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceBoundary
	cmp	AL,@(H'0006,Y)
	bcc	?L57
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0082
	bra	(?L64)
?L57:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'006A
	beq	?L59
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0081
?L64:
	bsr	$_avrcpSearchCfm
?LBB17:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_SourceDrop
?LBE17:
	bra	(?L54)
?L59:
	tst	@(H'0003,Y)
	beq	?L61
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L61
?LBB18:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0013
	bsr	$_MessageSendConditionally
?LBE18:
	bra	(?L54)
?L61:
?LBB19:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_SourceDrop
?LBE19:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000C
?L65:
	bsr	$_avrcpSearchCfm
?L54:
?LBE16:
?LBE_AvrcpBrowseSearchRequest:
	leavel	#6
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE16
$_AvrcpBrowseSetPlayerResponse:
	enterl	#6
?LBB_AvrcpBrowseSetPlayerResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB20:
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L70
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L70
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0070
	bne	?L70
?LBB21:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0017
	cmp	AH,#H'0017
	bne	?L71
	ld	AL,@(H'0006,Y)
	bra	(?L76)
?L71:
	ld	AL,#H'0000
?L76:
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0007,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0032
	bsr	$_MessageSend
?LBE21:
	bra	(?L69)
?L70:
	tst	@(H'000C,Y)
	beq	?L69
?LBB22:
	ld	AL,@(H'000C,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000C,Y)
	bsr	$_SourceDrop
?L69:
?LBE22:
?LBE20:
?LBE_AvrcpBrowseSetPlayerResponse:
	leavel	#6
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
$_AvrcpBrowseChangePathResponse:
	enterl	#5
?LBB_AvrcpBrowseChangePathResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB23:
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L80
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L80
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0072
	bne	?L80
?LBB24:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0033
	bsr	$_MessageSend
?L80:
?LBE24:
?LBE23:
?LBE_AvrcpBrowseChangePathResponse:
	leavel	#5
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
$_AvrcpBrowseGetItemAttributesResponse:
	enterl	#5
?LBB_AvrcpBrowseGetItemAttributesResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB25:
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_SourceBoundary
	cmp	AL,@(H'0006,Y)
	bcs	?L87
	tst	@(H'0005,Y)
	bne	?L88
	tst	@(H'0006,Y)
	bne	?L87
?L88:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	add	AL,#-H'0010
	ld	AH,@(H'0006,Y)
	cmp	AH,@$XAP_AL
	bcz	?L86
?L87:
	tst	@(H'0007,Y)
	beq	?L85
	bra	(?L95)
?L86:
	tst	@(H'0002,Y)
	beq	?L91
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L91
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0073
	bne	?L91
?LBB26:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0034
	bsr	$_MessageSend
?LBE26:
	bra	(?L85)
?L91:
	tst	@(H'0007,Y)
	beq	?L85
?L95:
?LBB27:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_SourceDrop
?L85:
?LBE27:
?LBE25:
?LBE_AvrcpBrowseGetItemAttributesResponse:
	leavel	#5
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
$_AvrcpBrowseGetFolderItemsResponse:
	enterl	#6
?LBB_AvrcpBrowseGetFolderItemsResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB28:
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	bsr	$_SourceBoundary
	cmp	AL,@(H'0008,Y)
	bcs	?L102
	tst	@(H'0007,Y)
	bne	?L103
	tst	@(H'0008,Y)
	bne	?L102
?L103:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	add	AL,#-H'0010
	ld	AH,@(H'0008,Y)
	cmp	AH,@$XAP_AL
	bcz	?L101
?L102:
	tst	@(H'0009,Y)
	beq	?L100
	bra	(?L112)
?L101:
	tst	@(H'0002,Y)
	beq	?L106
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L106
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0071
	bne	?L106
?LBB29:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0003,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0017
	cmp	AH,#H'0017
	bne	?L107
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0001,X)
	bra	(?L108)
?L107:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
?L108:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0035
	bsr	$_MessageSend
?LBE29:
	bra	(?L100)
?L106:
	tst	@(H'0009,Y)
	beq	?L100
?L112:
?LBB30:
	ld	AL,@(H'0009,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0009,Y)
	bsr	$_SourceDrop
?L100:
?LBE30:
?LBE28:
?LBE_AvrcpBrowseGetFolderItemsResponse:
	leavel	#6
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
$_AvrcpBrowseGetNumberOfItemsResponse:
	enterl	#6
?LBB_AvrcpBrowseGetNumberOfItemsResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB31:
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L118
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L118
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0075
	bne	?L118
?LBB32:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0017
	cmp	AH,#H'0017
	bne	?L120
	ld	AL,@(H'0006,Y)
	bra	(?L123)
?L120:
	ld	AL,#H'0000
?L123:
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0036
	bsr	$_MessageSend
?L118:
?LBE32:
?LBE31:
?LBE_AvrcpBrowseGetNumberOfItemsResponse:
	leavel	#6
;.stabn	192,0,0,?LBB31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE31
$_AvrcpBrowseSearchResponse:
	enterl	#6
?LBB_AvrcpBrowseSearchResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB33:
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L127
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L127
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0080
	bne	?L127
?LBB34:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0017
	cmp	AH,#H'0017
	bne	?L130
	ld	AL,@(H'0006,Y)
	bra	(?L134)
?L130:
	ld	AL,#H'0000
?L134:
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0037
	bsr	$_MessageSend
?L127:
?LBE34:
?LBE33:
?LBE_AvrcpBrowseSearchResponse:
	leavel	#6
;.stabn	192,0,0,?LBB33
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	224,0,0,?LBE33
	ENDMOD

;# Function pattern *movqi2 used[0] = 166 used[1] = 55 total = 221
;# Function pattern *movqi3 used[0] = 171 total = 171
;# Function pattern *movhi used[2] = 7 used[3] = 6 total = 13
;# Function pattern *addqi2 used[0] = 8 total = 8
;# Function pattern *andqi3 used[0] = 16 total = 16
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 24 total = 24
;# Function pattern *call1 used[0] = 21 total = 21
;# Function pattern *call_value1 used[0] = 40 total = 40
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 26 total = 32
;# Function pattern movstrqi+5 used[0] = 33 total = 33
;# Function pattern movstrqi+7 used[1] = 1 total = 1
	MODULE	avrcp_caps
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpGetCapsRequest:
	enterl	#9
?LBB_AvrcpGetCapsRequest:
	st	AL,@(H'0006,Y)
?LBB2:
	st	AH,@(H'0005,Y)
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0010
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_avrcpSendGetCapsCfm
?L1:
?LBE2:
?LBE_AvrcpGetCapsRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_AvrcpGetCapsResponse:
	enterl	#5
?LBB_AvrcpGetCapsResponse:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
?LBB3:
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'1000
	bne	?L4
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@H'fff8
	bsr	$_avrcpSendGetCapsResponse
	bra	(?L3)
?L4:
?LBB4:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_SourceDrop
?L3:
?LBE4:
?LBE3:
?LBE_AvrcpGetCapsResponse:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 20 used[1] = 5 total = 25
;# Function pattern *movqi3 used[0] = 9 total = 9
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	avrcp_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_avrcpUpdateTransactionLabel:
	enterl	#2
?LBB_avrcpUpdateTransactionLabel:
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	X,@(H'000C,X)
	st	X,@H'fff8
	ld	X,@$XAP_AL
	ld	AH,@(H'001F,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	cmp	AL,#H'000F
	beq	?L2
	and	AH,#H'000F
	ld	AL,#H'0001
	add	AL,@$XAP_AH
	st	AL,@H'fff9
	bra	(?L3)
?L2:
	ld	X,#H'0001
	st	X,@H'fff9
?L3:
	ld	AL,#H'0000
	st	AL,@H'fffa
	tst	@H'fff8
	beq	?L5
?L12:
	ld	AL,@H'fff8
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L6
	ld	X,@H'fffa
	add	X,@(-1,Y)
	ld	AL,@(H'000D,X)
	cmp	AL,@H'fff9
	bne	?L6
	ld	X,@H'fff9
	cmp	X,#H'000F
	beq	?L10
	ld	AH,#H'0001
	add	AH,@H'fff9
	bra	(?L11)
?L10:
	ld	AH,#H'0001
?L11:
	st	AH,@H'fff9
?L6:
	ld	AL,#H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	ld	AH,@H'fff8
	lsr	#H'0001
	st	AH,@H'fff8
	ld	X,@H'fffa
	cmp	X,#(H'0001+H'000C)
	bcc	?L5
	cmp	AH,#H'0000
	bne	?L12
?L5:
	ld	AL,@H'fff9
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@(-1,Y)
	ld	AH,@(H'001F,X)
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	st	AH,@(H'001F,X)
?LBE2:
?LBE_avrcpUpdateTransactionLabel:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpGetNextTransactionLabel:
	enterl	#3
?LBB_avrcpGetNextTransactionLabel:
	ld	X,@$XAP_AL
?LBB3:
	ld	AH,@(H'001F,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	_avrcpUpdateTransactionLabel
?LBE3:
	ld	AL,@(0,Y)
?LBE_avrcpGetNextTransactionLabel:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_convertResponseToStatus:
	enterl	#2
?LBB_convertResponseToStatus:
	cmp	AL,#(H'0001+H'000F)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE29,X)
	brxl
	.SEG	CONST
?JTBASE29:
	.CODE
?L29:
	.SEG	CONST
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L25-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L25-?L29)
	dc	lwrd(?L23-?L29)
	dc	lwrd(?L27-?L29)
	dc	lwrd(?L23-?L29)
	dc	lwrd(?L23-?L29)
	dc	lwrd(?L23-?L29)
	dc	lwrd(?L28-?L29)
	dc	lwrd(?L26-?L29)
	.CODE
?L23:
	ld	AL,#H'0000
	bra	(?L18)
?L25:
	ld	AL,#H'0007
	bra	(?L18)
?L26:
	ld	AL,#H'000F
	bra	(?L18)
?L27:
	ld	AL,#H'000A
	bra	(?L18)
?L28:
	ld	AL,#H'0001
?L18:
?LBE_convertResponseToStatus:
	leavel	#2
$_avrcpSendCommonStatusCfm:
	enterl	#5
?LBB_avrcpSendCommonStatusCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0005,Y)
	bsr	$_MessageSend
?LBE4:
?LBE_avrcpSendCommonStatusCfm:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpSendCommonFragmentedMetadataCfm:
	enterl	#7
?LBB_avrcpSendCommonFragmentedMetadataCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0003,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0002,Y)
	and	AH,#H'0080
	cmp	AH,#H'0000
	bne	?L32
	tst	@(H'0009,Y)
	beq	?L32
	ld	X,@(H'0008,Y)
	cmp	X,#(H'0001+H'0001)
	bcc	?L33
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
?L33:
	ld	AL,@(H'0009,Y)
	cmp	AL,@(H'0003,Y)
	bcz	?L32
	sub	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0004,X)
	ld	AH,@(H'000A,Y)
	add	AH,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpSourceFromConstData
	ld	X,@(H'0004,Y)
	st	AL,@(H'0005,X)
?L32:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0007,Y)
	bsr	$_MessageSend
?LBE5:
?LBE_avrcpSendCommonFragmentedMetadataCfm:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpGetErrorStatusCode:
	enterl	#2
?LBB_avrcpGetErrorStatusCode:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB6:
	ld	AH,#H'0004
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#(H'0001+H'007F)
	bcc	?L37
	add	AL,#-H'0009
	cmp	AL,#(H'0001+H'0006)
	bcc	?L50
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE49,X)
	brxl
	.SEG	CONST
?JTBASE49:
	.CODE
?L49:
	.SEG	CONST
	dc	lwrd(?L41-?L49)
	dc	lwrd(?L47-?L49)
	dc	lwrd(?L50-?L49)
	dc	lwrd(?L41-?L49)
	dc	lwrd(?L41-?L49)
	dc	lwrd(?L50-?L49)
	dc	lwrd(?L50-?L49)
	.CODE
?L41:
	ld	AL,@H'fff9
	cmp	AL,#H'0001
	bne	?L42
	ld	AL,#H'000C
	bra	(?L52)
?L42:
	tst	@H'fff9
	bne	?L44
	ld	AL,#H'0009
?L52:
	ld	X,@H'fff8
	bra	(?L51)
?L44:
	ld	AL,#H'000D
	bra	(?L52)
?L47:
	ld	AH,#H'0003
	bra	(?L50)
?L37:
	ld	X,@H'fff8
	ld	AH,@(0,X)
	and	AH,#H'007F
	ld	AL,#H'000A
?L51:
	st	AL,@(0,X)
?L50:
?LBE6:
	ld	AL,@$XAP_AH
?LBE_avrcpGetErrorStatusCode:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_avrcpSendCommonMetadataInd:
	enterl	#5
?LBB_avrcpSendCommonMetadataInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0002,Y)
	bsr	$_MessageSend
?LBE7:
?LBE_avrcpSendCommonMetadataInd:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_avrcpSendCommonFragmentedMetadataInd:
	enterl	#5
?LBB_avrcpSendCommonFragmentedMetadataInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0002,Y)
	bsr	$_MessageSend
?LBE8:
?LBE_avrcpSendCommonFragmentedMetadataInd:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_AvrcpSetMetadataResponsePDUDataSize:
	enterl	#2
?LBB_AvrcpSetMetadataResponsePDUDataSize:
	ld	X,@$XAP_AL
	ld	AL,@(H'0021,X)
	cmp	AL,#(H'0001+H'01F6)
	bcc	?L57
	st	AH,@(H'0021,X)
	ld	AL,#H'0001
	bra	(?L56)
?L57:
	ld	AL,#H'0000
?L56:
?LBE_AvrcpSetMetadataResponsePDUDataSize:
	leavel	#2
$_avrcpSendCommonCfmMessageToApp:
	enterl	#5
?LBB_avrcpSendCommonCfmMessageToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0001,Y)
	bsr	$_MessageSend
?LBE9:
?LBE_avrcpSendCommonCfmMessageToApp:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_avrcpGetCompanyId:
	enterl	#2
?LBB_avrcpGetCompanyId:
?LBB10:
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	ld	AH,@(0,X)
	ld	AL,#H'0000
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	asl	#H'0008
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	or	AL,@H'fff9
	or	AH,@H'fff8
?LBE10:
?LBE_avrcpGetCompanyId:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_avrcpGrabSink:
	enterl	#5
?LBB_avrcpGrabSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB11:
	bsr	$_SinkMap
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_SinkClaim
	cmp	AL,#-H'0001
	bne	?L61
	ld	AL,#H'0000
	bra	(?L60)
?L61:
	ld	AH,@(H'0002,Y)
	add	AL,@$XAP_AH
?L60:
?LBE11:
?LBE_avrcpGrabSink:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_avrcpSourceDrop:
	enterl	#5
?LBB_avrcpSourceDrop:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB12:
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	tst	@(H'001B,X)
	beq	?L64
?LBB13:
	ld	AL,@(H'001B,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_SourceMap
	ld	X,@(0,Y)
	cmp	AL,@(H'001A,X)
	beq	?L65
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L66
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'001A,X)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	st	AL,@(H'001A,X)
	st	AL,@(H'001B,X)
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	st	AL,@(H'0020,X)
	bra	(?L68)
?L66:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'000E
	st	AL,@(H'0002,Y)
	ld	AL,#H'000E
	ld	X,@(0,Y)
	bra	(?L72)
?L65:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'001A,X)
?L72:
	st	AL,@(H'001B,X)
?L68:
	tst	@(H'0002,Y)
	beq	?L63
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_SourceDrop
	ld	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	cmp	AL,@(H'0009,X)
	bne	?L63
	ld	AL,#H'0000
	st	AL,@(H'0009,X)
?LBE13:
	bra	(?L63)
?L64:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'001A,X)
?L63:
?LBE12:
?LBE_avrcpSourceDrop:
	leavel	#5
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_avrcpSourceProcessed:
	enterl	#8
?LBB_avrcpSourceProcessed:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB14:
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0003
	bne	?L76
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	st	AL,@(H'0020,X)
?L76:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L75
?LBB15:
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpSourceDrop
	ld	AL,@(H'0004,Y)
	bsr	$_SourceBoundary
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0038
	bsr	$_MessageSend
?L78:
	ld	X,@(H'0001,Y)
	tst	@(H'0009,X)
	beq	?L75
	tst	@(H'0002,Y)
	bne	?L75
	ld	AL,@(H'0009,X)
	bsr	$_StreamSinkFromSource
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
	ld	X,@(H'0001,Y)
?LBB16:
	ld	X,@(H'0009,X)
	st	X,@(H'0005,Y)
	ld	AL,@$XAP_UXL
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0005,Y)
	bsr	$_SourceDrop
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
?LBE16:
	st	AL,@(H'0009,X)
	tst	@(H'0006,X)
	beq	?L75
	ld	AL,@(H'0006,X)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0006,X)
?L75:
?LBE15:
?LBE14:
?LBE_avrcpSourceProcessed:
	leavel	#8
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
$_convertUint8ValuesToUint32:
	enterl	#2
?LBB_convertUint8ValuesToUint32:
	ld	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@(0,X)
	asl	#H'0018
	and	AL,#H'0000
	and	AH,#H'FF00
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0001,X)
	ld	AL,#H'0000
	and	AL,#H'0000
	and	AH,#H'00FF
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	asl	#H'0008
	and	AL,#H'FF00
	and	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	and	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
?LBE_convertUint8ValuesToUint32:
	leavel	#2
$_convertUint32ToUint8Values:
	enterl	#2
?LBB_convertUint32ToUint8Values:
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	lsr	#H'0018
	and	AL,#H'00FF
	st	AL,@(0,X)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	lsr	#H'0010
	and	AL,#H'00FF
	st	AL,@(H'0001,X)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	lsr	#H'0008
	and	AL,#H'00FF
	st	AL,@(H'0002,X)
	ld	AL,@H'fff9
	and	AL,#H'00FF
	st	AL,@(H'0003,X)
?LBE_convertUint32ToUint8Values:
	leavel	#2
$_avrcpSourceFromConstData:
	enterl	#9
?LBB_avrcpSourceFromConstData:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB17:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0004,Y)
	ld	X,@(H'0001,Y)
	ld	X,@(H'001B,X)
	st	X,@(H'0005,Y)
	ld	X,@(H'0001,Y)
	tst	@(H'0009,X)
	beq	?L86
	cmp	AL,@(H'0009,X)
	beq	?L86
	ld	AL,@(H'0009,X)
	bsr	$_StreamSinkFromSource
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
	ld	X,@(H'0001,Y)
	tst	@(H'0006,X)
	beq	?L87
	ld	AL,@(H'0006,X)
	bsr	$_free
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0006,X)
?L87:
	ld	X,@(H'0001,Y)
?LBB18:
	ld	X,@(H'0009,X)
	st	X,@(H'0006,Y)
	ld	AL,@$XAP_UXL
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	bsr	$_SourceDrop
?L86:
	ld	X,@(H'0001,Y)
?LBE18:
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L89
	ld	AL,@(H'0009,Y)
	bsr	$_malloc
	st	AL,@(H'0003,Y)
	bra	(?L90)
?L89:
	ld	AL,@(H'0005,Y)
	add	AL,#-H'000E
	st	AL,@(H'0005,Y)
?L90:
	tst	@(H'0003,Y)
	beq	?L91
	ld	X,@(H'0009,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpSourceFromData
	st	AL,@(H'0004,Y)
	bra	(?L92)
?L91:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'0000
	bne	?L93
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'00FE
	bsr	$_avrcpBlockReceivedData
?L93:
	ld	AL,@(H'0005,Y)
	sub	AL,@(H'0009,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_SourceDrop
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001B,X)
	sub	AL,@(H'0005,Y)
	st	AL,@(H'001B,X)
?L92:
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0009,X)
?LBE17:
	ld	AL,@(H'0004,Y)
?LBE_avrcpSourceFromConstData:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_avrcpSourceFromData:
	enterl	#5
?LBB_avrcpSourceFromData:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
?LBB19:
	ld	AL,@(H'0001,Y)
	bsr	$_StreamRegionSource
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSinkFromSource
	ld	AH,@(0,Y)
	add	AH,#H'0004
	bsr	$_MessageSinkTask
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_avrcpSourceFromData:
	leavel	#5
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
	ENDMOD

;# Function pattern *movqi2 used[0] = 123 used[1] = 37 total = 160
;# Function pattern *movqi3 used[0] = 133 total = 133
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 3 used[3] = 6 total = 9
;# Function pattern *andhi3 used[0] = 4 total = 4
;# Function pattern *iorhi3 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 5 used[2] = 6 total = 11
;# Function pattern *andqi3 used[0] = 19 total = 19
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *ashlhi3 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern *lshrhi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2 used[0] = 5 total = 5
;# Function pattern jump used[0] = 17 total = 17
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 25 total = 25
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern zero_extendqihi2+1 used[0] = 2 total = 2
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 8 used[1] = 11 total = 19
;# Function pattern movstrqi+4 used[1] = 6 total = 6
;# Function pattern movstrqi+5 used[0] = 10 total = 10
	MODULE	avrcp_connect
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_avrcpSendInternalConnectResp:
	enterl	#5
?LBB_avrcpSendInternalConnectResp:
	st	AH,@(H'0001,Y)
?LBB2:
	st	AL,@(H'0002,Y)
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	tst	@(H'0007,Y)
	beq	?L2
	ld	X,@(H'0002,Y)
	tst	@(H'0003,X)
	beq	?L3
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	bra	(?L2)
?L3:
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
?L2:
	st	AH,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0005
	bsr	$_MessageSend
?LBE2:
?LBE_avrcpSendInternalConnectResp:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_avrcpSendInternalConnectReq:
	enterl	#7
?LBB_avrcpSendInternalConnectReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB3:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001E,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L6
?LBB4:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'001C
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendConditionally
?L6:
?LBE4:
	tst	@(H'0007,Y)
	beq	?L7
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001C
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0004
	bsr	$_MessageSendConditionally
	bra	(?L5)
?L7:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0004
	bsr	$_MessageSend
?L5:
?LBE3:
?LBE_avrcpSendInternalConnectReq:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_AvrcpConnectRequest:
	enterl	#4
?LBB_AvrcpConnectRequest:
	st	AH,@(H'0001,Y)
?LBB5:
	ld	AH,#H'0001
	bsr	$_avrcpCreateTask
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_avrcpSendInternalConnectReq
?LBE5:
?LBE_AvrcpConnectRequest:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_AvrcpBrowseConnectRequest:
	enterl	#11
?LBB_AvrcpBrowseConnectRequest:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L11
?LBB7:
	ld	AL,@(H'0007,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0005
	bra	(?L16)
?L11:
?LBE7:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_avrcpSendInternalConnectReq
?L13:
	ld	X,@(H'0007,Y)
	tst	@(H'0003,X)
	beq	?L14
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0008,Y)
	bsr	_avrcpSendInternalConnectReq
	bra	(?L10)
?L14:
	ld	AL,@(H'0007,Y)
	ld	AH,#H'000B
?L16:
	bsr	$_avrcpSendBrowseConnectCfmToApp
?L10:
?LBE6:
?LBE_AvrcpBrowseConnectRequest:
	leavel	#11
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_AvrcpConnectResponse:
	enterl	#6
?LBB_AvrcpConnectResponse:
	st	AH,@(H'0003,Y)
?LBB8:
	ld	AH,#H'0002
	bsr	$_avrcpCreateTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_avrcpSendInternalConnectResp
?LBE8:
?LBE_AvrcpConnectResponse:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_AvrcpBrowseConnectResponse:
	enterl	#5
?LBB_AvrcpBrowseConnectResponse:
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	X,#H'0001
	st	X,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	_avrcpSendInternalConnectResp
?LBE_AvrcpBrowseConnectResponse:
	leavel	#5
$_AvrcpDisconnectRequest:
	enterl	#3
?LBB_AvrcpDisconnectRequest:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0006
	bsr	$_MessageSend
?LBE_AvrcpDisconnectRequest:
	leavel	#3
$_AvrcpBrowseDisconnectRequest:
	enterl	#3
?LBB_AvrcpBrowseDisconnectRequest:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0006
	bsr	$_MessageSend
?LBE_AvrcpBrowseDisconnectRequest:
	leavel	#3
$_AvrcpGetSink:
	enterl	#2
?LBB_AvrcpGetSink:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L23
	ld	AL,#H'0000
	bra	(?L22)
?L23:
	ld	AL,@(H'0007,X)
?L22:
?LBE_AvrcpGetSink:
	leavel	#2
$_AvrcpGetSupportedFeatures:
	enterl	#4
?LBB_AvrcpGetSupportedFeatures:
	ld	X,@$XAP_AL
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L25
	ld	AL,@(H'001E,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L26
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bra	(?L29)
?L26:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'001C
	add	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0007
	bsr	$_MessageSendConditionally
	bra	(?L24)
?L25:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
?L29:
	bsr	$_avrcpSendGetSupportedFeaturesCfm
?L24:
?LBE_AvrcpGetSupportedFeatures:
	leavel	#4
$_AvrcpGetProfileExtensions:
	enterl	#4
?LBB_AvrcpGetProfileExtensions:
	ld	X,@$XAP_AL
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L32
	ld	AL,@(H'001E,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L33
	ld	AH,@(H'001F,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bra	(?L36)
?L33:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'001C
	add	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0008
	bsr	$_MessageSendConditionally
	bra	(?L31)
?L32:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
?L36:
	bsr	$_avrcpSendGetExtensionsCfm
?L31:
?LBE_AvrcpGetProfileExtensions:
	leavel	#4
$_AvrcpSourceProcessed:
	enterl	#2
?LBB_AvrcpSourceProcessed:
	ld	X,@$XAP_AL
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L38
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#-H'0200
	bne	?L40
	ld	AL,@$XAP_UXL
	bsr	$_avrcpUnblockReceivedData
	bra	(?L38)
?L40:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_avrcpSourceProcessed
?L38:
?LBE_AvrcpSourceProcessed:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 66 used[1] = 16 used[3] = 1 total = 83
;# Function pattern *movqi3 used[0] = 82 total = 82
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 2 used[2] = 2 total = 4
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 4 total = 10
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	avrcp_continuation
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpRequestContinuingResponseRequest:
	enterl	#10
?LBB_AvrcpRequestContinuingResponseRequest:
	st	AL,@(H'0006,Y)
?LBB2:
	and	AH,#H'00FF
	st	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@$XAP_UXL
	bsr	$_avrcpUnblockReceivedData
	bra	(?L1)
?L2:
	ld	AL,#H'0040
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0040
	bsr	$_avrcpSendMetadataCommand
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E28
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_AvrcpRequestContinuingResponseRequest:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_AvrcpAbortContinuingResponseRequest:
	enterl	#9
?LBB_AvrcpAbortContinuingResponseRequest:
	st	AL,@(H'0006,Y)
?LBB4:
	and	AH,#H'00FF
	st	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0020,X)
	or	AL,#H'1800
	st	AL,@(H'0020,X)
	ld	AL,@$XAP_UXL
	bsr	$_avrcpUnblockReceivedData
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0041
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,#H'5E29
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_avrcpSendCommonStatusCfm
?L4:
?LBE4:
?LBE_AvrcpAbortContinuingResponseRequest:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 27 used[1] = 3 total = 30
;# Function pattern *movqi3 used[0] = 18 total = 18
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	avrcp_element_attributes
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpGetElementAttributesRequest:
	enterl	#17
?LBB_AvrcpGetElementAttributesRequest:
	st	AL,@(H'000E,Y)
	ld	AH,@(H'0011,Y)
	ld	AL,@(H'0012,Y)
?LBB2:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_convertUint32ToUint8Values
	ld	AH,@(H'0013,Y)
	ld	AL,@(H'0014,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_convertUint32ToUint8Values
	ld	AH,@(H'0015,Y)
	lsr	#H'0002
	st	AH,@(H'000D,Y)
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0015,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#H'0020
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,#H'5E1A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000E,Y)
	bsr	$_avrcpSendCommonFragmentedMetadataCfm
?L1:
?LBE2:
?LBE_AvrcpGetElementAttributesRequest:
	leavel	#17
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_AvrcpGetElementAttributesResponse:
	enterl	#5
?LBB_AvrcpGetElementAttributesResponse:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
?LBB3:
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'2000
	bne	?L4
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@H'fff8
	bsr	$_sendGetElementsResponse
	bra	(?L3)
?L4:
?LBB4:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_SourceDrop
?L3:
?LBE4:
?LBE3:
?LBE_AvrcpGetElementAttributesResponse:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 6 total = 25
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	avrcp_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_avrcpInitTask:
	dc	hwrd($_avrcpInitHandler)
	dc	lwrd($_avrcpInitHandler)
	.CODE
_avrcpInitProfile:
	enterl	#2
?LBB_avrcpInitProfile:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'0005
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(H'0003,Y)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@$XAP_AH
	or	AL,#H'0021
	st	AL,@H'fff8
	ld	AL,@(H'0003,Y)
	and	AL,#H'0003
	cmp	AL,#H'0001
	bne	?L2
	ld	AL,@H'fff8
	and	AL,#H'003F
	bra	(?L7)
?L3:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'002F
?L7:
	st	AL,@H'fff8
?L2:
	ld	AL,@(H'0003,Y)
	and	AL,#H'0007
	cmp	AL,#H'0007
	bne	?L6
	ld	AL,@(H'0002,Y)
	or	AL,#H'0040
	st	AL,@(H'0002,Y)
?L6:
	ld	AL,@$XAP_UXL
	and	AL,#H'0007
	asl	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@H'fff8
	asl	#H'0008
	ld	AH,@(H'0002,Y)
	and	AH,#H'00FF
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@_gAvrcpDeviceSettings+H'0001
	ld	AL,@(H'0003,Y)
	asl	#H'0008
	and	AL,#-H'0020
	or	AL,@$XAP_UXL
	st	AL,@_gAvrcpDeviceSettings+H'0002
?LBE_avrcpInitProfile:
	leavel	#2
$_avrcpHandleInternalInitReq:
	enterl	#5
?LBB_avrcpHandleInternalInitReq:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'0017
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@_gAvrcpDeviceSettings
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0003,X)
	bsr	_avrcpInitProfile
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	beq	?L12
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L12
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0004
	cmp	AH,#H'0000
	beq	?L11
?L12:
	ld	AL,#H'001B
	st	AL,@(H'0002,Y)
?L11:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(_avrcpInitTask)
	ld	AH,@(H'0002,Y)
	bsr	$_ConnectionL2capRegisterRequest
?LBE2:
?LBE_avrcpHandleInternalInitReq:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpGetInitTask:
; leaf function with empty stack frame
?LBB_avrcpGetInitTask:
	ld	AL,#(_avrcpInitTask)
?LBE_avrcpGetInitTask:
	rts
$_avrcpGetDeviceTask:
; leaf function with empty stack frame
?LBB_avrcpGetDeviceTask:
	ld	AL,#(_gAvrcpDeviceSettings)
?LBE_avrcpGetDeviceTask:
	rts
$_avrcpInitDefaults:
	enterl	#5
?LBB_avrcpInitDefaults:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	asl	#H'000E
	ld	X,@(0,Y)
	ld	AH,@(H'0020,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(H'001D,X)
	st	AL,@(H'0007,X)
	ld	X,@(H'001F,X)
	or	X,#H'0010
	st	X,@(H'0001,Y)
	ld	X,@(0,Y)
	st	AL,@(H'000C,X)
	st	AL,@(H'000A,X)
	st	AL,@(H'0008,X)
	st	AL,@(H'001C,X)
	and	AH,#-H'3801
	st	AH,@(H'0020,X)
	st	AL,@(H'001A,X)
	st	AL,@(H'001B,X)
	st	AL,@(H'0009,X)
	st	AL,@(H'001E,X)
	ld	AL,@(H'0001,Y)
	and	AL,#H'001F
	st	AL,@(H'001F,X)
	ld	AL,#H'01F6
	st	AL,@(H'0021,X)
?LBE_avrcpInitDefaults:
	leavel	#5
$_avrcpCreateTask:
	enterl	#5
?LBB_avrcpCreateTask:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB3:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	beq	?L19
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L19
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L18
?L19:
	ld	AL,#H'002B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	bsr	$_avrcpInitBrowsing
	bra	(?L20)
?L18:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0003,X)
?L20:
	ld	AH,#hwrd($_avrcpProfileHandler)
	ld	AL,#lwrd($_avrcpProfileHandler)
	ld	X,@(H'0002,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,@(0,Y)
	st	AL,@(H'0002,X)
	ld	AL,#H'02A0
	st	AL,@(H'000B,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0001,Y)
	bsr	$_avrcpInitDefaults
	ld	AH,#hwrd($_avrcpDataCleanUp)
	ld	AL,#lwrd($_avrcpDataCleanUp)
	ld	X,@(H'0002,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	AL,#H'0000
	st	AL,@(H'0006,X)
?LBE3:
	ld	AL,@$XAP_UXL
?LBE_avrcpCreateTask:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpResetValues:
	enterl	#3
?LBB_avrcpResetValues:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	tst	@(H'0003,X)
	beq	?L23
	ld	AL,@(H'0003,X)
	bsr	$_avrcpResetAvbpValues
?L23:
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_avrcpInitDefaults
	ld	AL,@(0,Y)
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,@(0,Y)
	ld	AH,#H'0018
	bsr	$_MessageCancelAll
	ld	AL,@(0,Y)
	ld	AH,#H'0004
	bsr	$_MessageCancelAll
?LBE_avrcpResetValues:
	leavel	#3
$_avrcpResetAvbpValues:
	enterl	#4
?LBB_avrcpResetAvbpValues:
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L24
	ld	X,@$XAP_AL
	ld	AL,@(H'0007,X)
	or	AL,#H'0400
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0003,X)
	st	AH,@(H'0004,X)
	ld	AL,#H'02A0
	st	AL,@(H'0005,X)
	st	AH,@(H'0006,X)
	ld	AL,@(H'0001,Y)
	and	AL,#H'07FF
	st	AL,@(H'0007,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,@(0,Y)
	ld	AH,#H'0018
	bsr	$_MessageCancelAll
?L24:
?LBE_avrcpResetAvbpValues:
	leavel	#4
$_avrcpInitBrowsing:
	enterl	#4
?LBB_avrcpInitBrowsing:
	st	AL,@(0,Y)
	ld	AH,@$XAP_AL
?LBB4:
	add	AH,#H'0023
	st	AH,@(H'0001,Y)
	ld	AH,#hwrd($_avbpProfileHandler)
	ld	AL,#lwrd($_avbpProfileHandler)
	ld	X,@(0,Y)
	st	AH,@(H'0023,X)
	st	AL,@(H'0024,X)
	ld	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	st	AH,@(H'0002,X)
	ld	AL,@$XAP_UXL
	bsr	$_avrcpResetAvbpValues
	ld	AH,@(H'0001,Y)
	ld	X,@(0,Y)
	st	AH,@(H'0003,X)
?LBE4:
?LBE_avrcpInitBrowsing:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpSendInitCfmToClient:
	enterl	#5
?LBB_avrcpSendInitCfmToClient:
	st	AL,@(H'0001,Y)
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0002,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0001
	bne	?L28
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	beq	?L31
	cmp	AL,#H'0003
	bne	?L28
	ld	AL,#(_avrcpInitTask)
	ld	AH,#H'0017
	bsr	$_ConnectionL2capUnregisterRequest
?L31:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	beq	?L33
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L33
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L28
?L33:
	ld	AL,#(_avrcpInitTask)
	ld	AH,#H'001B
	bsr	$_ConnectionL2capUnregisterRequest
?L28:
	ld	X,@(H'0002,Y)
	st	X,@(0,Y)
	ld	AL,@_gAvrcpDeviceSettings
	ld	AH,#H'5E00
	bsr	$_MessageSend
?LBE5:
?LBE_avrcpSendInitCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_AvrcpInit:
	enterl	#5
?LBB_AvrcpInit:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	cmp	AH,#H'0000
	beq	?L42
	cmp	AL,#H'0000
	bne	?L41
?L42:
?LBB7:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,#H'0001
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5E00
	bra	(?L44)
?L41:
?LBE7:
?LBB8:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0004,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#(_avrcpInitTask)
	ld	AH,#H'0002
?L44:
	bsr	$_MessageSend
?LBE8:
?LBE6:
?LBE_AvrcpInit:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_avrcpHandleDeleteTask:
	enterl	#3
?LBB_avrcpHandleDeleteTask:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	tst	@(H'0003,X)
	beq	?L46
	ld	AL,@(H'0003,X)
	bsr	$_MessageFlushTask
?L46:
	ld	AL,@(0,Y)
	bsr	$_MessageFlushTask
	ld	AL,@(0,Y)
	bsr	$_free
?LBE_avrcpHandleDeleteTask:
	leavel	#3
	.SEG	VAR
_gAvrcpDeviceSettings:
	DS	3
	ENDMOD

;# Function pattern *movqi2 used[0] = 88 used[1] = 19 used[3] = 1 total = 108
;# Function pattern *movqi3 used[0] = 84 total = 84
;# Function pattern *movhi used[2] = 4 used[3] = 4 total = 8
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 23 total = 23
;# Function pattern *iorqi3 used[0] = 7 total = 7
;# Function pattern *lshrqi3 used[0] = 7 total = 7
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 17 total = 17
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 11 used[1] = 2 total = 13
;# Function pattern movstrqi+5 used[0] = 8 total = 8
	MODULE	avrcp_mediaplayer
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpSetAddressedPlayerRequest:
	enterl	#10
?LBB_AvrcpSetAddressedPlayerRequest:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
?LBB2:
	lsr	#H'0008
	st	AH,@(H'0005,Y)
	ld	AH,@$XAP_UXL
	and	AH,#H'00FF
	st	AH,@(H'0006,Y)
	ld	AL,#H'0060
	st	AL,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0060
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,#H'5E38
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_avrcpSendCommonStatusCfm
?L1:
?LBE2:
?LBE_AvrcpSetAddressedPlayerRequest:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_AvrcpSetAddressedPlayerResponse:
	enterl	#4
?LBB_AvrcpSetAddressedPlayerResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'6000
	bne	?L3
	ld	AL,#H'0060
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_avrcpSendMetaDataControlResponse
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000C,X)
	and	AL,#-H'0801
	st	AL,@(H'000C,X)
?L3:
?LBE_AvrcpSetAddressedPlayerResponse:
	leavel	#4
$_AvrcpEventAddressedPlayerChangedResponse:
	enterl	#6
?LBB_AvrcpEventAddressedPlayerChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,@(H'000C,X)
	and	AL,#H'0800
	cmp	AL,#H'0000
	beq	?L7
?LBB4:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0017
	cmp	AH,#H'0017
	bne	?L9
	ld	AL,@(H'0007,Y)
	bra	(?L11)
?L9:
	ld	AL,#H'0000
?L11:
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0030
	bsr	$_MessageSend
?L7:
?LBE4:
?LBE3:
?LBE_AvrcpEventAddressedPlayerChangedResponse:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_AvrcpEventAvailablePlayersChangedResponse:
	enterl	#3
?LBB_AvrcpEventAvailablePlayersChangedResponse:
	ld	X,#H'000A
	st	X,@(0,Y)
	bsr	$_avrcpSendEventResponse
?LBE_AvrcpEventAvailablePlayersChangedResponse:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 27 used[1] = 3 total = 30
;# Function pattern *movqi3 used[0] = 21 total = 21
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	avrcp_notification
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpGetPlayStatusRequest:
	enterl	#9
?LBB_AvrcpGetPlayStatusRequest:
	st	AL,@(H'0006,Y)
?LBB2:
	ld	AL,#H'0030
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0030
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_avrcpSendGetPlayStatusCfm
?L1:
?LBE2:
?LBE_AvrcpGetPlayStatusRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_AvrcpRegisterNotificationRequest:
	enterl	#14
?LBB_AvrcpRegisterNotificationRequest:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
	ld	X,@(H'000B,Y)
?LBB3:
	and	X,#H'00FF
	st	X,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'000B,Y)
	add	AL,#H'00F0
	st	AL,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'0031
	bsr	$_avrcpSendMetadataCommand
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_avrcpSendRegisterNotificationFailCfm
?L3:
?LBE3:
?LBE_AvrcpRegisterNotificationRequest:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_AvrcpGetPlayStatusResponse:
	enterl	#8
?LBB_AvrcpGetPlayStatusResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0005,Y)
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'3000
	bne	?L5
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fffa
	ld	AL,@H'fffb
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0005,Y)
	bsr	$_sendPlayStatusResponse
?L5:
?LBE_AvrcpGetPlayStatusResponse:
	leavel	#8
$_AvrcpEventPlaybackStatusChangedResponse:
	enterl	#5
?LBB_AvrcpEventPlaybackStatusChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(H'000C,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L9
?LBB5:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0024
	bsr	$_MessageSend
?L9:
?LBE5:
?LBE4:
?LBE_AvrcpEventPlaybackStatusChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_AvrcpEventTrackChangedResponse:
	enterl	#5
?LBB_AvrcpEventTrackChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'0001,Y)
?LBB6:
	ld	AL,@(H'000C,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L12
?LBB7:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0025
	bsr	$_MessageSend
?L12:
?LBE7:
?LBE6:
?LBE_AvrcpEventTrackChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_AvrcpEventTrackReachedEndResponse:
	enterl	#3
?LBB_AvrcpEventTrackReachedEndResponse:
	ld	X,#H'0003
	st	X,@(0,Y)
	bsr	$_avrcpSendEventResponse
?LBE_AvrcpEventTrackReachedEndResponse:
	leavel	#3
$_AvrcpEventTrackReachedStartResponse:
	enterl	#3
?LBB_AvrcpEventTrackReachedStartResponse:
	ld	X,#H'0004
	st	X,@(0,Y)
	bsr	$_avrcpSendEventResponse
?LBE_AvrcpEventTrackReachedStartResponse:
	leavel	#3
$_AvrcpEventPlaybackPosChangedResponse:
	enterl	#5
?LBB_AvrcpEventPlaybackPosChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'0001,Y)
?LBB8:
	ld	AL,@(H'000C,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L17
?LBB9:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0026
	bsr	$_MessageSend
?L17:
?LBE9:
?LBE8:
?LBE_AvrcpEventPlaybackPosChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_AvrcpEventBattStatusChangedResponse:
	enterl	#5
?LBB_AvrcpEventBattStatusChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@(H'000C,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L20
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0027
	bsr	$_MessageSend
?L20:
?LBE11:
?LBE10:
?LBE_AvrcpEventBattStatusChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_AvrcpEventSystemStatusChangedResponse:
	enterl	#5
?LBB_AvrcpEventSystemStatusChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB12:
	ld	AL,@(H'000C,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L23
?LBB13:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0028
	bsr	$_MessageSend
?L23:
?LBE13:
?LBE12:
?LBE_AvrcpEventSystemStatusChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_AvrcpEventPlayerAppSettingChangedResponse:
	enterl	#5
?LBB_AvrcpEventPlayerAppSettingChangedResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB14:
	ld	AL,@(H'000C,X)
	and	AL,#H'0100
	cmp	AL,#H'0000
	beq	?L27
?LBB15:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0029
	bsr	$_MessageSend
?LBE15:
	bra	(?L26)
?L27:
?LBB16:
	ld	AL,@(H'0006,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	bsr	$_SourceDrop
?L26:
?LBE16:
?LBE14:
?LBE_AvrcpEventPlayerAppSettingChangedResponse:
	leavel	#5
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
	ENDMOD

;# Function pattern *movqi2 used[0] = 69 used[1] = 13 total = 82
;# Function pattern *movqi3 used[0] = 45 total = 45
;# Function pattern *movhi used[2] = 8 used[3] = 8 total = 16
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern movstrqi+3 used[0] = 8 total = 8
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	avrcp_passthrough
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendGroupRequest:
	enterl	#7
?LBB_sendGroupRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0019
	st	AL,@(H'0001,X)
	ld	AL,#H'0058
	st	AL,@(H'0002,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UXL
	bsr	$_avrcpSourceFromData
	st	AL,@(H'0004,Y)
?LBB3:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,#H'0009
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,#H'007E
	st	AL,@(H'0003,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	AL,#H'0005
	st	AL,@(H'0005,X)
	tst	@(H'0003,Y)
	beq	?L2
	ld	AL,#H'0006
	bra	(?L4)
?L2:
	ld	AL,#H'0005
?L4:
	st	AL,@(H'0004,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001D
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0009
	bsr	$_MessageSendConditionally
?LBE3:
?LBE2:
?LBE_sendGroupRequest:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_AvrcpPassthroughRequest:
	enterl	#7
?LBB_AvrcpPassthroughRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L6
?LBB5:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
	st	AL,@(H'0004,X)
	ld	X,@(H'0009,Y)
	cmp	X,#H'007E
	bne	?L7
	ld	AL,@(H'000B,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'000A,Y)
	bra	(?L12)
?L7:
	ld	AL,@(H'000B,Y)
	bsr	$_SourceSize
	cmp	AL,#H'0000
	beq	?L9
?LBB6:
	ld	AL,@(H'000B,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000B,Y)
	bsr	$_SourceDrop
?L9:
?LBE6:
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
?L12:
	st	AL,@(H'0005,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001D
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0009
	bsr	$_MessageSendConditionally
?LBE5:
	bra	(?L5)
?L6:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'5E04
	ld	AH,#H'0005
	bsr	$_avrcpSendCommonCfmMessageToApp
?L5:
?LBE4:
?LBE_AvrcpPassthroughRequest:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_AvrcpNextGroupRequest:
	enterl	#5
?LBB_AvrcpNextGroupRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L16
	ld	AL,#H'5E2A
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0007
	bra	(?L21)
?L16:
	ld	X,@(H'0001,Y)
	tst	@(H'0006,X)
	beq	?L17
	ld	AL,#H'5E2A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0006
	bra	(?L21)
?L17:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L19
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	_sendGroupRequest
	bra	(?L15)
?L19:
	ld	AL,#H'5E2A
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0005
?L21:
	bsr	$_avrcpSendCommonStatusCfm
?L15:
?LBE_AvrcpNextGroupRequest:
	leavel	#5
$_AvrcpPreviousGroupRequest:
	enterl	#5
?LBB_AvrcpPreviousGroupRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L24
	ld	AL,#H'5E2C
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0007
	bra	(?L29)
?L24:
	ld	X,@(H'0001,Y)
	tst	@(H'0006,X)
	beq	?L25
	ld	AL,#H'5E2C
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0006
	bra	(?L29)
?L25:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L27
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	_sendGroupRequest
	bra	(?L23)
?L27:
	ld	AL,#H'5E2C
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0005
?L29:
	bsr	$_avrcpSendCommonStatusCfm
?L23:
?LBE_AvrcpPreviousGroupRequest:
	leavel	#5
$_AvrcpPassthroughResponse:
	enterl	#5
?LBB_AvrcpPassthroughResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0014
	bsr	$_MessageSend
?LBE7:
?LBE_AvrcpPassthroughResponse:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_AvrcpNextGroupResponse:
	enterl	#2
?LBB_AvrcpNextGroupResponse:
	ld	X,@$XAP_AL
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'0500
	bne	?L32
	ld	AL,@$XAP_UXL
	bsr	$_sendGroupResponse
?L32:
?LBE_AvrcpNextGroupResponse:
	leavel	#2
$_AvrcpPreviousGroupResponse:
	enterl	#2
?LBB_AvrcpPreviousGroupResponse:
	ld	X,@$XAP_AL
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'0600
	bne	?L36
	ld	AL,@$XAP_UXL
	bsr	$_sendGroupResponse
?L36:
?LBE_AvrcpPreviousGroupResponse:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 65 used[1] = 11 total = 76
;# Function pattern *movqi3 used[0] = 68 total = 68
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *andqi3 used[0] = 7 total = 7
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 9 total = 9
;# Function pattern *call1 used[0] = 11 total = 11
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 3 total = 6
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	avrcp_unit_subunit
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpUnitInfoRequest:
	enterl	#6
?LBB_AvrcpUnitInfoRequest:
	ld	X,@$XAP_AL
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'001D
	add	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000A
	bsr	$_MessageSendConditionally
	bra	(?L1)
?L2:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
	bsr	$_avrcpSendUnitInfoCfmToClient
?L1:
?LBE_AvrcpUnitInfoRequest:
	leavel	#6
$_AvrcpSubUnitInfoRequest:
	enterl	#8
?LBB_AvrcpSubUnitInfoRequest:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L6
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'001D
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'000B
	bsr	$_MessageSendConditionally
?LBE3:
	bra	(?L5)
?L6:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0005
	bsr	$_avrcpSendUnitInfoCfmToClient
?L5:
?LBE2:
?LBE_AvrcpSubUnitInfoRequest:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_AvrcpUnitInfoResponse:
	enterl	#6
?LBB_AvrcpUnitInfoResponse:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	X,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_sendUnitInfoResponse
?LBE_AvrcpUnitInfoResponse:
	leavel	#6
$_AvrcpSubUnitInfoResponse:
	enterl	#3
?LBB_AvrcpSubUnitInfoResponse:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_sendSubunitInfoResponse
?LBE_AvrcpSubUnitInfoResponse:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 25 used[1] = 4 total = 29
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	avrcp_vendor
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AvrcpVendorDependentRequest:
	enterl	#6
?LBB_AvrcpVendorDependentRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
?LBB2:
	cmp	AL,#H'01FA
	bcz	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0082
	bra	(?L6)
?L2:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L4
?LBB3:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0007,X)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0006,X)
	ld	AL,#H'0000
	st	AL,@(H'0009,X)
	st	AL,@(H'0008,X)
	ld	AL,#H'0004
	st	AL,@(H'0005,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001D
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000C
	bsr	$_MessageSendConditionally
?LBE3:
	bra	(?L1)
?L4:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0005
?L6:
	bsr	$_avrcpSendVendordependentCfmToClient
?L1:
?LBE2:
?LBE_AvrcpVendorDependentRequest:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_AvrcpVendorDependentResponse:
	enterl	#2
?LBB_AvrcpVendorDependentResponse:
	bsr	$_sendVendorDependentResponse
?LBE_AvrcpVendorDependentResponse:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 used[1] = 3 total = 18
;# Function pattern *movqi3 used[0] = 17 total = 17
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	avrcp_browsing_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_browseGrabSink:
	enterl	#4
?LBB_browseGrabSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_SinkSlack
	cmp	AL,@(H'0004,Y)
	bcz	?L2
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_avrcpGrabSink
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_browseGrabSink:
	leavel	#4
$_avrcpSearchCfm:
	enterl	#7
?LBB_avrcpSearchCfm:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB2:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	ld	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0008,Y)
	cmp	X,#H'0006
	bcz	?L6
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	bra	(?L7)
?L6:
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
?L7:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E4D
	bsr	$_MessageSend
?LBE2:
	ld	AL,@(H'0003,Y)
?LBE_avrcpSearchCfm:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpGetFolderItemsCfm:
	enterl	#8
?LBB_avrcpGetFolderItemsCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
	ld	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0009,Y)
	cmp	X,#H'0004
	bcz	?L10
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0003,X)
	asl	#H'0008
	ld	AH,@(H'0004,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0009,Y)
	add	AL,#-H'0005
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0005,Y)
	st	AL,@(H'0005,X)
	bra	(?L11)
?L10:
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
?L11:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E49
	bsr	$_MessageSend
?LBE3:
	ld	AL,@(H'0004,Y)
?LBE_avrcpGetFolderItemsCfm:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpGetNumberOfItemsCfm:
	enterl	#7
?LBB_avrcpGetNumberOfItemsCfm:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB4:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	ld	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0008,Y)
	cmp	X,#H'0007
	bne	?L14
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	bra	(?L15)
?L14:
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
?L15:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E4F
	bsr	$_MessageSend
?LBE4:
	ld	AL,@(H'0003,Y)
?LBE_avrcpGetNumberOfItemsCfm:
	leavel	#7
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpGetItemAttributesCfm:
	enterl	#8
?LBB_avrcpGetItemAttributesCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0009,Y)
	cmp	X,#H'0001
	bcz	?L18
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0009,Y)
	add	AL,#-H'0002
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0005,Y)
	st	AL,@(H'0004,X)
	bra	(?L19)
?L18:
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
?L19:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E4B
	bsr	$_MessageSend
?LBE5:
	ld	AL,@(H'0004,Y)
?LBE_avrcpGetItemAttributesCfm:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpChangePathCfm:
	enterl	#7
?LBB_avrcpChangePathCfm:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB6:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	ld	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0008,Y)
	cmp	X,#H'0004
	bcz	?L22
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	bra	(?L23)
?L22:
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
?L23:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E47
	bsr	$_MessageSend
?LBE6:
	ld	AL,@(H'0003,Y)
?LBE_avrcpChangePathCfm:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_avrcpBrowseSetPlayerCfm:
	enterl	#8
?LBB_avrcpBrowseSetPlayerCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB7:
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
	ld	AL,#H'000A
	st	AL,@(H'0004,Y)
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0009,Y)
	cmp	X,#H'0009
	bcz	?L26
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0005,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	asl	#H'0008
	ld	AH,@(H'0008,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0009,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0009,Y)
	sub	AL,#H'000A
	st	AL,@(H'0007,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0005,Y)
	st	AL,@(H'0008,X)
	bra	(?L27)
?L26:
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
?L27:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E45
	bsr	$_MessageSend
?LBE7:
	ld	AL,@(H'0004,Y)
?LBE_avrcpBrowseSetPlayerCfm:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_avrcpHandleInternalSearchReq:
	enterl	#9
?LBB_avrcpHandleInternalSearchReq:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'000A
	ld	X,@$XAP_AH
?LBB8:
	add	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'000A
	bsr	_browseGrabSink
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L30
	ld	X,@(H'0006,Y)
?LBB9:
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	X,@H'fff8
	st	AH,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	X,@H'fff8
	st	AL,@(H'0007,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@H'fff8
	st	AH,@(H'0008,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@H'fff8
	st	AL,@(H'0009,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0080
	bsr	$_avrcpSendBrowsePdu
?LBE9:
	bra	(?L29)
?L30:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_avrcpSearchCfm
?L29:
?LBE8:
?LBE_avrcpHandleInternalSearchReq:
	leavel	#9
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_avrcpHandleInternalGetFolderItemsReq:
	enterl	#10
?LBB_avrcpHandleInternalGetFolderItemsReq:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0010
	ld	X,@$XAP_AH
?LBB10:
	add	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0010
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L33
	ld	X,@(H'0006,Y)
?LBB11:
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	add	X,#H'0007
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	add	AL,#H'000B
	st	AL,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'000F,X)
	st	X,@(0,Y)
	ld	AL,#H'000A
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0071
	bsr	$_avrcpSendBrowsePdu
?LBE11:
	bra	(?L32)
?L33:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_avrcpGetFolderItemsCfm
?L32:
?LBE10:
?LBE_avrcpHandleInternalGetFolderItemsReq:
	leavel	#10
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_avrcpHandleInternalGetNumberOfItemsReq:
	enterl	#9
?LBB_avrcpHandleInternalGetNumberOfItemsReq:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0007
?LBB12:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0007
	bsr	_browseGrabSink
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L36
	ld	X,@(H'0006,Y)
?LBB13:
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(H'0006,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0075
	bsr	$_avrcpSendBrowsePdu
?LBE13:
	bra	(?L35)
?L36:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_avrcpGetNumberOfItemsCfm
?L35:
?LBE12:
?LBE_avrcpHandleInternalGetNumberOfItemsReq:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_avrcpHandleInternalGetItemAttributesReq:
	enterl	#10
?LBB_avrcpHandleInternalGetItemAttributesReq:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0012
	ld	X,@$XAP_AH
?LBB14:
	add	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0012
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L39
	ld	X,@(H'0006,Y)
?LBB15:
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	add	X,#H'0007
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	add	AL,#H'000B
	st	AL,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'000F,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'0010,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0011,X)
	st	X,@(0,Y)
	ld	AL,#H'000C
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0073
	bsr	$_avrcpSendBrowsePdu
?LBE15:
	bra	(?L38)
?L39:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_avrcpGetItemAttributesCfm
?L38:
?LBE14:
?LBE_avrcpHandleInternalGetItemAttributesReq:
	leavel	#10
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_avrcpHandleInternalChangePathReq:
	enterl	#10
?LBB_avrcpHandleInternalChangePathReq:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0011
?LBB16:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0011
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L42
	ld	X,@(H'0006,Y)
?LBB17:
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0008,X)
	add	X,#H'0009
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	add	AL,#H'000D
	st	AL,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0072
	bsr	$_avrcpSendBrowsePdu
?LBE17:
	bra	(?L41)
?L42:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_avrcpChangePathCfm
?L41:
?LBE16:
?LBE_avrcpHandleInternalChangePathReq:
	leavel	#10
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_avrcpHandleInternalBrowseSetPlayerReq:
	enterl	#9
?LBB_avrcpHandleInternalBrowseSetPlayerReq:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0008
?LBB18:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0008
	bsr	_browseGrabSink
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L45
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	X,@H'fff8
	st	AH,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	X,@H'fff8
	st	AL,@(H'0007,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0070
	bsr	$_avrcpSendBrowsePdu
	bra	(?L44)
?L45:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_avrcpBrowseSetPlayerCfm
?L44:
?LBE18:
?LBE_avrcpHandleInternalBrowseSetPlayerReq:
	leavel	#9
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_avbpHandleInternalWatchdogTimeout:
	enterl	#5
?LBB_avbpHandleInternalWatchdogTimeout:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L48
	ld	AL,@(H'0006,X)
	add	AL,#-H'0070
	cmp	AL,#(H'0001+H'0010)
	bcc	?L48
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE57,X)
	brxl
	.SEG	CONST
?JTBASE57:
	.CODE
?L57:
	.SEG	CONST
	dc	lwrd(?L50-?L57)
	dc	lwrd(?L51-?L57)
	dc	lwrd(?L53-?L57)
	dc	lwrd(?L54-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L52-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L48-?L57)
	dc	lwrd(?L55-?L57)
	.CODE
?L50:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000E
	bsr	$_avrcpBrowseSetPlayerCfm
	bra	(?L48)
?L51:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000E
	bsr	$_avrcpGetFolderItemsCfm
	bra	(?L48)
?L52:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000E
	bsr	$_avrcpGetNumberOfItemsCfm
	bra	(?L48)
?L53:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000E
	bsr	$_avrcpChangePathCfm
	bra	(?L48)
?L54:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000E
	bsr	$_avrcpGetItemAttributesCfm
	bra	(?L48)
?L55:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000E
	bsr	$_avrcpSearchCfm
?L48:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0006,X)
?LBE_avbpHandleInternalWatchdogTimeout:
	leavel	#5
$_avbpHandleResponse:
	enterl	#6
?LBB_avbpHandleResponse:
	st	AL,@(H'0002,Y)
?LBB19:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0004
	beq	?L60
	or	AL,#H'0080
	st	AL,@(-1,Y)
?L60:
	cmp	AH,#H'00A0
	bne	?L61
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0004
	bne	?L61
	ld	AL,#H'000A
	st	AL,@(-1,Y)
?L61:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	add	AL,#-H'0070
	cmp	AL,#(H'0001+H'0010)
	bcc	?L62
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE70,X)
	brxl
	.SEG	CONST
?JTBASE70:
	.CODE
?L70:
	.SEG	CONST
	dc	lwrd(?L63-?L70)
	dc	lwrd(?L64-?L70)
	dc	lwrd(?L66-?L70)
	dc	lwrd(?L67-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L65-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L62-?L70)
	dc	lwrd(?L68-?L70)
	.CODE
?L63:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_avrcpBrowseSetPlayerCfm
	bra	(?L71)
?L64:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_avrcpGetFolderItemsCfm
	bra	(?L71)
?L65:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_avrcpGetNumberOfItemsCfm
	bra	(?L71)
?L66:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_avrcpChangePathCfm
	bra	(?L71)
?L67:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_avrcpGetItemAttributesCfm
	bra	(?L71)
?L68:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(-1,Y)
	bsr	$_avrcpSearchCfm
?L71:
	st	AL,@(H'0003,Y)
?L62:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	ld	AH,@(H'0003,Y)
	bsr	$_SourceDrop
	ld	AL,@(H'0007,Y)
	sub	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_avbpSetChannelOnIncomingData
?LBE19:
?LBE_avbpHandleResponse:
	leavel	#6
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
_streamlineResponse:
; leaf function with empty stack frame
?LBB_streamlineResponse:
	cmp	AL,#H'0009
	beq	?L77
	cmp	AL,#H'000D
	beq	?L77
	cmp	AL,#H'000C
	beq	?L77
	cmp	AL,#H'000F
	bne	?L76
?L77:
	ld	AL,#H'0084
?L76:
?LBE_streamlineResponse:
	rts
_avbpGetErrorStatusCode:
	enterl	#2
?LBB_avbpGetErrorStatusCode:
	bsr	_streamlineResponse
	cmp	AL,#(H'0001+H'007F)
	bcc	?L83
	ld	AL,#H'0003
	bra	(?L82)
?L83:
	and	AL,#H'007F
?L82:
?LBE_avbpGetErrorStatusCode:
	leavel	#2
_browseSendErrorResponse:
	enterl	#10
?LBB_browseSendErrorResponse:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0007
?LBB20:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0007
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L86
?LBB21:
	ld	AL,@(H'000A,Y)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	st	X,@(0,Y)
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_avrcpSendBrowsePdu
?LBE21:
	bra	(?L85)
?L86:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?L85:
?LBE20:
?LBE_browseSendErrorResponse:
	leavel	#10
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_avrcpHandleSearchReq:
	enterl	#8
?LBB_avrcpHandleSearchReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB22:
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'000F
	cmp	AH,#H'000F
	beq	?L89
	ld	AL,#H'008F
	bra	(?L88)
?L89:
	ld	AL,@(H'0008,Y)
	cmp	AL,#(H'0001+H'0003)
	bcc	?L90
	ld	AL,#H'0081
	bra	(?L88)
?L90:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	asl	#H'0008
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	or	AL,@(H'0004,Y)
	st	AL,@(H'0004,Y)
	add	AL,#H'0004
	cmp	AL,@(H'0008,Y)
	bcz	?L91
	ld	AL,#H'0082
	bra	(?L88)
?L91:
?LBB23:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E4C
	bsr	$_MessageSend
?LBE23:
	ld	AL,#H'0084
?L88:
?LBE22:
?LBE_avrcpHandleSearchReq:
	leavel	#8
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
$_avrcpHandleGetFolderItemsReq:
	enterl	#7
?LBB_avrcpHandleGetFolderItemsReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB24:
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'0009
	bcz	?L96
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0009,X)
	ld	AL,#-H'0001
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'00FD)
	bcc	?L97
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	add	AL,#H'000A
	ld	AH,@(H'0007,Y)
	cmp	AH,@$XAP_AL
	bcc	?L97
	ld	AL,#H'0082
	bra	(?L95)
?L97:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0003
	bcz	?L100
	ld	AL,#H'008A
	bra	(?L95)
?L96:
	ld	AL,#H'0081
	bra	(?L95)
?L100:
?LBB25:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	cmp	AH,@(H'0004,X)
	bcs	?L101
	bne	?L109
	cmp	AL,@(H'0005,X)
	bcz	?L101
?L109:
	ld	AL,@$XAP_UXL
	bsr	$_free
	ld	AL,#H'008B
	bra	(?L95)
?L101:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0009,X)
	ld	X,@(H'0004,Y)
	st	AH,@(H'0006,X)
	cmp	AH,#H'0000
	beq	?L103
	cmp	AH,#H'00FF
	bne	?L102
?L103:
	ld	AL,#H'0000
	bra	(?L105)
?L102:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
?L105:
	ld	X,@(H'0004,Y)
	st	AL,@(H'0007,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E48
	bsr	$_MessageSend
?LBE25:
	ld	AL,#H'0084
?L95:
?LBE24:
?LBE_avrcpHandleGetFolderItemsReq:
	leavel	#7
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
$_avrcpHandleGetNumberItemsReq:
	enterl	#5
?LBB_avrcpHandleGetNumberItemsReq:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB26:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	tst	@(H'0005,Y)
	beq	?L112
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0003
	bcz	?L114
	ld	AL,#H'008A
	bra	(?L111)
?L112:
	ld	AL,#H'0081
	bra	(?L111)
?L114:
?LBB27:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0002,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E50
	bsr	$_MessageSend
?LBE27:
	ld	AL,#H'0084
?L111:
?LBE26:
?LBE_avrcpHandleGetNumberItemsReq:
	leavel	#5
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
$_avrcpHandleGetItemAttributesReq:
	enterl	#7
?LBB_avrcpHandleGetItemAttributesReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB28:
	ld	X,@(H'0002,X)
	st	X,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'000B
	bcz	?L117
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000B,X)
	ld	AL,#-H'0001
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'00FD)
	bcc	?L118
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	add	AL,#H'000C
	ld	AH,@(H'0007,Y)
	cmp	AH,@$XAP_AL
	bcc	?L118
	ld	AL,#H'0082
	bra	(?L116)
?L118:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0003
	bcz	?L121
	ld	AL,#H'008A
	bra	(?L116)
?L117:
	ld	AL,#H'0081
	bra	(?L116)
?L121:
?LBB29:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0009,X)
	asl	#H'0008
	ld	AH,@(H'000A,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000B,X)
	ld	X,@(H'0004,Y)
	st	AH,@(H'0007,X)
	cmp	AH,#H'0000
	beq	?L123
	cmp	AH,#H'00FF
	bne	?L122
?L123:
	ld	AL,#H'0000
	bra	(?L125)
?L122:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
?L125:
	ld	X,@(H'0004,Y)
	st	AL,@(H'0008,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E4A
	bsr	$_MessageSend
?LBE29:
	ld	AL,#H'0084
?L116:
?LBE28:
?LBE_avrcpHandleGetItemAttributesReq:
	leavel	#7
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
$_avrcpHandleChangePathReq:
	enterl	#7
?LBB_avrcpHandleChangePathReq:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
?LBB30:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	ld	AH,#H'0084
	st	AH,@(H'0003,Y)
	cmp	AL,#H'000A
	bcz	?L131
?LBB31:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0007
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
	st	X,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E46
	bsr	$_MessageSend
?LBE31:
	bra	(?L132)
?L131:
	ld	AH,#H'0081
	st	AH,@(H'0003,Y)
?L132:
?LBE30:
	ld	AL,@(H'0003,Y)
?LBE_avrcpHandleChangePathReq:
	leavel	#7
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
$_avrcpHandleSetBrowsedPlayerReq:
	enterl	#6
?LBB_avrcpHandleSetBrowsedPlayerReq:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
?LBB32:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	ld	AH,#H'0084
	st	AH,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L135
?LBB33:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E44
	bsr	$_MessageSend
?LBE33:
	bra	(?L136)
?L135:
	ld	AH,#H'0081
	st	AH,@(H'0003,Y)
?L136:
?LBE32:
	ld	AL,@(H'0003,Y)
?LBE_avrcpHandleSetBrowsedPlayerReq:
	leavel	#6
;.stabn	192,0,0,?LBB32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;.stabn	224,0,0,?LBE32
$_avrcpHandleNowPlayingCommand:
	enterl	#7
?LBB_avrcpHandleNowPlayingCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
?LBB34:
	cmp	AL,#(H'0001+H'000A)
	bcc	?L139
	ld	AL,#H'0074
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0082
	bsr	$_avrcpSendRejectMetadataResponse
	bra	(?L138)
?L139:
?LBB35:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0074
	bne	?L141
	ld	AL,#H'5E39
	st	AL,@(H'0003,Y)
	bra	(?L142)
?L141:
	ld	X,#H'5E3B
	st	X,@(H'0003,Y)
?L142:
	ld	AH,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	st	AH,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0009,X)
	asl	#H'0008
	ld	AH,@(H'000A,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0003,Y)
	bsr	$_MessageSend
?L138:
?LBE35:
?LBE34:
?LBE_avrcpHandleNowPlayingCommand:
	leavel	#7
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_avrcpHandleAddressedPlayerCommand:
	enterl	#5
?LBB_avrcpHandleAddressedPlayerCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
?LBB36:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L145
	ld	AL,#H'0060
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0082
	bsr	$_avrcpSendRejectMetadataResponse
	bra	(?L144)
?L145:
?LBB37:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E37
	bsr	$_MessageSend
?L144:
?LBE37:
?LBE36:
?LBE_avrcpHandleAddressedPlayerCommand:
	leavel	#5
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_avrcpHandleInternalGetFolderItemsRes:
	enterl	#10
?LBB_avrcpHandleInternalGetFolderItemsRes:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB38:
	ld	AL,@(0,X)
	bsr	_streamlineResponse
	cmp	AL,#H'0084
	bne	?L148
	ld	AL,#H'000B
	ld	X,@(H'0006,Y)
?LBB39:
	add	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'000B
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L149
	ld	X,@(H'0006,Y)
?LBB40:
	ld	AL,@(0,X)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0007,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'0008,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0009,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'000A,X)
	st	X,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0071
	bsr	$_avrcpSendBrowsePdu
?LBE40:
	bra	(?L147)
?L149:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?LBE39:
	bra	(?L147)
?L148:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0071
	bsr	_browseSendErrorResponse
?L147:
?LBE38:
?LBE_avrcpHandleInternalGetFolderItemsRes:
	leavel	#10
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_avrcpHandleInternalGetNumberOfItemsRes:
	enterl	#10
?LBB_avrcpHandleInternalGetNumberOfItemsRes:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB41:
	ld	AL,@(0,X)
	bsr	_streamlineResponse
	cmp	AL,#H'0084
	bne	?L154
	ld	AL,#H'000D
?LBB42:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'000D
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L155
	ld	X,@(H'0006,Y)
?LBB43:
	ld	AL,@(0,X)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0007,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'0008,X)
	add	X,#H'0009
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0075
	bsr	$_avrcpSendBrowsePdu
?LBE43:
	bra	(?L153)
?L155:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?LBE42:
	bra	(?L153)
?L154:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0075
	bsr	_browseSendErrorResponse
?L153:
?LBE41:
?LBE_avrcpHandleInternalGetNumberOfItemsRes:
	leavel	#10
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
$_avrcpHandleInternalGetItemAttributesRes:
	enterl	#10
?LBB_avrcpHandleInternalGetItemAttributesRes:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB44:
	ld	AL,@(0,X)
	bsr	_streamlineResponse
	cmp	AL,#H'0084
	bne	?L160
	ld	AL,#H'0008
	ld	X,@(H'0006,Y)
?LBB45:
	add	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0008
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L161
	ld	X,@(H'0006,Y)
?LBB46:
	ld	AL,@(0,X)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0007,X)
	st	X,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0073
	bsr	$_avrcpSendBrowsePdu
?LBE46:
	bra	(?L159)
?L161:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?LBE45:
	bra	(?L159)
?L160:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0073
	bsr	_browseSendErrorResponse
?L159:
?LBE44:
?LBE_avrcpHandleInternalGetItemAttributesRes:
	leavel	#10
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
$_avrcpHandleInternalSearchRes:
	enterl	#10
?LBB_avrcpHandleInternalSearchRes:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB47:
	ld	AL,@(0,X)
	bsr	_streamlineResponse
	cmp	AL,#H'0084
	bne	?L166
	ld	AL,#H'000D
?LBB48:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'000D
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L167
	ld	X,@(H'0006,Y)
?LBB49:
	ld	AL,@(0,X)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0007,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'0008,X)
	add	X,#H'0009
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0080
	bsr	$_avrcpSendBrowsePdu
?LBE49:
	bra	(?L165)
?L167:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?LBE48:
	bra	(?L165)
?L166:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0080
	bsr	_browseSendErrorResponse
?L165:
?LBE47:
?LBE_avrcpHandleInternalSearchRes:
	leavel	#10
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
$_avrcpHandleInternalChangePathRes:
	enterl	#10
?LBB_avrcpHandleInternalChangePathRes:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB50:
	ld	AL,@(0,X)
	bsr	_streamlineResponse
	cmp	AL,#H'0084
	bne	?L172
	ld	AL,#H'000B
?LBB51:
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'000B
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L173
	ld	X,@(H'0006,Y)
?LBB52:
	ld	AL,@(0,X)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	add	X,#H'0007
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0072
	bsr	$_avrcpSendBrowsePdu
?LBE52:
	bra	(?L171)
?L173:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?LBE51:
	bra	(?L171)
?L172:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0072
	bsr	_browseSendErrorResponse
?L171:
?LBE50:
?LBE_avrcpHandleInternalChangePathRes:
	leavel	#10
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
$_avrcpHandleInternalBrowseSetPlayerRes:
	enterl	#10
?LBB_avrcpHandleInternalBrowseSetPlayerRes:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB53:
	ld	AL,@(0,X)
	bsr	_streamlineResponse
	cmp	AL,#H'0084
	bne	?L178
	ld	AL,#H'0010
	ld	X,@(H'0006,Y)
?LBB54:
	add	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0010
	bsr	_browseGrabSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L179
	ld	X,@(H'0006,Y)
?LBB55:
	ld	AL,@(0,X)
	bsr	_avbpGetErrorStatusCode
	ld	X,@(H'0007,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0007,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'0008,X)
	add	X,#H'0009
	st	X,@(-1,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(-1,Y)
	bsr	$_convertUint32ToUint8Values
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'000D,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	st	AL,@(H'000E,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'000F,X)
	st	X,@(0,Y)
	ld	AL,#H'000A
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0070
	bsr	$_avrcpSendBrowsePdu
	ld	AL,#H'0083
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'1000
	bsr	$_avrcpRejectRegisterNotifications
?LBE55:
	bra	(?L177)
?L179:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
?LBE54:
	bra	(?L177)
?L178:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0070
	bsr	_browseSendErrorResponse
?L177:
?LBE53:
?LBE_avrcpHandleInternalBrowseSetPlayerRes:
	leavel	#10
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
$_avbpHandleInternalSendResponseTimeout:
	enterl	#4
?LBB_avbpHandleInternalSendResponseTimeout:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L184
	ld	AL,#H'0083
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0006,X)
	bsr	_browseSendErrorResponse
?L184:
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0006,X)
?LBE_avbpHandleInternalSendResponseTimeout:
	leavel	#4
$_avbpHandleCommand:
	enterl	#7
?LBB_avbpHandleCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
?LBB56:
	ld	AL,#H'0080
	st	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0070
	cmp	AL,#(H'0001+H'0010)
	bcc	?L194
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE195,X)
	brxl
	.SEG	CONST
?JTBASE195:
	.CODE
?L195:
	.SEG	CONST
	dc	lwrd(?L188-?L195)
	dc	lwrd(?L189-?L195)
	dc	lwrd(?L191-?L195)
	dc	lwrd(?L192-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L190-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L194-?L195)
	dc	lwrd(?L193-?L195)
	.CODE
?L188:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleSetBrowsedPlayerReq
	st	AL,@(H'0003,Y)
	ld	X,#H'0002
	bra	(?L198)
?L189:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleGetFolderItemsReq
	st	AL,@(H'0003,Y)
	ld	X,#H'000A
	bra	(?L198)
?L190:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleGetNumberItemsReq
	st	AL,@(H'0003,Y)
	ld	X,#H'0001
	bra	(?L198)
?L191:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleChangePathReq
	st	AL,@(H'0003,Y)
	ld	X,#H'000B
	bra	(?L198)
?L192:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleGetItemAttributesReq
	st	AL,@(H'0003,Y)
	ld	X,#H'000C
	bra	(?L198)
?L193:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleSearchReq
	st	AL,@(H'0003,Y)
	ld	X,#H'0004
?L198:
	st	X,@(H'0004,Y)
	bra	(?L187)
?L194:
	ld	AL,#H'00A0
	st	AL,@(H'0002,Y)
?L187:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	ld	AH,@(H'0004,Y)
	bsr	$_SourceDrop
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0084
	bne	?L196
	ld	AL,@(H'0008,Y)
	sub	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_avbpSetChannelOnIncomingData
	bra	(?L186)
?L196:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_browseSendErrorResponse
?L186:
?LBE56:
?LBE_avbpHandleCommand:
	leavel	#7
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
$_avbpSetChannelOutgoingData:
	enterl	#8
?LBB_avbpSetChannelOutgoingData:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB57:
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	bsr	$_SourceDrop
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	tst	@(H'0008,Y)
	beq	?L201
	ld	AL,@$XAP_UXL
	ld	AH,#H'0018
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	bra	(?L202)
?L201:
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'4E20
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageSendLater
?L202:
	ld	AL,@(H'0005,Y)
	bsr	$_SourceBoundary
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0038
	bsr	$_MessageSend
?L200:
?LBE57:
?LBE_avbpSetChannelOutgoingData:
	leavel	#8
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
$_avbpSetChannelOnIncomingData:
	enterl	#7
?LBB_avbpSetChannelOnIncomingData:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	tst	@(H'0004,Y)
	bne	?L205
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	bra	(?L204)
?L205:
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'4E20
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0018
	bsr	$_MessageSendLater
?L204:
?LBE_avbpSetChannelOnIncomingData:
	leavel	#7
$_avrcpSendBrowsePdu:
	enterl	#5
?LBB_avrcpSendBrowsePdu:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
?LBB58:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_avbpAvctpFrameHeader
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0006,Y)
	add	X,@(H'0008,Y)
	st	X,@(H'0006,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	ld	X,@(H'0005,Y)
	st	AH,@(H'0004,X)
	ld	AL,@(H'0006,Y)
	and	AL,#H'00FF
	st	AL,@(H'0005,X)
	tst	@(H'0008,Y)
	beq	?L208
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0007,Y)
	bsr	$_StreamMove
?L208:
	ld	AH,@(H'0006,Y)
	add	AH,#H'0006
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_SinkFlush
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_avbpSetChannelOutgoingData
	tst	@(H'0007,Y)
	beq	?L207
?LBB59:
	ld	AL,@(H'0007,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_SourceDrop
?L207:
?LBE59:
?LBE58:
?LBE_avrcpSendBrowsePdu:
	leavel	#5
$_avbpHandleReceivedData:
	enterl	#11
?LBB_avbpHandleReceivedData:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB60:
	ld	AL,@(H'0003,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0003,Y)
	bra	(?L225)
?L224:
?LBB61:
	ld	AL,@(H'0003,Y)
	bsr	$_SourceMap
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_avbpAvctpProcessHeader
	cmp	AL,#H'0000
	beq	?L216
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0006
	bcz	?L216
	ld	X,@(H'0005,Y)
?LBB62:
	ld	X,@(H'0003,X)
	st	X,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	and	AL,#H'0002
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	asl	#H'0008
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	or	AL,@(H'0006,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0006
	bsr	$_SourceDrop
	ld	AL,@(H'0004,Y)
	add	AL,#-H'0006
	st	AL,@(H'0004,Y)
	cmp	AL,@(H'0006,Y)
	bcc	?L217
	st	AL,@(H'0006,Y)
?L217:
	tst	@(H'0008,Y)
	bne	?L218
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avbpHandleCommand
	bra	(?L225)
?L218:
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0002,Y)
	cmp	AL,@(H'0006,X)
	beq	?L221
	cmp	AL,#H'00A0
	bne	?L220
?L221:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avbpHandleResponse
	bra	(?L225)
?L220:
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0006,Y)
	bra	(?L226)
?L216:
?LBE62:
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
?L226:
	bsr	$_SourceDrop
?L225:
?LBE61:
	ld	AL,@(H'0003,Y)
	bsr	$_SourceBoundary
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L213
	ld	X,@(H'0002,Y)
	tst	@(H'0004,X)
	beq	?L224
?L213:
?LBE60:
?LBE_avbpHandleReceivedData:
	leavel	#11
;.stabn	192,0,0,?LBB60
;.stabn	192,0,0,?LBB61
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
;.stabn	224,0,0,?LBE61
;.stabn	224,0,0,?LBE60
	ENDMOD

;# Function pattern *movqi2 used[0] = 448 used[1] = 121 used[3] = 6 total = 575
;# Function pattern *movqi3 used[0] = 678 total = 678
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[2] = 11 used[3] = 22 total = 33
;# Function pattern *addqi2 used[0] = 39 used[2] = 2 total = 41
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 15 total = 15
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 13 total = 13
;# Function pattern *ashlqi3 used[0] = 14 total = 14
;# Function pattern jump used[0] = 69 total = 69
;# Function pattern *call1 used[0] = 71 total = 71
;# Function pattern *call_value1 used[0] = 99 total = 99
;# Function pattern tablejump_1 used[0] = 3 total = 3
;# Function pattern movstrqi+2 used[0] = 8 total = 8
;# Function pattern movstrqi+3 used[0] = 18 used[1] = 7 total = 25
;# Function pattern movstrqi+4 used[1] = 9 total = 9
;# Function pattern movstrqi+5 used[0] = 41 total = 41
;# Function pattern movstrqi+7 used[1] = 1 total = 1
	MODULE	avrcp_caps_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpSendGetCapsCfm:
	enterl	#5
?LBB_avrcpSendGetCapsCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0006,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E0C
	bsr	$_MessageSend
?LBE2:
?LBE_avrcpSendGetCapsCfm:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpHandleGetCapsResponse:
	enterl	#13
?LBB_avrcpHandleGetCapsResponse:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_AH
	bsr	$_convertResponseToStatus
	st	AL,@(H'0008,Y)
	ld	X,#H'0000
	st	X,@(H'0009,Y)
	st	X,@(H'000A,Y)
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'000A
	bne	?L3
	tst	@(H'000F,Y)
	beq	?L5
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	add	AL,#H'0080
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#-H'0001
	bra	(?L11)
?L3:
	ld	X,@(H'000D,Y)
	cmp	X,#(H'0001+H'0001)
	bcc	?L5
	ld	AL,@(H'000F,Y)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L7
	ld	AL,#H'0000
?L11:
	st	AL,@(H'000F,Y)
	bra	(?L5)
?L7:
	ld	X,@(H'000E,Y)
	ld	X,@(0,X)
	st	X,@(H'0009,Y)
	ld	X,@(H'000E,Y)
	ld	X,@(H'0001,X)
	st	X,@(H'000A,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#-H'0002
	st	AL,@(H'000F,Y)
	ld	X,@(H'000E,Y)
	add	X,#H'0002
	st	X,@(H'000E,Y)
?L5:
	tst	@(H'000F,Y)
	beq	?L9
	ld	AL,@(H'000F,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'000E,Y)
	bsr	$_avrcpSourceFromConstData
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L9
	ld	AL,#H'0000
	st	AL,@(H'000F,Y)
?L9:
	ld	X,@(H'000D,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0002,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpSendGetCapsCfm
?LBE3:
?LBE_avrcpHandleGetCapsResponse:
	leavel	#13
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpHandleInternalGetCapsResponse:
	enterl	#16
?LBB_avrcpHandleInternalGetCapsResponse:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB4:
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
	bsr	$_avrcpGetDeviceTask
	st	AL,@(H'000D,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L14
?LBB5:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0003
	bne	?L15
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0002
	cmp	AH,#H'0000
	beq	?L16
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L19
	ld	AL,#H'0001
	bra	(?L26)
?L16:
	ld	X,#H'0002
	st	X,@(-1,Y)
	bra	(?L19)
?L15:
	ld	AL,#H'0003
?L26:
	st	AL,@(-1,Y)
?L19:
	ld	X,#H'0002
	add	X,@(-1,Y)
	st	X,@(H'000C,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0003
	bne	?L20
	ld	AL,@(H'0002,X)
	add	AL,@(-1,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0002
	cmp	AH,#H'0000
	beq	?L21
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L25
	ld	AL,#H'000D
	st	AL,@(H'0007,Y)
	bra	(?L25)
?L21:
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AL,#H'0002
	st	AL,@(H'0008,Y)
	bra	(?L25)
?L20:
	ld	X,@(H'000B,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	udiv	#H'0003
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'0019
	st	AL,@(H'0008,Y)
	ld	AL,#H'0058
	st	AL,@(H'0009,Y)
?LBE5:
	bra	(?L25)
?L14:
	ld	AL,#H'0000
	ld	X,@(H'000B,Y)
	st	AL,@(H'0002,X)
?L25:
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	ld	X,@(H'000B,Y)
	add	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE4:
?LBE_avrcpHandleInternalGetCapsResponse:
	leavel	#16
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_avrcpHandleGetCapsCommand:
	enterl	#5
?LBB_avrcpHandleGetCapsCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E0D
	bsr	$_MessageSend
?LBE6:
?LBE_avrcpHandleGetCapsCommand:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 61 used[1] = 6 total = 67
;# Function pattern *movqi3 used[0] = 69 total = 69
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 6 used[2] = 2 total = 8
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *udivqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 2 total = 7
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	avrcp_connect_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_retx_conftab:
	dc	H'8000
	dc	H'0012
	dc	H'0300
	dc	H'0001
	dc	H'02A0
	dc	H'0102
	dc	H'014F
	dc	H'0704
	dc	H'0000
	dc	H'0000
	dc	H'FFFF
	dc	H'FFFF
	dc	H'0316
	dc	H'FFFF
	dc	H'0000
	dc	H'0021
	dc	H'FFFF
$_sig_conftab:
	dc	H'8000
	dc	H'0012
	dc	H'0301
	dc	H'0001
	dc	H'02A0
	dc	H'0102
	dc	H'0030
	dc	H'0704
	dc	H'0000
	dc	H'0000
	dc	H'FFFF
	dc	H'FFFF
	dc	H'0021
	dc	H'FFFF
	.CODE
$_avrcpSendConnectCfmToApp:
	enterl	#7
?LBB_avrcpSendConnectCfmToApp:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0006,X)
	bra	(?L3)
?L2:
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	st	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001C
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendConditionally
?L3:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E01
	bsr	$_MessageSend
?LBE2:
?LBE_avrcpSendConnectCfmToApp:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpSendBrowseConnectCfmToApp:
	enterl	#6
?LBB_avrcpSendBrowseConnectCfmToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	tst	@(H'0002,Y)
	bne	?L5
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	add	AL,#-H'0010
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	bra	(?L6)
?L5:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_avrcpResetAvbpValues
?L6:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E42
	bsr	$_MessageSend
?LBE3:
?LBE_avrcpSendBrowseConnectCfmToApp:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpHandleInternalConnectReq:
	enterl	#6
?LBB_avrcpHandleInternalConnectReq:
	ld	X,@$XAP_AL
	ld	AL,@(H'0020,X)
	and	AL,#H'3FFF
	or	AL,#-H'8000
	st	AL,@(H'0020,X)
	ld	AL,#H'0017
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'000E
	st	AL,@(H'0002,Y)
	ld	AL,#($_sig_conftab)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UXL
	bsr	$_ConnectionL2capConnectRequest
?LBE_avrcpHandleInternalConnectReq:
	leavel	#6
$_avrcpHandleInternalBrowseConnectReq:
	enterl	#6
?LBB_avrcpHandleInternalBrowseConnectReq:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AL
?LBB4:
	ld	X,@(H'0002,X)
	st	X,@(-1,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	beq	?L9
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
	bra	(?L12)
?L9:
	ld	AH,@(H'001F,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	bne	?L10
	ld	X,@H'fff8
	ld	AL,@(H'0007,X)
	and	AL,#-H'0C01
	or	AL,#H'0800
	st	AL,@(H'0007,X)
	ld	AL,#H'001B
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0011
	st	AL,@(H'0002,Y)
	ld	AL,#($_retx_conftab)
	st	AL,@(H'0003,Y)
	ld	X,@(-1,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@H'fff9
	bsr	$_ConnectionL2capConnectRequest
	bra	(?L8)
?L10:
	ld	AL,@(-1,Y)
	ld	AH,#H'000D
?L12:
	bsr	$_avrcpSendBrowseConnectCfmToApp
?L8:
?LBE4:
?LBE_avrcpHandleInternalBrowseConnectReq:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpHandleInternalL2capConnectRes:
	enterl	#7
?LBB_avrcpHandleInternalL2capConnectRes:
	ld	X,@$XAP_AH
	ld	AH,#H'0017
	st	AH,@(0,Y)
	ld	AH,@(0,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0002,Y)
	ld	AH,#H'000E
	st	AH,@(H'0003,Y)
	ld	AH,#($_sig_conftab)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0002,X)
	bsr	$_ConnectionL2capConnectResponse
?LBE_avrcpHandleInternalL2capConnectRes:
	leavel	#7
$_avrcpHandleInternalBrowseConnectRes:
	enterl	#9
?LBB_avrcpHandleInternalBrowseConnectRes:
	ld	X,@$XAP_AL
?LBB5:
	ld	X,@(H'0002,X)
	st	X,@(H'0005,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L17
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bra	(?L21)
?L17:
	ld	AL,#H'0000
?L21:
	st	AL,@(H'0006,Y)
	ld	AL,#H'001B
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0011
	st	AL,@(H'0003,Y)
	ld	AL,#($_retx_conftab)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0006,Y)
	bsr	$_ConnectionL2capConnectResponse
	tst	@(H'0006,Y)
	beq	?L19
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0003,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,X)
	and	AL,#-H'0C01
	or	AL,#H'0800
	st	AL,@(H'0007,X)
	bra	(?L16)
?L19:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	bsr	$_avrcpResetAvbpValues
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0003
	bsr	$_avrcpSendBrowseConnectCfmToApp
?L16:
?LBE5:
?LBE_avrcpHandleInternalBrowseConnectRes:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpHandleInternalBrowseDisconnectReq:
	enterl	#4
?LBB_avrcpHandleInternalBrowseDisconnectReq:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	cmp	AL,#H'0000
	beq	?L24
	ld	AH,@(H'0007,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L24
	ld	AL,@$XAP_AH
	and	AL,#-H'0C01
	or	AL,#H'0800
	st	AL,@(H'0007,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0003,X)
	bsr	$_ConnectionL2capDisconnectRequest
	bra	(?L23)
?L24:
	tst	@H'fff8
	beq	?L23
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'5E43
	ld	AH,#H'000C
	bsr	$_avrcpSendCommonCfmMessageToApp
?L23:
?LBE_avrcpHandleInternalBrowseDisconnectReq:
	leavel	#4
$_avrcpHandleInternalDisconnectReq:
	enterl	#5
?LBB_avrcpHandleInternalDisconnectReq:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0020,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L29
	ld	AL,@$XAP_AH
	and	AL,#H'3FFF
	or	AL,#-H'8000
	st	AL,@(H'0020,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0007,X)
	bsr	$_ConnectionL2capDisconnectRequest
	bra	(?L28)
?L29:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'5E03
	ld	AH,#H'0005
	bsr	$_avrcpSendCommonCfmMessageToApp
?L28:
?LBE_avrcpHandleInternalDisconnectReq:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 75 used[1] = 7 total = 82
;# Function pattern *movqi3 used[0] = 91 total = 91
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *andqi3 used[0] = 10 total = 10
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 3 total = 5
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	avrcp_metadata_transfer
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_avrcpGetCommandType:
; leaf function with empty stack frame
?LBB_avrcpGetCommandType:
?LBB2:
	cmp	AL,#H'0031
	beq	?L3
	cmp	AL,#(H'0001+H'0031)
	bcc	?L13
	cmp	AL,#H'0014
	beq	?L10
	cmp	AL,#H'0014
	bcs	?L11
	add	AL,#-H'0017
	cmp	AL,#(H'0001+H'0001)
	bcc	?L11
	bra	(?L10)
?L13:
	cmp	AL,#H'0060
	beq	?L10
	cmp	AL,#(H'0001+H'0060)
	bcc	?L14
	cmp	AL,#H'0050
	beq	?L10
	bra	(?L11)
?L14:
	cmp	AL,#H'0074
	beq	?L10
	cmp	AL,#H'0090
	beq	?L10
	bra	(?L11)
?L3:
	ld	AL,#H'0003
	bra	(?L2)
?L10:
	ld	AL,#H'0000
	bra	(?L2)
?L11:
	ld	AL,#H'0001
?L2:
?LBE2:
?LBE_avrcpGetCommandType:
	rts
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_avrcpGetMetadataPacketType:
	enterl	#2
?LBB_avrcpGetMetadataPacketType:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB3:
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	cmp	AL,@H'fff8
	bne	?L23
	and	AH,#H'0003
	bra	(?L22)
?L23:
	ld	X,@H'fff9
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	or	AL,@H'fff8
	st	AL,@H'fffa
	cmp	AL,#H'0003
	bne	?L24
	tst	@H'fff8
	beq	?L24
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L24
	ld	X,#H'0002
	st	X,@H'fffa
?L24:
	ld	AH,@H'fffa
?L22:
?LBE3:
	ld	AL,@$XAP_AH
?LBE_avrcpGetMetadataPacketType:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_convertPduToMsgId:
	enterl	#2
?LBB_convertPduToMsgId:
?LBB4:
	ld	AH,#H'0000
	add	AL,#-H'0011
	cmp	AL,#(H'0001+H'007F)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE43,X)
	brxl
	.SEG	CONST
?JTBASE43:
	.CODE
?L43:
	.SEG	CONST
	dc	lwrd(?L29-?L43)
	dc	lwrd(?L30-?L43)
	dc	lwrd(?L31-?L43)
	dc	lwrd(?L38-?L43)
	dc	lwrd(?L32-?L43)
	dc	lwrd(?L33-?L43)
	dc	lwrd(?L37-?L43)
	dc	lwrd(?L36-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L34-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L35-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L39-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L40-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L28-?L43)
	dc	lwrd(?L41-?L43)
	.CODE
?L29:
	ld	AH,#H'5E0E
	bra	(?L28)
?L30:
	ld	AH,#H'5E11
	bra	(?L28)
?L31:
	ld	AH,#H'5E12
	bra	(?L28)
?L32:
	ld	AH,#H'5E16
	bra	(?L28)
?L33:
	ld	AH,#H'5E18
	bra	(?L28)
?L34:
	ld	AH,#H'5E1A
	bra	(?L28)
?L35:
	ld	AH,#H'5E29
	bra	(?L28)
?L36:
	ld	AH,#H'5E2E
	bra	(?L28)
?L37:
	ld	AH,#H'5E30
	bra	(?L28)
?L38:
	ld	AH,#H'5E14
	bra	(?L28)
?L39:
	ld	AH,#H'5E38
	bra	(?L28)
?L40:
	ld	AH,#H'5E3A
	bra	(?L28)
?L41:
	ld	AH,#H'5E3C
?L28:
?LBE4:
	ld	AL,@$XAP_AH
?LBE_convertPduToMsgId:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpSendMetadataFailCfmToClient:
	enterl	#10
?LBB_avrcpSendMetadataFailCfmToClient:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001D,X)
	cmp	AL,#H'0017
	beq	?L67
	cmp	AL,#(H'0001+H'0017)
	bcc	?L74
	cmp	AL,#H'0012
	beq	?L48
	cmp	AL,#(H'0001+H'0012)
	bcc	?L75
	cmp	AL,#H'0006
	beq	?L64
	cmp	AL,#(H'0001+H'0006)
	bcc	?L76
	cmp	AL,#H'0005
	beq	?L63
	bra	(?L45)
?L76:
	cmp	AL,#H'0010
	beq	?L46
	cmp	AL,#H'0011
	beq	?L47
	bra	(?L45)
?L75:
	cmp	AL,#H'0014
	beq	?L50
	cmp	AL,#H'0014
	bcs	?L49
	cmp	AL,#H'0015
	beq	?L51
	cmp	AL,#H'0016
	beq	?L52
	bra	(?L45)
?L74:
	cmp	AL,#H'0050
	beq	?L68
	cmp	AL,#(H'0001+H'0050)
	bcc	?L77
	cmp	AL,#H'0020
	beq	?L53
	cmp	AL,#(H'0001+H'0020)
	bcc	?L78
	cmp	AL,#H'0018
	beq	?L66
	bra	(?L45)
?L78:
	cmp	AL,#H'0030
	beq	?L54
	cmp	AL,#H'0041
	beq	?L65
	bra	(?L45)
?L77:
	cmp	AL,#H'0090
	beq	?L71
	cmp	AL,#(H'0001+H'0090)
	bcc	?L79
	cmp	AL,#H'0060
	beq	?L69
	cmp	AL,#H'0074
	beq	?L71
	bra	(?L45)
?L79:
	add	AL,#-H'00F1
	cmp	AL,#(H'0001+H'0007)
	bcc	?L45
	bra	(?L62)
?L46:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendGetCapsCfm
	bra	(?L45)
?L47:
	ld	AL,#H'5E0E
	bra	(?L81)
?L48:
	ld	AL,#H'5E11
	bra	(?L81)
?L49:
	ld	AL,#H'5E12
	bra	(?L81)
?L50:
	ld	AL,#H'5E14
	bra	(?L80)
?L51:
	ld	AL,#H'5E16
	bra	(?L81)
?L52:
	ld	AL,#H'5E18
	bra	(?L81)
?L53:
	ld	AL,#H'5E1A
?L81:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendCommonFragmentedMetadataCfm
	bra	(?L45)
?L54:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendGetPlayStatusCfm
	bra	(?L45)
?L62:
	ld	X,@(H'0006,Y)
	ld	AL,@(H'001D,X)
	add	AL,#-H'00F0
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendRegisterNotificationFailCfm
	bra	(?L45)
?L63:
	ld	AL,#H'5E2A
	bra	(?L80)
?L64:
	ld	AL,#H'5E2C
	bra	(?L80)
?L65:
	ld	AL,#H'5E29
	bra	(?L80)
?L66:
	ld	AL,#H'5E2E
	bra	(?L80)
?L67:
	ld	AL,#H'5E30
	bra	(?L80)
?L68:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendAbsoluteVolumeCfm
	bra	(?L45)
?L69:
	ld	AL,#H'5E38
	bra	(?L80)
?L71:
	ld	X,@(H'0006,Y)
	ld	AL,@(H'001D,X)
	bsr	_convertPduToMsgId
?L80:
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendCommonStatusCfm
?L45:
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'001D,X)
?LBE_avrcpSendMetadataFailCfmToClient:
	leavel	#10
$_avrcpHandleMetadataResponse:
	enterl	#14
?LBB_avrcpHandleMetadataResponse:
	st	AL,@(H'0004,Y)
	st	AH,@H'fff9
	ld	X,@$XAP_AH
?LBB5:
	ld	AL,@(H'0006,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'001A,X)
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00F0
	ld	AH,@$XAP_AL
	lsr	#H'0004
	st	AH,@(H'0007,Y)
	ld	X,@H'fff9
	ld	AL,@(H'0008,X)
	asl	#H'0008
	or	AL,@(H'0009,X)
	st	AL,@H'fff8
	ld	X,@(0,X)
	st	X,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	X,#H'000A
	add	X,@H'fff8
	st	X,@H'fffa
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0009
	bcz	?L139
	ld	AL,@(H'000E,Y)
	cmp	AL,@$XAP_UXL
	bcz	?L102
	ld	AH,@$XAP_AL
	sub	AH,@$XAP_UXL
	ld	X,@(H'0004,Y)
	ld	AL,@(H'001B,X)
	sub	AL,@$XAP_AH
	st	AL,@(H'001B,X)
?L102:
	ld	AL,@(H'000E,Y)
	cmp	AL,@H'fffa
	bcc	?L103
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L141
	ld	AL,@(H'000E,Y)
	add	AL,#-H'000A
	st	AL,@(H'000E,Y)
	nadd	AL,@H'fff8
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	ld	X,@(H'001A,X)
	st	X,@(H'000B,Y)
	ld	AH,@$XAP_AL
	lsr	#H'0008
	and	AH,#H'00FF
	st	AH,@(H'000C,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'001A,X)
	ld	AL,@H'fff8
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(H'000D,X)
	bra	(?L105)
?L103:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'000E,Y)
	ld	AL,@H'ffff
?L105:
	tst	@(H'000E,Y)
	beq	?L106
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L107
	ld	AL,#H'000A
	add	AL,@H'fff9
	bra	(?L136)
?L107:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	bsr	$_SourceMap
?L136:
	st	AL,@(H'000A,Y)
?L106:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0031
	beq	?L109
	ld	X,@(H'0004,Y)
	ld	AL,@(H'001D,X)
	cmp	AL,@(H'0005,Y)
	beq	?L109
	ld	AL,@(H'000A,X)
	cmp	AL,@(H'0005,Y)
	beq	?L109
?L141:
	ld	AL,@$XAP_UXL
	bra	(?L140)
?L109:
	ld	AL,@(H'0009,Y)
	bsr	$_convertResponseToStatus
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	_avrcpGetMetadataPacketType
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'000A
	bne	?L110
	tst	@(H'000A,Y)
	beq	?L110
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	or	AL,#H'0080
	st	AL,@(H'0008,Y)
?L110:
	ld	AL,@(H'0005,Y)
	add	AL,#-H'0010
	cmp	AL,#(H'0001+H'0080)
	bcc	?L139
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE130,X)
	brxl
	.SEG	CONST
?JTBASE130:
	.CODE
?L130:
	.SEG	CONST
	dc	lwrd(?L112-?L130)
	dc	lwrd(?L118-?L130)
	dc	lwrd(?L118-?L130)
	dc	lwrd(?L118-?L130)
	dc	lwrd(?L124-?L130)
	dc	lwrd(?L118-?L130)
	dc	lwrd(?L118-?L130)
	dc	lwrd(?L124-?L130)
	dc	lwrd(?L124-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L118-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L119-?L130)
	dc	lwrd(?L120-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L124-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L128-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L127-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L127-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L139-?L130)
	dc	lwrd(?L127-?L130)
	.CODE
?L112:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_avrcpHandleGetCapsResponse
	bra	(?L111)
?L118:
	ld	AL,@(H'0005,Y)
	bsr	_convertPduToMsgId
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpSendCommonFragmentedMetadataCfm
	bra	(?L111)
?L119:
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleGetPlayStatusResponse
	bra	(?L111)
?L120:
	ld	X,@(H'000A,Y)
	st	X,@(0,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_avrcpSendNotification
	bra	(?L111)
?L124:
	ld	AL,@(H'0005,Y)
	bsr	_convertPduToMsgId
	bra	(?L137)
?L127:
	ld	AL,@(H'0005,Y)
	bsr	_convertPduToMsgId
?L137:
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpSendCommonStatusCfm
	bra	(?L111)
?L128:
	ld	X,@(H'000A,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpSendAbsoluteVolumeCfm
?L111:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0031
	beq	?L131
	ld	AL,@(H'0004,Y)
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	X,@(H'0009,Y)
	cmp	X,#H'000F
	bne	?L132
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'0FA0
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'000D
	bsr	$_MessageSendLater
	bra	(?L131)
?L132:
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
?L131:
	tst	@(H'0006,Y)
	beq	?L134
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0003
	beq	?L134
	ld	AL,@(H'0005,Y)
	bra	(?L138)
?L134:
	ld	AL,#H'0000
?L138:
	ld	X,@(H'0004,Y)
	st	AL,@(H'000A,X)
?L139:
	ld	AL,@(H'0004,Y)
?L140:
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?LBE5:
?LBE_avrcpHandleMetadataResponse:
	leavel	#14
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpSendMetadataCommand:
	enterl	#8
?LBB_avrcpSendMetadataCommand:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB6:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L153
	ld	AL,#H'0007
	bra	(?L152)
?L153:
	ld	AL,@(H'0009,Y)
	add	AL,@(H'000B,Y)
	cmp	AL,#H'01F6
	bcz	?L154
	ld	AL,#H'0082
	bra	(?L152)
?L154:
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0008,Y)
	bsr	_avrcpCreateMetadataMessage
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'001D
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'000C
	bsr	$_MessageSendConditionally
	ld	AL,#H'0000
?L152:
?LBE6:
?LBE_avrcpSendMetadataCommand:
	leavel	#8
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_avrcpCreateMetadataMessage:
	enterl	#9
?LBB_avrcpCreateMetadataMessage:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
?LBB7:
	add	AL,#H'0004
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	bsr	_avrcpCreateMetadataInlineHeader
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0009,Y)
	bsr	_avrcpCreateMetadataInlineData
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'000B,Y)
	bsr	_avrcpCreateMetadataSourceData
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	bsr	_avrcpCreateMetadataMessageInfo
?LBE7:
	ld	AL,@(H'0006,Y)
?LBE_avrcpCreateMetadataMessage:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_avrcpCreateMetadataInlineHeader:
	enterl	#3
?LBB_avrcpCreateMetadataInlineHeader:
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
?LBB8:
	st	AL,@(H'0008,X)
	ld	AL,#H'0009
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	and	AH,#H'00FF
	st	AH,@(H'0009,X)
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	add	AL,@(H'0005,Y)
	st	AL,@(-1,Y)
	ld	AH,@$XAP_AL
	lsr	#H'0008
	and	AH,#H'00FF
	st	AH,@(H'0002,X)
	ld	AH,@(-1,Y)
	and	AH,#H'00FF
	st	AH,@(H'0003,X)
?LBE8:
?LBE_avrcpCreateMetadataInlineHeader:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_avrcpCreateMetadataInlineData:
	enterl	#3
?LBB_avrcpCreateMetadataInlineData:
	ld	X,@(H'0003,Y)
	cmp	AH,#H'0000
	beq	?L158
	add	AL,#H'000D
	st	AH,@(0,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
?L158:
?LBE_avrcpCreateMetadataInlineData:
	leavel	#3
_avrcpCreateMetadataSourceData:
	enterl	#2
?LBB_avrcpCreateMetadataSourceData:
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0007,X)
	st	AH,@(H'0006,X)
?LBE_avrcpCreateMetadataSourceData:
	leavel	#2
_avrcpCreateMetadataMessageInfo:
	enterl	#3
?LBB_avrcpCreateMetadataMessageInfo:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'1958
	ld	X,@(0,Y)
	st	AH,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(H'0003,X)
	ld	AH,#H'0009
	st	AH,@(0,X)
	ld	AH,#H'0000
	st	AH,@(H'0001,X)
	bsr	_avrcpGetCommandType
	ld	X,@(0,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0005,X)
?LBE_avrcpCreateMetadataMessageInfo:
	leavel	#3
_convertPduToEnum:
; leaf function with empty stack frame
?LBB_convertPduToEnum:
	cmp	AL,#H'0030
	beq	?L162
	cmp	AL,#(H'0001+H'0030)
	bcc	?L181
	cmp	AL,#H'0010
	bcs	?L179
	cmp	AL,#H'0018
	bcz	?L162
	cmp	AL,#H'0020
	beq	?L162
	bra	(?L179)
?L181:
	cmp	AL,#H'0060
	beq	?L162
	cmp	AL,#(H'0001+H'0060)
	bcc	?L182
	cmp	AL,#H'0050
	beq	?L162
	bra	(?L179)
?L182:
	cmp	AL,#H'0074
	beq	?L162
	cmp	AL,#H'0090
	beq	?L162
?L179:
	ld	AL,#H'0004
?L162:
?LBE_convertPduToEnum:
	rts
_avrcpFrameAVCResponseHeader:
	enterl	#2
?LBB_avrcpFrameAVCResponseHeader:
	ld	X,@$XAP_AL
	ld	AL,@$XAP_AH
	asl	#H'0004
	or	AL,#H'0006
	st	AL,@(0,X)
	ld	AL,#H'0011
	st	AL,@(H'0002,X)
	ld	AL,#H'000E
	st	AL,@(H'0003,X)
	ld	AH,#H'0000
	st	AH,@(H'0004,X)
	ld	AL,#H'0048
	st	AL,@(H'0005,X)
	st	AH,@(H'0006,X)
	st	AH,@(H'0007,X)
	ld	AL,#H'0019
	st	AL,@(H'0008,X)
	ld	AL,#H'0058
	st	AL,@(H'0009,X)
	ld	AL,@(H'0002,Y)
	and	AL,#H'00FF
	st	AL,@(H'000A,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'000B,X)
	ld	AH,@(H'0004,Y)
	lsr	#H'0008
	and	AH,#H'00FF
	st	AH,@(H'000C,X)
	ld	AH,@(H'0004,Y)
	and	AH,#H'00FF
	st	AH,@(H'000D,X)
?LBE_avrcpFrameAVCResponseHeader:
	leavel	#2
_prepareMetadataControlResponse:
	enterl	#10
?LBB_prepareMetadataControlResponse:
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000A,Y)
?LBB9:
	add	AL,#-H'0017
	cmp	AL,#(H'0001+H'0001)
	bcc	?L193
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_avrcpSendMetadataResponse
	bra	(?L192)
?L193:
?LBB10:
	ld	AL,#H'0004
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_avrcpSendMetadataResponse
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0060
	bne	?L192
	ld	AL,#H'0096
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'033E
	bsr	$_avrcpRejectRegisterNotifications
?L192:
?LBE10:
?LBE9:
?LBE_prepareMetadataControlResponse:
	leavel	#10
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_avrcpSendRejectMetadataResponse:
	enterl	#5
?LBB_avrcpSendRejectMetadataResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(H'001E,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'0100
	cmp	AL,#H'0000
	bne	?L198
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0031
	bne	?L199
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	or	AL,#-H'1000
	bra	(?L201)
?L199:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001E,X)
	and	AL,#H'00FF
	or	AL,#H'0400
?L201:
	st	AL,@(H'001E,X)
?L198:
	ld	AL,@(H'0005,Y)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0001,Y)
	ld	AH,#H'002A
	bsr	$_MessageSend
?LBE11:
?LBE_avrcpSendRejectMetadataResponse:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_avrcpHandleInternalRejectMetadataResponse:
	enterl	#12
?LBB_avrcpHandleInternalRejectMetadataResponse:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0006,Y)
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000C,Y)
	bsr	_avrcpGetCommandType
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'000A
	bne	?L204
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
?L204:
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_avrcpSendMetadataResponse
?LBE12:
?LBE_avrcpHandleInternalRejectMetadataResponse:
	leavel	#12
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_avrcpHandleMetadataCommand:
	enterl	#12
?LBB_avrcpHandleMetadataCommand:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
?LBB13:
	ld	X,@(H'0006,X)
	st	X,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	or	AL,@(H'0009,X)
	st	AL,@(H'0006,Y)
	ld	X,#H'0000
	st	X,@(H'0007,Y)
	st	X,@(H'0008,Y)
	add	AL,#H'000A
	st	AL,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001F,X)
	and	AL,#-H'0010
	or	AL,@$XAP_AH
	st	AL,@(H'001F,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L207
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0008
	bra	(?L249)
?L207:
	ld	X,@(H'000C,Y)
	cmp	X,@(H'0009,Y)
	bcz	?L208
	ld	AH,@$XAP_UXL
	sub	AH,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001B,X)
	sub	AL,@$XAP_AH
	st	AL,@(H'001B,X)
	bra	(?L209)
?L208:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L209
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0009,Y)
	add	AL,#-H'000A
	st	AL,@(H'0006,Y)
?L209:
	ld	X,@(H'000C,Y)
	cmp	X,@(H'0009,Y)
	bcs	?L244
	tst	@(H'0005,Y)
	bne	?L244
	ld	X,@(H'0002,Y)
	tst	@(H'000A,X)
	beq	?L213
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0040
	beq	?L213
	cmp	AL,#H'0041
	beq	?L213
	ld	AL,@$XAP_UXL
	bsr	$_abortContinuation
?L213:
	tst	@(H'0006,Y)
	beq	?L214
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L215
	ld	AL,@(H'0003,Y)
	add	AL,#H'000A
	bra	(?L246)
?L215:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	bsr	$_SourceMap
?L246:
	st	AL,@(H'0007,Y)
	ld	X,@(H'0007,Y)
	ld	X,@(0,X)
	st	X,@(H'0008,Y)
?L214:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0010
	bne	?L217
	ld	AL,#H'0010
	bsr	_convertPduToEnum
	ld	AH,@$XAP_AL
	ld	X,@(H'0008,Y)
	st	X,@(0,Y)
	bra	(?L248)
?L217:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0031
	bne	?L219
	ld	X,@(H'0003,Y)
?LBB14:
	ld	AH,@(H'000A,X)
	ld	AL,#-H'0001
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'000C)
	bcc	?L220
	add	AH,#H'00F0
	bra	(?L247)
?L220:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0081
	bra	(?L249)
?L219:
?LBE14:
	ld	AL,@(H'0004,Y)
	bsr	_convertPduToEnum
	ld	AH,@$XAP_AL
?L247:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L248:
	ld	AL,@(H'0002,Y)
	bsr	$_avrcpBlockReceivedData
	ld	AL,@(H'0004,Y)
	add	AL,#-H'0010
	cmp	AL,#(H'0001+H'0080)
	bcc	?L244
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE245,X)
	brxl
	.SEG	CONST
?JTBASE245:
	.CODE
?L245:
	.SEG	CONST
	dc	lwrd(?L224-?L245)
	dc	lwrd(?L225-?L245)
	dc	lwrd(?L226-?L245)
	dc	lwrd(?L227-?L245)
	dc	lwrd(?L228-?L245)
	dc	lwrd(?L229-?L245)
	dc	lwrd(?L230-?L245)
	dc	lwrd(?L237-?L245)
	dc	lwrd(?L236-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L231-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L232-?L245)
	dc	lwrd(?L233-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L234-?L245)
	dc	lwrd(?L235-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L238-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L241-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L243-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L244-?L245)
	dc	lwrd(?L243-?L245)
	.CODE
?L224:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleGetCapsCommand
	bra	(?L206)
?L225:
	ld	AL,@(H'0002,Y)
	bsr	$_avrcpHandleListAppAttributesCommand
	bra	(?L206)
?L226:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleListAppValuesCommand
	bra	(?L206)
?L227:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleGetAppValuesCommand
	bra	(?L206)
?L228:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleSetAppValuesCommand
	bra	(?L206)
?L229:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleGetAppAttributeTextCommand
	bra	(?L206)
?L230:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleGetAppValueTextCommand
	bra	(?L206)
?L231:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleGetElementAttributesCommand
	bra	(?L206)
?L232:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'5E1D
	bsr	$_avrcpSendCommonMetadataInd
	bra	(?L206)
?L233:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleRegisterNotificationCommand
	bra	(?L206)
?L234:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleRequestContinuingCommand
	bra	(?L206)
?L235:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleAbortContinuingCommand
	bra	(?L206)
?L236:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleInformBatteryStatusCommand
	bra	(?L206)
?L237:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleInformCharSetCommand
	bra	(?L206)
?L238:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	bne	?L239
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpHandleSetAbsoluteVolumeCommand
	bra	(?L206)
?L239:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0082
	bra	(?L249)
?L241:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleAddressedPlayerCommand
	bra	(?L206)
?L243:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpHandleNowPlayingCommand
	bra	(?L206)
?L244:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0080
?L249:
	bsr	$_avrcpSendRejectMetadataResponse
?L206:
?LBE13:
?LBE_avrcpHandleMetadataCommand:
	leavel	#12
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_avrcpHandleCommonMetadataControlResponse:
	enterl	#3
?LBB_avrcpHandleCommonMetadataControlResponse:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0009
	beq	?L259
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_avrcpHandleInternalRejectMetadataResponse
	bra	(?L258)
?L259:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	_prepareMetadataControlResponse
?L258:
?LBE_avrcpHandleCommonMetadataControlResponse:
	leavel	#3
$_prepareMetadataStatusResponse:
	enterl	#12
?LBB_prepareMetadataStatusResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000D,Y)
?LBB15:
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0021,X)
	st	AH,@(H'0008,Y)
	cmp	AL,@$XAP_AH
	bcz	?L263
	sub	AL,@$XAP_AH
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'000E,Y)
	bsr	$_avrcpStoreNextContinuationPacket
	ld	AL,@(H'0008,Y)
	ld	X,#H'0001
	st	X,@(H'0009,Y)
?L263:
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendMetadataResponse
?LBE15:
?LBE_prepareMetadataStatusResponse:
	leavel	#12
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_avrcpSendMetadataResponse:
	enterl	#10
?LBB_avrcpSendMetadataResponse:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB16:
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	X,@(H'000A,Y)
	cmp	X,#H'0031
	bne	?L266
	ld	X,@(H'0003,Y)
?LBB17:
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#-H'1000
	bne	?L267
	st	AH,@H'fff8
	bra	(?L268)
?L267:
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'000A
	bne	?L269
	ld	X,@(H'000F,Y)
	ld	X,@(H'0001,X)
	bra	(?L280)
?L269:
	ld	X,@(H'000F,Y)
	ld	X,@(0,X)
?L280:
	st	X,@H'fff8
?L268:
	ld	AH,#H'00F0
	add	AH,@H'fff8
	st	AH,@(H'0007,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001E,X)
	lsr	#H'0008
	ld	AL,@(H'0007,Y)
	cmp	AL,@$XAP_AH
	beq	?L266
	add	X,@H'fff8
	ld	X,@(H'000C,X)
	st	X,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001A,X)
	st	AH,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@H'fff9
?L266:
?LBE17:
	tst	@H'fff9
	beq	?L272
	ld	X,@(H'0003,Y)
	ld	X,@(H'001F,X)
	and	X,#H'000F
	st	X,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSourceDrop
?L272:
	ld	AL,@(H'000E,Y)
	add	AL,#H'000E
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0003,Y)
	st	AL,@(H'001A,X)
	ld	AH,#H'000E
	st	AH,@(H'001B,X)
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0001,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
	bsr	_avrcpFrameAVCResponseHeader
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001A,X)
	add	AL,#H'000E
	ld	AH,@(H'000E,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000F,Y)
	bsr	$_memmove
	ld	AH,@(H'000E,Y)
	add	AH,#H'000A
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000D,Y)
	sub	AL,@(H'000E,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'000B,Y)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSendAvcResponse
	tst	@(H'0005,Y)
	beq	?L273
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001A,X)
	bsr	$_free
	ld	AH,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'001A,X)
	bra	(?L274)
?L273:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0031
	beq	?L276
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'000F
	beq	?L274
?L276:
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpUnblockReceivedData
?L274:
	ld	AL,@(H'000C,Y)
	cmp	AL,#H'0003
	beq	?L278
	cmp	AL,#H'0000
	bne	?L265
?L278:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0008,X)
?LBB18:
	ld	AL,@(H'000B,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000B,Y)
	bsr	$_SourceDrop
?L265:
?LBE18:
?LBE16:
?LBE_avrcpSendMetadataResponse:
	leavel	#10
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
	ENDMOD

;# Function pattern *movqi2 used[0] = 249 used[1] = 106 used[3] = 2 total = 357
;# Function pattern *movqi3 used[0] = 277 total = 277
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 22 used[2] = 5 total = 27
;# Function pattern *andqi3 used[0] = 26 total = 26
;# Function pattern *iorqi3 used[0] = 8 total = 8
;# Function pattern *subqi3 used[0] = 6 used[1] = 1 total = 7
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 87 total = 87
;# Function pattern *call1 used[0] = 54 total = 54
;# Function pattern *call_value1 used[0] = 25 total = 25
;# Function pattern tablejump_1 used[0] = 3 total = 3
;# Function pattern movstrqi+2 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 9 used[1] = 9 total = 18
;# Function pattern movstrqi+4 used[1] = 17 total = 17
;# Function pattern movstrqi+5 used[0] = 66 total = 66
	MODULE	avrcp_notification_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpSendNotification:
	enterl	#14
?LBB_avrcpSendNotification:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'00F0
	ld	AH,@$XAP_AL
	lsr	#H'0004
	st	AH,@H'fff8
	tst	@(H'000F,Y)
	beq	?L1
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'000A
	bne	?L3
	ld	X,#H'0001
	st	X,@(H'0003,Y)
?L9:
	ld	AL,#H'0001
	asl	@(H'0003,Y)
	ld	X,@(H'0001,Y)
	and	AL,@(H'000C,X)
	cmp	AL,#H'0000
	beq	?L6
	add	X,@(H'0003,Y)
	ld	AL,@(H'000C,X)
	cmp	AL,@H'fff8
	beq	?L5
?L6:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'000D
	bcz	?L9
?L5:
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	AL,@(0,X)
	or	AL,#H'0080
	st	AL,@(H'0002,Y)
	bra	(?L10)
?L3:
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000F,Y)
	sub	AL,@(H'0005,Y)
	st	AL,@(H'0004,Y)
?L10:
	ld	X,@(H'0003,Y)
	cmp	X,#(H'0001+H'000D)
	bcc	?L1
	ld	X,@(?JTBASE44,X)
	brxl
	.SEG	CONST
?JTBASE44:
	.CODE
?L44:
	.SEG	CONST
	dc	lwrd(?L1-?L44)
	dc	lwrd(?L12-?L44)
	dc	lwrd(?L15-?L44)
	dc	lwrd(?L18-?L44)
	dc	lwrd(?L19-?L44)
	dc	lwrd(?L20-?L44)
	dc	lwrd(?L23-?L44)
	dc	lwrd(?L26-?L44)
	dc	lwrd(?L29-?L44)
	dc	lwrd(?L32-?L44)
	dc	lwrd(?L33-?L44)
	dc	lwrd(?L34-?L44)
	dc	lwrd(?L37-?L44)
	dc	lwrd(?L40-?L44)
	.CODE
?L12:
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0004,Y)
	beq	?L13
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bra	(?L48)
?L13:
	ld	AL,#H'00FF
?L48:
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E20
	bra	(?L54)
?L15:
?LBE3:
?LBB4:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0007
	bcz	?L16
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	st	X,@(H'0007,Y)
	ld	AL,@$XAP_UXL
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0006,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0007,Y)
	add	AL,#H'0004
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0006,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	bra	(?L17)
?L16:
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
?L17:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E21
	bra	(?L54)
?L18:
?LBE4:
?LBB5:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E22
	bra	(?L54)
?L19:
?LBE5:
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E23
	bra	(?L54)
?L20:
?LBE6:
?LBB7:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bcz	?L21
	ld	AL,@(H'000E,Y)
	add	AL,@(H'0005,Y)
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0008,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	bra	(?L22)
?L21:
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
?L22:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E24
	bra	(?L54)
?L23:
?LBE7:
?LBB8:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0004,Y)
	beq	?L24
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bra	(?L49)
?L24:
	ld	AL,#H'0000
?L49:
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E25
	bra	(?L54)
?L26:
?LBE8:
?LBB9:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0004,Y)
	beq	?L27
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bra	(?L50)
?L27:
	ld	AL,#H'0000
?L50:
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E26
	bra	(?L54)
?L29:
?LBE9:
?LBB10:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0002
	bcz	?L30
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	st	X,@(-1,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	X,#H'0001
	add	X,@(-1,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#-H'0001
	st	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	bsr	$_avrcpSourceFromConstData
	ld	X,@(H'0009,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0003,X)
	bra	(?L31)
?L30:
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0004,X)
?L31:
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E27
	bra	(?L54)
?L32:
?LBE10:
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E40
	bra	(?L54)
?L33:
?LBE11:
?LBB12:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E3E
	bra	(?L54)
?L34:
?LBE12:
?LBB13:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bcz	?L35
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	st	X,@(H'000B,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	asl	#H'0008
	ld	AH,@(H'0003,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	bra	(?L51)
?L35:
	ld	AL,#H'0000
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
?L51:
	st	AL,@(H'0003,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E3D
	bra	(?L54)
?L37:
?LBE13:
?LBB14:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bcz	?L38
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	bra	(?L52)
?L38:
	ld	AL,#H'0000
?L52:
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E3F
	bra	(?L54)
?L40:
?LBE14:
?LBB15:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0004,Y)
	beq	?L41
	ld	X,@(H'000E,Y)
	add	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bra	(?L53)
?L41:
	ld	AL,#H'0000
?L53:
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E36
?L54:
	bsr	$_MessageSend
	ld	AL,@(H'0002,Y)
?LBE15:
	cmp	AL,#H'000F
	beq	?L45
	ld	AL,#H'0001
	asl	@(H'0003,Y)
	xor	AL,#-H'0001
	ld	X,@(H'0001,Y)
	and	AL,@(H'000C,X)
	st	AL,@(H'000C,X)
?L45:
	ld	AL,@(H'0003,Y)
	add	AL,#H'00F0
	ld	X,@(H'0001,Y)
	cmp	AL,@(H'001D,X)
	bne	?L1
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'001D,X)
?L1:
?LBE2:
?LBE_avrcpSendNotification:
	leavel	#14
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE2
$_avrcpSendRegisterNotificationFailCfm:
	enterl	#5
?LBB_avrcpSendRegisterNotificationFailCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB16:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E1E
	bsr	$_MessageSend
?LBE16:
?LBE_avrcpSendRegisterNotificationFailCfm:
	leavel	#5
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_avrcpSendGetPlayStatusCfm:
	enterl	#5
?LBB_avrcpSendGetPlayStatusCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB17:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0006,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E1C
	bsr	$_MessageSend
?LBE17:
?LBE_avrcpSendGetPlayStatusCfm:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_avrcpHandleGetPlayStatusResponse:
	enterl	#13
?LBB_avrcpHandleGetPlayStatusResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000F,Y)
?LBB18:
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	st	AH,@(H'0008,Y)
	ld	X,#H'0000
	st	X,@H'fff9
	st	AH,@H'fff8
	st	AH,@(H'000A,Y)
	cmp	AL,#H'0008
	bcz	?L68
	ld	AL,@(H'0007,Y)
	cmp	AL,#(H'0001+H'007F)
	bcc	?L68
	ld	AL,@(H'000E,Y)
	bsr	$_convertUint8ValuesToUint32
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0004
	bsr	$_convertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(H'000E,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'000A,Y)
?L68:
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_avrcpSendGetPlayStatusCfm
?LBE18:
?LBE_avrcpHandleGetPlayStatusResponse:
	leavel	#13
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_sendRegisterNotificationResponse:
	enterl	#13
?LBB_sendRegisterNotificationResponse:
	st	AL,@(H'0009,Y)
	st	AH,@(H'0006,Y)
?LBB19:
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AH,#H'000F
	beq	?L71
	ld	AL,#H'0001
	ld	X,@(H'000E,Y)
	asl	@(0,X)
	xor	AL,#-H'0001
	ld	X,@(H'0009,Y)
	and	AL,@(H'000C,X)
	st	AL,@(H'000C,X)
?L71:
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,#H'0003
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'000A
	bne	?L72
	ld	AL,@(H'000A,Y)
	st	AL,@(H'000D,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'000E,Y)
	bra	(?L73)
?L72:
	ld	X,@(H'000D,Y)
	add	X,@(H'000F,Y)
	st	X,@(H'000A,Y)
	ld	AL,@$XAP_UXL
	ld	X,@(H'0009,Y)
	cmp	AL,@(H'0021,X)
	bcz	?L73
	bsr	$_Panic
?L73:
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0004,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_avrcpSendMetadataResponse
?LBE19:
?LBE_sendRegisterNotificationResponse:
	leavel	#13
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_avrcpHandleRegisterNotificationCommand:
	enterl	#7
?LBB_avrcpHandleRegisterNotificationCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AH
?LBB20:
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	bsr	$_convertUint8ValuesToUint32
	ld	X,@(H'0004,Y)
	st	AH,@(H'0002,X)
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
	asl	@(H'0003,Y)
	ld	X,@(H'0001,Y)
	or	AL,@(H'000C,X)
	st	AL,@(H'000C,X)
	ld	AH,@$XAP_UXL
	add	AH,@(H'0003,Y)
	ld	AL,@(H'001F,X)
	and	AL,#H'000F
	ld	X,@$XAP_AH
	st	AL,@(H'000C,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E1F
	bsr	$_MessageSend
?LBE20:
?LBE_avrcpHandleRegisterNotificationCommand:
	leavel	#7
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_avrcpHandleInternalEventPlaybackStatusChangedResponse:
	enterl	#8
?LBB_avrcpHandleInternalEventPlaybackStatusChangedResponse:
	ld	X,@$XAP_AH
?LBB21:
	ld	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0005,Y)
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE21:
?LBE_avrcpHandleInternalEventPlaybackStatusChangedResponse:
	leavel	#8
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_avrcpHandleInternalEventTrackChangedResponse:
	enterl	#17
?LBB_avrcpHandleInternalEventTrackChangedResponse:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB22:
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_convertUint32ToUint8Values
	ld	X,@(H'000E,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_convertUint32ToUint8Values
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000D,Y)
	ld	X,@(H'000E,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE22:
?LBE_avrcpHandleInternalEventTrackChangedResponse:
	leavel	#17
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_avrcpHandleInternalEventPlaybackPosChangedResponse:
	enterl	#13
?LBB_avrcpHandleInternalEventPlaybackPosChangedResponse:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	AH,#H'0005
?LBB23:
	st	AH,@(H'0004,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_convertUint32ToUint8Values
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE23:
?LBE_avrcpHandleInternalEventPlaybackPosChangedResponse:
	leavel	#13
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
$_avrcpHandleInternalEventBattStatusChangedResponse:
	enterl	#8
?LBB_avrcpHandleInternalEventBattStatusChangedResponse:
	ld	X,@$XAP_AH
?LBB24:
	ld	AH,#H'0006
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0005,Y)
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE24:
?LBE_avrcpHandleInternalEventBattStatusChangedResponse:
	leavel	#8
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_avrcpHandleInternalEventSystemStatusChangedResponse:
	enterl	#8
?LBB_avrcpHandleInternalEventSystemStatusChangedResponse:
	ld	X,@$XAP_AH
?LBB25:
	ld	AH,#H'0007
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0005,Y)
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE25:
?LBE_avrcpHandleInternalEventSystemStatusChangedResponse:
	leavel	#8
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_avrcpHandleInternalEventPlayerAppSettingChangedResponse:
	enterl	#8
?LBB_avrcpHandleInternalEventPlayerAppSettingChangedResponse:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB26:
	ld	AL,#H'0008
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	st	AH,@(H'0005,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE26:
?LBE_avrcpHandleInternalEventPlayerAppSettingChangedResponse:
	leavel	#8
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_avrcpHandleInternalEventUidsChangedEvent:
	enterl	#9
?LBB_avrcpHandleInternalEventUidsChangedEvent:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB27:
	ld	AL,#H'000C
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	st	AL,@(H'0006,Y)
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE27:
?LBE_avrcpHandleInternalEventUidsChangedEvent:
	leavel	#9
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_avrcpHandleInternalGetPlayStatusResponse:
	enterl	#21
?LBB_avrcpHandleInternalGetPlayStatusResponse:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB28:
	ld	AH,#H'0001
	st	AH,@(H'0011,Y)
	st	AH,@(H'0012,Y)
	ld	AL,@(H'0010,Y)
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0006,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L87
	ld	AH,#H'0009
	st	AH,@(H'0011,Y)
	st	AH,@(H'0012,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_convertUint32ToUint8Values
	ld	X,@(H'0010,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bsr	$_convertUint32ToUint8Values
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'000E,Y)
?L87:
	ld	AL,#H'0030
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0012,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000F,Y)
	ld	X,@(H'0010,Y)
	ld	AH,@(0,X)
	bsr	$_avrcpSendMetadataResponse
?LBE28:
?LBE_avrcpHandleInternalGetPlayStatusResponse:
	leavel	#21
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_avrcpHandleInternalAbsoluteVolumeEvent:
	enterl	#8
?LBB_avrcpHandleInternalAbsoluteVolumeEvent:
	ld	X,@$XAP_AH
?LBB29:
	ld	AH,#H'000D
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0005,Y)
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE29:
?LBE_avrcpHandleInternalAbsoluteVolumeEvent:
	leavel	#8
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_avrcpHandleInternalAddressPlayerChangedEvent:
	enterl	#13
?LBB_avrcpHandleInternalAddressPlayerChangedEvent:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB30:
	ld	AL,#H'000B
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	st	AL,@(H'0008,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	bne	?L90
	ld	AL,#H'0096
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'033E
	bsr	$_avrcpRejectRegisterNotifications
?L90:
?LBE30:
?LBE_avrcpHandleInternalAddressPlayerChangedEvent:
	leavel	#13
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_avrcpHandleInternalCommonEventResponse:
	enterl	#7
?LBB_avrcpHandleInternalCommonEventResponse:
	ld	X,@$XAP_AH
?LBB31:
	ld	AH,@(H'0001,X)
	st	AH,@(H'0004,Y)
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_sendRegisterNotificationResponse
?LBE31:
?LBE_avrcpHandleInternalCommonEventResponse:
	leavel	#7
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_avrcpRejectRegisterNotifications:
	enterl	#9
?LBB_avrcpRejectRegisterNotifications:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB32:
	and	AH,@(H'000C,X)
	st	AH,@(H'0006,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AH,#H'0000
	beq	?L102
?L100:
	ld	AH,@(H'0006,Y)
	lsr	#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L97
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_sendRegisterNotificationResponse
?L97:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	tst	@(H'0006,Y)
	bne	?L100
?L102:
?LBE32:
?LBE_avrcpRejectRegisterNotifications:
	leavel	#9
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
	ENDMOD

;# Function pattern *movqi2 used[0] = 257 used[1] = 22 used[3] = 2 total = 281
;# Function pattern *movqi3 used[0] = 279 total = 279
;# Function pattern *movqi8 used[0] = 8 total = 8
;# Function pattern *movhi used[2] = 9 used[3] = 15 total = 24
;# Function pattern *addqi0 used[0] = 19 total = 19
;# Function pattern *addqi2 used[0] = 22 used[2] = 1 total = 23
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern *ashlqi3 used[0] = 7 total = 7
;# Function pattern one_cmplqi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 23 total = 23
;# Function pattern *call1 used[0] = 25 total = 25
;# Function pattern *call_value1 used[0] = 26 total = 26
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 6 total = 9
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 16 total = 16
	MODULE	avrcp_profile_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_avrcpHandleReadyMessages:
	enterl	#3
?LBB_avrcpHandleReadyMessages:
	ld	X,@$XAP_AL
	cmp	AH,#H'0003
	beq	?L3
	cmp	AH,#H'0004
	beq	?L4
	bra	(?L5)
?L3:
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpSdpSearchRequest
	bra	(?L2)
?L4:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalConnectReq
	bra	(?L2)
?L5:
	ld	AL,#H'0000
	bra	(?L1)
?L2:
	ld	AL,#H'0001
?L1:
?LBE_avrcpHandleReadyMessages:
	leavel	#3
_avrcpHandleConnectingMessages:
	enterl	#2
?LBB_avrcpHandleConnectingMessages:
	ld	X,@(H'0002,Y)
	cmp	AH,#H'503A
	beq	?L12
	cmp	AH,#(H'0001+H'503A)
	bcc	?L17
	cmp	AH,#H'0005
	beq	?L11
	bra	(?L15)
?L17:
	cmp	AH,#H'503F
	beq	?L14
	cmp	AH,#H'5040
	beq	?L13
	bra	(?L15)
?L11:
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleInternalL2capConnectRes
	bra	(?L10)
?L12:
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleL2capConnectCfm
	bra	(?L10)
?L13:
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleL2capDisconnectCfm
	bra	(?L10)
?L14:
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleL2capDisconnectInd
	bra	(?L10)
?L15:
	ld	AL,#H'0000
	bra	(?L9)
?L10:
	ld	AL,#H'0001
?L9:
?LBE_avrcpHandleConnectingMessages:
	leavel	#2
_avrcpHandleConnectedMessages:
	enterl	#3
?LBB_avrcpHandleConnectedMessages:
	st	AL,@H'fff8
	cmp	AH,#H'0020
	beq	?L43
	cmp	AH,#(H'0001+H'0020)
	bcc	?L66
	cmp	AH,#H'0016
	beq	?L33
	cmp	AH,#(H'0001+H'0016)
	bcc	?L67
	cmp	AH,#H'000A
	beq	?L28
	cmp	AH,#(H'0001+H'000A)
	bcc	?L68
	cmp	AH,#H'0007
	beq	?L25
	cmp	AH,#(H'0001+H'0007)
	bcc	?L69
	cmp	AH,#H'0006
	beq	?L24
	bra	(?L64)
?L69:
	cmp	AH,#H'0008
	beq	?L26
	cmp	AH,#H'0009
	beq	?L27
	bra	(?L64)
?L68:
	cmp	AH,#H'000C
	beq	?L30
	cmp	AH,#H'000C
	bcs	?L29
	cmp	AH,#H'0014
	beq	?L31
	cmp	AH,#H'0015
	beq	?L32
	bra	(?L64)
?L67:
	cmp	AH,#H'001B
	beq	?L38
	cmp	AH,#(H'0001+H'001B)
	bcc	?L70
	cmp	AH,#H'0018
	beq	?L35
	cmp	AH,#H'0018
	bcs	?L34
	cmp	AH,#H'0019
	beq	?L36
	cmp	AH,#H'001A
	beq	?L37
	bra	(?L64)
?L70:
	cmp	AH,#H'001D
	beq	?L40
	cmp	AH,#H'001D
	bcs	?L39
	cmp	AH,#H'001E
	beq	?L41
	cmp	AH,#H'001F
	beq	?L42
	bra	(?L64)
?L66:
	cmp	AH,#H'002A
	beq	?L51
	cmp	AH,#(H'0001+H'002A)
	bcc	?L71
	cmp	AH,#H'0025
	beq	?L46
	cmp	AH,#(H'0001+H'0025)
	bcc	?L72
	cmp	AH,#H'0022
	beq	?L55
	cmp	AH,#H'0022
	bcs	?L44
	cmp	AH,#H'0023
	beq	?L60
	cmp	AH,#H'0024
	beq	?L45
	bra	(?L64)
?L72:
	cmp	AH,#H'0027
	beq	?L48
	cmp	AH,#H'0027
	bcs	?L47
	cmp	AH,#H'0028
	beq	?L49
	cmp	AH,#H'0029
	beq	?L50
	bra	(?L64)
?L71:
	cmp	AH,#H'002F
	beq	?L57
	cmp	AH,#(H'0001+H'002F)
	bcc	?L73
	cmp	AH,#H'002C
	beq	?L54
	cmp	AH,#H'002C
	bcs	?L52
	cmp	AH,#H'002D
	beq	?L53
	cmp	AH,#H'002E
	beq	?L56
	bra	(?L64)
?L73:
	cmp	AH,#H'0038
	beq	?L62
	cmp	AH,#(H'0001+H'0038)
	bcc	?L74
	cmp	AH,#H'0030
	beq	?L58
	cmp	AH,#H'0031
	beq	?L59
	bra	(?L64)
?L74:
	cmp	AH,#H'503F
	beq	?L63
	cmp	AH,#-H'7FDF
	beq	?L62
	bra	(?L64)
?L24:
	bsr	$_avrcpHandleInternalDisconnectReq
	bra	(?L23)
?L25:
	bsr	$_avrcpGetSupportedFeatures
	bra	(?L23)
?L26:
	bsr	$_avrcpGetProfileVersion
	bra	(?L23)
?L27:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalPassThroughReq
	bra	(?L23)
?L28:
	bsr	$_avrcpHandleInternalUnitInfoReq
	bra	(?L23)
?L29:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalSubUnitInfoReq
	bra	(?L23)
?L30:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalVendorDependentReq
	bra	(?L23)
?L31:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalPassThroughRes
	bra	(?L23)
?L32:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalUnitInfoRes
	bra	(?L23)
?L33:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalSubUnitInfoRes
	bra	(?L23)
?L34:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalVendorDependentRes
	bra	(?L23)
?L35:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalSendResponseTimeout
	bra	(?L23)
?L36:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGetCapsResponse
	bra	(?L23)
?L37:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalListAppAttributesResponse
	bra	(?L23)
?L38:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalListAppValuesResponse
	bra	(?L23)
?L39:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGetAppValueResponse
	bra	(?L23)
?L40:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalSetAppValueResponse
	bra	(?L23)
?L41:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGetAppAttributeTextResponse
	bra	(?L23)
?L42:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGetAppValueTextResponse
	bra	(?L23)
?L43:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGetElementAttributesResponse
	bra	(?L23)
?L44:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGetPlayStatusResponse
	bra	(?L23)
?L45:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventPlaybackStatusChangedResponse
	bra	(?L23)
?L46:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventTrackChangedResponse
	bra	(?L23)
?L47:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventPlaybackPosChangedResponse
	bra	(?L23)
?L48:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventBattStatusChangedResponse
	bra	(?L23)
?L49:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventSystemStatusChangedResponse
	bra	(?L23)
?L50:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventPlayerAppSettingChangedResponse
	bra	(?L23)
?L51:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_avrcpHandleInternalRejectMetadataResponse
	bra	(?L23)
?L52:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalAbortContinuingResponse
	bra	(?L23)
?L53:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleNextContinuationPacket
	bra	(?L23)
?L54:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalGroupResponse
	bra	(?L23)
?L55:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleCommonMetadataControlResponse
	bra	(?L23)
?L56:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalAbsoluteVolumeRsp
	bra	(?L23)
?L57:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalAbsoluteVolumeEvent
	bra	(?L23)
?L58:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalAddressPlayerChangedEvent
	bra	(?L23)
?L59:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalEventUidsChangedEvent
	bra	(?L23)
?L60:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleInternalCommonEventResponse
	bra	(?L23)
?L62:
	ld	AL,@H'fff8
	bsr	$_avrcpHandleReceivedData
	bra	(?L23)
?L63:
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpHandleL2capDisconnectInd
	bra	(?L23)
?L64:
	ld	AL,#H'0000
	bra	(?L22)
?L23:
	ld	AL,#H'0001
?L22:
?LBE_avrcpHandleConnectedMessages:
	leavel	#3
_avrcpHandleUnhandledMessages:
	enterl	#6
?LBB_avrcpHandleUnhandledMessages:
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	cmp	AH,#H'0038
	beq	?L115
	cmp	AH,#(H'0001+H'0038)
	bcc	?L138
	cmp	AH,#H'0009
	beq	?L120
	cmp	AH,#(H'0001+H'0009)
	bcc	?L139
	cmp	AH,#H'0004
	beq	?L118
	cmp	AH,#(H'0001+H'0004)
	bcc	?L140
	cmp	AH,#H'0001
	beq	?L117
	bra	(?L115)
?L140:
	cmp	AH,#H'0006
	beq	?L119
	bra	(?L115)
?L139:
	cmp	AH,#H'000B
	beq	?L122
	cmp	AH,#H'000B
	bcs	?L121
	cmp	AH,#H'000C
	beq	?L123
	cmp	AH,#H'000D
	beq	?L124
	bra	(?L115)
?L138:
	cmp	AH,#H'5041
	beq	?L115
	cmp	AH,#(H'0001+H'5041)
	bcc	?L115
	cmp	AH,#H'503A
	beq	?L115
	cmp	AH,#(H'0001+H'503A)
	bcc	?L142
	cmp	AH,#H'5036
	beq	?L125
	bra	(?L115)
?L142:
	cmp	AH,#H'503B
	beq	?L126
	bra	(?L115)
?L117:
	bsr	$_avrcpHandleDeleteTask
	bra	(?L115)
?L118:
	st	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0003
	bsr	$_avrcpSendConnectCfmToApp
	bra	(?L115)
?L119:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'5E03
	bra	(?L144)
?L120:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'5E04
	bra	(?L144)
?L121:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0005
	bsr	$_avrcpSendUnitInfoCfmToClient
	bra	(?L115)
?L122:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0005
	bsr	$_avrcpSendSubunitInfoCfmToClient
	bra	(?L115)
?L123:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'5E0A
?L144:
	ld	AH,#H'0005
	bsr	$_avrcpSendCommonCfmMessageToApp
	bra	(?L115)
?L124:
	bsr	$_avrcpHandleInternalWatchdogTimeout
	bra	(?L115)
?L125:
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleServiceSearchAttributeCfm
	bra	(?L115)
?L126:
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleL2capConnectIndReject
?L115:
?LBE_avrcpHandleUnhandledMessages:
	leavel	#6
$_avrcpInitHandler:
	enterl	#2
?LBB_avrcpInitHandler:
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'5038
	beq	?L161
	cmp	AH,#(H'0001+H'5038)
	bcc	?L167
	cmp	AH,#H'0002
	beq	?L160
	cmp	AH,#H'502E
	beq	?L162
	bra	(?L158)
?L167:
	cmp	AH,#H'5039
	beq	?L158
	cmp	AH,#H'503B
	beq	?L163
	bra	(?L158)
?L160:
	bsr	$_avrcpHandleInternalInitReq
	bra	(?L158)
?L161:
	bsr	$_avrcpHandleL2capRegisterCfm
	bra	(?L158)
?L162:
	bsr	$_avrcpHandleSdpRegisterCfm
	bra	(?L158)
?L163:
	bsr	$_avrcpHandleL2capConnectInd
?L158:
?LBE_avrcpInitHandler:
	leavel	#2
$_avrcpProfileHandler:
	enterl	#5
?LBB_avrcpProfileHandler:
	st	AH,@(H'0001,Y)
?LBB2:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0020,X)
	lsr	#H'000E
	cmp	AH,#H'0001
	bne	?L174
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0001,Y)
	bsr	_avrcpHandleReadyMessages
	bra	(?L175)
?L174:
	cmp	AH,#H'0002
	bne	?L176
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	bsr	_avrcpHandleConnectingMessages
	bra	(?L175)
?L176:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	bsr	_avrcpHandleConnectedMessages
?L175:
	cmp	AL,#H'0000
	bne	?L173
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	bsr	_avrcpHandleUnhandledMessages
?L173:
?LBE2:
?LBE_avrcpProfileHandler:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpDataCleanUp:
	enterl	#3
?LBB_avrcpDataCleanUp:
?LBB3:
	st	AL,@(0,Y)
	cmp	AH,#-H'7FD7
	bne	?L181
	ld	X,@$XAP_AL
	tst	@(H'0002,X)
	beq	?L184
	ld	AL,@(H'0002,X)
	bsr	$_free
?L184:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0002,X)
?L181:
?LBE3:
?LBE_avrcpDataCleanUp:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avbpProfileHandler:
	enterl	#2
?LBB_avbpProfileHandler:
?LBB4:
	ld	X,@$XAP_AL
	cmp	AH,#H'0034
	beq	?L207
	cmp	AH,#(H'0001+H'0034)
	bcc	?L222
	cmp	AH,#H'0010
	beq	?L200
	cmp	AH,#(H'0001+H'0010)
	bcc	?L223
	cmp	AH,#H'0006
	beq	?L192
	cmp	AH,#(H'0001+H'0006)
	bcc	?L224
	cmp	AH,#H'0004
	beq	?L190
	cmp	AH,#H'0005
	beq	?L191
	bra	(?L188)
?L224:
	cmp	AH,#H'000E
	beq	?L198
	cmp	AH,#(H'0001+H'000E)
	bcc	?L199
	cmp	AH,#H'000D
	beq	?L197
	bra	(?L188)
?L223:
	cmp	AH,#H'0013
	beq	?L203
	cmp	AH,#(H'0001+H'0013)
	bcc	?L225
	cmp	AH,#H'0011
	beq	?L201
	cmp	AH,#H'0012
	beq	?L202
	bra	(?L188)
?L225:
	cmp	AH,#H'0032
	beq	?L205
	cmp	AH,#(H'0001+H'0032)
	bcc	?L206
	cmp	AH,#H'0018
	beq	?L204
	bra	(?L188)
?L222:
	cmp	AH,#H'503F
	beq	?L195
	cmp	AH,#(H'0001+H'503F)
	bcc	?L226
	cmp	AH,#H'0037
	beq	?L210
	cmp	AH,#(H'0001+H'0037)
	bcc	?L227
	cmp	AH,#H'0035
	beq	?L208
	cmp	AH,#H'0036
	beq	?L209
	bra	(?L188)
?L227:
	cmp	AH,#H'503A
	beq	?L194
	cmp	AH,#(H'0001+H'503A)
	bcc	?L228
	cmp	AH,#H'0038
	beq	?L212
	bra	(?L188)
?L228:
	cmp	AH,#H'503B
	beq	?L193
	bra	(?L188)
?L226:
	cmp	AH,#-H'7FDF
	beq	?L212
	cmp	AH,#(H'0001-H'7FDF)
	bcc	?L188
	cmp	AH,#H'5040
	beq	?L196
	bra	(?L188)
?L190:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalBrowseConnectReq
	bra	(?L188)
?L191:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalBrowseConnectRes
	bra	(?L188)
?L192:
	ld	AH,#H'0001
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
	bra	(?L188)
?L193:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleL2capConnectIndReject
	bra	(?L188)
?L194:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleAvbpConnectCfm
	bra	(?L188)
?L195:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleBrowseDisconnectInd
	bra	(?L188)
?L196:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleBrowseDisconnectCfm
	bra	(?L188)
?L197:
	bsr	$_avbpHandleInternalWatchdogTimeout
	bra	(?L188)
?L198:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalBrowseSetPlayerReq
	bra	(?L188)
?L199:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalChangePathReq
	bra	(?L188)
?L200:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalGetItemAttributesReq
	bra	(?L188)
?L201:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalGetFolderItemsReq
	bra	(?L188)
?L202:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalGetNumberOfItemsReq
	bra	(?L188)
?L203:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalSearchReq
	bra	(?L188)
?L204:
	bsr	$_avbpHandleInternalSendResponseTimeout
	bra	(?L188)
?L205:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalBrowseSetPlayerRes
	bra	(?L188)
?L206:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalChangePathRes
	bra	(?L188)
?L207:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalGetItemAttributesRes
	bra	(?L188)
?L208:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalGetFolderItemsRes
	bra	(?L188)
?L209:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalGetNumberOfItemsRes
	bra	(?L188)
?L210:
	ld	AH,@(H'0002,Y)
	bsr	$_avrcpHandleInternalSearchRes
	bra	(?L188)
?L212:
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0C00
	bne	?L188
	ld	AL,@$XAP_UXL
	bsr	$_avbpHandleReceivedData
?L188:
?LBE4:
?LBE_avbpProfileHandler:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 35 used[1] = 64 used[3] = 3 total = 102
;# Function pattern *movqi3 used[0] = 35 total = 35
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 111 total = 111
;# Function pattern *call1 used[0] = 81 total = 81
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+4 used[1] = 26 total = 26
;# Function pattern movstrqi+5 used[0] = 89 total = 89
	MODULE	avrcp_sdp_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_serviceClassControllerDefault:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000E
	dc	H'0019
	dc	H'0011
	dc	H'000F
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'0010
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0017
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0000
	dc	H'0017
	dc	H'0009
	dc	H'0001
	dc	H'0004
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000E
	dc	H'0009
	dc	H'0001
	dc	H'0005
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'0001
_serviceClassTargetDefault:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000C
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'0010
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0017
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0000
	dc	H'0017
	dc	H'0009
	dc	H'0001
	dc	H'0004
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000E
	dc	H'0009
	dc	H'0001
	dc	H'0005
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'0002
_serviceClassController:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000E
	dc	H'0019
	dc	H'0011
	dc	H'000F
_serviceClassTarget:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000C
_protocolDescriptorList:
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'0010
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0017
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0000
	dc	H'0017
	dc	H'0009
	dc	H'0001
	dc	H'0004
_profileDescriptorList:
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000E
	dc	H'0009
	dc	H'0001
	dc	H'0005
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'0002
_AvrcpAttributeRequest:
	dc	H'0035
	dc	H'0006
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0009
	dc	H'0003
	dc	H'0011
_AvrcpTargetServiceRequest:
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000C
_AvrcpControllerServiceRequest:
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000E
	.CODE
_avrcpDefaultControllerRecord:
	enterl	#2
?LBB_avrcpDefaultControllerRecord:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	cmp	AL,#H'0001
	bne	?L2
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	beq	?L2
	ld	AL,#H'0033
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#(_serviceClassControllerDefault)
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_avrcpDefaultControllerRecord:
	leavel	#2
_avrcpPrepareControllerRecord:
	enterl	#8
?LBB_avrcpPrepareControllerRecord:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AH,#H'0033
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	bne	?L6
	ld	AH,#H'0048
	st	AH,@(H'0004,Y)
?L6:
	ld	AL,@(H'0004,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#(_serviceClassController)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	ld	X,#H'0015
	st	X,@(0,Y)
	ld	AH,#(_protocolDescriptorList)
	bsr	$_memmove
	ld	AH,#H'0020
	st	AH,@(H'0004,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	bne	?L7
	ld	AL,@(H'0003,Y)
	add	AL,#H'0020
	ld	AH,#H'0015
	st	AH,@(0,Y)
	ld	AH,#(_protocolDescriptorList)
	bsr	$_memmove
	ld	AL,#H'000D
	ld	X,@(H'0003,Y)
	st	AL,@(H'0022,X)
	ld	AL,#H'001B
	st	AL,@(H'002C,X)
	ld	AH,#H'0035
	st	AH,@(H'0004,Y)
?L7:
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0013
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#(_profileDescriptorList)
	bsr	$_memmove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@(H'0005,Y)
	st	AL,@(H'0012,X)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0013
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?LBE2:
	ld	AL,@(H'0003,Y)
?LBE_avrcpPrepareControllerRecord:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_avrcpDefaultTargetRecord:
	enterl	#2
?LBB_avrcpDefaultTargetRecord:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	cmp	AH,#H'0002
	bne	?L11
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	beq	?L11
	ld	AL,#H'0030
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#(_serviceClassTargetDefault)
	bra	(?L10)
?L11:
	ld	AL,#H'0000
?L10:
?LBE_avrcpDefaultTargetRecord:
	leavel	#2
_avrcpPrepareTargetRecord:
	enterl	#10
?LBB_avrcpPrepareTargetRecord:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,#H'0030
	st	AL,@(H'0004,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0002
	cmp	AH,#H'0000
	bne	?L16
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0007
	bne	?L15
?L16:
	ld	AL,#H'0005
	bra	(?L25)
?L15:
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0021
	cmp	AL,#H'0021
	beq	?L19
	ld	AL,@$XAP_AH
	and	AL,#H'0011
	cmp	AL,#H'0011
	bne	?L17
?L19:
	ld	AL,#H'0003
?L25:
	st	AL,@(H'0005,Y)
?L17:
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0005
	cmp	AH,#H'0000
	beq	?L20
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0005
	bne	?L20
	ld	AL,@(H'0004,Y)
	add	AL,#H'0015
	st	AL,@(H'0004,Y)
?L20:
	ld	AL,@(H'0004,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#(_serviceClassTarget)
	bsr	$_memmove
	ld	AL,#H'0008
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	ld	AH,#H'0015
	st	AH,@(0,Y)
	ld	AH,#(_protocolDescriptorList)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0003
	bne	?L21
	ld	AL,#H'0002
	ld	X,@(H'0003,Y)
	st	AL,@(H'001C,X)
	bra	(?L22)
?L21:
	tst	@(H'0005,Y)
	bne	?L22
	ld	X,@(H'0003,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0014,X)
?L22:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0015
	st	AL,@(H'0004,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0005
	cmp	AH,#H'0000
	beq	?L24
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0005
	bne	?L24
	ld	X,@(H'0003,Y)
	add	X,@(H'0004,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#(_protocolDescriptorList)
	bsr	$_memmove
	ld	AL,#H'000D
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,#H'001B
	st	AL,@(H'000C,X)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0015
	st	AL,@(H'0004,Y)
?L24:
	ld	X,@(H'0003,Y)
	add	X,@(H'0004,Y)
	st	X,@(H'0007,Y)
	ld	AL,#H'0013
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#(_profileDescriptorList)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	st	AL,@(H'000C,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0007,Y)
	st	AH,@(H'0012,X)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0013
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?LBE3:
	ld	AL,@(H'0003,Y)
?LBE_avrcpPrepareTargetRecord:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpSendGetSupportedFeaturesCfm:
	enterl	#5
?LBB_avrcpSendGetSupportedFeaturesCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E32
	bsr	$_MessageSend
?LBE4:
?LBE_avrcpSendGetSupportedFeaturesCfm:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpSendGetExtensionsCfm:
	enterl	#5
?LBB_avrcpSendGetExtensionsCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E33
	bsr	$_MessageSend
?LBE5:
?LBE_avrcpSendGetExtensionsCfm:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpRegisterServiceRecord:
	enterl	#6
?LBB_avrcpRegisterServiceRecord:
	st	AL,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L40
	cmp	AH,#(H'0001+H'0002)
	bcc	?L44
	cmp	AH,#H'0001
	beq	?L37
	bra	(?L35)
?L44:
	cmp	AH,#H'0003
	beq	?L39
	cmp	AH,#H'0007
	bne	?L35
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	and	AL,#-H'00E1
	or	AL,#H'0060
	st	AL,@(H'0002,X)
?L37:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	_avrcpDefaultTargetRecord
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L35
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	_avrcpPrepareTargetRecord
	bra	(?L45)
?L39:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	or	AL,#H'00E0
	st	AL,@(H'0002,X)
?L40:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	_avrcpDefaultControllerRecord
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L35
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	_avrcpPrepareControllerRecord
?L45:
	st	AL,@(H'0003,Y)
?L35:
	bsr	$_avrcpGetInitTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_ConnectionRegisterServiceRecord
?LBE6:
?LBE_avrcpRegisterServiceRecord:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_avrcpHandleSdpRegisterCfm:
	enterl	#6
?LBB_avrcpHandleSdpRegisterCfm:
	st	AL,@(H'0003,Y)
?LBB7:
	bsr	$_avrcpGetDeviceTask
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	and	AL,#H'00E0
	cmp	AL,#H'00E0
	bne	?L51
	ld	X,@(H'0003,Y)
	tst	@(0,X)
	bne	?L51
	ld	AL,@$XAP_AH
	bsr	$_avrcpRegisterServiceRecord
	bra	(?L50)
?L51:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	tst	@(0,X)
	beq	?L53
	ld	AL,#H'0001
?L53:
	st	AL,@(H'0002,Y)
	ld	AL,#H'0003
	bsr	$_avrcpSendInitCfmToClient
?L50:
?LBE7:
?LBE_avrcpHandleSdpRegisterCfm:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_avrcpSdpStateOnConnect:
	enterl	#10
?LBB_avrcpSdpStateOnConnect:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,@(H'001C,X)
	cmp	AL,#H'0004
	beq	?L57
	cmp	AL,#(H'0001+H'0004)
	bcc	?L63
	cmp	AL,#H'0000
	beq	?L59
	bra	(?L55)
?L63:
	cmp	AL,#H'0005
	beq	?L58
	bra	(?L55)
?L57:
	ld	AL,#H'0003
	bra	(?L64)
?L58:
	ld	AL,#H'0000
?L64:
	ld	X,@(H'0007,Y)
	st	AL,@(H'001C,X)
	bra	(?L55)
?L59:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'001E,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L55
	ld	AL,@(H'0007,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L55
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	and	AL,#H'00E0
	cmp	AL,#H'0020
	beq	?L55
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_avrcpSdpSearchRequest
?L55:
?LBE8:
?LBE_avrcpSdpStateOnConnect:
	leavel	#10
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_avrcpHandleServiceSearchAttributeCfm:
	enterl	#15
?LBB_avrcpHandleServiceSearchAttributeCfm:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB9:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0009,Y)
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	st	AL,@(H'000B,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L69
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L69
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0003
	bne	?L69
	ld	AL,@(H'0020,X)
	or	AL,#H'2000
	st	AL,@(H'0020,X)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	ld	AL,#H'0032
	st	AL,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AL,#(_AvrcpControllerServiceRequest)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0008
	st	AL,@(H'0003,Y)
	ld	AL,#(_AvrcpAttributeRequest)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UXL
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
	bra	(?L68)
?L69:
	ld	X,@(H'0008,Y)
	tst	@(0,X)
	bne	?L70
	add	X,#H'0008
	st	X,@(H'000C,Y)
	ld	AL,#H'110E
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	ld	AH,@(H'000C,Y)
	bsr	$_SdpParseGetProfileVersion
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	ld	AH,@(H'000C,Y)
	bsr	$_SdpParseGetSupportedFeatures
	tst	@(H'0006,Y)
	beq	?L70
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0103
	bcz	?L72
	cmp	AL,#H'0105
	bne	?L73
	ld	X,#H'0023
	bra	(?L90)
?L73:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0104
	bne	?L75
	ld	AL,#H'0003
	st	AL,@(H'0009,Y)
	bra	(?L74)
?L75:
	ld	X,#H'0063
?L90:
	st	X,@(H'0009,Y)
?L74:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L79
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	beq	?L79
	ld	AL,@(H'0006,Y)
	and	AL,#H'0005
	cmp	AL,#H'0000
	bne	?L78
?L79:
	ld	AL,@(H'0006,Y)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L70
?L78:
	ld	X,@(H'0009,Y)
	or	X,#H'0007
	st	X,@(H'0009,Y)
	bra	(?L70)
?L72:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0103
	bne	?L70
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
?L70:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'001C,X)
	cmp	AL,#H'0002
	beq	?L84
	cmp	AL,#(H'0001+H'0002)
	bcc	?L89
	cmp	AL,#H'0001
	beq	?L83
	bra	(?L82)
?L89:
	cmp	AL,#H'0003
	beq	?L85
	cmp	AL,#H'0004
	beq	?L86
	bra	(?L82)
?L83:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_avrcpSendGetSupportedFeaturesCfm
	bra	(?L85)
?L84:
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_avrcpSendGetExtensionsCfm
?L85:
	ld	AL,#H'0000
	bra	(?L91)
?L86:
	ld	AL,#H'0005
?L91:
	ld	X,@(H'0007,Y)
	st	AL,@(H'001C,X)
?L82:
	ld	AL,@(H'0009,Y)
	asl	#H'0008
	ld	X,@(H'0007,Y)
	ld	AH,@(H'001F,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'001F,X)
	ld	AH,@(H'0006,Y)
	and	AH,#H'00FF
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'001E,X)
	ld	AL,@(H'0020,X)
	and	AL,#-H'2001
	st	AL,@(H'0020,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0003
	bsr	$_MessageCancelAll
?L68:
?LBE9:
?LBE_avrcpHandleServiceSearchAttributeCfm:
	leavel	#15
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_avrcpSdpSearchRequest:
	enterl	#9
?LBB_avrcpSdpSearchRequest:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0005,Y)
?LBB10:
	st	AL,@(H'001C,X)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	and	AL,#H'00E0
	cmp	AL,#H'0020
	bne	?L104
	ld	AH,#(_AvrcpControllerServiceRequest)
	bra	(?L105)
?L104:
	ld	AH,#(_AvrcpTargetServiceRequest)
?L105:
	ld	AL,#H'0032
	st	AL,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0008
	st	AL,@(H'0003,Y)
	ld	AL,#(_AvrcpAttributeRequest)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?LBE10:
?LBE_avrcpSdpSearchRequest:
	leavel	#9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_avrcpGetProfileVersion:
	enterl	#10
?LBB_avrcpGetProfileVersion:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB11:
	ld	AL,@(H'0007,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L108
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_avrcpSdpSearchRequest
	bra	(?L107)
?L108:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0005
	bsr	$_avrcpSendGetExtensionsCfm
?L107:
?LBE11:
?LBE_avrcpGetProfileVersion:
	leavel	#10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_avrcpGetSupportedFeatures:
	enterl	#10
?LBB_avrcpGetSupportedFeatures:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB12:
	ld	AL,@(H'0007,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L111
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_avrcpSdpSearchRequest
	bra	(?L110)
?L111:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0005
	bsr	$_avrcpSendGetSupportedFeaturesCfm
?L110:
?LBE12:
?LBE_avrcpGetSupportedFeatures:
	leavel	#10
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 133 used[1] = 27 total = 160
;# Function pattern *movqi3 used[0] = 182 total = 182
;# Function pattern *addqi0 used[0] = 12 total = 12
;# Function pattern *addqi2 used[0] = 14 total = 14
;# Function pattern *andqi3 used[0] = 27 total = 27
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *lshrqi3 used[0] = 15 total = 15
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 22 total = 22
;# Function pattern *call1 used[0] = 14 total = 14
;# Function pattern *call_value1 used[0] = 27 total = 27
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 14 used[1] = 5 total = 19
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 32 total = 32
	MODULE	avrcp_send_response
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sendPassThroughResponse:
	enterl	#5
?LBB_sendPassThroughResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0014
	bsr	$_MessageSend
?LBE2:
?LBE_sendPassThroughResponse:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_sendUnitInfoResponse:
	enterl	#5
?LBB_sendUnitInfoResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0015
	bsr	$_MessageSend
?LBE3:
?LBE_sendUnitInfoResponse:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sendSubunitInfoResponse:
	enterl	#6
?LBB_sendSubunitInfoResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memcpy
	bra	(?L5)
?L4:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	st	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0003,X)
?L5:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0016
	bsr	$_MessageSend
?LBE4:
?LBE_sendSubunitInfoResponse:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_sendVendorDependentResponse:
	enterl	#5
?LBB_sendVendorDependentResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0017
	bsr	$_MessageSend
?LBE5:
?LBE_sendVendorDependentResponse:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpSendGetCapsResponse:
	enterl	#5
?LBB_avrcpSendGetCapsResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0019
	bsr	$_MessageSend
?LBE6:
?LBE_avrcpSendGetCapsResponse:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_sendGetElementsResponse:
	enterl	#5
?LBB_sendGetElementsResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0020
	bsr	$_MessageSend
?LBE7:
?LBE_sendGetElementsResponse:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_sendGroupResponse:
	enterl	#5
?LBB_sendGroupResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'002C
	bsr	$_MessageSend
?LBE8:
?LBE_sendGroupResponse:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_sendPlayStatusResponse:
	enterl	#5
?LBB_sendPlayStatusResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0005,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0021
	bsr	$_MessageSend
?LBE9:
?LBE_sendPlayStatusResponse:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_sendListAttrResponse:
	enterl	#5
?LBB_sendListAttrResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'001A
	bsr	$_MessageSend
?LBE10:
?LBE_sendListAttrResponse:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_sendListValuesResponse:
	enterl	#5
?LBB_sendListValuesResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB11:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'001B
	bsr	$_MessageSend
?LBE11:
?LBE_sendListValuesResponse:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_sendGetValuesResponse:
	enterl	#5
?LBB_sendGetValuesResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'001C
	bsr	$_MessageSend
?LBE12:
?LBE_sendGetValuesResponse:
	leavel	#5
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_sendSetValuesResponse:
	enterl	#5
?LBB_sendSetValuesResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB13:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'001D
	bsr	$_MessageSend
?LBE13:
?LBE_sendSetValuesResponse:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_sendGetAttributeTextResponse:
	enterl	#5
?LBB_sendGetAttributeTextResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB14:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'001E
	bsr	$_MessageSend
?LBE14:
?LBE_sendGetAttributeTextResponse:
	leavel	#5
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_sendGetValueTextResponse:
	enterl	#5
?LBB_sendGetValueTextResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'001F
	bsr	$_MessageSend
?LBE15:
?LBE_sendGetValueTextResponse:
	leavel	#5
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_avrcpSendEventResponse:
	enterl	#5
?LBB_avrcpSendEventResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB16:
	ld	AL,#H'0001
	asl	@(H'0005,Y)
	ld	X,@(H'0001,Y)
	and	AL,@(H'000C,X)
	cmp	AL,#H'0000
	beq	?L17
?LBB17:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0023
	bsr	$_MessageSend
?L17:
?LBE17:
?LBE16:
?LBE_avrcpSendEventResponse:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_avrcpSendMetaDataControlResponse:
	enterl	#5
?LBB_avrcpSendMetaDataControlResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB18:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0022
	bsr	$_MessageSend
?LBE18:
?LBE_avrcpSendMetaDataControlResponse:
	leavel	#5
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
	ENDMOD

;# Function pattern *movqi2 used[0] = 109 used[1] = 17 total = 126
;# Function pattern *movqi3 used[0] = 78 total = 78
;# Function pattern *movhi used[2] = 3 used[3] = 3 total = 6
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 17 total = 17
;# Function pattern movstrqi+3 used[0] = 2 total = 2
	MODULE	avrcp_signal_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpHandleReceivedData:
	enterl	#6
?LBB_avrcpHandleReceivedData:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0002,Y)
	bra	(?L10)
?L9:
	ld	AL,@(H'0002,Y)
	bsr	$_SourceMap
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpAvctpReceiveMessage
	cmp	AL,#H'0000
	beq	?L10
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	bne	?L7
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleCommand
	bra	(?L10)
?L7:
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpHandleResponse
?L10:
	ld	AL,@(H'0002,Y)
	bsr	$_SourceBoundary
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L3
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001E,X)
	and	AL,#-H'0100
	cmp	AL,#H'0000
	beq	?L9
?L3:
?LBE2:
?LBE_avrcpHandleReceivedData:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpHandleResponse:
	enterl	#3
?LBB_avrcpHandleResponse:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB3:
	ld	X,@(H'001A,X)
	st	X,@(-1,Y)
	ld	AL,#H'0003
	st	AL,@H'fff8
	ld	AL,@(0,X)
	and	AL,#H'000C
	ld	X,@$XAP_AH
	ld	X,@(H'001B,X)
	st	X,@H'fff9
	cmp	AL,#H'0004
	bne	?L12
	ld	AL,#H'0004
	st	AL,@H'fff8
?L12:
	ld	X,@H'fff8
	add	X,@(-1,Y)
	ld	AL,@H'fff9
	sub	AL,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0031
	beq	?L16
	cmp	AL,#(H'0001+H'0031)
	bcc	?L20
	cmp	AL,#H'0000
	beq	?L17
	cmp	AL,#H'0030
	beq	?L15
	bra	(?L18)
?L20:
	cmp	AL,#H'007C
	bne	?L18
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandlePassthroughResponse
	bra	(?L11)
?L15:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleUnitInfoResponse
	bra	(?L11)
?L16:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleSubUnitInfoResponse
	bra	(?L11)
?L17:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_AH
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleVendorResponse
	bra	(?L11)
?L18:
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?L11:
?LBE3:
?LBE_avrcpHandleResponse:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpHandleInternalWatchdogTimeout:
	enterl	#7
?LBB_avrcpHandleInternalWatchdogTimeout:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
	tst	@(H'0007,X)
	beq	?L26
	ld	AL,@(H'001D,X)
	cmp	AL,#H'0002
	beq	?L29
	cmp	AL,#(H'0001+H'0002)
	bcc	?L35
	cmp	AL,#H'0001
	beq	?L28
	bra	(?L32)
?L35:
	cmp	AL,#H'0003
	beq	?L30
	cmp	AL,#H'0004
	beq	?L31
	bra	(?L32)
?L28:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'5E04
	ld	AH,#H'0004
	bsr	$_avrcpSendCommonCfmMessageToApp
	bra	(?L26)
?L29:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0004
	bsr	$_avrcpSendUnitInfoCfmToClient
	bra	(?L26)
?L30:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0004
	bsr	$_avrcpSendSubunitInfoCfmToClient
	bra	(?L26)
?L31:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0004
	bsr	$_avrcpSendVendordependentCfmToClient
	bra	(?L26)
?L32:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'001D,X)
	cmp	AL,#H'000F
	bcz	?L26
	ld	AL,@$XAP_UXL
	ld	AH,#H'0004
	bsr	$_avrcpSendMetadataFailCfmToClient
?L26:
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
?LBE_avrcpHandleInternalWatchdogTimeout:
	leavel	#7
$_avrcpHandleCommand:
	enterl	#9
?LBB_avrcpHandleCommand:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB4:
	ld	X,@(H'001A,X)
	st	X,@(H'0004,Y)
	ld	AH,#H'0003
	st	AH,@(H'0005,Y)
	ld	AL,@(0,X)
	and	AL,#H'000C
	ld	X,@(H'0003,Y)
	ld	X,@(H'001B,X)
	st	X,@(H'0006,Y)
	cmp	AL,#H'0004
	bne	?L42
?LBB5:
	ld	AH,#H'0004
	st	AH,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	tst	@(H'0006,X)
	beq	?L42
	ld	AL,@(H'0006,X)
	cmp	AL,#H'007C
	beq	?L42
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0007
	bsr	$_avrcpSendAvcResponse
?L42:
	ld	AH,@(H'0004,Y)
?LBE5:
	add	AH,@(H'0005,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	sub	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L44
	ld	AL,@(H'0002,X)
	cmp	AL,#H'007C
	bne	?L44
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandlePassthroughCommand
	bra	(?L41)
?L44:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L46
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0030
	bne	?L46
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleUnitInfoCommand
	bra	(?L41)
?L46:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L48
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0031
	bne	?L48
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleSubUnitInfoCommand
	bra	(?L41)
?L48:
	ld	X,@(H'0004,Y)
	tst	@(H'0002,X)
	bne	?L50
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_avrcpHandleVendorCommand
	bra	(?L41)
?L50:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0007
	bsr	$_avrcpSendAvcResponse
?L41:
?LBE4:
?LBE_avrcpHandleCommand:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpSendAvcResponse:
	enterl	#15
?LBB_avrcpSendAvcResponse:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0010,Y)
?LBB6:
	add	AL,@$XAP_AH
	st	AL,@(H'0008,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'000B,X)
	add	AH,#-H'0003
	st	AH,@(H'0009,Y)
	ld	AL,#H'0003
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,X)
	st	X,@(H'000B,Y)
	ld	AL,@$XAP_UXL
	bsr	$_StreamSourceFromSink
	bsr	$_SourceMap
	ld	X,@(H'0004,Y)
	ld	AH,@(H'001A,X)
	cmp	AH,@$XAP_AL
	bne	?L60
	ld	AL,@(H'000B,Y)
	bsr	$_StreamSourceFromSink
	bsr	$_SourceBoundary
	cmp	AL,#H'0000
	bne	?L60
	ld	X,@(H'0004,Y)
	st	AL,@(H'001A,X)
	st	AL,@(H'001B,X)
?L60:
	ld	X,@(H'0004,Y)
	tst	@(H'001A,X)
	beq	?L71
	ld	AH,@(H'0008,Y)
	cmp	AH,@(H'0009,Y)
	bcz	?L62
	ld	AL,#H'0004
	st	AL,@(H'0006,Y)
	bra	(?L63)
?L62:
	ld	AH,#H'0003
	st	AH,@(H'0006,Y)
?L63:
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0006,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_SinkSlack
	ld	X,@(H'0008,Y)
	cmp	X,@$XAP_AL
	beq	?L75
	bcc	?L64
?L75:
	ld	AH,@(H'0006,Y)
	add	AH,@(H'0005,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_avrcpGrabSink
	st	AL,@(H'0007,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'000C
	cmp	AL,#H'0004
	bne	?L65
	ld	AH,#H'0004
	st	AH,@(H'000A,Y)
?L65:
	ld	AL,@(H'0007,Y)
	add	AL,@(H'0006,Y)
	st	AL,@(-1,Y)
	ld	AH,@(H'000A,Y)
	ld	X,@(H'0004,Y)
	add	AH,@(H'001A,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(-1,Y)
	bsr	$_memmove
	ld	X,@(H'0004,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AH,@(H'000F,Y)
	cmp	AH,#H'0001
	bne	?L66
	tst	@(H'0010,Y)
	beq	?L67
	ld	AL,@(H'0011,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_SourceDrop
?L67:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0010,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	or	AL,#H'0001
	st	AL,@(0,X)
	bra	(?L68)
?L66:
	ld	AH,@(H'0007,Y)
	add	AH,@(H'0006,Y)
	st	AH,@(H'000C,Y)
	ld	AL,@$XAP_AH
	add	AL,#-H'0002
	ld	AH,@(H'000A,Y)
	ld	X,@(H'0004,Y)
	add	AH,@(H'001A,X)
	add	AH,#-H'0002
	ld	X,#H'0002
	st	X,@(0,Y)
	bsr	$_memmove
	ld	AH,@(H'000F,Y)
	ld	X,@(H'000C,Y)
	st	AH,@(0,X)
?L68:
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0005,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0011,Y)
	st	X,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0002
	bsr	$_avrcpAvctpSendMessage
	bra	(?L71)
?L64:
	tst	@(H'0010,Y)
	beq	?L71
	ld	AL,@(H'0011,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_SourceDrop
?L71:
	ld	AH,@(H'000F,Y)
	cmp	AH,#H'000F
	beq	?L59
	ld	AL,@(H'0005,Y)
	cmp	AL,#(H'0001+H'000A)
	bcc	?L59
	ld	AL,@(H'0004,Y)
	bsr	$_avrcpUnblockReceivedData
?L59:
?LBE6:
?LBE_avrcpSendAvcResponse:
	leavel	#15
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_avrcpBlockReceivedData:
	enterl	#9
?LBB_avrcpBlockReceivedData:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB7:
	cmp	AH,#H'00FE
	bne	?L80
	ld	AL,#H'7530
	bra	(?L82)
?L80:
	ld	AL,#H'07D0
?L82:
	st	AL,@(H'0006,Y)
	ld	X,#H'0000
	st	X,@(H'0005,Y)
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0004,Y)
	asl	#H'0008
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001E,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'001E,X)
	ld	AL,@(H'0004,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0018
	bsr	$_MessageSendLater
?LBE7:
?LBE_avrcpBlockReceivedData:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_avrcpUnblockReceivedData:
	enterl	#3
?LBB_avrcpUnblockReceivedData:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001E,X)
	and	AL,#H'00FF
	st	AL,@(H'001E,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0018
	bsr	$_MessageCancelAll
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?LBE_avrcpUnblockReceivedData:
	leavel	#3
$_avrcpHandleInternalSendResponseTimeout:
	enterl	#6
?LBB_avrcpHandleInternalSendResponseTimeout:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L107
	cmp	AL,#(H'0001+H'0020)
	bcc	?L127
	cmp	AL,#H'0004
	beq	?L90
	cmp	AL,#(H'0001+H'0004)
	bcc	?L128
	cmp	AL,#H'0001
	beq	?L87
	cmp	AL,#H'0001
	bcs	?L125
	cmp	AL,#H'0002
	beq	?L88
	cmp	AL,#H'0003
	beq	?L89
	bra	(?L125)
?L128:
	cmp	AL,#H'0006
	bcz	?L92
	add	AL,#-H'0010
	cmp	AL,#(H'0001+H'0008)
	bcc	?L125
	bra	(?L107)
?L127:
	cmp	AL,#H'0060
	beq	?L107
	cmp	AL,#(H'0001+H'0060)
	bcc	?L129
	cmp	AL,#(H'0001+H'0041)
	bcc	?L130
	cmp	AL,#H'0040
	bcc	?L125
	cmp	AL,#H'0030
	beq	?L107
	bra	(?L125)
?L130:
	cmp	AL,#H'0050
	beq	?L107
	bra	(?L125)
?L129:
	cmp	AL,#(H'0001+H'00FD)
	bcc	?L125
	cmp	AL,#H'00F1
	bcc	?L120
	cmp	AL,#H'0074
	beq	?L107
	cmp	AL,#H'0090
	beq	?L107
	bra	(?L125)
?L87:
	ld	AL,@H'fff8
	ld	AH,#H'000A
	bsr	$_sendPassThroughResponse
	bra	(?L85)
?L88:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_sendUnitInfoResponse
	bra	(?L85)
?L89:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_sendSubunitInfoResponse
	bra	(?L85)
?L90:
	ld	AL,@H'fff8
	ld	AH,#H'000A
	bsr	$_sendVendorDependentResponse
	bra	(?L85)
?L92:
	ld	AL,@H'fff8
	ld	AH,#H'000A
	bsr	$_sendGroupResponse
	bra	(?L85)
?L107:
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0083
	bsr	$_avrcpHandleInternalRejectMetadataResponse
	bra	(?L85)
?L120:
	ld	X,@(0,X)
	ld	AL,#-H'00F0
	add	AL,@$XAP_UXL
	st	AL,@(-1,Y)
	ld	AL,#H'0001
	ld	X,@(-1,Y)
	asl	@$XAP_UXL
	ld	AH,@$XAP_AL
	ld	AL,#H'0083
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_avrcpRejectRegisterNotifications
	bra	(?L85)
?L125:
	ld	AL,@H'fff8
	bsr	$_avrcpUnblockReceivedData
?L85:
?LBE_avrcpHandleInternalSendResponseTimeout:
	leavel	#6
	ENDMOD

;# Function pattern *movqi2 used[0] = 114 used[1] = 38 used[3] = 5 total = 157
;# Function pattern *movqi3 used[0] = 122 total = 122
;# Function pattern *movqi8 used[0] = 5 total = 5
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 12 used[2] = 2 total = 14
;# Function pattern *andqi3 used[0] = 7 total = 7
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 33 total = 33
;# Function pattern *call1 used[0] = 31 total = 31
;# Function pattern *call_value1 used[0] = 15 total = 15
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 7 total = 13
;# Function pattern movstrqi+4 used[0] = 1 used[1] = 9 total = 10
;# Function pattern movstrqi+5 used[0] = 36 total = 36
	MODULE	avrcp_signal_unit_info
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpSendUnitInfoCfmToClient:
	enterl	#5
?LBB_avrcpSendUnitInfoCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0002,Y)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E06
	bsr	$_MessageSend
?LBE2:
?LBE_avrcpSendUnitInfoCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpHandleInternalUnitInfoReq:
	enterl	#9
?LBB_avrcpHandleInternalUnitInfoReq:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	X,@(H'0007,X)
	st	X,@(H'0005,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000B
	bsr	$_avrcpGrabSink
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	bne	?L3
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0002
	bsr	$_avrcpSendUnitInfoCfmToClient
	bra	(?L2)
?L3:
	ld	X,#H'0000
	st	X,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_avrcpAvctpSetCmdHeader
	ld	AL,#H'0001
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AH,#H'00FF
	st	AH,@(H'0004,X)
	ld	AL,#H'0030
	st	AL,@(H'0005,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	ld	X,#H'0005
	st	X,@(0,Y)
	bsr	$_memset
	ld	AL,@(H'0005,Y)
	ld	AH,#H'000B
	bsr	$_SinkFlush
	ld	AL,#H'0002
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0FA0
	st	AL,@(H'0002,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'000D
	bsr	$_MessageSendLater
?L2:
?LBE3:
?LBE_avrcpHandleInternalUnitInfoReq:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpHandleUnitInfoResponse:
	enterl	#7
?LBB_avrcpHandleUnitInfoResponse:
	st	AL,@(H'0004,Y)
	st	AH,@H'fffa
	ld	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001D,X)
	cmp	AL,#H'0002
	bne	?L6
	cmp	AH,#H'0007
	bcz	?L7
	ld	X,@H'fffa
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L7
	ld	AH,@(H'0004,X)
	lsr	#H'0003
	st	AH,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0005,X)
	ld	AL,#H'0000
	and	AL,#H'0000
	and	AH,#H'00FF
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0006,X)
	asl	#H'0008
	and	AL,#H'FF00
	and	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0007,X)
	and	AL,#H'00FF
	and	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bra	(?L9)
?L7:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0001
?L9:
	bsr	$_avrcpSendUnitInfoCfmToClient
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
?L6:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?LBE_avrcpHandleUnitInfoResponse:
	leavel	#7
$_avrcpSendSubunitInfoCfmToClient:
	enterl	#6
?LBB_avrcpSendSubunitInfoCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	tst	@(H'0007,Y)
	beq	?L14
	ld	AL,@$XAP_UXL
	add	AL,#H'0004
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memcpy
	bra	(?L15)
?L14:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0007,X)
	st	AL,@(H'0006,X)
?L15:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E09
	bsr	$_MessageSend
?LBE4:
?LBE_avrcpSendSubunitInfoCfmToClient:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpHandleInternalSubUnitInfoReq:
	enterl	#9
?LBB_avrcpHandleInternalSubUnitInfoReq:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	X,@(H'0007,X)
	st	X,@(H'0005,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000B
	bsr	$_avrcpGrabSink
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	bne	?L17
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_avrcpSendSubunitInfoCfmToClient
	bra	(?L16)
?L17:
	ld	X,#H'0000
	st	X,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_avrcpAvctpSetCmdHeader
	ld	AL,#H'0001
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'00FF
	st	AL,@(H'0004,X)
	ld	AL,#H'0031
	st	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	asl	#H'0004
	and	AL,#H'0070
	or	AL,#H'0007
	ld	X,@(H'0006,Y)
	st	AL,@(H'0006,X)
	ld	AL,#H'00FF
	st	AL,@(H'0007,X)
	st	AL,@(H'0008,X)
	st	AL,@(H'0009,X)
	st	AL,@(H'000A,X)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'000B
	bsr	$_SinkFlush
	ld	AL,#H'0003
	ld	X,@(H'0003,Y)
	st	AL,@(H'001D,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0FA0
	st	AL,@(H'0002,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000D
	bsr	$_MessageSendLater
?L16:
?LBE5:
?LBE_avrcpHandleInternalSubUnitInfoReq:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpHandleSubUnitInfoResponse:
	enterl	#5
?LBB_avrcpHandleSubUnitInfoResponse:
	st	AL,@(H'0002,Y)
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001D,X)
	cmp	AL,#H'0003
	bne	?L20
	cmp	AH,#H'0007
	bcz	?L21
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L21
	ld	AH,@(H'0003,X)
	lsr	#H'0004
	st	AH,@(0,Y)
	ld	AL,#H'0004
	add	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bra	(?L23)
?L21:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
?L23:
	bsr	$_avrcpSendSubunitInfoCfmToClient
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
?L20:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?LBE_avrcpHandleSubUnitInfoResponse:
	leavel	#5
$_avrcpHandleInternalUnitInfoRes:
	enterl	#9
?LBB_avrcpHandleInternalUnitInfoRes:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	tst	@(H'001A,X)
	beq	?L27
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L29
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendAvcResponse
	bra	(?L27)
?L29:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	AH,#H'000B
	bsr	$_avrcpGrabSink
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L30
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001A,X)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	AL,#H'0007
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0003
	ld	AH,@(H'0002,X)
	and	AH,#H'0007
	or	AL,@$XAP_AH
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	lsr	#H'0008
	and	AL,#H'00FF
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00FF
	ld	X,@(H'0006,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'000C
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(0,X)
	xor	AL,#H'0002
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	AH,#H'000B
	bsr	$_SinkFlush
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpUnblockReceivedData
	bra	(?L27)
?L30:
	bsr	$_Panic
?L27:
?LBE6:
?LBE_avrcpHandleInternalUnitInfoRes:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_avrcpHandleUnitInfoCommand:
	enterl	#7
?LBB_avrcpHandleUnitInfoCommand:
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
?LBB7:
	cmp	AH,#(H'0001+H'0007)
	bcc	?L33
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSendAvcResponse
	bra	(?L32)
?L33:
?LBB8:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_avrcpBlockReceivedData
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E07
	bsr	$_MessageSend
?L32:
?LBE8:
?LBE7:
?LBE_avrcpHandleUnitInfoCommand:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_avrcpHandleInternalSubUnitInfoRes:
	enterl	#8
?LBB_avrcpHandleInternalSubUnitInfoRes:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB9:
	tst	@(H'001A,X)
	beq	?L36
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L37
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendAvcResponse
	bra	(?L36)
?L37:
	ld	X,@(H'0003,Y)
?LBB10:
	ld	AL,@(H'0007,X)
	ld	AH,#H'000B
	bsr	$_avrcpGrabSink
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L39
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001A,X)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	ld	X,#H'0004
	st	X,@(0,Y)
	bsr	$_memmove
	ld	AL,#H'000C
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(0,X)
	xor	AL,#H'0002
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	AH,#H'000B
	bsr	$_SinkFlush
?L39:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?L36:
?LBE10:
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpUnblockReceivedData
?LBE9:
?LBE_avrcpHandleInternalSubUnitInfoRes:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_avrcpHandleSubUnitInfoCommand:
	enterl	#8
?LBB_avrcpHandleSubUnitInfoCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
?LBB11:
	cmp	AH,#(H'0001+H'0007)
	bcc	?L41
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSendAvcResponse
	bra	(?L40)
?L41:
?LBB12:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0004
	ld	X,@(H'0005,Y)
	st	AH,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0003
	bsr	$_avrcpBlockReceivedData
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E08
	bsr	$_MessageSend
?L40:
?LBE12:
?LBE11:
?LBE_avrcpHandleSubUnitInfoCommand:
	leavel	#8
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 131 used[1] = 36 used[3] = 1 total = 168
;# Function pattern *movqi3 used[0] = 155 total = 155
;# Function pattern *movhi used[2] = 2 used[3] = 4 total = 6
;# Function pattern *andhi3 used[0] = 3 total = 3
;# Function pattern *iorhi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 5 used[2] = 1 total = 6
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *xorqi3 used[0] = 2 total = 2
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 24 total = 24
;# Function pattern *call_value1 used[0] = 19 total = 19
;# Function pattern zero_extendqihi2+1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 5 total = 9
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	avrcp_signal_vendor
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_avrcpSetVendorPacketHeader:
	enterl	#2
?LBB_avrcpSetVendorPacketHeader:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	asl	#H'0003
	and	AL,#H'00F8
	ld	AH,@(H'0001,X)
	and	AH,#H'0007
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	X,@H'fff9
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	and	AL,#H'0000
	and	AH,#H'00FF
	lsr	#H'0010
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	X,@H'fff9
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	and	AL,#H'FF00
	and	AH,#H'0000
	lsr	#H'0008
	ld	X,@H'fff8
	st	AL,@(H'0004,X)
	ld	X,@H'fff9
	ld	AL,@(H'0004,X)
	and	AL,#H'00FF
	ld	X,@H'fff8
	st	AL,@(H'0005,X)
?LBE_avrcpSetVendorPacketHeader:
	leavel	#2
$_avrcpSendVendordependentCfmToClient:
	enterl	#5
?LBB_avrcpSendVendordependentCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E0A
	bsr	$_MessageSend
?LBE2:
?LBE_avrcpSendVendordependentCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpHandleInternalVendorDependentReq:
	enterl	#18
?LBB_avrcpHandleInternalVendorDependentReq:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB3:
	ld	AH,#H'0006
	st	AH,@(H'0007,Y)
	ld	AL,#H'0003
	st	AL,@(H'0009,Y)
	ld	X,@(H'0004,Y)
	ld	X,@(H'000B,X)
	ld	AH,#-H'0003
	add	AH,@$XAP_UXL
	st	AH,@H'fff8
	ld	X,@(H'0005,Y)
	ld	X,@(H'0006,X)
	st	X,@H'fff9
	add	X,#H'0006
	st	X,@(H'000A,Y)
	ld	X,@(H'0005,Y)
	tst	@(H'0008,X)
	beq	?L4
	ld	AH,@(H'000A,Y)
	add	AH,@(H'0008,X)
	st	AH,@(H'000A,Y)
	ld	AL,#H'0006
	add	AL,@(H'0008,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0031
	bne	?L4
?LBB4:
	ld	AH,@(H'0005,X)
	add	AH,#-H'00F0
	st	AH,@(H'000B,Y)
	ld	AL,#H'0001
	asl	@$XAP_AH
	ld	X,@(H'0004,Y)
	and	AL,@(H'000C,X)
	cmp	AL,#H'0000
	beq	?L6
	tst	@H'fff9
	beq	?L7
	ld	X,@(H'0005,Y)
?LBB5:
	ld	X,@(H'0007,X)
	st	X,@(H'000C,Y)
	ld	AL,@$XAP_UXL
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000C,Y)
	bsr	$_SourceDrop
?L7:
	ld	AH,@(H'000B,Y)
?LBE5:
	st	AH,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0006
	bsr	$_avrcpSendRegisterNotificationFailCfm
	bra	(?L3)
?L6:
	ld	AL,#H'0001
	asl	@(H'000B,Y)
	ld	X,@(H'0004,Y)
	or	AL,@(H'000C,X)
	st	AL,@(H'000C,X)
	add	X,@(H'000B,Y)
	st	X,@(H'000F,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'001F,X)
	lsr	#H'0004
	and	AH,#H'000F
	ld	X,@(H'000F,Y)
	st	AH,@(H'000C,X)
?L4:
	ld	AH,@(H'000A,Y)
?LBE4:
	cmp	AH,@H'fff8
	bcz	?L9
	ld	AL,#H'0004
	st	AL,@(H'0009,Y)
	ld	X,@(H'0004,Y)
	ld	X,@(H'000B,X)
	st	X,@(H'000A,Y)
	bra	(?L10)
?L9:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0003
	st	AH,@(H'000A,Y)
?L10:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	bsr	$_SinkSlack
	ld	AH,@(H'000A,Y)
	cmp	AH,@$XAP_AL
	bcc	?L11
	ld	AH,@(H'0007,Y)
	add	AH,@(H'0009,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	bsr	$_avrcpGrabSink
	st	AL,@(H'0006,Y)
	ld	AH,@$XAP_AL
	add	AH,@(H'0009,Y)
	st	AH,@(H'000D,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	bsr	_avrcpSetVendorPacketHeader
	ld	X,@(H'0005,Y)
	tst	@(H'0008,X)
	beq	?L12
	ld	AL,@(H'000D,Y)
	add	AL,#H'0006
	ld	AH,@$XAP_UXL
	add	AH,#H'0009
	ld	X,@(H'0008,X)
	st	X,@(0,Y)
	bsr	$_memmove
?L12:
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_avrcpAvctpSendMessage
	st	AL,@(H'0008,Y)
	bra	(?L13)
?L11:
	ld	AH,#H'0002
	st	AH,@(H'0008,Y)
?L13:
	tst	@(H'0008,Y)
	bne	?L14
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0FA0
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageSendLater
	bra	(?L3)
?L14:
	ld	X,@(H'0005,Y)
	tst	@(H'0006,X)
	beq	?L16
?LBB6:
	ld	AH,@(H'0007,X)
	st	AH,@(H'000E,Y)
	ld	AL,@$XAP_AH
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000E,Y)
	bsr	$_SourceDrop
?L16:
	ld	X,@(H'0005,Y)
?LBE6:
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0004
	bne	?L18
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpSendVendordependentCfmToClient
	bra	(?L3)
?L18:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0008,Y)
	bsr	$_avrcpSendMetadataFailCfmToClient
?L3:
?LBE3:
?LBE_avrcpHandleInternalVendorDependentReq:
	leavel	#18
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE3
$_avrcpHandleVendorResponse:
	enterl	#6
?LBB_avrcpHandleVendorResponse:
	st	AL,@(H'0001,Y)
	st	AH,@H'fff8
	ld	AH,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB7:
	ld	AL,@(H'001D,X)
	cmp	AL,#H'0004
	bne	?L25
	ld	X,@H'fff8
?LBB8:
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	bsr	$_convertResponseToStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpSendVendordependentCfmToClient
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UXL
	bra	(?L30)
?L25:
?LBE8:
	cmp	AH,#(H'0001+H'0009)
	bcc	?L27
	cmp	AH,#H'0000
	beq	?L28
	ld	X,@H'fff8
?LBB9:
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	bsr	$_convertResponseToStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpSendVendordependentCfmToClient
?L28:
?LBE9:
	ld	AL,@(H'0001,Y)
?L30:
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
	bra	(?L24)
?L27:
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@H'fff8
	bsr	$_avrcpHandleMetadataResponse
?L24:
?LBE7:
?LBE_avrcpHandleVendorResponse:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_avrcpHandleInternalVendorDependentRes:
	enterl	#5
?LBB_avrcpHandleInternalVendorDependentRes:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0006
	bsr	$_avrcpSendAvcResponse
?LBE_avrcpHandleInternalVendorDependentRes:
	leavel	#5
$_avrcpHandleVendorCommand:
	enterl	#11
?LBB_avrcpHandleVendorCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'000B,Y)
?LBB10:
	cmp	AH,#(H'0001+H'0005)
	bcc	?L34
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bra	(?L45)
?L34:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0003
	bsr	$_avrcpGetCompanyId
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#-H'0006
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	add	AH,#-H'0002
	cmp	AH,#(H'0001+H'0001)
	bcc	?L35
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	st	AL,@(H'0020,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
	bra	(?L33)
?L35:
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	cmp	AH,#H'0000
	bne	?L36
	cmp	AL,#H'1958
	bne	?L36
	ld	AL,@(H'0005,Y)
	cmp	AL,#(H'0001+H'0003)
	bcc	?L37
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
?L45:
	bsr	$_avrcpSendAvcResponse
	bra	(?L33)
?L37:
	ld	X,@(H'000B,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_avrcpHandleMetadataCommand
	bra	(?L33)
?L36:
	ld	AH,@(H'0005,Y)
?LBB11:
	cmp	AH,#(H'0001+H'0004)
	bcc	?L40
	ld	AL,@$XAP_AH
	add	AL,#H'0009
	bra	(?L41)
?L40:
	ld	AL,#H'000C
?L41:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0006,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(0,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00F8
	lsr	#H'0003
	ld	X,@(H'0008,Y)
	st	AH,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'0007
	ld	X,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0008,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	AH,@(H'0005,Y)
	st	AH,@H'fff8
	cmp	AH,#H'0004
	bcz	?L42
	ld	AL,#H'0004
	st	AL,@H'fff8
?L42:
	ld	X,@(H'0008,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0007,X)
	ld	AL,@H'ffff
	tst	@(H'0005,Y)
	beq	?L43
	ld	AL,@$XAP_UXL
	add	AL,#H'0008
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	$_memmove
	bra	(?L44)
?L43:
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(H'0008,X)
?L44:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0004
	bsr	$_avrcpBlockReceivedData
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E0B
	bsr	$_MessageSend
?L33:
?LBE11:
?LBE10:
?LBE_avrcpHandleVendorCommand:
	leavel	#11
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
	ENDMOD

;# Function pattern *movqi2 used[0] = 102 used[1] = 32 used[3] = 2 total = 136
;# Function pattern *movqi3 used[0] = 124 total = 124
;# Function pattern *movhi used[2] = 4 used[3] = 2 total = 6
;# Function pattern *andhi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 15 used[2] = 1 total = 16
;# Function pattern *andqi3 used[0] = 9 total = 9
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern *lshrhi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 13 total = 13
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 6 total = 8
;# Function pattern movstrqi+4 used[1] = 5 total = 5
;# Function pattern movstrqi+5 used[0] = 6 total = 6
;# Function pattern movstrqi+7 used[0] = 1 total = 1
	MODULE	avrcp_avctp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpAvctpSetCmdHeader:
	enterl	#3
?LBB_avrcpAvctpSetCmdHeader:
	st	AH,@(0,Y)
	bsr	$_avrcpGetNextTransactionLabel
	asl	#H'0004
	or	AL,@(H'0003,Y)
	ld	X,@(0,Y)
	st	AL,@(0,X)
	tst	@(H'0003,Y)
	bne	?L2
	ld	AL,#H'0011
	st	AL,@(H'0001,X)
	ld	AL,#H'000E
	st	AL,@(H'0002,X)
	bra	(?L1)
?L2:
	ld	AH,@(H'0003,Y)
	cmp	AH,#H'0004
	bne	?L1
	ld	AH,@(H'0004,Y)
	ld	X,@(0,Y)
	st	AH,@(H'0001,X)
	ld	AL,#H'0011
	st	AL,@(H'0002,X)
	ld	AL,#H'000E
	st	AL,@(H'0003,X)
?L1:
?LBE_avrcpAvctpSetCmdHeader:
	leavel	#3
$_avrcpAvctpSendMessage:
	enterl	#14
?LBB_avrcpAvctpSendMessage:
	st	AL,@(H'0002,Y)
	st	AH,@H'fff9
?LBB2:
	ld	AL,#H'0000
	st	AL,@H'fff8
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'000F,Y)
	add	X,@$XAP_AL
	add	X,#H'0003
	st	X,@(H'0007,Y)
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	X,@(H'0002,Y)
	ld	X,@(H'0007,X)
	st	X,@(H'0009,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0002,Y)
	cmp	AL,@(H'000B,X)
	bcz	?L7
	ld	X,#H'0004
	st	X,@H'fff8
?L7:
	ld	AL,@H'fff8
	cmp	AL,#H'0004
	bne	?L8
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000B,X)
	ld	X,@$XAP_AL
	sub	AL,@(H'000F,Y)
	add	AL,#-H'0004
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0010,Y)
	sub	AL,@(H'0006,Y)
	add	X,#-H'0001
	ld	AH,#H'0000
	udiv	@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0010,Y)
	sub	AL,@(H'0006,Y)
	ld	AH,#H'0000
	udiv	@$XAP_UXL
	cmp	AH,#H'0000
	beq	?L9
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
?L9:
	ld	X,@(H'0002,Y)
	ld	X,@(H'000B,X)
	st	X,@(H'0007,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'000E,Y)
	st	AL,@(H'0001,X)
?L8:
	tst	@H'fff9
	bne	?L10
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000E,Y)
	bsr	$_avrcpAvctpSetCmdHeader
	bra	(?L11)
?L24:
	ld	X,#H'0002
	st	X,@(H'0008,Y)
	bra	(?L15)
?L10:
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	and	AL,#H'00F0
	ld	AH,@$XAP_AL
	or	AH,@H'fff8
	ld	AL,@$XAP_AH
	or	AL,#H'0002
	st	AL,@(0,X)
	tst	@(H'000F,Y)
	bne	?L11
	ld	AL,@$XAP_AH
	or	AL,#H'0003
	st	AL,@(0,X)
?L11:
	ld	X,@(H'000E,Y)
	ld	X,@(0,X)
	st	X,@(H'0004,Y)
	tst	@(H'0006,Y)
	beq	?L13
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_StreamMove
	ld	AL,@(H'0010,Y)
	sub	AL,@(H'0006,Y)
	st	AL,@(H'0010,Y)
?L13:
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_SinkFlush
	ld	X,#H'0002
	st	X,@(H'0003,Y)
	cmp	X,@(H'0005,Y)
	beq	?L27
	bcc	?L15
?L27:
	ld	AL,@(H'0004,Y)
	and	AL,#-H'000D
	or	AL,#H'0008
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0004,Y)
	and	AL,#-H'000D
	st	AL,@(H'000B,Y)
?L21:
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0001
	bsr	$_avrcpGrabSink
	st	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L24
	ld	X,@(H'0003,Y)
	cmp	X,@(H'0005,Y)
	bcc	?L19
	ld	AL,@(H'000A,Y)
	ld	X,@(H'000E,Y)
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000B,X)
	add	AL,#-H'0001
	st	AL,@(H'0006,Y)
	bra	(?L20)
?L19:
	ld	AL,@(H'000B,Y)
	or	AL,#H'000C
	ld	X,@(H'000E,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0007,Y)
?L20:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_StreamMove
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_SinkFlush
	ld	AL,@(H'0010,Y)
	sub	AL,@(H'0006,Y)
	st	AL,@(H'0010,Y)
	ld	X,@(H'0003,Y)
	add	X,#H'0001
	st	X,@(H'0003,Y)
	cmp	X,@(H'0005,Y)
	bcz	?L21
?L15:
	tst	@(H'0010,Y)
	beq	?L22
	ld	AL,@(H'0011,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_SourceDrop
?L22:
?LBE2:
	ld	AL,@(H'0008,Y)
?LBE_avrcpAvctpSendMessage:
	leavel	#14
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_removeFragments:
	enterl	#3
?LBB_removeFragments:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0020,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L31
	tst	@(H'001B,X)
	beq	?L31
	ld	AL,@(H'001A,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'001B,X)
	st	AL,@(H'001A,X)
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	st	AL,@(H'0020,X)
?L31:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0022,X)
?LBE_removeFragments:
	leavel	#3
$_avrcpAvctpReceiveMessage:
	enterl	#11
?LBB_avrcpAvctpReceiveMessage:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB3:
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(0,X)
	and	AH,#H'000C
	st	AH,@(H'0006,Y)
	ld	AL,@(0,X)
	and	AL,#H'0002
	st	AL,@(H'0007,Y)
	cmp	AH,#H'0004
	beq	?L40
	cmp	AH,#(H'0001+H'0004)
	bcc	?L60
	cmp	AH,#H'0000
	beq	?L34
	bra	(?L58)
?L60:
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0008
	beq	?L49
	cmp	AH,#H'000C
	beq	?L49
	bra	(?L58)
?L34:
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0005
	bcz	?L58
	ld	AL,@(H'0003,Y)
	bsr	_removeFragments
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0011
	bne	?L44
	ld	AL,@(H'0002,X)
	cmp	AL,#H'000E
	bne	?L44
	ld	AH,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'001A,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'001B,X)
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	st	AL,@(H'0020,X)
	ld	X,#H'0001
	st	X,@(H'0005,Y)
	bra	(?L33)
?L40:
	ld	AL,@(H'0003,Y)
	bsr	_removeFragments
	ld	AH,@(H'000B,Y)
	cmp	AH,#H'0003
	bcz	?L58
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0001
	bcz	?L58
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0011
	bne	?L44
	ld	AL,@(H'0003,X)
	cmp	AL,#H'000E
	beq	?L43
?L44:
	tst	@(H'0007,Y)
	bne	?L58
	ld	AH,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'001A,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'001B,X)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_avrcpSendAvcResponse
	bra	(?L33)
?L43:
	ld	AL,@(H'000B,Y)
	bsr	$_malloc
	ld	X,@(H'0003,Y)
	st	AL,@(H'001A,X)
	cmp	AL,#H'0000
	beq	?L61
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001A,X)
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	AH,@(H'000B,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'001B,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	add	AL,#-H'0001
	ld	X,@(H'0003,Y)
	st	AL,@(H'0022,X)
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	or	AL,#H'0800
	st	AL,@(H'0020,X)
	bra	(?L61)
?L49:
	ld	X,@(H'0003,Y)
	tst	@(H'0022,X)
	beq	?L56
	tst	@(H'000B,Y)
	beq	?L56
	ld	X,@(H'0004,Y)
	ld	AH,@(0,X)
	and	AH,#H'00F0
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'00F0
	cmp	AH,@$XAP_AL
	bne	?L56
	ld	AH,@(H'000B,Y)
	add	AH,#-H'0001
	st	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	add	AH,@(H'001B,X)
	ld	AL,@(H'001A,X)
	bsr	$_realloc
	cmp	AL,#H'0000
	beq	?L56
	ld	X,@(H'0003,Y)
	st	AL,@(H'001A,X)
	add	AL,@(H'001B,X)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	ld	X,@(H'0008,Y)
	st	X,@(0,Y)
	bsr	$_memmove
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	add	AL,@(H'001B,X)
	st	AL,@(H'001B,X)
	ld	AL,@(H'0022,X)
	add	AL,#-H'0001
	st	AL,@(H'0022,X)
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'000C
	bne	?L53
	cmp	AL,#H'0000
	bne	?L53
	ld	AL,@(H'0020,X)
	or	AL,#H'1800
	st	AL,@(H'0020,X)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
	bra	(?L58)
?L53:
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'000C
	beq	?L56
	ld	X,@(H'0003,Y)
	tst	@(H'0022,X)
	bne	?L55
?L56:
	ld	AL,@(H'0003,Y)
	bsr	_removeFragments
	bra	(?L58)
?L55:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'1801
	or	AL,#H'1000
	st	AL,@(H'0020,X)
?L58:
	ld	X,@(H'0003,Y)
?L61:
	ld	AL,@(H'0007,X)
	bsr	$_StreamSourceFromSink
	ld	AH,@(H'000B,Y)
	bsr	$_SourceDrop
?L33:
?LBE3:
	ld	AL,@(H'0005,Y)
?LBE_avrcpAvctpReceiveMessage:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avbpAvctpProcessHeader:
	enterl	#6
?LBB_avbpAvctpProcessHeader:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
?LBB4:
	cmp	AL,#H'0002
	bcz	?L85
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	bne	?L78
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0011
	bne	?L80
	ld	AL,@(H'0002,X)
	cmp	AL,#H'000E
	beq	?L82
?L80:
	ld	X,@(H'0001,Y)
?LBB5:
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_avrcpGrabSink
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L85
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	or	AL,#H'0003
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_SinkFlush
	bra	(?L85)
?L78:
	ld	X,@(H'0002,Y)
?LBE5:
	ld	AH,@(0,X)
	lsr	#H'0004
	st	AH,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0007,X)
	lsr	#H'000C
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bne	?L85
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_avbpSetChannelOnIncomingData
?L85:
	ld	AL,#H'0000
	bra	(?L76)
?L82:
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	asl	#H'000C
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0007,X)
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0007,X)
	ld	AL,#H'0001
?L76:
?LBE4:
?LBE_avbpAvctpProcessHeader:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avbpAvctpFrameHeader:
	enterl	#2
?LBB_avbpAvctpFrameHeader:
	st	AL,@H'fff8
	st	AH,@H'fff9
	tst	@(H'0002,Y)
	beq	?L91
	ld	AL,#H'0002
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	bra	(?L92)
?L91:
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AH,@(H'0007,X)
	lsr	#H'000C
	add	AH,#H'0001
	st	AH,@(-1,Y)
	ld	AL,@$XAP_AH
	asl	#H'000C
	ld	AH,@(H'0007,X)
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0007,X)
	ld	AL,@(-1,Y)
	and	AL,#H'000F
	cmp	AL,#H'0001
	bne	?L92
	ld	AL,@$XAP_AH
	and	AL,#H'0FFF
	or	AL,#H'1000
	st	AL,@(H'0007,X)
?L92:
	ld	X,@H'fff8
	ld	AH,@(H'0007,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	asl	#H'0004
	ld	X,@H'fff9
	or	AL,@(0,X)
	st	AL,@(0,X)
	ld	AL,#H'0011
	st	AL,@(H'0001,X)
	ld	AL,#H'000E
	st	AL,@(H'0002,X)
?LBE_avbpAvctpFrameHeader:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 104 used[1] = 30 used[3] = 1 total = 135
;# Function pattern *movqi3 used[0] = 150 total = 150
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 17 total = 17
;# Function pattern *andqi3 used[0] = 18 total = 18
;# Function pattern *iorqi3 used[0] = 14 total = 14
;# Function pattern *subqi3 used[0] = 5 total = 5
;# Function pattern *udivqi3 used[0] = 1 total = 1
;# Function pattern *umodqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2_1 used[0] = 2 total = 2
;# Function pattern jump used[0] = 14 total = 14
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern movstrqi+3 used[0] = 10 used[1] = 11 total = 21
;# Function pattern movstrqi+4 used[1] = 1 used[2] = 1 total = 2
;# Function pattern movstrqi+5 used[0] = 23 total = 23
	MODULE	avrcp_continuation_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_abortContinuation:
	enterl	#4
?LBB_abortContinuation:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB2:
	tst	@(H'0008,X)
	beq	?L2
?LBB3:
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_SourceDrop
?L2:
?LBE3:
	ld	AL,@(0,Y)
	ld	AH,#H'002D
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'000A,X)
?LBE2:
?LBE_abortContinuation:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_avrcpHandleRequestContinuingCommand:
	enterl	#2
?LBB_avrcpHandleRequestContinuingCommand:
	ld	X,@$XAP_AL
	ld	AL,@(H'000A,X)
	cmp	AL,@$XAP_AH
	bne	?L5
	ld	AL,#H'0000
	st	AL,@(H'000A,X)
	bra	(?L4)
?L5:
	ld	AL,@$XAP_UXL
	bsr	$_avrcpUnblockReceivedData
?L4:
?LBE_avrcpHandleRequestContinuingCommand:
	leavel	#2
$_avrcpHandleAbortContinuingCommand:
	enterl	#6
?LBB_avrcpHandleAbortContinuingCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000A,X)
	cmp	AL,@(H'0002,Y)
	bne	?L9
	ld	AL,@$XAP_UXL
	bsr	$_abortContinuation
	ld	AL,#H'0009
	bra	(?L11)
?L9:
	ld	AL,#H'000A
?L11:
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'002B
	bsr	$_MessageSend
?LBE4:
?LBE_avrcpHandleAbortContinuingCommand:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpHandleInternalAbortContinuingResponse:
	enterl	#8
?LBB_avrcpHandleInternalAbortContinuingResponse:
	ld	X,@$XAP_AH
	ld	AH,#H'0041
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AH,@(0,X)
	bsr	$_avrcpSendMetadataResponse
?LBE_avrcpHandleInternalAbortContinuingResponse:
	leavel	#8
$_avrcpStoreNextContinuationPacket:
	enterl	#6
?LBB_avrcpStoreNextContinuationPacket:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB5:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(H'000A,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0008,X)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'000A
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'002D
	bsr	$_MessageSendConditionally
?LBE5:
?LBE_avrcpStoreNextContinuationPacket:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpHandleNextContinuationPacket:
	enterl	#12
?LBB_avrcpHandleNextContinuationPacket:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0021,X)
	st	AL,@(H'0008,Y)
	ld	X,#H'0002
	st	X,@(H'0009,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	cmp	AL,@(H'0008,Y)
	bcc	?L16
	st	AL,@(H'0008,Y)
	ld	AL,#H'0003
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'000A,X)
	bra	(?L17)
?L16:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	sub	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_avrcpStoreNextContinuationPacket
?L17:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0003,X)
	bsr	$_avrcpSendMetadataResponse
?LBE6:
?LBE_avrcpHandleNextContinuationPacket:
	leavel	#12
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 53 used[1] = 5 total = 58
;# Function pattern *movqi3 used[0] = 44 total = 44
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	avrcp_element_attributes_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpHandleGetElementAttributesCommand:
	enterl	#11
?LBB_avrcpHandleGetElementAttributesCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	st	AL,@(H'0005,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0008
	bcz	?L2
	ld	AL,@$XAP_AH
	bsr	$_convertUint8ValuesToUint32
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	bsr	$_convertUint8ValuesToUint32
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'0002,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0007,Y)
	ld	AL,@(H'000B,Y)
	sub	AL,#H'0009
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AH,@(H'0002,Y)
	add	AH,#H'0009
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpSourceFromConstData
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
?L2:
?LBB3:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0007,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E1B
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_avrcpHandleGetElementAttributesCommand:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_avrcpHandleInternalGetElementAttributesResponse:
	enterl	#11
?LBB_avrcpHandleInternalGetElementAttributesResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB4:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L7
	ld	AL,#H'0001
	add	AL,@(H'0002,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
?L7:
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE4:
?LBE_avrcpHandleInternalGetElementAttributesResponse:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 32 used[1] = 2 total = 34
;# Function pattern *movqi3 used[0] = 28 total = 28
;# Function pattern *movhi used[2] = 2 used[3] = 4 total = 6
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	avrcp_l2cap_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_convertL2capDisconnectStatus:
	enterl	#2
?LBB_convertL2capDisconnectStatus:
	cmp	AL,#(H'0001+H'0004)
	bcc	?L8
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE9,X)
	brxl
	.SEG	CONST
?JTBASE9:
	.CODE
?L9:
	.SEG	CONST
	dc	lwrd(?L3-?L9)
	dc	lwrd(?L4-?L9)
	dc	lwrd(?L8-?L9)
	dc	lwrd(?L6-?L9)
	dc	lwrd(?L7-?L9)
	.CODE
?L3:
	ld	AL,#H'0000
	bra	(?L1)
?L4:
	ld	AL,#H'0004
	bra	(?L1)
?L6:
	ld	AL,#H'0005
	bra	(?L1)
?L7:
	ld	AL,#H'0009
	bra	(?L1)
?L8:
	ld	AL,#H'0001
?L1:
?LBE_convertL2capDisconnectStatus:
	leavel	#2
$_avrcpHandleL2capRegisterCfm:
	enterl	#5
?LBB_avrcpHandleL2capRegisterCfm:
	ld	X,@$XAP_AL
	tst	@(0,X)
	bne	?L11
	ld	AL,@(H'0001,X)
	cmp	AL,#H'001B
	bne	?L12
	bsr	$_avrcpGetInitTask
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0017
	bsr	$_ConnectionL2capRegisterRequest
	bra	(?L10)
?L12:
	bsr	$_avrcpGetDeviceTask
	bsr	$_avrcpRegisterServiceRecord
	bra	(?L10)
?L11:
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0017
	bne	?L15
	ld	AH,#H'0002
	bra	(?L16)
?L15:
	ld	AH,#H'0000
?L16:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_AH
	bsr	$_avrcpSendInitCfmToClient
?L10:
?LBE_avrcpHandleL2capRegisterCfm:
	leavel	#5
$_avrcpHandleL2capConnectCfm:
	enterl	#8
?LBB_avrcpHandleL2capConnectCfm:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
?LBB2:
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	beq	?L19
	ld	AL,@(H'0002,Y)
	bsr	$_avrcpSdpStateOnConnect
	ld	X,@(H'0003,Y)
	tst	@(0,X)
	bne	?L21
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0020,X)
	or	AL,#-H'4000
	st	AL,@(H'0020,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'000B,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
	bra	(?L22)
?L21:
	ld	X,@(H'0002,Y)
?LBB3:
	ld	X,@(H'001C,X)
	st	X,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0088
	bne	?L23
	ld	AL,#H'0004
	st	AL,@(H'0004,Y)
	bra	(?L24)
?L23:
	ld	X,#H'0001
	st	X,@(H'0004,Y)
?L24:
	ld	AL,@(H'0002,Y)
	bsr	$_avrcpResetValues
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(H'001C,X)
	ld	AL,@(H'0020,X)
	or	AL,#H'2000
	st	AL,@(H'0020,X)
?L22:
	ld	AL,@(H'0003,Y)
?LBE3:
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_avrcpSendConnectCfmToApp
?L19:
?LBE2:
?LBE_avrcpHandleL2capConnectCfm:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_avrcpHandleL2capConnectInd:
	enterl	#5
?LBB_avrcpHandleL2capConnectInd:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0005,X)
	bsr	$_avrcpGetDeviceTask
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0017
	bne	?L28
	ld	AH,#H'5E02
	bra	(?L29)
?L28:
	ld	AH,#H'5E41
?L29:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	bsr	$_MessageSend
?LBE4:
?LBE_avrcpHandleL2capConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpHandleL2capConnectIndReject:
	enterl	#7
?LBB_avrcpHandleL2capConnectIndReject:
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	bsr	$_ConnectionL2capConnectResponse
?LBE_avrcpHandleL2capConnectIndReject:
	leavel	#7
$_avrcpHandleAvbpConnectCfm:
	enterl	#6
?LBB_avrcpHandleAvbpConnectCfm:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	X,@(H'0002,X)
	st	X,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	beq	?L32
	ld	X,@(0,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'0C00
	cmp	AL,#H'0800
	bne	?L32
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L35
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0020,X)
	and	AL,#-H'4000
	cmp	AL,#-H'4000
	bne	?L35
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	X,@(0,Y)
	ld	AL,@(H'0007,X)
	or	AL,#H'0C00
	st	AL,@(H'0007,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(0,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(0,Y)
	st	AL,@(H'0005,X)
	ld	AL,@$XAP_UXL
	bsr	$_avbpHandleReceivedData
	bra	(?L36)
?L35:
	ld	X,@(H'0001,Y)
	tst	@(0,X)
	bne	?L37
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
	bra	(?L38)
?L37:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0088
	bne	?L38
	ld	AL,#H'0004
	st	AL,@(H'0003,Y)
?L38:
	ld	AL,@(0,Y)
	bsr	$_avrcpResetAvbpValues
?L36:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpSendBrowseConnectCfmToApp
?L32:
?LBE5:
?LBE_avrcpHandleAvbpConnectCfm:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpHandleL2capDisconnectInd:
	enterl	#7
?LBB_avrcpHandleL2capDisconnectInd:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	ld	AH,#H'0000
	bsr	$_avrcpHandleInternalBrowseDisconnectReq
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0020,X)
	and	AL,#H'3FFF
	or	AL,#-H'8000
	st	AL,@(H'0020,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	bsr	_convertL2capDisconnectStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'5E03
	bsr	$_avrcpSendCommonCfmMessageToApp
	ld	X,@(H'0003,Y)
	tst	@(H'001C,X)
	beq	?L45
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'001C
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_MessageSendConditionally
	bra	(?L46)
?L45:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendLater
?L46:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_ConnectionL2capDisconnectResponse
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
?LBE_avrcpHandleL2capDisconnectInd:
	leavel	#7
$_avrcpHandleL2capDisconnectCfm:
	enterl	#7
?LBB_avrcpHandleL2capDisconnectCfm:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	bsr	_convertL2capDisconnectStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'5E03
	bsr	$_avrcpSendCommonCfmMessageToApp
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0020,X)
	and	AL,#H'3FFF
	or	AL,#H'4000
	st	AL,@(H'0020,X)
	tst	@(H'001C,X)
	beq	?L48
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'001C
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_MessageSendConditionally
	bra	(?L49)
?L48:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendLater
?L49:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
?LBE_avrcpHandleL2capDisconnectCfm:
	leavel	#7
$_avrcpHandleBrowseDisconnectInd:
	enterl	#6
?LBB_avrcpHandleBrowseDisconnectInd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	bsr	_convertL2capDisconnectStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'5E43
	bsr	$_avrcpSendCommonCfmMessageToApp
	ld	AL,@(H'0002,Y)
	bsr	$_avrcpResetAvbpValues
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_ConnectionL2capDisconnectResponse
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
?LBE_avrcpHandleBrowseDisconnectInd:
	leavel	#6
$_avrcpHandleBrowseDisconnectCfm:
	enterl	#6
?LBB_avrcpHandleBrowseDisconnectCfm:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	bsr	_convertL2capDisconnectStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'5E43
	bsr	$_avrcpSendCommonCfmMessageToApp
	ld	AL,@(H'0002,Y)
	bsr	$_avrcpResetAvbpValues
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
?LBE_avrcpHandleBrowseDisconnectCfm:
	leavel	#6
	ENDMOD

;# Function pattern *movqi2 used[0] = 92 used[1] = 13 total = 105
;# Function pattern *movqi3 used[0] = 145 total = 145
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern jump used[0] = 14 total = 14
;# Function pattern *call1 used[0] = 28 total = 28
;# Function pattern *call_value1 used[0] = 18 total = 18
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 6 total = 6
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 9 total = 9
	MODULE	avrcp_player_app_settings_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_avrcpHandleListAppAttributesCommand:
	enterl	#5
?LBB_avrcpHandleListAppAttributesCommand:
	st	AL,@(H'0002,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	beq	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0008
	bsr	$_sendListAttrResponse
	bra	(?L1)
?L2:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'5E0F
	bsr	$_avrcpSendCommonMetadataInd
?L1:
?LBE_avrcpHandleListAppAttributesCommand:
	leavel	#5
$_avrcpHandleInternalListAppAttributesResponse:
	enterl	#11
?LBB_avrcpHandleInternalListAppAttributesResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB2:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L6
	ld	AL,#H'0001
	add	AL,@(H'0001,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
?L6:
	ld	AL,#H'0011
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE2:
?LBE_avrcpHandleInternalListAppAttributesResponse:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_avrcpHandleListAppValuesCommand:
	enterl	#6
?LBB_avrcpHandleListAppValuesCommand:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB3:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	beq	?L9
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0008
	bsr	$_sendListValuesResponse
	bra	(?L8)
?L9:
?LBB4:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E10
	bsr	$_MessageSend
?L8:
?LBE4:
?LBE3:
?LBE_avrcpHandleListAppValuesCommand:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_avrcpHandleInternalListAppValuesResponse:
	enterl	#11
?LBB_avrcpHandleInternalListAppValuesResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB5:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L13
	ld	AL,#H'0001
	add	AL,@(H'0001,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
?L13:
	ld	AL,#H'0012
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE5:
?LBE_avrcpHandleInternalListAppValuesResponse:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpHandleGetAppValuesCommand:
	enterl	#8
?LBB_avrcpHandleGetAppValuesCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	bne	?L16
	tst	@(H'0008,Y)
	beq	?L16
	ld	AL,@(H'0008,Y)
	sub	AL,#H'0001
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L17
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSourceFromConstData
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L17
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
?L17:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5E13
	bsr	$_avrcpSendCommonFragmentedMetadataInd
	bra	(?L15)
?L16:
	ld	AL,#H'0013
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendRejectMetadataResponse
?L15:
?LBE6:
?LBE_avrcpHandleGetAppValuesCommand:
	leavel	#8
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_avrcpHandleInternalGetAppValueResponse:
	enterl	#11
?LBB_avrcpHandleInternalGetAppValueResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L22
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0001,X)
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0001
	st	AH,@(H'0005,Y)
?L22:
	ld	AL,#H'0013
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE7:
?LBE_avrcpHandleInternalGetAppValueResponse:
	leavel	#11
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_avrcpHandleSetAppValuesCommand:
	enterl	#8
?LBB_avrcpHandleSetAppValuesCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	bne	?L25
	tst	@(H'0008,Y)
	beq	?L25
	ld	AL,@(H'0008,Y)
	sub	AL,#H'0001
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L26
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSourceFromConstData
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L26
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
?L26:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5E15
	bsr	$_avrcpSendCommonFragmentedMetadataInd
	bra	(?L24)
?L25:
	ld	AL,#H'0014
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendRejectMetadataResponse
?L24:
?LBE8:
?LBE_avrcpHandleSetAppValuesCommand:
	leavel	#8
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_avrcpHandleInternalSetAppValueResponse:
	enterl	#11
?LBB_avrcpHandleInternalSetAppValueResponse:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB9:
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0006,Y)
	ld	AL,#H'0014
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(0,X)
	bsr	$_avrcpSendMetadataResponse
?LBE9:
?LBE_avrcpHandleInternalSetAppValueResponse:
	leavel	#11
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_avrcpHandleGetAppAttributeTextCommand:
	enterl	#8
?LBB_avrcpHandleGetAppAttributeTextCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB10:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	bne	?L32
	tst	@(H'0008,Y)
	beq	?L32
	ld	AL,@(H'0008,Y)
	sub	AL,#H'0001
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L33
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSourceFromConstData
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L33
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
?L33:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5E17
	bsr	$_avrcpSendCommonFragmentedMetadataInd
	bra	(?L31)
?L32:
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendRejectMetadataResponse
?L31:
?LBE10:
?LBE_avrcpHandleGetAppAttributeTextCommand:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_avrcpHandleInternalGetAppAttributeTextResponse:
	enterl	#11
?LBB_avrcpHandleInternalGetAppAttributeTextResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB11:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L38
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0002,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
?L38:
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE11:
?LBE_avrcpHandleInternalGetAppAttributeTextResponse:
	leavel	#11
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_avrcpHandleGetAppValueTextCommand:
	enterl	#6
?LBB_avrcpHandleGetAppValueTextCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	bne	?L41
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	bcz	?L41
?LBB13:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	sub	AL,#H'0002
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L42
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_avrcpSourceFromConstData
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L42
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
?L42:
?LBB14:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0004,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E19
	bsr	$_MessageSend
?LBE14:
?LBE13:
	bra	(?L40)
?L41:
	ld	AL,#H'0013
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendRejectMetadataResponse
?L40:
?LBE12:
?LBE_avrcpHandleGetAppValueTextCommand:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_avrcpHandleInternalGetAppValueTextResponse:
	enterl	#11
?LBB_avrcpHandleInternalGetAppValueTextResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB15:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_avrcpGetErrorStatusCode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000C
	bne	?L48
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0002,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
?L48:
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_prepareMetadataStatusResponse
?LBE15:
?LBE_avrcpHandleInternalGetAppValueTextResponse:
	leavel	#11
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_avrcpHandleInformBatteryStatusCommand:
	enterl	#5
?LBB_avrcpHandleInformBatteryStatusCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB16:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	beq	?L51
	ld	AL,#H'0018
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendMetaDataControlResponse
	bra	(?L50)
?L51:
?LBB17:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E2F
	bsr	$_MessageSend
?L50:
?LBE17:
?LBE16:
?LBE_avrcpHandleInformBatteryStatusCommand:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_avrcpHandleInformCharSetCommand:
	enterl	#7
?LBB_avrcpHandleInformCharSetCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB18:
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0011
	cmp	AH,#H'0011
	bne	?L55
	tst	@(H'0007,Y)
	beq	?L55
?LBB19:
	ld	AH,#H'0000
	ld	AL,@(H'0007,Y)
	sub	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L56
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSourceFromConstData
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L56
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
?L56:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5E31
	bsr	$_avrcpSendCommonFragmentedMetadataInd
?LBE19:
	bra	(?L54)
?L55:
	ld	AL,#H'0017
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0008
	bsr	$_avrcpSendRejectMetadataResponse
?L54:
?LBE18:
?LBE_avrcpHandleInformCharSetCommand:
	leavel	#7
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
	ENDMOD

;# Function pattern *movqi2 used[0] = 153 used[1] = 27 used[3] = 1 total = 181
;# Function pattern *movqi3 used[0] = 154 total = 154
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 10 total = 10
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *subqi3 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 9 total = 9
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 22 total = 22
;# Function pattern *call_value1 used[0] = 22 total = 22
;# Function pattern movstrqi+3 used[0] = 10 used[1] = 4 total = 14
;# Function pattern movstrqi+5 used[0] = 14 total = 14
	MODULE	avrcp_signal_passthrough
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_avrcpSetPassthroughPacketHeader:
	enterl	#2
?LBB_avrcpSetPassthroughPacketHeader:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AL,#H'0000
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	asl	#H'0003
	and	AL,#H'00F8
	ld	AH,@(H'0001,X)
	and	AH,#H'0007
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,#H'007C
	st	AL,@(H'0002,X)
	ld	X,@H'fff9
	ld	AL,@(H'0003,X)
	tst	@(H'0002,X)
	beq	?L2
	or	AL,#H'0080
?L2:
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	X,@H'fff9
	ld	AL,@(H'0005,X)
	ld	X,@H'fff8
	st	AL,@(H'0004,X)
?LBE_avrcpSetPassthroughPacketHeader:
	leavel	#2
$_avrcpHandleInternalPassThroughReq:
	enterl	#13
?LBB_avrcpHandleInternalPassThroughReq:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB2:
	ld	AH,#H'0003
	st	AH,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	ld	X,@(H'0005,X)
	add	X,#H'0005
	st	X,@(H'0008,Y)
	cmp	X,#(H'0001+H'01FF)
	bcc	?L4
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcs	?L6
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'007E
	bne	?L5
?L6:
	ld	AH,@(H'0008,Y)
	ld	X,@(H'0004,Y)
	cmp	AH,@(H'000B,X)
	bcz	?L7
	ld	AL,#H'0004
	st	AL,@(H'0007,Y)
	ld	X,@(H'000B,X)
	st	X,@(H'0008,Y)
	bra	(?L8)
?L7:
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	st	AH,@(H'0008,Y)
?L8:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	bsr	$_SinkSlack
	ld	AH,@(H'0008,Y)
	cmp	AH,@$XAP_AL
	bcc	?L9
	ld	AH,@(H'0007,Y)
	add	AH,#H'0005
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	bsr	$_avrcpGrabSink
	st	AL,@(H'0006,Y)
	add	AL,@(H'0007,Y)
	ld	AH,@(H'0005,Y)
	bsr	_avrcpSetPassthroughPacketHeader
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_avrcpAvctpSendMessage
	bra	(?L18)
?L9:
	ld	AH,#H'0002
	bra	(?L17)
?L5:
	ld	AL,#H'0002
?L18:
	st	AL,@(H'0009,Y)
	bra	(?L12)
?L4:
	ld	AH,#H'0082
?L17:
	st	AH,@(H'0009,Y)
?L12:
	tst	@(H'0009,Y)
	bne	?L13
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'001D,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0FA0
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_MessageSendLater
	bra	(?L3)
?L13:
	ld	X,@(H'0005,Y)
	tst	@(H'0005,X)
	beq	?L15
?LBB3:
	ld	AH,@(H'0006,X)
	st	AH,@(H'000A,Y)
	ld	AL,@$XAP_AH
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'000A,Y)
	bsr	$_SourceDrop
?L15:
	ld	X,@(H'0004,Y)
?LBE3:
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'5E04
	ld	AH,@(H'0009,Y)
	bsr	$_avrcpSendCommonCfmMessageToApp
?L3:
?LBE2:
?LBE_avrcpHandleInternalPassThroughReq:
	leavel	#13
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_avrcpHandlePassthroughResponse:
	enterl	#5
?LBB_avrcpHandlePassthroughResponse:
	st	AL,@(H'0002,Y)
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(H'001D,X)
	add	AL,#-H'0005
	cmp	AL,#(H'0001+H'0001)
	bcc	?L24
	cmp	AH,#H'000A
	bcz	?L25
	ld	AL,@(H'001B,X)
	sub	AL,@$XAP_AH
	add	AL,#H'000A
	st	AL,@(H'001B,X)
?L25:
	st	AH,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@H'fff8
	bsr	$_avrcpHandleGroupResponse
	bra	(?L26)
?L24:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001D,X)
	cmp	AL,#H'0001
	bne	?L26
	ld	X,@H'fff8
?LBB5:
	ld	AL,@(H'0004,X)
	add	AL,#H'0005
	cmp	AH,@$XAP_AL
	bcz	?L28
	sub	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001B,X)
	sub	AL,@$XAP_AH
	st	AL,@(H'001B,X)
?L28:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0009
	bne	?L29
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'5E04
	ld	AH,#H'0000
	bra	(?L34)
?L29:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0008
	bne	?L31
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'5E04
	ld	AH,#H'0007
	bra	(?L34)
?L31:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,#H'5E04
	ld	AH,#H'0001
?L34:
	bsr	$_avrcpSendCommonCfmMessageToApp
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'001D,X)
?L26:
?LBE5:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?LBE4:
?LBE_avrcpHandlePassthroughResponse:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_avrcpHandleGroupResponse:
	enterl	#7
?LBB_avrcpHandleGroupResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
?LBB6:
	ld	AH,#H'0001
	st	AH,@(H'0003,Y)
	cmp	AL,#H'0009
	bcz	?L45
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'007F
	cmp	AL,#H'007E
	bne	?L45
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0005
	bne	?L45
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
	bsr	$_avrcpGetCompanyId
	cmp	AH,#H'0000
	bne	?L45
	cmp	AL,#H'1958
	bne	?L45
	ld	X,@(H'0002,Y)
?LBB7:
	ld	AL,@(0,X)
	cmp	AL,#H'0009
	bne	?L42
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
?L42:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	or	AL,@(H'0009,X)
	cmp	AL,#H'0000
	beq	?L43
	ld	AH,#H'5E2C
	st	AH,@(H'0004,Y)
	bra	(?L44)
?L43:
	ld	AL,#H'5E2A
	st	AL,@(H'0004,Y)
?L44:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000D
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'001D,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0003,Y)
	bsr	$_avrcpSendCommonStatusCfm
?L45:
?LBE7:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_avrcpSourceProcessed
?LBE6:
?LBE_avrcpHandleGroupResponse:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_avrcpHandleInternalPassThroughRes:
	enterl	#5
?LBB_avrcpHandleInternalPassThroughRes:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0005
	bsr	$_avrcpSendAvcResponse
?LBE_avrcpHandleInternalPassThroughRes:
	leavel	#5
$_avrcpHandlePassthroughCommand:
	enterl	#10
?LBB_avrcpHandlePassthroughCommand:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@H'fff8
?LBB8:
	cmp	AL,#(H'0001+H'0004)
	bcc	?L53
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@H'fff8
	bra	(?L59)
?L53:
	ld	X,@(H'0004,Y)
	ld	X,@(H'0004,X)
	st	X,@(H'0005,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0005
	cmp	AL,@H'fff8
	bcz	?L54
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0005
?L59:
	bsr	$_avrcpSendAvcResponse
	bra	(?L52)
?L54:
	cmp	AL,@H'fff8
	bcc	?L55
	ld	AH,@H'fff8
	sub	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001B,X)
	sub	AL,@$XAP_AH
	st	AL,@(H'001B,X)
?L55:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001A,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'00F0
	ld	AH,@$XAP_AL
	lsr	#H'0004
	st	AH,@(H'0006,Y)
	ld	AL,@H'fff8
	cmp	AL,#H'000A
	bne	?L57
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'007F
	cmp	AL,#H'007E
	bne	?L57
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
	bsr	$_avrcpGetCompanyId
	cmp	AH,#H'0000
	bne	?L57
	cmp	AL,#H'1958
	bne	?L57
	ld	X,@(H'0004,Y)
?LBB9:
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_avrcpSendGroupIndToClient
?LBE9:
	bra	(?L52)
?L57:
	ld	AL,@(H'0005,Y)
?LBB10:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_avrcpBlockReceivedData
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'007F
	ld	X,@(H'0007,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0007
	and	AH,#H'0001
	ld	X,@(H'0007,Y)
	st	AH,@(H'0005,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00F8
	lsr	#H'0003
	ld	X,@(H'0007,Y)
	st	AH,@(H'0002,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'0007
	ld	X,@(H'0007,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0006,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0007
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5E05
	bsr	$_MessageSend
?L52:
?LBE10:
?LBE8:
?LBE_avrcpHandlePassthroughCommand:
	leavel	#10
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE8
$_avrcpHandleInternalGroupResponse:
	enterl	#5
?LBB_avrcpHandleInternalGroupResponse:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,#H'000A
	bsr	$_avrcpSendAvcResponse
?LBE_avrcpHandleInternalGroupResponse:
	leavel	#5
$_avrcpSendGroupIndToClient:
	enterl	#5
?LBB_avrcpSendGroupIndToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	bsr	$_avrcpGetDeviceTask
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0021
	cmp	AH,#H'0000
	bne	?L67
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_sendGroupResponse
	bra	(?L66)
?L67:
	tst	@(H'0002,Y)
	beq	?L69
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0006
	bsr	$_avrcpBlockReceivedData
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5E2D
	bra	(?L71)
?L69:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0005
	bsr	$_avrcpBlockReceivedData
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5E2B
?L71:
	bsr	$_avrcpSendCommonMetadataInd
?L66:
?LBE_avrcpSendGroupIndToClient:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 100 used[1] = 32 total = 132
;# Function pattern *movqi3 used[0] = 144 total = 144
;# Function pattern *addqi2 used[0] = 11 total = 11
;# Function pattern *andqi3 used[0] = 10 total = 10
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *subqi3 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 14 total = 14
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 4 total = 6
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 17 total = 17
;# Function pattern movstrqi+7 used[0] = 2 total = 2
	MODULE	connection_tdl
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_read_trusted_device_index:
	enterl	#8
?LBB_read_trusted_device_index:
	st	AL,@(H'0003,Y)
?LBB2:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'008D
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_PsRetrieve
	cmp	AL,#H'0002
	beq	?L2
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'000F
	bsr	$_memset
	bra	(?L1)
?L2:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	st	X,@H'fff8
?L8:
	ld	AL,@(H'0003,Y)
	add	AL,@(-1,Y)
	st	AL,@(H'0004,Y)
	ld	AH,@(-1,Y)
	lsr	#H'0002
	add	AH,@H'fff8
	st	AH,@(H'0005,Y)
	ld	AL,@(-1,Y)
	and	AL,#H'0003
	lsl	#H'0010
	asr	#H'000E
	st	AL,@H'fff9
	ld	X,@(H'0005,Y)
	ld	AH,@(0,X)
	lsr	@H'fff9
	and	AH,#H'000F
	ld	X,@(H'0004,Y)
	st	AH,@(0,X)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0007
	bcz	?L8
?L1:
?LBE3:
?LBE2:
?LBE_read_trusted_device_index:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_ConnectionTrustedDeviceListSize:
	enterl	#11
?LBB_ConnectionTrustedDeviceListSize:
?LBB4:
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	bsr	_read_trusted_device_index
	ld	AH,#H'0000
	cmp	AH,@(H'0008,Y)
	bcc	?L14
	ld	AL,@(0,Y)
	cmp	AL,#H'000F
	beq	?L14
?L18:
	add	AH,#H'0001
	cmp	AH,@(H'0008,Y)
	bcc	?L14
	ld	AL,@$XAP_UY
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	bne	?L18
?L14:
?LBE4:
	ld	AL,@$XAP_AH
?LBE_ConnectionTrustedDeviceListSize:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_store_trusted_device_index:
	enterl	#6
?LBB_store_trusted_device_index:
	st	AL,@H'fff9
?LBB5:
	ld	AL,#H'0000
	ld	X,@$XAP_UY
	add	X,#H'0001
	st	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	st	AL,@(-1,Y)
	st	X,@H'fffa
?L29:
	ld	AH,@(-1,Y)
	lsr	#H'0002
	add	AH,@H'fffa
	st	AH,@(H'0003,Y)
	ld	X,@H'fff9
	add	X,@(-1,Y)
	ld	X,@(0,X)
	st	X,@H'fff8
	ld	AL,@(-1,Y)
	and	AL,#H'0003
	lsl	#H'0010
	asr	#H'000E
	ld	X,@$XAP_AL
	ld	AL,@H'fff8
	and	AL,#H'000F
	asl	@$XAP_UXL
	ld	X,@(H'0003,Y)
	or	AL,@(0,X)
	st	AL,@(0,X)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0007
	bcz	?L29
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'008D
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_PsStore
?LBE5:
?LBE_store_trusted_device_index:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_convert_dm_sm_to_tdl_key_type:
; leaf function with empty stack frame
?LBB_convert_dm_sm_to_tdl_key_type:
	cmp	AL,#H'0002
	beq	?L36
	cmp	AL,#(H'0001+H'0002)
	bcc	?L41
	cmp	AL,#H'0001
	beq	?L35
	bra	(?L34)
?L41:
	cmp	AL,#H'0003
	beq	?L37
	cmp	AL,#H'0005
	beq	?L38
	bra	(?L34)
?L35:
	ld	AL,#H'0000
	bra	(?L33)
?L36:
	ld	AL,#H'0001
	bra	(?L33)
?L37:
	ld	AL,#H'0002
	bra	(?L33)
?L38:
	ld	AL,#H'0004
	bra	(?L33)
?L34:
	ld	AL,#H'0005
?L33:
?LBE_convert_dm_sm_to_tdl_key_type:
	rts
_get_data_type_size:
; leaf function with empty stack frame
?LBB_get_data_type_size:
	cmp	AL,#H'0001
	beq	?L49
	cmp	AL,#H'0001
	bcs	?L48
	cmp	AL,#H'0002
	beq	?L50
	cmp	AL,#H'0004
	beq	?L51
	bra	(?L47)
?L48:
	ld	AL,#H'0009
	bra	(?L46)
?L49:
	ld	AL,#H'000D
	bra	(?L46)
?L50:
	ld	AL,#H'0001
	bra	(?L46)
?L51:
	ld	AL,#H'0008
	bra	(?L46)
?L47:
	ld	AL,#H'0000
?L46:
?LBE_get_data_type_size:
	rts
_pack_td_bdaddr:
	enterl	#2
?LBB_pack_td_bdaddr:
	st	AL,@H'fff9
	ld	AL,@$XAP_AH
	asl	#H'000E
	ld	X,@H'fff9
	ld	AH,@(H'0003,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff9
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	asl	#H'0008
	st	AL,@H'fff8
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	and	AL,#H'0000
	and	AH,#H'00FF
	lsr	#H'0010
	or	AL,@H'fff8
	ld	X,@H'fff9
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
?LBE_pack_td_bdaddr:
	leavel	#2
_unpack_td_bdaddr:
	enterl	#4
?LBB_unpack_td_bdaddr:
	st	AL,@H'fffa
	st	AH,@H'fffb
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fffa
	st	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@H'fffa
	st	AH,@(H'0002,X)
	ld	X,@H'fffb
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	and	AH,#H'0000
	asl	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	ld	X,@H'fffa
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@H'fffb
	ld	AH,@(H'0003,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
?LBE_unpack_td_bdaddr:
	leavel	#4
_unpack_td_TYPED_BDADDR_T:
	enterl	#4
?LBB_unpack_td_TYPED_BDADDR_T:
	st	AL,@H'fffa
	st	AH,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(H'0003,X)
	lsr	#H'000E
	ld	X,@H'fffa
	st	AH,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@H'fffa
	st	AL,@(H'0004,X)
	ld	X,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@H'fffa
	st	AH,@(H'0003,X)
	ld	X,@H'fff8
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	and	AH,#H'0000
	asl	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	ld	X,@H'fffa
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
?LBE_unpack_td_TYPED_BDADDR_T:
	leavel	#4
_pack_td_security_requirements:
	enterl	#2
?LBB_pack_td_security_requirements:
	st	AL,@H'fffa
	st	AH,@H'fff9
	ld	AL,@$XAP_AH
	and	AL,#H'0005
	asl	#H'0006
	ld	X,@H'fffa
	ld	AH,@(H'0003,X)
	ld	X,@$XAP_AH
	and	X,#-H'01C1
	or	X,@$XAP_AL
	ld	AH,@$XAP_UXL
	lsr	#H'0006
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	st	AL,@H'fff8
	ld	AH,@H'fff9
	lsr	#H'000D
	and	AH,#H'0002
	ld	AL,@H'fff8
	or	AL,@$XAP_AH
	asl	#H'0006
	ld	AH,@$XAP_UXL
	and	AH,#-H'01C1
	or	AH,@$XAP_AL
	ld	X,@H'fffa
	st	AH,@(H'0003,X)
?LBE_pack_td_security_requirements:
	leavel	#2
_unpack_td_security_requirements:
	enterl	#2
?LBB_unpack_td_security_requirements:
	ld	X,@$XAP_AL
?LBB6:
	ld	AH,@(H'0003,X)
	lsr	#H'0006
	ld	AL,@$XAP_AH
	and	AL,#H'0005
	st	AL,@H'fff9
	ld	AH,@(H'0003,X)
	lsr	#H'0006
	ld	AL,@$XAP_AH
	and	AL,#H'0002
	asl	#H'000D
	or	AL,@H'fff9
?LBE6:
?LBE_unpack_td_security_requirements:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_calc_td_data_size:
	enterl	#5
?LBB_calc_td_data_size:
	st	AL,@(0,Y)
?LBB7:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?L69:
	ld	AH,#H'001F
	and	AH,@(0,Y)
	asr	@(H'0002,Y)
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L66
	ld	AL,@(H'0002,Y)
	bsr	_get_data_type_size
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
?L66:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0004
	bcz	?L69
?LBE7:
	ld	AL,@(H'0001,Y)
?LBE_calc_td_data_size:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_calc_td_data_offset:
	enterl	#2
?LBB_calc_td_data_offset:
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	cmp	AH,#H'0000
	beq	?L73
	ld	AL,@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,#H'0009
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L75:
	cmp	AH,#H'0001
	beq	?L79
	ld	AL,@$XAP_UXL
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L77
	ld	AL,#H'000D
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L77:
	cmp	AH,#H'0002
	beq	?L79
	ld	AL,@$XAP_UXL
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L79
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L79:
	ld	AL,@(-1,Y)
?L73:
?LBE8:
?LBE_calc_td_data_offset:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_pack_td_key:
	enterl	#11
?LBB_pack_td_key:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000B,Y)
	ld	X,@(H'0001,Y)
?LBB9:
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	bsr	_convert_dm_sm_to_tdl_key_type
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0004,Y)
	bsr	_calc_td_data_offset
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	bsr	_get_data_type_size
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001
	asl	@(H'0004,Y)
	st	AL,@(H'0007,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	and	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L83
?LBB10:
	ld	AL,@$XAP_AH
	bsr	_calc_td_data_size
	st	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0007,Y)
	or	AH,@$XAP_AL
	and	AH,#H'001F
	and	AL,#-H'0020
	or	AL,@$XAP_AH
	st	AL,@(H'0003,X)
	bsr	_calc_td_data_size
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'0003,Y)
	bsr	$_realloc
	bsr	$_PanicNull
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0005,Y)
	add	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	add	AL,@$XAP_AH
	add	AL,#H'0004
	add	AH,@(H'0005,Y)
	add	AH,#H'0004
	ld	X,@(H'0008,Y)
	sub	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_memmove
?L83:
	ld	AL,@(H'0003,Y)
?LBE10:
	add	AL,@(H'0005,Y)
	add	AL,#H'0004
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
?LBE9:
?LBE_pack_td_key:
	leavel	#11
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
_unpack_td_key:
	enterl	#5
?LBB_unpack_td_key:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB11:
	ld	AL,@(H'0005,Y)
	bsr	_get_data_type_size
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0005,Y)
	bsr	_calc_td_data_offset
	ld	AH,@(H'0002,Y)
	add	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'0001,Y)
	bsr	$_memmove
?LBE11:
?LBE_unpack_td_key:
	leavel	#5
_dm_sm_add_device_req:
	enterl	#13
?LBB_dm_sm_add_device_req:
	st	AL,@(H'0007,Y)
?LBB12:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,#H'0015
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	AL,#H'0386
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0007,Y)
	bsr	_unpack_td_TYPED_BDADDR_T
	ld	AL,#H'0001
	ld	X,@(H'000A,Y)
	st	AL,@(H'0007,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0009,X)
	st	AL,@(H'0008,X)
	st	AL,@(H'000A,X)
	st	AL,@(H'000B,X)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L86
	ld	AL,#H'0002
	bra	(?L87)
?L86:
	ld	AL,#H'0001
?L87:
	ld	X,@(H'000A,Y)
	st	AL,@(H'000C,X)
	ld	AL,@(H'0007,Y)
	bsr	_unpack_td_security_requirements
	ld	X,@(H'000A,Y)
	st	AL,@(H'000D,X)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
?L102:
	ld	X,@(H'0007,Y)
?LBB13:
	ld	AH,@(H'0003,X)
	and	AH,#H'001F
	asr	@(H'0009,Y)
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L90
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0001
	beq	?L95
	cmp	AL,#H'0001
	bcs	?L94
	cmp	AL,#H'0002
	beq	?L96
	cmp	AL,#H'0004
	beq	?L97
	bra	(?L93)
?L94:
	ld	X,@$XAP_UY
	add	X,@(H'0008,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,X)
	ld	AL,#H'0009
	bra	(?L106)
?L95:
	ld	X,@$XAP_UY
	add	X,@(H'0008,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,X)
	ld	AL,#H'000D
	bra	(?L106)
?L96:
	ld	X,@$XAP_UY
	add	X,@(H'0008,Y)
	ld	AL,#H'0003
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	bra	(?L105)
?L97:
	ld	X,@$XAP_UY
	add	X,@(H'0008,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,X)
	ld	AL,#H'0008
?L106:
	bsr	$_PanicUnlessMalloc
?L105:
	st	AL,@(H'0006,Y)
?L93:
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0002
	bne	?L100
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'0007,Y)
	bsr	_unpack_td_key
	bra	(?L101)
?L100:
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	_unpack_td_key
	ld	AL,@(H'0006,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0006,Y)
?L101:
	ld	X,@(H'0008,Y)
	add	X,@(H'000A,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0010,X)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
?L90:
	ld	AL,@(H'0009,Y)
?LBE13:
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0004
	bcz	?L102
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0009
	and	AH,#H'000F
	add	AH,#H'0006
	ld	X,@(H'000A,Y)
	st	AH,@(H'000E,X)
	ld	X,@(H'0001,Y)
	and	X,#H'0007
	ld	AL,@(H'0002,Y)
	and	AL,#H'0007
	asl	#H'0003
	or	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	and	AL,#H'0007
	asl	#H'0006
	or	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
	and	AL,#H'0007
	asl	#H'0009
	or	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	and	AL,#H'0007
	asl	#H'000C
	or	X,@$XAP_AL
	ld	AL,@$XAP_UXL
	or	AL,#-H'8000
	ld	X,@(H'000A,Y)
	st	AL,@(H'000F,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmSendDmPrim
?LBE12:
?LBE_dm_sm_add_device_req:
	leavel	#13
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
_tdl_find_device:
	enterl	#12
?LBB_tdl_find_device:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB14:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,Y)
	bsr	_read_trusted_device_index
	ld	X,#H'0000
	st	X,@(H'0007,Y)
	cmp	X,@(H'0008,Y)
	bcc	?L115
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	cmp	AL,#H'000F
	beq	?L115
?L122:
	ld	AL,@(H'0006,Y)
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L116
	ld	X,@(H'0004,Y)
	add	X,#H'0009
	st	X,@(H'0009,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0003,Y)
	bsr	_unpack_td_bdaddr
	ld	X,@(H'0004,Y)
	st	AL,@(H'0008,X)
	cmp	AL,@(H'0001,Y)
	bne	?L120
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L121
?L120:
	ld	AL,#H'0001
	asl	@(H'0006,Y)
	or	AL,@(H'0005,Y)
	st	AL,@(H'0005,Y)
?L116:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,@(H'0008,Y)
	bcc	?L115
	ld	X,@$XAP_AL
	add	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	cmp	AL,#H'000F
	bne	?L122
?L115:
	ld	AL,@(H'0003,Y)
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0007,Y)
	cmp	X,@(H'0008,Y)
	bcc	?L123
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0005,Y)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L121
?L128:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001
	asl	@(H'0006,Y)
	and	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L128
	bra	(?L121)
?L123:
	ld	X,@(H'0008,Y)
	add	X,#-H'0001
	st	X,@(H'0007,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
?L121:
	ld	AL,@(H'0004,Y)
	bsr	$_free
	tst	@(H'000C,Y)
	beq	?L130
	ld	AL,@(H'0006,Y)
	ld	X,@(H'000C,Y)
	st	AL,@(0,X)
?L130:
	tst	@(H'000D,Y)
	beq	?L131
	ld	AL,@(H'0007,Y)
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
?L131:
?LBE14:
	ld	AL,@(H'0003,Y)
?LBE_tdl_find_device:
	leavel	#12
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_update_trusted_device_index:
	enterl	#12
?LBB_update_trusted_device_index:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB15:
	ld	AL,@$XAP_UY
	bsr	_read_trusted_device_index
	ld	AL,#H'0000
	st	AL,@H'fff8
	cmp	AL,@(H'0009,Y)
	bcc	?L148
	ld	X,@$XAP_UY
	add	X,#-H'0001
	st	X,@(-1,Y)
?L146:
	ld	AL,@H'fff8
	nadd	AL,@(H'0009,Y)
	ld	X,@$XAP_UY
	ld	AH,@$XAP_UXL
	add	AH,@$XAP_AL
	ld	X,@$XAP_AL
	add	X,@(-1,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@(H'0009,Y)
	bcs	?L146
?L148:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	bsr	_store_trusted_device_index
?LBE15:
?LBE_update_trusted_device_index:
	leavel	#12
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
_delete_from_trusted_device_list:
	enterl	#15
?LBB_delete_from_trusted_device_list:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB16:
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	X,@(H'000D,X)
	st	X,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_read_trusted_device_index
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#-H'0001
	cmp	AH,@$XAP_AL
	bcc	?L158
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(-1,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#-H'0001
	st	AL,@H'fff8
?L156:
	ld	X,@H'fff9
	add	X,@$XAP_AH
	st	X,@(H'000C,Y)
	ld	AL,@$XAP_AH
	add	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@(H'000C,Y)
	st	AL,@(0,X)
	add	AH,#H'0001
	cmp	AH,@H'fff8
	bcs	?L156
?L158:
	ld	X,@$XAP_UY
	add	X,@(H'000B,Y)
	ld	AL,#H'000F
	st	AL,@(0,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_store_trusted_device_index
	ld	AL,@(H'0009,Y)
	add	AL,#H'008E
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	$_PsStore
	ld	AL,@(H'0009,Y)
	add	AL,#H'0064
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AH,#H'0000
	bsr	$_PsStore
?LBE16:
	ld	AL,#H'0001
?LBE_delete_from_trusted_device_list:
	leavel	#15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_connectionInitTrustedDeviceList:
	enterl	#14
?LBB_connectionInitTrustedDeviceList:
?LBB17:
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AH,@(H'000D,X)
	st	AH,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_read_trusted_device_index
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	cmp	AL,@(H'000B,Y)
	bcc	?L163
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'000F
	beq	?L163
?L174:
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L167
	ld	AL,@(H'000A,Y)
	bsr	_dm_sm_add_device_req
	bra	(?L164)
?L167:
	ld	AH,#H'0000
?LBB18:
	st	AH,@(0,Y)
	ld	AL,#H'008D
	bsr	$_PsStore
	ld	AL,#H'0000
	cmp	AL,@(H'000B,Y)
	bcc	?L177
?L173:
	add	AL,#H'0001
	cmp	AL,@(H'000B,Y)
	bcs	?L173
?L177:
	add	AL,#H'008E
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	$_PsStore
	bsr	$_Panic
?L164:
	ld	AL,@(H'0009,Y)
?LBE18:
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,@(H'000B,Y)
	bcc	?L163
	ld	X,@$XAP_AL
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	add	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	bne	?L174
?L163:
	ld	AL,@(H'000A,Y)
	bsr	$_free
?LBE17:
	ld	AL,@(H'0009,Y)
?LBE_connectionInitTrustedDeviceList:
	leavel	#14
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_connectionAuthAddDevice:
	enterl	#11
?LBB_connectionAuthAddDevice:
	st	AL,@(H'0005,Y)
?LBB19:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,#H'4000
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	bsr	_tdl_find_device
	st	AL,@(H'0004,Y)
	ld	X,@(H'0005,Y)
	tst	@(H'000F,X)
	bne	?L185
	cmp	AL,#H'0000
	beq	?L185
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_delete_from_trusted_device_list
?L185:
	tst	@(H'0004,Y)
	bne	?L186
	ld	AL,#H'0001
	ld	AH,#H'0004
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	_pack_td_bdaddr
?L186:
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	_pack_td_key
	ld	AH,@(H'0004,Y)
	st	AH,@(H'0008,Y)
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	tst	@(H'000E,X)
	beq	?L187
	ld	AL,#H'0001
?L187:
	and	AL,#H'0001
	asl	#H'000D
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	and	AH,#-H'2001
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
	ld	X,@(H'0005,Y)
	tst	@(H'000F,X)
	beq	?L188
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0003
	beq	?L188
	ld	AH,@(H'0007,Y)
	or	AH,#H'0001
	st	AH,@(H'0007,Y)
	cmp	AL,#H'0005
	beq	?L190
	cmp	AL,#H'0008
	bne	?L189
?L190:
	ld	AL,@(H'0007,Y)
	or	AL,#H'0004
	st	AL,@(H'0007,Y)
?L189:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	bsr	_pack_td_security_requirements
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	bsr	_calc_td_data_size
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'0002,Y)
	add	AL,#H'008E
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_PsStore
	cmp	AL,#H'0000
	bne	?L191
	ld	AH,#H'0000
	st	AH,@(H'0006,Y)
	bra	(?L193)
?L191:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_update_trusted_device_index
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_ConnectionAuthSetPriorityDevice
	st	AL,@(H'0006,Y)
	bra	(?L193)
?L188:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	bsr	_pack_td_security_requirements
?L193:
	ld	AL,@(H'0004,Y)
	bsr	_dm_sm_add_device_req
	ld	AL,@(H'0004,Y)
	bsr	$_free
?LBE19:
	ld	AL,@(H'0006,Y)
?LBE_connectionAuthAddDevice:
	leavel	#11
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_connectionAuthGetDevice:
	enterl	#15
?LBB_connectionAuthGetDevice:
	ld	X,@$XAP_AL
	st	AH,@(H'000B,Y)
	ld	AL,#H'0000
?LBB20:
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	bsr	_tdl_find_device
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L198
	ld	X,#H'0000
?LBB21:
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'000C,Y)
	bsr	_unpack_td_key
	ld	AL,@(H'0002,Y)
	bsr	$_connectionConvertLinkKeyType
	ld	X,@(H'000B,Y)
	st	AL,@(0,X)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_memmove
	ld	X,@(H'000C,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	and	AH,#H'0001
	ld	X,@(H'0010,Y)
	st	AH,@(0,X)
	ld	AL,@(H'000C,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L197)
?L198:
?LBE21:
	ld	AL,#H'0000
?L197:
?LBE20:
?LBE_connectionAuthGetDevice:
	leavel	#15
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
$_connectionAuthDeleteDevice:
	enterl	#17
?LBB_connectionAuthDeleteDevice:
	st	AL,@(H'000C,Y)
	st	AH,@(H'000D,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
?LBB22:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	bsr	_tdl_find_device
	st	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L200
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L200
?LBB23:
	ld	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	AL,#H'0387
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'000D,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	_delete_from_trusted_device_list
	ld	AL,@(H'000E,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L199)
?L200:
?LBE23:
	ld	AL,#H'0000
?L199:
?LBE22:
?LBE_connectionAuthDeleteDevice:
	leavel	#17
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
$_connectionAuthDeleteAllDevice:
	enterl	#25
?LBB_connectionAuthDeleteAllDevice:
?LBB24:
	ld	AH,#H'0000
	st	AH,@(H'0011,Y)
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0013,Y)
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	st	AL,@(H'0014,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_read_trusted_device_index
	ld	X,@(H'0011,Y)
	st	X,@(H'0012,Y)
	cmp	X,@(H'0014,Y)
	bcc	?L212
?L209:
	ld	AL,@(H'0012,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	add	AL,@$XAP_UXL
	st	AL,@(H'0015,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	beq	?L205
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'0013,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L205
	ld	X,@(H'0013,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0005
	and	AH,#H'0001
	st	AH,@(H'0016,Y)
	cmp	AH,#H'0000
	bne	?L205
?LBB25:
	ld	AL,#H'0007
	st	AL,@(H'0009,Y)
	ld	AL,#H'0387
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@$XAP_UXL
	bsr	_unpack_td_TYPED_BDADDR_T
	ld	X,@(H'0015,Y)
	ld	AL,@(0,X)
	add	AL,#H'008E
	ld	AH,@(H'0016,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	AL,#H'0001
	st	AL,@(H'0011,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bsr	$_VmSendDmPrim
	ld	X,@(H'0015,Y)
	ld	AL,@(0,X)
	add	AL,#H'0064
	ld	AH,@(H'0016,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	AL,#H'000F
	ld	X,@(H'0015,Y)
	st	AL,@(0,X)
?L205:
	ld	AH,@(H'0012,Y)
?LBE25:
	add	AH,#H'0001
	st	AH,@(H'0012,Y)
	cmp	AH,@(H'0014,Y)
	bcs	?L209
?L212:
	tst	@(H'0011,Y)
	beq	?L210
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_store_trusted_device_index
?L210:
	ld	AL,@(H'0013,Y)
	bsr	$_free
?LBE24:
	ld	AL,@(H'0011,Y)
?LBE_connectionAuthDeleteAllDevice:
	leavel	#25
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
$_connectionAuthSetTrustLevel:
	enterl	#7
?LBB_connectionAuthSetTrustLevel:
	ld	X,@$XAP_AL
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
?LBB26:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	bsr	_tdl_find_device
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L217
	ld	AL,#H'0000
	tst	@(H'0003,Y)
	beq	?L218
	ld	AL,#H'0001
?L218:
	and	AL,#H'0001
	asl	#H'000D
	ld	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	and	AL,#-H'2001
	or	AL,@$XAP_AH
	st	AL,@(H'0003,X)
	bsr	_calc_td_data_size
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'0002,Y)
	add	AL,#H'008E
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_PsStore
	ld	AL,@(H'0004,Y)
	bsr	_dm_sm_add_device_req
	ld	AL,@(H'0004,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L216)
?L217:
	ld	AL,#H'0000
?L216:
?LBE26:
?LBE_connectionAuthSetTrustLevel:
	leavel	#7
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_ConnectionAuthSetPriorityDevice:
	enterl	#19
?LBB_ConnectionAuthSetPriorityDevice:
	ld	X,@$XAP_AL
	st	AH,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
?LBB27:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UXL
	bsr	_tdl_find_device
	st	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L220
	ld	AL,#H'0000
	tst	@(H'000C,Y)
	beq	?L221
	ld	AL,#H'0001
?L221:
	and	AL,#H'0001
	asl	#H'0005
	ld	AH,@$XAP_AL
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0003,X)
	and	AL,#-H'0021
	or	AL,@$XAP_AH
	st	AL,@(H'0003,X)
	bsr	_calc_td_data_size
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'000A,Y)
	add	AL,#H'008E
	st	AH,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_PsStore
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	_update_trusted_device_index
	tst	@(H'000C,Y)
	bne	?L222
?LBB28:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	_read_trusted_device_index
	ld	AH,#H'0001
	st	AH,@(H'000E,Y)
?L230:
	ld	AL,@(H'000E,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
	add	AL,@$XAP_UXL
	st	AL,@(H'000F,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	beq	?L224
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_PsRetrieve
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L224
	ld	X,@(H'000F,Y)
	ld	AH,@(0,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	add	AL,@(H'000E,Y)
	st	AL,@(H'0010,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@(H'000F,Y)
	st	AL,@(0,X)
	ld	X,@(H'0010,Y)
	st	AH,@(0,X)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0001
	st	AH,@(H'000E,Y)
	cmp	AH,#H'0007
	bcz	?L230
?L224:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	_store_trusted_device_index
?L222:
?LBE28:
	ld	AL,@(H'000D,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L219)
?L220:
	ld	AL,#H'0000
?L219:
?LBE27:
?LBE_ConnectionAuthSetPriorityDevice:
	leavel	#19
;.stabn	192,0,0,?LBB27
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;.stabn	224,0,0,?LBE27
$_ConnectionAuthGetPriorityDeviceStatus:
	enterl	#7
?LBB_ConnectionAuthGetPriorityDeviceStatus:
	ld	X,@$XAP_AL
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
?LBB29:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@$XAP_UXL
	bsr	_tdl_find_device
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L236
	ld	AH,@(H'0003,X)
	lsr	#H'0005
	and	AH,#H'0001
	ld	X,@(H'0004,Y)
	st	AH,@(0,X)
	ld	AL,#H'0001
	bra	(?L235)
?L236:
	ld	AL,#H'0000
?L235:
?LBE29:
?LBE_ConnectionAuthGetPriorityDeviceStatus:
	leavel	#7
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_ConnectionAuthIsPriorityDevice:
	enterl	#6
?LBB_ConnectionAuthIsPriorityDevice:
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
?LBB30:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	bsr	_tdl_find_device
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L238
	ld	AH,@(H'0003,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	bra	(?L237)
?L238:
	ld	AL,#H'0000
?L237:
?LBE30:
?LBE_ConnectionAuthIsPriorityDevice:
	leavel	#6
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_connectionAuthUpdateMru:
	enterl	#7
?LBB_connectionAuthUpdateMru:
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
?LBB31:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	bsr	_tdl_find_device
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L240
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_update_trusted_device_index
	ld	AL,@(H'0004,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L239)
?L240:
	ld	AL,#H'0000
?L239:
?LBE31:
?LBE_connectionAuthUpdateMru:
	leavel	#7
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_connectionAuthPutAttribute:
	enterl	#6
?LBB_connectionAuthPutAttribute:
	ld	AL,@$XAP_AH
	ld	AH,@(H'0006,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
?LBB32:
	st	X,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	bsr	_tdl_find_device
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L241
	ld	AL,@(H'0002,Y)
	add	AL,#H'0064
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_PsStore
	ld	AL,@(H'0003,Y)
	bsr	$_free
?L241:
?LBE32:
?LBE_connectionAuthPutAttribute:
	leavel	#6
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
$_connectionAuthGetAttribute:
	enterl	#8
?LBB_connectionAuthGetAttribute:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB33:
	cmp	AL,#H'0000
	beq	?L243
	ld	AL,@(H'000A,Y)
?LBB34:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000A,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0005,X)
	ld	AL,#H'0000
	st	AL,@(H'0006,X)
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_connectionAuthGetAttributeNow
	cmp	AL,#H'0000
	beq	?L245
	ld	AL,#H'0000
	bra	(?L247)
?L245:
	ld	AL,#H'0001
?L247:
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5056
	bsr	$_MessageSend
?L243:
?LBE34:
?LBE33:
?LBE_connectionAuthGetAttribute:
	leavel	#8
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
$_connectionAuthGetAttributeNow:
	enterl	#5
?LBB_connectionAuthGetAttributeNow:
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
?LBB35:
	st	X,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	_tdl_find_device
	cmp	AL,#H'0000
	beq	?L249
	bsr	$_free
	tst	@(H'0006,Y)
	beq	?L250
	ld	AL,@(H'0002,Y)
	add	AL,#H'0064
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L249
?L250:
	ld	AL,#H'0001
	bra	(?L248)
?L249:
	ld	AL,#H'0000
?L248:
?LBE35:
?LBE_connectionAuthGetAttributeNow:
	leavel	#5
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_connectionAuthGetIndexedAttribute:
	enterl	#8
?LBB_connectionAuthGetIndexedAttribute:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
?LBB36:
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0006,X)
	ld	AL,#H'0000
	st	AL,@(H'0007,X)
	ld	X,@(H'0009,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_connectionAuthGetIndexedAttributeNow
	cmp	AL,#H'0000
	beq	?L254
	ld	AL,#H'0000
	bra	(?L256)
?L254:
	ld	AL,#H'0001
?L256:
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5057
	bsr	$_MessageSend
?LBE36:
?LBE_connectionAuthGetIndexedAttribute:
	leavel	#8
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
$_connectionAuthGetIndexedAttributeNow:
	enterl	#16
?LBB_connectionAuthGetIndexedAttributeNow:
	st	AH,@(H'0009,Y)
?LBB37:
	ld	AH,#H'0000
	st	AH,@(H'000A,Y)
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_read_trusted_device_index
	ld	AH,@(H'0009,Y)
	cmp	AH,@(H'000B,Y)
	bcc	?L258
?LBB38:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000C,Y)
	ld	AL,@(H'0009,Y)
	add	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	beq	?L259
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L259
	ld	AL,@(H'0012,Y)
	add	AL,#H'0001
	ld	AH,@(H'000C,Y)
	bsr	_unpack_td_bdaddr
	ld	X,@(H'0012,Y)
	st	AL,@(0,X)
	tst	@(H'0010,Y)
	beq	?L260
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	add	AL,#H'0064
	ld	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L259
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
	bra	(?L259)
?L260:
	ld	X,#H'0001
	st	X,@(H'000A,Y)
?L259:
	ld	AL,@(H'000C,Y)
	bsr	$_free
?L258:
?LBE38:
?LBE37:
	ld	AL,@(H'000A,Y)
?LBE_connectionAuthGetIndexedAttributeNow:
	leavel	#16
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	224,0,0,?LBE37
$_connectionAuthUpdateTdl:
	enterl	#13
?LBB_connectionAuthUpdateTdl:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB39:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0009,Y)
	bsr	_tdl_find_device
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L266
	ld	AL,#H'0001
	ld	AH,#H'0004
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(0,X)
	bsr	_pack_td_bdaddr
?L266:
	ld	AL,@(H'0008,Y)
	bsr	$_free
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	_pack_td_security_requirements
	ld	AL,@(H'0004,Y)
	st	AL,@(H'000A,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	add	AL,#-H'0006
	and	AL,#H'000F
	asl	#H'0009
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0003,X)
	and	AH,#-H'1E01
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
?L275:
	ld	AL,@(H'0007,Y)
	smult	#H'0003
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#H'0000
	beq	?L269
	cmp	AL,#H'0003
	bne	?L273
	ld	AH,@$XAP_UXL
	add	AH,@(H'0007,Y)
	add	AH,#H'0003
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bra	(?L279)
?L273:
	ld	X,@(H'0006,Y)
	add	X,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'0003,X)
?L279:
	bsr	_pack_td_key
?L269:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0004
	bcz	?L275
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	bsr	_calc_td_data_size
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'0002,Y)
	add	AL,#H'008E
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_PsStore
	cmp	AL,#H'0000
	beq	?L276
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_update_trusted_device_index
?L276:
	ld	AL,@(H'0004,Y)
	bsr	$_free
?LBE39:
?LBE_connectionAuthUpdateTdl:
	leavel	#13
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_connectionAuthDeleteDeviceFromTdl:
	enterl	#12
?LBB_connectionAuthDeleteDeviceFromTdl:
	ld	AH,@$XAP_AL
?LBB40:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	_tdl_find_device
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L282
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_delete_from_trusted_device_list
	ld	AL,@(H'0009,Y)
	bsr	$_free
?L282:
?LBE40:
?LBE_connectionAuthDeleteDeviceFromTdl:
	leavel	#12
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
$_ConnectionDmBleAddTdlDevicesToWhiteListReq:
	enterl	#19
?LBB_ConnectionDmBleAddTdlDevicesToWhiteListReq:
	st	AL,@(H'000D,Y)
?LBB41:
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	st	AL,@(H'0010,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_read_trusted_device_index
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000F,Y)
	ld	X,#H'0000
	st	X,@(H'000E,Y)
	cmp	X,@(H'0010,Y)
	bcc	?L286
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'000F
	beq	?L286
?L292:
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'000F,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L287
	tst	@(H'000D,Y)
	beq	?L291
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'001E
	cmp	AL,#H'0000
	beq	?L287
?L291:
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	ld	AH,@(H'000F,Y)
	bsr	_unpack_td_bdaddr
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	bsr	$_ConnectionDmBleAddDeviceToWhiteListReq
?L287:
	ld	AL,@(H'000E,Y)
	add	AL,#H'0001
	st	AL,@(H'000E,Y)
	cmp	AL,@(H'0010,Y)
	bcc	?L286
	ld	X,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	add	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	bne	?L292
?L286:
	ld	AL,@(H'000F,Y)
	bsr	$_free
?LBE41:
?LBE_ConnectionDmBleAddTdlDevicesToWhiteListReq:
	leavel	#19
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_ConnectionBondedToPrivacyEnabledDevice:
	enterl	#15
?LBB_ConnectionBondedToPrivacyEnabledDevice:
?LBB42:
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_read_trusted_device_index
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,#H'0000
	st	X,@(H'0009,Y)
	ld	AL,@(H'000B,Y)
	cmp	AL,@(H'000C,Y)
	bcc	?L300
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'000F
	beq	?L300
?L306:
	add	AL,#H'008E
	ld	AH,#H'0023
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L301
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L301
	ld	AL,#H'0001
	st	AL,@(H'000B,Y)
	bra	(?L300)
?L301:
	ld	X,@(H'0009,Y)
	add	X,#H'0001
	st	X,@(H'0009,Y)
	cmp	X,@(H'000C,Y)
	bcc	?L300
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	add	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000F
	bne	?L306
?L300:
	ld	AL,@(H'000A,Y)
	bsr	$_free
?LBE42:
	ld	AL,@(H'000B,Y)
?LBE_ConnectionBondedToPrivacyEnabledDevice:
	leavel	#15
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
	ENDMOD

;# Function pattern *movqi2 used[0] = 364 used[1] = 99 total = 463
;# Function pattern *movqi3 used[0] = 360 total = 360
;# Function pattern *movqi8 used[0] = 35 total = 35
;# Function pattern *movhi used[2] = 3 used[3] = 6 total = 9
;# Function pattern *andhi3 used[0] = 3 total = 3
;# Function pattern *iorhi3 used[0] = 2 total = 2
;# Function pattern *addqi4 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 57 total = 57
;# Function pattern *addqi2 used[0] = 84 used[2] = 14 total = 98
;# Function pattern *andqi3 used[0] = 49 total = 49
;# Function pattern *iorqi3 used[0] = 21 total = 21
;# Function pattern *subqi3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern *mulqi3_const used[0] = 3 total = 3
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 20 total = 20
;# Function pattern *ashrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 17 total = 17
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 35 total = 35
;# Function pattern *call1 used[0] = 61 total = 61
;# Function pattern *call_value1 used[0] = 91 total = 91
;# Function pattern movstrqi+2 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 42 used[1] = 13 total = 55
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 60 total = 60
	MODULE	ConnectionGetRole
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionGetRole:
	enterl	#8
?LBB_ConnectionGetRole:
?LBB2:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0064
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionGetRole:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionInquire
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionInquire:
	enterl	#13
?LBB_ConnectionInquire:
	ld	X,@$XAP_AL
	ld	AH,@(H'000D,Y)
	ld	AL,@(H'000E,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0011,Y)
	ld	AL,@(H'0012,Y)
	st	AH,@H'fffa
	st	AL,@H'fffb
?LBB2:
?LBB3:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0006,Y)
	ld	AH,@H'fffa
	ld	AL,@H'fffb
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	st	AL,@(H'000A,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0003
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionInquire:
	leavel	#13
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionInquirePeriodic:
	enterl	#13
?LBB_ConnectionInquirePeriodic:
	st	AL,@H'fffb
	st	AH,@H'fffa
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(H'0010,Y)
?LBB4:
?LBB5:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fffb
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0012,Y)
	ld	AL,@(H'0013,Y)
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	st	AL,@H'ffff
	ld	AL,@H'fffa
	st	AL,@(H'0009,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'000D,Y)
	st	AL,@(H'000A,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0003
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionInquirePeriodic:
	leavel	#13
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 used[3] = 2 total = 17
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *movhi used[2] = 7 used[3] = 7 total = 14
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	ConnectionInquireCancel
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionInquireCancel:
	enterl	#8
?LBB_ConnectionInquireCancel:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0004
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionInquireCancel:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionL2capUnregisterRequest
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionL2capUnregisterRequest:
	enterl	#8
?LBB_ConnectionL2capUnregisterRequest:
?LBB2:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0049
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionL2capUnregisterRequest:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionReadInquiryTx
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionReadInquiryTx:
	enterl	#8
?LBB_ConnectionReadInquiryTx:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0009
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadInquiryTx:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionSmSetSecurityLevel
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmSetSecurityLevel:
	enterl	#11
?LBB_ConnectionSmSetSecurityLevel:
	st	AL,@H'fff8
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
?LBB2:
?LBB3:
	ld	X,#H'0007
	st	X,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0006,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0007,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0016
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmSetSecurityLevel:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 7 used[3] = 1 total = 8
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionSmSetTrustLevel
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmSetTrustLevel:
	enterl	#10
?LBB_ConnectionSmSetTrustLevel:
	ld	X,@$XAP_AH
?LBB2:
	ld	AH,#H'0006
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0007,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0027
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionSmSetTrustLevel:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 9 total = 9
;# Function pattern *movqi3 used[0] = 7 total = 7
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionSmUpdateMruDevice
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmUpdateMruDevice:
	enterl	#2
?LBB_ConnectionSmUpdateMruDevice:
	bsr	$_connectionAuthUpdateMru
?LBE_ConnectionSmUpdateMruDevice:
	leavel	#2
	ENDMOD

;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionWriteInquiryAccessCode
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionWriteInquiryAccessCode:
	enterl	#7
?LBB_ConnectionWriteInquiryAccessCode:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
?LBB2:
?LBB3:
	add	AH,@$XAP_AH
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0034
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWriteInquiryAccessCode:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 10 total = 10
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+2 used[0] = 1 total = 1
	MODULE	ConnectionWriteInquiryscanActivity
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionWriteInquiryscanActivity:
	enterl	#8
?LBB_ConnectionWriteInquiryscanActivity:
?LBB2:
?LBB3:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'002B
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWriteInquiryscanActivity:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionWriteInquiryTx
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionWriteInquiryTx:
	enterl	#8
?LBB_ConnectionWriteInquiryTx:
?LBB2:
?LBB3:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0008
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWriteInquiryTx:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	ConnectionWritePagescanActivity
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionWritePagescanActivity:
	enterl	#8
?LBB_ConnectionWritePagescanActivity:
?LBB2:
?LBB3:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'002A
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWritePagescanActivity:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_baseband_cod
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionWriteClassOfDevice:
	enterl	#8
?LBB_ConnectionWriteClassOfDevice:
?LBB2:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0029
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionWriteClassOfDevice:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movhi used[3] = 1 total = 1
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_baseband_name
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionChangeLocalName:
	enterl	#11
?LBB_ConnectionChangeLocalName:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'001E)
	bcc	?L2
	ld	X,@$XAP_AH
?LBB4:
	add	X,@(H'0006,Y)
	tst	@(-H'0001,X)
	beq	?L3
	ld	AH,@(H'0006,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	bra	(?L4)
?L3:
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0008,Y)
?L4:
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	add	X,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(-H'0001,X)
?LBE4:
	bra	(?L5)
?L2:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?L5:
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0033
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionChangeLocalName:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 14 used[1] = 1 total = 15
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[1] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	dm_baseband_scan
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionWriteInquiryScanType:
	enterl	#8
?LBB_ConnectionWriteInquiryScanType:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'002C
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionWriteInquiryScanType:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_ConnectionWritePageScanType:
	enterl	#8
?LBB_ConnectionWritePageScanType:
?LBB3:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'002D
	bsr	$_MessageSend
?LBE3:
?LBE_ConnectionWritePageScanType:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionWriteScanEnable:
	enterl	#8
?LBB_ConnectionWriteScanEnable:
?LBB4:
?LBB5:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'002E
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionWriteScanEnable:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 9 total = 9
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 3 total = 3
	MODULE	dm_ble_advertising
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleSetAdvertisingDataReq:
	enterl	#6
?LBB_ConnectionDmBleSetAdvertisingDataReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L1
?LBB3:
	ld	AL,#H'0022
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'2008
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0022
	st	AL,@(H'0001,X)
	ld	AH,@(H'0001,Y)
	st	AH,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	bsr	$_VmSendDmPrim
?L1:
?LBE3:
?LBE2:
?LBE_ConnectionDmBleSetAdvertisingDataReq:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionDmBleSetAdvertiseEnable:
	enterl	#8
?LBB_ConnectionDmBleSetAdvertiseEnable:
	st	AL,@(H'0005,Y)
?LBB4:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L5
?LBB5:
	ld	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,#H'0313
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	tst	@(H'0005,Y)
	beq	?L8
	ld	AL,#H'0001
?L8:
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmSendDmPrim
?L5:
?LBE5:
?LBE4:
?LBE_ConnectionDmBleSetAdvertiseEnable:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionDmBleSetAdvertisingParamsReq:
	enterl	#18
?LBB_ConnectionDmBleSetAdvertisingParamsReq:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
?LBB6:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L10
?LBB7:
	ld	AH,#H'000D
	st	AH,@(0,Y)
	ld	AL,#H'0314
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	ld	AL,#H'0800
	st	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'000D,Y)
	ld	AL,@(H'000E,Y)
	cmp	AL,#(H'0001+H'0005)
	bcc	?L13
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE20,X)
	brxl
	.SEG	CONST
?JTBASE20:
	.CODE
?L20:
	.SEG	CONST
	dc	lwrd(?L14-?L20)
	dc	lwrd(?L16-?L20)
	dc	lwrd(?L16-?L20)
	dc	lwrd(?L17-?L20)
	dc	lwrd(?L18-?L20)
	dc	lwrd(?L19-?L20)
	.CODE
?L14:
	ld	AL,#H'0000
	bra	(?L36)
?L16:
	ld	AL,#H'0001
	bra	(?L36)
?L17:
	ld	AL,#H'0002
	bra	(?L36)
?L18:
	ld	AL,#H'0003
	bra	(?L36)
?L19:
	ld	AL,#H'0004
?L36:
	st	AL,@(H'0005,Y)
?L13:
	ld	AL,#H'0000
	tst	@(H'000F,Y)
	beq	?L22
	ld	AL,#H'0001
?L22:
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0012,Y)
	and	AL,#H'0007
	st	AL,@(H'000C,Y)
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0001
	bne	?L23
	tst	@(H'0013,Y)
	beq	?L25
	ld	AL,@(H'0013,Y)
	add	AL,#H'0001
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L24
?L25:
	bsr	$_Panic
?L24:
	ld	AL,#H'0000
	ld	X,@(H'0013,Y)
	tst	@(0,X)
	beq	?L26
	ld	AL,#H'0001
?L26:
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	add	AL,#H'0007
	ld	AH,@(H'0013,Y)
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	bra	(?L27)
?L23:
	tst	@(H'0013,Y)
	beq	?L27
	ld	X,@(H'0013,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,X)
	cmp	AH,#H'0001
	beq	?L31
	cmp	AH,#H'0001
	bcs	?L30
	cmp	AH,#H'0002
	beq	?L32
	cmp	AH,#H'0003
	beq	?L33
	bra	(?L29)
?L30:
	ld	AL,#H'0000
	bra	(?L37)
?L31:
	ld	AL,#H'0001
	bra	(?L37)
?L32:
	ld	AL,#H'0002
	bra	(?L37)
?L33:
	ld	AL,#H'0003
?L37:
	st	AL,@(H'000D,Y)
?L29:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0009,Y)
	st	AL,@(H'0008,Y)
	st	AL,@(H'000B,Y)
	st	AL,@(H'000A,Y)
?L27:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L10:
?LBE7:
?LBE6:
?LBE_ConnectionDmBleSetAdvertisingParamsReq:
	leavel	#18
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_connectionHandleDmBleAdvParamUpdateInd:
	enterl	#16
?LBB_connectionHandleDmBleAdvParamUpdateInd:
	st	AL,@(H'000D,Y)
?LBB8:
	ld	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#(H'0001+H'0004)
	bcc	?L51
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE52,X)
	brxl
	.SEG	CONST
?JTBASE52:
	.CODE
?L52:
	.SEG	CONST
	dc	lwrd(?L46-?L52)
	dc	lwrd(?L47-?L52)
	dc	lwrd(?L48-?L52)
	dc	lwrd(?L49-?L52)
	dc	lwrd(?L50-?L52)
	.CODE
?L46:
	ld	AL,#H'0000
	bra	(?L60)
?L47:
	ld	AL,#H'0002
	bra	(?L60)
?L48:
	ld	AL,#H'0003
	bra	(?L60)
?L49:
	ld	AL,#H'0004
	bra	(?L60)
?L50:
	ld	AL,#H'0005
	bra	(?L60)
?L51:
	ld	AL,#H'00FF
?L60:
	st	AL,@(H'0004,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0005
	ld	AH,@$XAP_UXL
	add	AH,#H'0007
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000D,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'000B,Y)
	ld	AH,@(H'000C,X)
	cmp	AH,#H'0001
	beq	?L55
	cmp	AH,#H'0001
	bcs	?L54
	cmp	AH,#H'0002
	beq	?L56
	cmp	AH,#H'0003
	beq	?L57
	bra	(?L58)
?L54:
	ld	AL,#H'0000
	bra	(?L61)
?L55:
	ld	AL,#H'0001
	bra	(?L61)
?L56:
	ld	AL,#H'0002
	bra	(?L61)
?L57:
	ld	AL,#H'0003
	bra	(?L61)
?L58:
	ld	AL,#H'00FF
?L61:
	st	AL,@(H'000C,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'506A
	bsr	$_MessageSend
?LBE8:
?LBE_connectionHandleDmBleAdvParamUpdateInd:
	leavel	#16
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
	ENDMOD

;# Function pattern *movqi2 used[0] = 48 used[1] = 2 total = 50
;# Function pattern *movqi3 used[0] = 60 total = 60
;# Function pattern *addqi0 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 6 total = 6
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 19 total = 19
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 5 total = 6
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 12 total = 12
	MODULE	dm_ble_connection_parameters_update
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleConnectionParametersUpdateReq:
	enterl	#20
?LBB_ConnectionDmBleConnectionParametersUpdateReq:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB2:
	bsr	$_connectionGetCmTask
	st	AL,@(H'0011,Y)
	ld	AL,#H'000C
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'0010,Y)
	bsr	$_memcpy
	ld	AL,@(H'0014,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0015,Y)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0016,Y)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'0017,Y)
	st	AL,@(H'000C,Y)
	ld	AL,@(H'0018,Y)
	st	AL,@(H'000D,Y)
	ld	AL,@(H'0019,Y)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0011,Y)
	add	AL,#H'0022
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0011,Y)
	ld	AH,#H'006C
	bsr	$_MessageSendConditionallyOnTask
?LBE2:
?LBE_ConnectionDmBleConnectionParametersUpdateReq:
	leavel	#20
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_connectionHandleDmBleConnectionParametersUpdateReq:
	enterl	#18
?LBB_connectionHandleDmBleConnectionParametersUpdateReq:
	st	AL,@H'fff8
	st	AH,@(H'000F,Y)
?LBB3:
	ld	AH,#H'000E
	st	AH,@(0,Y)
	ld	AL,#H'0316
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_BdaddrConvertTypedVmToBluestack
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'000C,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'000D,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE3:
?LBE_connectionHandleDmBleConnectionParametersUpdateReq:
	leavel	#18
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_connectionHandleDmBleUpdateConnectionParametersCfm:
	enterl	#12
?LBB_connectionHandleDmBleUpdateConnectionParametersCfm:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB4:
	tst	@(0,X)
	beq	?L3
?LBB5:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	tst	@(H'0002,X)
	beq	?L5
	ld	AL,#H'0001
?L5:
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5060
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
?L3:
?LBE5:
?LBE4:
?LBE_connectionHandleDmBleUpdateConnectionParametersCfm:
	leavel	#12
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_connectionHandleDmBleAcceptConnectionParUpdateInd:
	enterl	#15
?LBB_connectionHandleDmBleAcceptConnectionParUpdateInd:
	st	AL,@(H'000C,Y)
?LBB6:
	ld	AL,#H'000A
	st	AL,@(H'0001,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'000B,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5068
	bsr	$_MessageSend
?LBE6:
?LBE_connectionHandleDmBleAcceptConnectionParUpdateInd:
	leavel	#15
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_ConnectionDmBleAcceptConnectionParUpdateResponse:
	enterl	#16
?LBB_ConnectionDmBleAcceptConnectionParUpdateResponse:
	st	AL,@(H'000D,Y)
?LBB7:
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#H'031B
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertTypedVmToBluestack
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0013,Y)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0014,Y)
	st	AL,@(H'000B,Y)
	ld	AL,#H'0000
	tst	@(H'000D,Y)
	bne	?L8
	ld	AL,#H'0001
?L8:
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE7:
?LBE_ConnectionDmBleAcceptConnectionParUpdateResponse:
	leavel	#16
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 51 used[1] = 3 total = 54
;# Function pattern *movqi3 used[0] = 51 total = 51
;# Function pattern *addqi0 used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[1] = 3 total = 3
	MODULE	dm_ble_scanning
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleSetScanEnable:
	enterl	#8
?LBB_ConnectionDmBleSetScanEnable:
	st	AL,@(H'0005,Y)
?LBB2:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L1
?LBB3:
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,#H'0318
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	tst	@(H'0005,Y)
	beq	?L4
	ld	AL,#H'0001
?L4:
	st	AL,@(H'0002,X)
	ld	AL,#H'0001
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmSendDmPrim
?L1:
?LBE3:
?LBE2:
?LBE_ConnectionDmBleSetScanEnable:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionBleAddAdvertisingReportFilter:
	enterl	#8
?LBB_ConnectionBleAddAdvertisingReportFilter:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB4:
	bsr	$_connectionGetBtVersion
	cmp	AL,#(H'0001+H'0003)
	bcc	?L7
	ld	AL,#H'0000
	bra	(?L6)
?L7:
?LBB5:
	ld	AL,@(H'0008,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	bsr	$_VmAddAdvertisingReportFilter
?L6:
?LBE5:
?LBE4:
?LBE_ConnectionBleAddAdvertisingReportFilter:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionBleClearAdvertisingReportFilter:
	enterl	#2
?LBB_ConnectionBleClearAdvertisingReportFilter:
	bsr	$_connectionGetBtVersion
	cmp	AL,#(H'0001+H'0003)
	bcc	?L10
	ld	AL,#H'0000
	bra	(?L9)
?L10:
	bsr	$_VmClearAdvertisingReportFilter
?L9:
?LBE_ConnectionBleClearAdvertisingReportFilter:
	leavel	#2
$_ConnectionDmBleSetScanParametersReq:
	enterl	#12
?LBB_ConnectionDmBleSetScanParametersReq:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB6:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L12
?LBB7:
	ld	AH,#H'0007
	st	AH,@(0,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,#H'0317
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	tst	@(H'0008,Y)
	beq	?L15
	ld	AL,#H'0001
?L15:
	st	AL,@(H'0002,X)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0000
	tst	@(H'0009,Y)
	beq	?L16
	ld	AL,#H'0001
?L16:
	st	AL,@(H'0005,X)
	ld	AL,#H'0000
	tst	@(H'000C,Y)
	beq	?L17
	ld	AL,#H'0001
?L17:
	st	AL,@(H'0006,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmSendDmPrim
?L12:
?LBE7:
?LBE6:
?LBE_ConnectionDmBleSetScanParametersReq:
	leavel	#12
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_ConnectionDmBleSetScanResponseDataReq:
	enterl	#6
?LBB_ConnectionDmBleSetScanResponseDataReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L19
?LBB9:
	ld	AL,#H'0022
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'2009
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0022
	st	AL,@(H'0001,X)
	ld	AH,@(H'0001,Y)
	st	AH,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	bsr	$_VmSendDmPrim
?L19:
?LBE9:
?LBE8:
?LBE_ConnectionDmBleSetScanResponseDataReq:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
	ENDMOD

;# Function pattern *movqi2 used[0] = 33 used[1] = 6 total = 39
;# Function pattern *movqi3 used[0] = 27 total = 27
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[1] = 4 total = 4
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	dm_ble_security
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleSecurityReq:
	enterl	#14
?LBB_ConnectionDmBleSecurityReq:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB2:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L1
?LBB3:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'000B,Y)
	bsr	$_memcpy
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0009,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'006D
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_ConnectionDmBleSecurityReq:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_connectionHandleInternalBleDmSecurityReq:
	enterl	#15
?LBB_connectionHandleInternalBleDmSecurityReq:
	st	AL,@(H'000C,Y)
?LBB4:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,#H'0396
	st	AL,@(H'0001,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0007,X)
	cmp	AL,#(H'0001+H'0005)
	bcc	?L6
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE13,X)
	brxl
	.SEG	CONST
?JTBASE13:
	.CODE
?L13:
	.SEG	CONST
	dc	lwrd(?L6-?L13)
	dc	lwrd(?L7-?L13)
	dc	lwrd(?L8-?L13)
	dc	lwrd(?L9-?L13)
	dc	lwrd(?L11-?L13)
	dc	lwrd(?L10-?L13)
	.CODE
?L7:
	ld	AL,#H'0008
	bra	(?L22)
?L8:
	ld	AL,#H'000C
	bra	(?L22)
?L9:
	ld	AL,#H'0010
	bra	(?L22)
?L10:
	ld	AL,#H'0018
	bra	(?L22)
?L11:
	ld	AL,#H'0014
?L22:
	st	AL,@(H'0008,Y)
?L6:
	ld	AL,@(H'0008,Y)
	or	AL,#H'0003
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	add	AL,#H'0002
	ld	AH,@(H'000C,Y)
	add	AH,#H'0001
	bsr	$_BdaddrConvertTypedVmToBluestack
	ld	X,@(H'000C,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0006,X)
	cmp	AL,#(H'0001+H'0004)
	bcc	?L14
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE21,X)
	brxl
	.SEG	CONST
?JTBASE21:
	.CODE
?L21:
	.SEG	CONST
	dc	lwrd(?L15-?L21)
	dc	lwrd(?L16-?L21)
	dc	lwrd(?L17-?L21)
	dc	lwrd(?L18-?L21)
	dc	lwrd(?L19-?L21)
	.CODE
?L15:
	ld	AL,#H'4000
	bra	(?L23)
?L16:
	ld	AL,#H'4001
	bra	(?L23)
?L17:
	ld	AL,#H'4004
	bra	(?L23)
?L18:
	ld	AL,#H'4005
	st	AL,@(H'000A,Y)
?L19:
	ld	AL,#H'1000
?L23:
	st	AL,@(H'000A,Y)
?L14:
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE4:
?LBE_connectionHandleInternalBleDmSecurityReq:
	leavel	#15
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_connectionHandleDmSmSecurityCfm:
	enterl	#11
?LBB_connectionHandleDmSmSecurityCfm:
	st	AL,@(H'0008,Y)
?LBB5:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0006
	beq	?L28
	cmp	AL,#(H'0001+H'0006)
	bcc	?L31
	cmp	AL,#H'0000
	beq	?L26
	bra	(?L29)
?L31:
	cmp	AL,#H'0038
	beq	?L27
	bra	(?L29)
?L26:
	ld	AL,#H'0000
	bra	(?L32)
?L27:
	ld	AL,#H'0001
	bra	(?L32)
?L28:
	ld	AL,#H'0002
	bra	(?L32)
?L29:
	ld	AL,#H'0003
?L32:
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0001
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0008,X)
	ld	AH,#H'505E
	bsr	$_MessageSend
?LBE5:
?LBE_connectionHandleDmSmSecurityCfm:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 23 used[1] = 1 total = 24
;# Function pattern *movqi3 used[0] = 37 total = 37
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 12 total = 12
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	dm_ble_set_connection_parameters
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleSetConnectionParametersReq:
	enterl	#15
?LBB_ConnectionDmBleSetConnectionParametersReq:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#H'0315
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_ConnectionDmBleSetConnectionParametersReq:
	leavel	#15
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 14 total = 14
;# Function pattern *movqi3 used[0] = 13 total = 13
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	dm_ble_white_list
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleReadWhiteListSizeReq:
	enterl	#7
?LBB_ConnectionDmBleReadWhiteListSizeReq:
?LBB2:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L1
?LBB3:
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,#H'200F
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L1:
?LBE3:
?LBE2:
?LBE_ConnectionDmBleReadWhiteListSizeReq:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionDmBleClearWhiteListReq:
	enterl	#7
?LBB_ConnectionDmBleClearWhiteListReq:
?LBB4:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L5
?LBB5:
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,#H'2010
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L5:
?LBE5:
?LBE4:
?LBE_ConnectionDmBleClearWhiteListReq:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionDmBleAddDeviceToWhiteListReq:
	enterl	#12
?LBB_ConnectionDmBleAddDeviceToWhiteListReq:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB6:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L9
?LBB7:
	ld	AH,#H'0007
	st	AH,@(0,Y)
	ld	AL,#H'2011
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'0009,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L9:
?LBE7:
?LBE6:
?LBE_ConnectionDmBleAddDeviceToWhiteListReq:
	leavel	#12
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_ConnectionDmBleRemoveDeviceFromWhiteListReq:
	enterl	#12
?LBB_ConnectionDmBleRemoveDeviceFromWhiteListReq:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB8:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L13
?LBB9:
	ld	AH,#H'0007
	st	AH,@(0,Y)
	ld	AL,#H'2012
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'0009,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L13:
?LBE9:
?LBE8:
?LBE_ConnectionDmBleRemoveDeviceFromWhiteListReq:
	leavel	#12
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
	ENDMOD

;# Function pattern *movqi2 used[0] = 18 used[1] = 2 total = 20
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	dm_dut
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionEnterDutMode:
	enterl	#3
?LBB_ConnectionEnterDutMode:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0069
	bsr	$_MessageSend
?LBE_ConnectionEnterDutMode:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_info_local_addr
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionReadLocalAddr:
	enterl	#8
?LBB_ConnectionReadLocalAddr:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0036
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadLocalAddr:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_inquiry
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionReadLocalName:
	enterl	#8
?LBB_ConnectionReadLocalName:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0007
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadLocalName:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_ConnectionWriteInquiryMode:
	enterl	#8
?LBB_ConnectionWriteInquiryMode:
?LBB3:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'000B
	bsr	$_MessageSend
?LBE3:
?LBE_ConnectionWriteInquiryMode:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionWriteEirData:
	enterl	#8
?LBB_ConnectionWriteEirData:
?LBB4:
?LBB5:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	cmp	AH,#H'00F0
	bcz	?L4
	ld	AH,#H'00F0
?L4:
	st	AH,@(H'0003,Y)
	cmp	AH,#H'0000
	beq	?L5
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
	bra	(?L6)
?L5:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L6:
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'000D
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionWriteEirData:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 used[1] = 1 total = 16
;# Function pattern *movqi3 used[0] = 9 total = 9
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	dm_link_policy
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSetRole:
	enterl	#8
?LBB_ConnectionSetRole:
?LBB2:
?LBB3:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0063
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSetRole:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSetLinkSupervisionTimeout:
	enterl	#8
?LBB_ConnectionSetLinkSupervisionTimeout:
?LBB4:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0065
	bsr	$_MessageSend
?LBE4:
?LBE_ConnectionSetLinkSupervisionTimeout:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ConnectionSetLinkPolicy:
	enterl	#8
?LBB_ConnectionSetLinkPolicy:
?LBB5:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0066
	bsr	$_MessageSend
?LBE5:
?LBE_ConnectionSetLinkPolicy:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionSetSniffSubRatePolicy:
	enterl	#8
?LBB_ConnectionSetSniffSubRatePolicy:
?LBB6:
?LBB7:
	ld	X,#H'0004
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0067
	bsr	$_MessageSend
?LBE7:
?LBE6:
?LBE_ConnectionSetSniffSubRatePolicy:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 20 total = 20
;# Function pattern *movqi3 used[0] = 12 total = 12
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 4 total = 4
	MODULE	dm_page_timeout
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSetPageTimeout:
	enterl	#8
?LBB_ConnectionSetPageTimeout:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AH,#H'0000
	bne	?L2
	ld	AL,#H'2000
	st	AL,@(H'0002,Y)
	bra	(?L3)
?L2:
	st	AH,@(H'0002,Y)
?L3:
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0068
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionSetPageTimeout:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	dm_security_attribute
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmPutAttributeReq:
	enterl	#5
?LBB_ConnectionSmPutAttributeReq:
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	$_connectionAuthPutAttribute
?LBE_ConnectionSmPutAttributeReq:
	leavel	#5
$_ConnectionSmGetAttributeReq:
	enterl	#11
?LBB_ConnectionSmGetAttributeReq:
?LBB2:
?LBB3:
	ld	X,#H'0007
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0005,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'006A
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmGetAttributeReq:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSmGetIndexedAttribute:
	enterl	#8
?LBB_ConnectionSmGetIndexedAttribute:
?LBB4:
?LBB5:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'006B
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmGetIndexedAttribute:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionSmGetAttributeNowReq:
	enterl	#5
?LBB_ConnectionSmGetAttributeNowReq:
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	$_connectionAuthGetAttributeNow
?LBE_ConnectionSmGetAttributeNowReq:
	leavel	#5
$_ConnectionSmGetIndexedAttributeNowReq:
	enterl	#5
?LBB_ConnectionSmGetIndexedAttributeNowReq:
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	$_connectionAuthGetIndexedAttributeNow
?LBE_ConnectionSmGetIndexedAttributeNowReq:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 23 used[1] = 3 total = 26
;# Function pattern *movqi3 used[0] = 14 total = 14
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+2 used[0] = 3 total = 3
	MODULE	dm_security_authorise
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmAuthoriseResponse:
	enterl	#14
?LBB_ConnectionSmAuthoriseResponse:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
?LBB2:
?LBB3:
	ld	X,#H'0009
	st	X,@(H'0001,Y)
	ld	X,@H'fff8
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	X,@H'fff8
	ld	X,@(H'0001,X)
	st	X,@(H'0003,Y)
	ld	X,@H'fff8
	ld	X,@(H'0002,X)
	st	X,@(H'0004,Y)
	ld	X,@H'fff8
	ld	X,@(H'0003,X)
	st	X,@(H'0005,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0006,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0009,Y)
	ld	X,@(H'0011,Y)
	st	X,@(H'000A,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'001E
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmAuthoriseResponse:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSmPinCodeResponse:
	enterl	#6
?LBB_ConnectionSmPinCodeResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
?LBB5:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_memcpy
	ld	AH,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0005,X)
	cmp	AH,#H'0000
	beq	?L3
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
?L3:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AH,#H'001F
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmPinCodeResponse:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionSmIoCapabilityResponse:
	enterl	#21
?LBB_ConnectionSmIoCapabilityResponse:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB6:
?LBB7:
	ld	AH,#H'0000
	st	AH,@(H'0011,Y)
	st	AH,@(H'0012,Y)
	ld	AL,#H'000D
	st	AL,@(H'0001,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'000F,Y)
	bsr	$_memcpy
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0008,Y)
	ld	X,@(H'0016,Y)
	st	X,@(H'0009,Y)
	ld	AH,@(H'0015,Y)
	st	AH,@(H'000A,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'000C,Y)
	st	AL,@(H'000D,Y)
	st	AL,@(H'000E,Y)
	ld	AL,@(H'0018,Y)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L5
	ld	X,@(H'000F,Y)
	tst	@(H'0005,X)
	bne	?L6
	ld	AH,#H'0010
	st	AH,@(H'0011,Y)
?L6:
	ld	AL,@(H'0012,Y)
	add	AL,#H'0010
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000C,Y)
	or	AL,#H'0001
	st	AL,@(H'000C,Y)
?L5:
	ld	AL,@(H'0018,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L7
	ld	AH,@(H'0011,Y)
	add	AH,#H'0010
	st	AH,@(H'0011,Y)
	ld	AL,@(H'0012,Y)
	add	AL,#H'0010
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000C,Y)
	or	AL,#H'0002
	st	AL,@(H'000C,Y)
?L7:
	tst	@(H'0011,Y)
	beq	?L8
	ld	AL,@(H'0011,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000E,Y)
	ld	AH,@(H'0011,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'001A,Y)
	bsr	$_memmove
?L8:
	tst	@(H'0012,Y)
	beq	?L9
	ld	AL,@(H'0012,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000D,Y)
	ld	AH,@(H'0012,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0019,Y)
	bsr	$_memmove
?L9:
	ld	X,@(H'000F,Y)
	tst	@(H'0005,X)
	bne	?L10
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
	bra	(?L11)
?L10:
	ld	AH,@(H'0017,Y)
	st	AH,@(H'000B,Y)
?L11:
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(0,Y)
	ld	AH,#H'0020
	bsr	$_MessageSend
?LBE7:
?LBE6:
?LBE_ConnectionSmIoCapabilityResponse:
	leavel	#21
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_ConnectionSmUserConfirmationResponse:
	enterl	#12
?LBB_ConnectionSmUserConfirmationResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'0009,Y)
?LBB8:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0021
	bsr	$_MessageSend
?LBE8:
?LBE_ConnectionSmUserConfirmationResponse:
	leavel	#12
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_ConnectionSmUserPasskeyResponse:
	enterl	#14
?LBB_ConnectionSmUserPasskeyResponse:
	ld	X,@$XAP_AL
	st	AH,@(H'000B,Y)
?LBB9:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
	st	AH,@(H'0009,Y)
	st	AL,@(H'000A,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0022
	bsr	$_MessageSend
?LBE9:
?LBE_ConnectionSmUserPasskeyResponse:
	leavel	#14
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_ConnectionSmDeleteAuthDeviceReq:
	enterl	#2
?LBB_ConnectionSmDeleteAuthDeviceReq:
	bsr	$_connectionAuthDeleteDevice
?LBE_ConnectionSmDeleteAuthDeviceReq:
	leavel	#2
$_ConnectionSmDeleteAllAuthDevices:
	enterl	#2
?LBB_ConnectionSmDeleteAllAuthDevices:
	bsr	$_connectionAuthDeleteAllDevice
?LBE_ConnectionSmDeleteAllAuthDevices:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 56 used[1] = 12 used[3] = 1 total = 69
;# Function pattern *movqi3 used[0] = 42 total = 42
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi0 used[0] = 7 total = 7
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 17 total = 17
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 4 total = 7
	MODULE	dm_security_encrypt
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmEncrypt:
	enterl	#8
?LBB_ConnectionSmEncrypt:
?LBB2:
?LBB3:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'001C
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmEncrypt:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSmEncryptionKeyRefreshSink:
	enterl	#15
?LBB_ConnectionSmEncryptionKeyRefreshSink:
?LBB4:
?LBB5:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L2
?LBB6:
	ld	AL,#H'0005
	st	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,#H'001D
	bsr	$_MessageSend
?L2:
?LBE6:
?LBE5:
?LBE4:
?LBE_ConnectionSmEncryptionKeyRefreshSink:
	leavel	#15
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 total = 8
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi0 used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	dm_security_mode
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSmSetSecurityMode:
	enterl	#8
?LBB_ConnectionSmSetSecurityMode:
?LBB2:
?LBB3:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0015
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmSetSecurityMode:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSmSecModeConfig:
	enterl	#8
?LBB_ConnectionSmSecModeConfig:
?LBB4:
?LBB5:
	ld	X,#H'0004
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0017
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmSecModeConfig:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 11 total = 11
;# Function pattern *movqi3 used[0] = 7 total = 7
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_sync
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_default_sync_config_params:
	dc	H'0000
	dc	H'1F40
	dc	H'0000
	dc	H'1F40
	dc	H'00FF
	dc	H'0000
	dc	H'0000
	dc	H'0007
	.CODE
$_ConnectionSyncRegister:
	enterl	#8
?LBB_ConnectionSyncRegister:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'005B
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionSyncRegister:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_ConnectionSyncConnectRequest:
	enterl	#14
?LBB_ConnectionSyncConnectRequest:
?LBB3:
	ld	X,#H'000A
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	tst	@(H'000E,Y)
	beq	?L3
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000E,Y)
	bra	(?L5)
?L3:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0002
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,#($_default_sync_config_params)
?L5:
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'005D
	bsr	$_MessageSend
?LBE3:
?LBE_ConnectionSyncConnectRequest:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSyncConnectResponse:
	enterl	#18
?LBB_ConnectionSyncConnectResponse:
	ld	X,@$XAP_AH
?LBB4:
	ld	AH,#H'000E
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0012,Y)
	st	AH,@(H'0007,Y)
	tst	@(H'0013,Y)
	beq	?L7
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,@(H'0013,Y)
	bra	(?L9)
?L7:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0006
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,#($_default_sync_config_params)
?L9:
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'005E
	bsr	$_MessageSend
?LBE4:
?LBE_ConnectionSyncConnectResponse:
	leavel	#18
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ConnectionSyncDisconnect:
	enterl	#8
?LBB_ConnectionSyncDisconnect:
?LBB5:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'005F
	bsr	$_MessageSend
?LBE5:
?LBE_ConnectionSyncDisconnect:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 24 used[1] = 2 total = 26
;# Function pattern *movqi3 used[0] = 19 total = 19
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[1] = 2 total = 2
	MODULE	init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_defaultMsgFilter:
	dc	H'0001
	.CODE
_initLocks:
; leaf function with empty stack frame
?LBB_initLocks:
	ld	AL,#H'0000
	st	AL,@_theCm+H'0006
	st	AL,@_theCm+H'000E
	st	AL,@_theCm+H'000F
	st	AL,@_theCm+H'0010
	st	AL,@_theCm+H'0011
	st	AL,@_theCm+H'0016
	st	AL,@_theCm+H'0017
	st	AL,@_theCm+H'0018
	st	AL,@_theCm+H'0019
	st	AL,@_theCm+H'001B
	st	AL,@_theCm+H'001C
	st	AL,@_theCm+H'0022
	st	AL,@_theCm+H'0023
?LBE_initLocks:
	rts
$_connectionGetCmTask:
; leaf function with empty stack frame
?LBB_connectionGetCmTask:
	ld	AL,#(_theCm)
?LBE_connectionGetCmTask:
	rts
$_connectionGetBtVersion:
; leaf function with empty stack frame
?LBB_connectionGetBtVersion:
	ld	AL,@_theCm+H'001A
?LBE_connectionGetBtVersion:
	rts
$_connectionGetAppTask:
; leaf function with empty stack frame
?LBB_connectionGetAppTask:
	ld	AL,@_theCm+H'0002
?LBE_connectionGetAppTask:
	rts
$_connectionGetMsgFilter:
; leaf function with empty stack frame
?LBB_connectionGetMsgFilter:
	ld	AL,@_theCm+H'0004
?LBE_connectionGetMsgFilter:
	rts
$_ConnectionInit:
	enterl	#4
?LBB_ConnectionInit:
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,#($_defaultMsgFilter)
	bsr	$_ConnectionInitEx3
?LBE_ConnectionInit:
	leavel	#4
$_ConnectionInitEx:
	enterl	#4
?LBB_ConnectionInitEx:
	ld	X,#H'0008
	st	X,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	bsr	$_ConnectionInitEx3
?LBE_ConnectionInitEx:
	leavel	#4
$_ConnectionInitEx2:
	enterl	#4
?LBB_ConnectionInitEx2:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	bsr	$_ConnectionInitEx3
?LBE_ConnectionInitEx2:
	leavel	#4
$_ConnectionInitEx3:
	enterl	#4
?LBB_ConnectionInitEx3:
	st	AL,@(H'0001,Y)
	cmp	AH,#H'0000
	bne	?L10
	ld	AH,#($_defaultMsgFilter)
?L10:
	st	AH,@_theCm+H'0004
	ld	AH,#hwrd($_connectionBluestackHandler)
	ld	AL,#lwrd($_connectionBluestackHandler)
	st	AH,@_theCm
	st	AL,@_theCm+1
	bsr	$_connectionGetCmTask
	bsr	$_MessageBlueStackTask
	bsr	_initLocks
	ld	AL,@_theCm+H'000A
	and	AL,#-H'0010
	st	AL,@_theCm+H'000A
	ld	AL,@(H'0001,Y)
	st	AL,@_theCm+H'0002
	ld	AL,#H'0008
	st	AL,@_theCm+H'000D
	ld	AL,@(H'0004,Y)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0007)
	bcc	?L12
	ld	AH,@(H'0004,Y)
	st	AH,@_theCm+H'000D
?L12:
	ld	AL,@(H'0005,Y)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L13
	ld	AL,@_theCm+H'0003
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	or	AH,#H'0002
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@_theCm+H'0003
?L13:
	ld	AL,@(H'0005,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@_theCm+H'0003
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	or	AH,#H'0006
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@_theCm+H'0003
?L14:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_MessageSend
?LBE_ConnectionInitEx3:
	leavel	#4
$_connectionHandleInternalInit:
	enterl	#6
?LBB_connectionHandleInternalInit:
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0009
	bne	?L16
	ld	AL,@_theCm+H'0003
	and	AL,#H'00FF
	or	AL,#H'0200
	st	AL,@_theCm+H'0003
	bra	(?L17)
?L16:
	ld	AH,@_theCm+H'0003
	ld	AL,@$XAP_AH
	and	AL,#-H'0100
	cmp	AL,#H'0100
	beq	?L17
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	or	AL,#H'0100
	st	AL,@_theCm+H'0003
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'2710
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#(_theCm)
	bsr	$_MessageSendLater
?L17:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0009
	bne	?L19
	ld	AL,@_theCm+H'000A
	and	AL,#-H'00F1
	or	AL,#H'0080
	st	AL,@_theCm+H'000A
	bsr	$_connectionDmInfoInit
	ld	AL,@_theCm+H'001A
	st	AL,@(0,Y)
	ld	AL,@_theCm+H'0002
	ld	AH,#H'0000
	bsr	$_connectionSendInitCfm
	bra	(?L15)
?L19:
	ld	X,@(H'0003,Y)
	cmp	X,#(H'0001+H'0009)
	bcc	?L15
	ld	X,@(?JTBASE33,X)
	brxl
	.SEG	CONST
?JTBASE33:
	.CODE
?L33:
	.SEG	CONST
	dc	lwrd(?L22-?L33)
	dc	lwrd(?L23-?L33)
	dc	lwrd(?L24-?L33)
	dc	lwrd(?L25-?L33)
	dc	lwrd(?L26-?L33)
	dc	lwrd(?L27-?L33)
	dc	lwrd(?L28-?L33)
	dc	lwrd(?L29-?L33)
	dc	lwrd(?L30-?L33)
	dc	lwrd(?L15-?L33)
	.CODE
?L22:
	bsr	$_connectionDmInit
	bra	(?L15)
?L23:
	bsr	$_connectionRfcInit
	bra	(?L15)
?L24:
	bsr	$_connectionL2capInit
	bra	(?L15)
?L25:
	bsr	$_connectionUdpInit
	bra	(?L15)
?L26:
	bsr	$_connectionTcpInit
	bra	(?L15)
?L27:
	ld	AL,#(_theCm+H'001B)
	bsr	$_connectionSdpInit
	bra	(?L15)
?L28:
	bsr	$_connectionVersionInit
	bra	(?L15)
?L29:
	ld	AL,@_theCm+H'0003
	and	AL,#H'00FF
	st	AL,@(0,Y)
	ld	AL,@_theCm+H'001A
	ld	AH,#(_theCm+H'0009)
	bsr	$_connectionSmInit
	bra	(?L15)
?L30:
	bsr	$_connectionAuthInit
	asl	#H'000C
	ld	AH,@_theCm+H'0009
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	st	AH,@_theCm+H'0009
?L15:
?LBE_connectionHandleInternalInit:
	leavel	#6
$_connectionSendInternalInitCfm:
	enterl	#8
?LBB_connectionSendInternalInitCfm:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_MessageSend
?LBE2:
?LBE_connectionSendInternalInitCfm:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_connectionSendInitCfm:
	enterl	#9
?LBB_connectionSendInitCfm:
	st	AH,@(H'0006,Y)
	ld	X,@(H'0009,Y)
?LBB3:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5000
	bsr	$_MessageSend
	tst	@(H'0006,Y)
	bne	?L38
	bsr	$_connectionGetCmTask
	ld	AH,#H'0000
	bsr	$_MessageCancelFirst
?L38:
?LBE3:
?LBE_connectionSendInitCfm:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	.SEG	VAR
_theCm:
	DS	36
	ENDMOD

;# Function pattern *movqi2 used[0] = 48 total = 48
;# Function pattern *movqi3 used[0] = 43 total = 43
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern *iorqi3 used[0] = 8 total = 8
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 1 total = 4
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	l2cap
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionL2capRegisterRequest:
	enterl	#8
?LBB_ConnectionL2capRegisterRequest:
?LBB2:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0048
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionL2capRegisterRequest:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_ConnectionL2capConnectRequest:
	enterl	#13
?LBB_ConnectionL2capConnectRequest:
	ld	X,@$XAP_AH
?LBB3:
?LBB4:
	ld	AH,#H'0009
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0008,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0009,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'000A,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'004A
	bsr	$_MessageSend
?LBE4:
?LBE3:
?LBE_ConnectionL2capConnectRequest:
	leavel	#13
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ConnectionL2capConnectResponse:
	enterl	#11
?LBB_ConnectionL2capConnectResponse:
?LBB5:
	ld	X,#H'0007
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0007,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'004B
	bsr	$_MessageSend
?LBE5:
?LBE_ConnectionL2capConnectResponse:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionL2capMapConnectionlessRequest:
	enterl	#12
?LBB_ConnectionL2capMapConnectionlessRequest:
	ld	X,@$XAP_AH
?LBB6:
?LBB7:
	ld	AH,#H'0008
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0008,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0009,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'004C
	bsr	$_MessageSend
?LBE7:
?LBE6:
?LBE_ConnectionL2capMapConnectionlessRequest:
	leavel	#12
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_ConnectionL2capMapConnectionlessResponse:
	enterl	#8
?LBB_ConnectionL2capMapConnectionlessResponse:
	ld	X,@$XAP_AL
?LBB8:
	cmp	AH,#H'0000
	beq	?L5
?LBB9:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'004D
	bsr	$_MessageSend
?L5:
?LBE9:
?LBE8:
?LBE_ConnectionL2capMapConnectionlessResponse:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_ConnectionL2capUnmapConnectionlessRequest:
	enterl	#8
?LBB_ConnectionL2capUnmapConnectionlessRequest:
	ld	AH,@$XAP_AL
?LBB10:
	cmp	AL,#H'0000
	beq	?L7
?LBB11:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'004E
	bsr	$_MessageSend
?L7:
?LBE11:
?LBE10:
?LBE_ConnectionL2capUnmapConnectionlessRequest:
	leavel	#8
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_ConnectionL2capDisconnectRequest:
	enterl	#8
?LBB_ConnectionL2capDisconnectRequest:
?LBB12:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'004F
	bsr	$_MessageSend
?LBE12:
?LBE_ConnectionL2capDisconnectRequest:
	leavel	#8
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_ConnectionL2capDisconnectResponse:
	enterl	#8
?LBB_ConnectionL2capDisconnectResponse:
?LBB13:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0050
	bsr	$_MessageSend
?LBE13:
?LBE_ConnectionL2capDisconnectResponse:
	leavel	#8
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
	ENDMOD

;# Function pattern *movqi2 used[0] = 55 total = 55
;# Function pattern *movqi3 used[0] = 38 total = 38
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+3 used[0] = 2 total = 2
	MODULE	sdp_register
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionRegisterServiceRecord:
	enterl	#13
?LBB_ConnectionRegisterServiceRecord:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AH,#H'0000
	beq	?L3
	tst	@(H'000D,Y)
	bne	?L2
?L3:
?LBB3:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'502E
	bra	(?L5)
?L2:
?LBE3:
?LBB4:
	ld	AL,#H'0003
	st	AL,@(H'0006,Y)
	st	X,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0009,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,#H'003E
?L5:
	bsr	$_MessageSend
?LBE4:
?LBE2:
?LBE_ConnectionRegisterServiceRecord:
	leavel	#13
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ConnectionUnregisterServiceRecord:
	enterl	#8
?LBB_ConnectionUnregisterServiceRecord:
	st	AL,@H'fff8
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
?LBB5:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'003F
	bsr	$_MessageSend
?LBE5:
?LBE_ConnectionUnregisterServiceRecord:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 used[3] = 1 total = 16
;# Function pattern *movqi3 used[0] = 9 total = 9
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	sdp_service_attr_search
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSdpServiceSearchAttributeRequest:
	enterl	#6
?LBB_ConnectionSdpServiceSearchAttributeRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
?LBB2:
?LBB3:
	add	AL,@(H'0009,Y)
	add	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	tst	@(H'0006,Y)
	bpl	?L2
	ld	AL,#H'0001
	ld	X,@(H'0003,Y)
	st	AL,@(H'0008,X)
	ld	AH,@(H'0006,Y)
	and	AH,#H'7FFF
	st	AH,@(H'0006,Y)
	bra	(?L3)
?L2:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0008,X)
?L3:
	ld	AH,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0005,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0006,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0007,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0009
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0007,Y)
	add	AL,#H'0009
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AH,#H'0046
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSdpServiceSearchAttributeRequest:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSdpServiceSearchAttributeRefRequest:
	enterl	#7
?LBB_ConnectionSdpServiceSearchAttributeRefRequest:
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	or	X,#-H'8000
	st	X,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?LBE_ConnectionSdpServiceSearchAttributeRefRequest:
	leavel	#7
	ENDMOD

;# Function pattern *movqi2 used[0] = 23 used[1] = 3 total = 26
;# Function pattern *movqi3 used[0] = 31 total = 31
;# Function pattern *addqi2 used[0] = 5 total = 5
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 1 total = 1
	MODULE	bluestack_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_connectionBluestackHandlerDm:
	enterl	#4
?LBB_connectionBluestackHandlerDm:
	st	AL,@(H'0001,Y)
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB2:
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	cmp	AH,#H'0002
	bne	?L2
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,#-H'02C0
	cmp	AL,#(H'0001+H'0008)
	bcc	?L3
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE13,X)
	brxl
	.SEG	CONST
?JTBASE13:
	.CODE
?L13:
	.SEG	CONST
	dc	lwrd(?L4-?L13)
	dc	lwrd(?L5-?L13)
	dc	lwrd(?L6-?L13)
	dc	lwrd(?L8-?L13)
	dc	lwrd(?L10-?L13)
	dc	lwrd(?L12-?L13)
	dc	lwrd(?L7-?L13)
	dc	lwrd(?L9-?L13)
	dc	lwrd(?L11-?L13)
	.CODE
?L4:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncRegisterCfm
	bra	(?L1)
?L5:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncUnregisterCfm
	bra	(?L1)
?L6:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSyncConnectCfm
	bra	(?L1)
?L7:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSyncConnectCompleteInd
	bra	(?L1)
?L8:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncConnectInd
	bra	(?L1)
?L9:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncDisconnectInd
	bra	(?L1)
?L10:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncDisconnectCfm
	bra	(?L1)
?L11:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncRenegotiateInd
	bra	(?L1)
?L12:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSyncRenegotiateCfm
	bra	(?L1)
?L3:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,#-H'0351
	cmp	AL,#(H'0001+H'0090)
	bcc	?L15
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE40,X)
	brxl
	.SEG	CONST
?JTBASE40:
	.CODE
?L40:
	.SEG	CONST
	dc	lwrd(?L37-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L38-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L39-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L20-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L35-?L40)
	dc	lwrd(?L21-?L40)
	dc	lwrd(?L22-?L40)
	dc	lwrd(?L23-?L40)
	dc	lwrd(?L1-?L40)
	dc	lwrd(?L25-?L40)
	dc	lwrd(?L26-?L40)
	dc	lwrd(?L28-?L40)
	dc	lwrd(?L29-?L40)
	dc	lwrd(?L30-?L40)
	dc	lwrd(?L31-?L40)
	dc	lwrd(?L32-?L40)
	dc	lwrd(?L33-?L40)
	dc	lwrd(?L34-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L1-?L40)
	dc	lwrd(?L1-?L40)
	dc	lwrd(?L18-?L40)
	dc	lwrd(?L1-?L40)
	dc	lwrd(?L36-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L15-?L40)
	dc	lwrd(?L27-?L40)
	.CODE
?L18:
	ld	AL,@H'fff8
	bsr	$_handleRegisterOutgoingCfm
	bra	(?L1)
?L20:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmAddDeviceCfmReady
	bra	(?L1)
?L21:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmPinReqInd
	bra	(?L1)
?L22:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmKeysInd
	bra	(?L1)
?L23:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmAuthoriseInd
	bra	(?L1)
?L25:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleEncryptCfm
	bra	(?L1)
?L26:
	ld	AL,@H'fff8
	bsr	$_connectionHandleEncryptionChange
	bra	(?L1)
?L27:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadLocalOobDataCfm
	bra	(?L1)
?L28:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmIoCapResInd
	bra	(?L1)
?L29:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmIoCapReqInd
	bra	(?L1)
?L30:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmSimplePairingCompleteInd
	bra	(?L1)
?L31:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmUserConfirmationReqInd
	bra	(?L1)
?L32:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmUserPasskeyReqInd
	bra	(?L1)
?L33:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmUserPasskeyNotificationInd
	bra	(?L1)
?L34:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmKeypressNotificationInd
	bra	(?L1)
?L35:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmKeyReqInd
	bra	(?L1)
?L36:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmSmSecurityCfm
	bra	(?L1)
?L37:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0022
	ld	AH,@H'fff8
	bsr	$_connectionHandleDmBleUpdateConnectionParametersCfm
	bra	(?L1)
?L38:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleAcceptConnectionParUpdateInd
	bra	(?L1)
?L39:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleAdvParamUpdateInd
	bra	(?L1)
?L15:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'041F
	beq	?L52
	cmp	AL,#(H'0001+H'041F)
	bcc	?L56
	cmp	AL,#H'0349
	beq	?L48
	cmp	AL,#(H'0001+H'0349)
	bcc	?L57
	cmp	AL,#H'0010
	beq	?L46
	cmp	AL,#H'001A
	beq	?L53
	bra	(?L42)
?L57:
	cmp	AL,#H'041B
	beq	?L50
	cmp	AL,#H'041D
	beq	?L51
	bra	(?L42)
?L56:
	cmp	AL,#H'0603
	beq	?L1
	cmp	AL,#(H'0001+H'0603)
	bcc	?L58
	cmp	AL,#H'0601
	beq	?L47
	cmp	AL,#H'0602
	beq	?L45
	bra	(?L42)
?L58:
	cmp	AL,#H'0604
	beq	?L44
	cmp	AL,#H'061A
	beq	?L49
	bra	(?L42)
?L44:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	bsr	$_connectionHandleExitPeriodicInquiryComplete
	bra	(?L1)
?L45:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	bsr	$_connectionHandleInquiryComplete
	bra	(?L1)
?L46:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleInquiryResult
	bra	(?L1)
?L47:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	bsr	$_connectionHandleInquiryComplete
	bra	(?L1)
?L48:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleRemoteNameComplete
	bra	(?L1)
?L49:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleRemoteNameCancelCfm
	bra	(?L1)
?L50:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadRemoteSupportedFeaturesCfm
	bra	(?L1)
?L51:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadRemoteVersionCfm
	bra	(?L1)
?L52:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadClkOffsetComplete
	bra	(?L1)
?L53:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleAPTExpiredInd
	bra	(?L1)
?L42:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0C2D
	beq	?L67
	cmp	AL,#(H'0001+H'0C2D)
	bcc	?L72
	cmp	AL,#H'0014
	beq	?L63
	cmp	AL,#(H'0001+H'0014)
	bcc	?L73
	cmp	AL,#H'0013
	beq	?L62
	bra	(?L59)
?L73:
	cmp	AL,#H'0015
	beq	?L65
	cmp	AL,#H'0016
	beq	?L68
	bra	(?L59)
?L72:
	cmp	AL,#H'0E45
	beq	?L61
	cmp	AL,#(H'0001+H'0E45)
	bcc	?L74
	cmp	AL,#H'0C53
	beq	?L69
	cmp	AL,#H'0E44
	beq	?L60
	bra	(?L59)
?L74:
	cmp	AL,#H'0E51
	beq	?L64
	cmp	AL,#H'0E58
	beq	?L66
	bra	(?L59)
?L60:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadInquiryModeComplete
	bra	(?L1)
?L61:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleWriteInquiryModeComplete
	bra	(?L1)
?L62:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleInquiryResultWithRssi
	bra	(?L1)
?L63:
	ld	AL,@H'fff8
	bsr	$_connectionHandleSniffSubRatingInd
	bra	(?L1)
?L64:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadEirDataComplete
	bra	(?L1)
?L65:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleExtendedInquiryResult
	bra	(?L1)
?L66:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadInquiryTxComplete
	bra	(?L1)
?L67:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0023
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadTxPowerComplete
	bra	(?L1)
?L68:
	ld	AL,@H'fff8
	bsr	$_connectionHandleLinkSupervisionTimeoutInd
	bra	(?L1)
?L69:
	ld	AL,@H'fff8
	bsr	$_connectionHandleEncryptionKeyRefreshInd
	bra	(?L1)
?L59:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0E14
	beq	?L79
	cmp	AL,#(H'0001+H'0E14)
	bcc	?L88
	cmp	AL,#H'034A
	beq	?L78
	cmp	AL,#(H'0001+H'034A)
	bcc	?L89
	cmp	AL,#H'0345
	beq	?L85
	bra	(?L2)
?L89:
	cmp	AL,#H'0807
	beq	?L76
	cmp	AL,#H'0809
	beq	?L77
	bra	(?L2)
?L88:
	cmp	AL,#H'1209
	beq	?L82
	cmp	AL,#(H'0001+H'1209)
	bcc	?L90
	cmp	AL,#H'0E23
	beq	?L80
	cmp	AL,#H'0E3A
	beq	?L81
	bra	(?L2)
?L90:
	cmp	AL,#H'1403
	beq	?L83
	cmp	AL,#H'1405
	beq	?L84
	bra	(?L2)
?L76:
	ld	AL,@H'fff8
	bsr	$_connectionHandleQosSetupCfm
	bra	(?L1)
?L77:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0021
	ld	AH,@H'fff8
	bsr	$_connectionHandleRoleDiscoveryComplete
	bra	(?L1)
?L78:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0021
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleDmSwitchRoleComplete
	bra	(?L1)
?L79:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleLocalNameComplete
	bra	(?L1)
?L80:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadClassOfDeviceComplete
	bra	(?L1)
?L81:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	ld	AH,@H'fff8
	bsr	$_connectionHandleWriteIacLapComplete
	bra	(?L1)
?L82:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadBdAddrComplete
	bra	(?L1)
?L83:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadLinkQualityComplete
	bra	(?L1)
?L84:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadRssiComplete
	bra	(?L1)
?L85:
	ld	AL,@H'fff8
	bsr	$_connectionLinkPolicyHandleWritePowerStatesCfm
	bra	(?L1)
?L2:
	cmp	AH,#H'0000
	beq	?L91
	cmp	AH,#H'0001
	beq	?L92
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0347
	beq	?L96
	cmp	AL,#(H'0001+H'0347)
	bcc	?L101
	cmp	AL,#H'0012
	beq	?L94
	cmp	AL,#H'0346
	beq	?L95
	bra	(?L92)
?L101:
	cmp	AL,#H'0348
	beq	?L97
	cmp	AL,#H'03D2
	beq	?L98
	bra	(?L92)
?L94:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleDmHciModeChangeEvent
	bra	(?L1)
?L95:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleDmAclOpenCfm
	bra	(?L1)
?L96:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleDmAclOpenInd
	bra	(?L1)
?L97:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleDmAclClosedInd
	bra	(?L1)
?L98:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionHandleSmBondingCfm
	bra	(?L1)
?L92:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#(H'0001+H'0E13)
	bcc	?L163
	cmp	AL,#H'0E12
	bcc	?L1
	cmp	AL,#H'03D4
	beq	?L109
	cmp	AL,#(H'0001+H'03D4)
	bcc	?L164
	cmp	AL,#(H'0001+H'0344)
	bcc	?L165
	cmp	AL,#H'0342
	bcc	?L1
	cmp	AL,#H'0340
	beq	?L105
	cmp	AL,#(H'0001+H'0340)
	bcc	?L103
	cmp	AL,#H'0019
	beq	?L125
	bra	(?L91)
?L165:
	cmp	AL,#H'03C0
	beq	?L111
	cmp	AL,#(H'0001+H'03C0)
	bcc	?L166
	cmp	AL,#H'0350
	beq	?L128
	bra	(?L91)
?L166:
	cmp	AL,#H'03C2
	beq	?L107
	cmp	AL,#H'03C3
	beq	?L1
	bra	(?L91)
?L164:
	cmp	AL,#H'0811
	beq	?L1
	cmp	AL,#(H'0001+H'0811)
	bcc	?L167
	cmp	AL,#H'0415
	beq	?L1
	cmp	AL,#(H'0001+H'0415)
	bcc	?L168
	cmp	AL,#H'03DB
	beq	?L135
	bra	(?L91)
?L168:
	cmp	AL,#H'041C
	beq	?L1
	cmp	AL,#H'0608
	beq	?L1
	bra	(?L91)
?L167:
	cmp	AL,#H'0C28
	beq	?L1
	cmp	AL,#(H'0001+H'0C28)
	bcc	?L169
	cmp	AL,#H'0A0F
	beq	?L1
	bra	(?L91)
?L169:
	cmp	AL,#H'0C37
	beq	?L1
	cmp	AL,#H'0E05
	beq	?L1
	bra	(?L91)
?L163:
	cmp	AL,#H'1A03
	beq	?L123
	cmp	AL,#(H'0001+H'1A03)
	bcc	?L170
	cmp	AL,#H'0E43
	beq	?L1
	cmp	AL,#(H'0001+H'0E43)
	bcc	?L171
	cmp	AL,#H'0E1C
	beq	?L1
	cmp	AL,#(H'0001+H'0E1C)
	bcc	?L172
	cmp	AL,#H'0E1A
	beq	?L1
	bra	(?L91)
?L172:
	cmp	AL,#H'0E1E
	beq	?L1
	cmp	AL,#H'0E24
	beq	?L1
	bra	(?L91)
?L171:
	cmp	AL,#H'0E59
	beq	?L1
	cmp	AL,#(H'0001+H'0E59)
	bcc	?L173
	cmp	AL,#H'0E47
	beq	?L1
	cmp	AL,#H'0E52
	beq	?L1
	bra	(?L91)
?L173:
	cmp	AL,#H'1201
	beq	?L104
	cmp	AL,#H'1203
	beq	?L1
	bra	(?L91)
?L170:
	cmp	AL,#H'220B
	beq	?L129
	cmp	AL,#(H'0001+H'220B)
	bcc	?L174
	cmp	AL,#H'2208
	beq	?L126
	cmp	AL,#(H'0001+H'2208)
	bcc	?L175
	cmp	AL,#H'2206
	beq	?L127
	bra	(?L91)
?L175:
	cmp	AL,#H'2209
	beq	?L130
	cmp	AL,#H'220A
	beq	?L1
	bra	(?L91)
?L174:
	cmp	AL,#H'2210
	beq	?L132
	cmp	AL,#(H'0001+H'2210)
	bcc	?L176
	cmp	AL,#H'220C
	beq	?L1
	cmp	AL,#H'220F
	beq	?L131
	bra	(?L91)
?L176:
	cmp	AL,#H'2211
	beq	?L133
	cmp	AL,#H'2212
	beq	?L134
	bra	(?L91)
?L103:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleSetBtVersionCfm
	bra	(?L1)
?L104:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_connectionHandleReadLocalVersionCfm
	bra	(?L1)
?L105:
	cmp	AH,#H'0001
	bne	?L91
	ld	AL,#H'0001
	bsr	$_connectionSendInternalInitCfm
	bra	(?L1)
?L107:
	cmp	AH,#H'0001
	bne	?L91
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmAddDeviceCfm
	bra	(?L1)
?L109:
	cmp	AH,#H'0003
	beq	?L91
	ld	AL,@(H'0001,Y)
	add	AL,#H'001B
	ld	AH,@H'fff8
	bsr	$_connectionHandleSmAccessInd
	bra	(?L1)
?L111:
	cmp	AH,#H'0001
	bne	?L112
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@H'fff8
	bsr	$_handleSecurityInitCfm
	bra	(?L113)
?L112:
	cmp	AH,#H'0002
	bne	?L114
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000A,X)
	and	AL,#H'000F
	cmp	AL,#H'0002
	beq	?L117
	cmp	AL,#(H'0001+H'0002)
	bcc	?L121
	cmp	AL,#H'0001
	beq	?L116
	bra	(?L119)
?L121:
	cmp	AL,#H'0003
	beq	?L113
	bra	(?L119)
?L116:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleSetSecurityModeCfm
	bra	(?L113)
?L117:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	ld	AH,@H'fff8
	bsr	$_connectionHandleConfigureSecurityCfm
	bra	(?L113)
?L119:
	bsr	$_Panic
	bra	(?L113)
?L114:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleDutSecurityDisabled
?L113:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000A,X)
	and	AL,#-H'0010
	st	AL,@(H'000A,X)
	bra	(?L1)
?L123:
	cmp	AH,#H'0003
	bne	?L91
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@H'fff8
	bsr	$_connectionHandleDutCfm
	bra	(?L1)
?L125:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleAdvertisingReportInd
	bra	(?L1)
?L126:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleSetAdvertisingDataCfm
	bra	(?L1)
?L127:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleSetAdvertisingParamsCfm
	bra	(?L1)
?L128:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmSetBleConnectionParametersCfm
	bra	(?L1)
?L129:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleSetScanParamatersCfm
	bra	(?L1)
?L130:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleSetScanResponseDataCfm
	bra	(?L1)
?L131:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleReadWhiteListSizeCfm
	bra	(?L1)
?L132:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleClearWhiteListCfm
	bra	(?L1)
?L133:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleAddDeviceToWhiteListCfm
	bra	(?L1)
?L134:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBleRemoveDeviceFromWhiteListCfm
	bra	(?L1)
?L135:
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmSmConfigureLocalAddressCfm
	bra	(?L1)
?L91:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'034F
	bne	?L1
	ld	AL,@H'fff8
	bsr	$_connectionHandleDmBadMessageInd
?L1:
?LBE2:
?LBE_connectionBluestackHandlerDm:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_connectionBluestackHandlerL2cap:
	enterl	#2
?LBB_connectionBluestackHandlerL2cap:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L265
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0547
	beq	?L277
	cmp	AL,#(H'0001+H'0547)
	bcc	?L284
	cmp	AL,#H'0542
	beq	?L270
	cmp	AL,#(H'0001+H'0542)
	bcc	?L285
	cmp	AL,#H'0540
	beq	?L268
	cmp	AL,#H'0541
	beq	?L271
	bra	(?L265)
?L285:
	cmp	AL,#H'0544
	beq	?L275
	cmp	AL,#H'0544
	bcs	?L274
	bra	(?L265)
?L284:
	cmp	AL,#H'0558
	beq	?L269
	cmp	AL,#(H'0001+H'0558)
	bcc	?L286
	cmp	AL,#H'0550
	beq	?L278
	cmp	AL,#(H'0001+H'0550)
	bcc	?L287
	cmp	AL,#H'054F
	beq	?L279
	bra	(?L265)
?L287:
	cmp	AL,#H'0557
	beq	?L281
	bra	(?L265)
?L286:
	cmp	AL,#H'0559
	beq	?L280
	add	AL,#-H'05FB
	cmp	AL,#(H'0001+H'0001)
	bcc	?L265
	bra	(?L273)
?L268:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capRegisterCfm
	bra	(?L265)
?L269:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capUnregisterCfm
	bra	(?L265)
?L270:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConnectInd
	bra	(?L265)
?L271:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConnectCfm
	bra	(?L265)
?L273:
	bsr	$_Panic
	bra	(?L265)
?L274:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capDisconnectInd
	bra	(?L265)
?L275:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capDisconnectCfm
	bra	(?L265)
?L277:
	ld	AL,#H'0022
	add	AL,@H'fff8
	bsr	$_connectionHandleL2capGetInfoCfm
	bra	(?L265)
?L278:
	ld	AL,#H'0022
	add	AL,@H'fff8
	bsr	$_connectionHandleL2capMapFixedCidCfm
	bra	(?L265)
?L279:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capMapFixedCidInd
	bra	(?L265)
?L280:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capUnmapFixedCidInd
	bra	(?L265)
?L281:
	ld	X,@$XAP_AH
	ld	AL,@(H'000B,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L265:
?LBE_connectionBluestackHandlerL2cap:
	leavel	#2
_connectionBluestackHandlerRfcomm:
	enterl	#2
?LBB_connectionBluestackHandlerRfcomm:
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L301
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	add	AL,#-H'0681
	cmp	AL,#(H'0001+H'0013)
	bcc	?L300
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE319,X)
	brxl
	.SEG	CONST
?JTBASE319:
	.CODE
?L319:
	.SEG	CONST
	dc	lwrd(?L303-?L319)
	dc	lwrd(?L304-?L319)
	dc	lwrd(?L300-?L319)
	dc	lwrd(?L300-?L319)
	dc	lwrd(?L305-?L319)
	dc	lwrd(?L307-?L319)
	dc	lwrd(?L306-?L319)
	dc	lwrd(?L308-?L319)
	dc	lwrd(?L309-?L319)
	dc	lwrd(?L300-?L319)
	dc	lwrd(?L300-?L319)
	dc	lwrd(?L310-?L319)
	dc	lwrd(?L311-?L319)
	dc	lwrd(?L312-?L319)
	dc	lwrd(?L313-?L319)
	dc	lwrd(?L314-?L319)
	dc	lwrd(?L315-?L319)
	dc	lwrd(?L300-?L319)
	dc	lwrd(?L300-?L319)
	dc	lwrd(?L300-?L319)
	.CODE
?L303:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommRegisterCfm
	bra	(?L300)
?L304:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommUnregisterCfm
	bra	(?L300)
?L305:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommClientConnectCfm
	bra	(?L300)
?L306:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommServerConnectCfm
	bra	(?L300)
?L307:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommConnectInd
	bra	(?L300)
?L308:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommDisconnectInd
	bra	(?L300)
?L309:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommDisconnectCfm
	bra	(?L300)
?L310:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommPortNegCfm
	bra	(?L300)
?L311:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommPortNegInd
	bra	(?L300)
?L312:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommControlCfm
	bra	(?L300)
?L313:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommControlInd
	bra	(?L300)
?L314:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommLineStatusInd
	bra	(?L300)
?L315:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommLineStatusCfm
	bra	(?L300)
?L301:
	ld	AL,@(H'0003,X)
	and	AL,#-H'0100
	cmp	AL,#H'0100
	bne	?L300
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0680
	bne	?L300
	ld	AL,#H'0002
	bsr	$_connectionSendInternalInitCfm
?L300:
?LBE_connectionBluestackHandlerRfcomm:
	leavel	#2
_connectionBluestackHandlerSdp:
	enterl	#2
?LBB_connectionBluestackHandlerSdp:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L326
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0743
	beq	?L331
	cmp	AL,#(H'0001+H'0743)
	bcc	?L338
	cmp	AL,#H'0741
	beq	?L334
	cmp	AL,#(H'0001+H'0741)
	bcc	?L335
	cmp	AL,#H'0740
	beq	?L333
	bra	(?L326)
?L338:
	cmp	AL,#H'0840
	beq	?L329
	cmp	AL,#(H'0001+H'0840)
	bcc	?L339
	cmp	AL,#H'0744
	beq	?L332
	bra	(?L326)
?L339:
	cmp	AL,#H'0841
	beq	?L330
	bra	(?L326)
?L329:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpRegisterCfm
	bra	(?L326)
?L330:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpUnregisterCfm
	bra	(?L326)
?L331:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpOpenSearchCfm
	bra	(?L326)
?L332:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpCloseSearchInd
	bra	(?L326)
?L333:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpServiceSearchCfm
	bra	(?L326)
?L334:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpAttributeSearchCfm
	bra	(?L326)
?L335:
	ld	AL,#H'001B
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpServiceSearchAttributeCfm
?L326:
?LBE_connectionBluestackHandlerSdp:
	leavel	#2
_connectionBluestackHandlerUninitialised:
	enterl	#2
?LBB_connectionBluestackHandlerUninitialised:
	cmp	AH,#H'0001
	bne	?L347
	ld	AL,#H'0000
	bsr	$_connectionHandleInternalInit
?L347:
?LBE_connectionBluestackHandlerUninitialised:
	leavel	#2
_connectionBluestackHandlerInitialising:
	enterl	#4
?LBB_connectionBluestackHandlerInitialising:
	st	AL,@(H'0001,Y)
	ld	X,@(H'0004,Y)
	cmp	AH,#H'0010
	beq	?L355
	cmp	AH,#(H'0001+H'0010)
	bcc	?L360
	cmp	AH,#H'0000
	beq	?L354
	cmp	AH,#H'0002
	beq	?L353
	bra	(?L351)
?L360:
	cmp	AH,#H'003A
	beq	?L357
	cmp	AH,#H'003C
	beq	?L356
	bra	(?L351)
?L353:
	ld	AL,@(0,X)
	bsr	$_connectionHandleInternalInit
	bra	(?L351)
?L354:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_MessageCancelFirst
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	st	AL,@(H'0003,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0001
	bsr	$_connectionSendInitCfm
	bra	(?L351)
?L355:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@$XAP_UXL
	bsr	$_handleSecurityInitReq
	bra	(?L351)
?L356:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@$XAP_UXL
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L351)
?L357:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0018
	ld	AH,@$XAP_UXL
	bsr	$_connectionHandleSetBtVersionReq
?L351:
?LBE_connectionBluestackHandlerInitialising:
	leavel	#4
_connectionBluestackHandlerTestMode:
	enterl	#3
?LBB_connectionBluestackHandlerTestMode:
	ld	X,@$XAP_AL
	cmp	AH,#H'002E
	beq	?L370
	cmp	AH,#(H'0001+H'002E)
	bcc	?L376
	cmp	AH,#H'0016
	beq	?L368
	cmp	AH,#(H'0001+H'0016)
	bcc	?L377
	cmp	AH,#H'0015
	beq	?L367
	bra	(?L365)
?L377:
	cmp	AH,#H'0017
	beq	?L369
	bra	(?L365)
?L376:
	cmp	AH,#H'003C
	beq	?L371
	cmp	AH,#(H'0001+H'003C)
	bcc	?L378
	cmp	AH,#H'003A
	beq	?L372
	bra	(?L365)
?L378:
	cmp	AH,#H'0069
	beq	?L373
	bra	(?L365)
?L367:
	add	AL,#H'0009
	ld	AH,@(H'0003,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L365)
?L368:
	add	AL,#H'0009
	ld	AH,#H'0018
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L365)
?L369:
	add	AL,#H'0009
	ld	AH,#H'0018
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L365)
?L370:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteScanEnableRequest
	bra	(?L365)
?L371:
	add	AL,#H'0018
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L365)
?L372:
	add	AL,#H'0018
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L365)
?L373:
	ld	AL,@(H'0002,X)
	ld	AH,#H'0001
	bsr	$_connectionSendDutCfmToClient
?L365:
?LBE_connectionBluestackHandlerTestMode:
	leavel	#3
_connectionBluestackHandlerReady:
	enterl	#3
?LBB_connectionBluestackHandlerReady:
	st	AL,@H'fff8
	ld	AL,#-H'0003
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'006A)
	bcc	?L386
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE494,X)
	brxl
	.SEG	CONST
?JTBASE494:
	.CODE
?L494:
	.SEG	CONST
	dc	lwrd(?L416-?L494)
	dc	lwrd(?L417-?L494)
	dc	lwrd(?L418-?L494)
	dc	lwrd(?L419-?L494)
	dc	lwrd(?L420-?L494)
	dc	lwrd(?L422-?L494)
	dc	lwrd(?L423-?L494)
	dc	lwrd(?L424-?L494)
	dc	lwrd(?L436-?L494)
	dc	lwrd(?L437-?L494)
	dc	lwrd(?L425-?L494)
	dc	lwrd(?L426-?L494)
	dc	lwrd(?L443-?L494)
	dc	lwrd(?L386-?L494)
	dc	lwrd(?L390-?L494)
	dc	lwrd(?L391-?L494)
	dc	lwrd(?L392-?L494)
	dc	lwrd(?L393-?L494)
	dc	lwrd(?L409-?L494)
	dc	lwrd(?L389-?L494)
	dc	lwrd(?L388-?L494)
	dc	lwrd(?L394-?L494)
	dc	lwrd(?L396-?L494)
	dc	lwrd(?L395-?L494)
	dc	lwrd(?L397-?L494)
	dc	lwrd(?L398-?L494)
	dc	lwrd(?L399-?L494)
	dc	lwrd(?L406-?L494)
	dc	lwrd(?L400-?L494)
	dc	lwrd(?L401-?L494)
	dc	lwrd(?L402-?L494)
	dc	lwrd(?L403-?L494)
	dc	lwrd(?L404-?L494)
	dc	lwrd(?L386-?L494)
	dc	lwrd(?L407-?L494)
	dc	lwrd(?L408-?L494)
	dc	lwrd(?L405-?L494)
	dc	lwrd(?L427-?L494)
	dc	lwrd(?L430-?L494)
	dc	lwrd(?L428-?L494)
	dc	lwrd(?L429-?L494)
	dc	lwrd(?L413-?L494)
	dc	lwrd(?L414-?L494)
	dc	lwrd(?L415-?L494)
	dc	lwrd(?L431-?L494)
	dc	lwrd(?L432-?L494)
	dc	lwrd(?L433-?L494)
	dc	lwrd(?L434-?L494)
	dc	lwrd(?L421-?L494)
	dc	lwrd(?L435-?L494)
	dc	lwrd(?L445-?L494)
	dc	lwrd(?L438-?L494)
	dc	lwrd(?L439-?L494)
	dc	lwrd(?L440-?L494)
	dc	lwrd(?L441-?L494)
	dc	lwrd(?L411-?L494)
	dc	lwrd(?L442-?L494)
	dc	lwrd(?L412-?L494)
	dc	lwrd(?L444-?L494)
	dc	lwrd(?L446-?L494)
	dc	lwrd(?L447-?L494)
	dc	lwrd(?L448-?L494)
	dc	lwrd(?L449-?L494)
	dc	lwrd(?L450-?L494)
	dc	lwrd(?L451-?L494)
	dc	lwrd(?L452-?L494)
	dc	lwrd(?L453-?L494)
	dc	lwrd(?L454-?L494)
	dc	lwrd(?L455-?L494)
	dc	lwrd(?L456-?L494)
	dc	lwrd(?L457-?L494)
	dc	lwrd(?L458-?L494)
	dc	lwrd(?L459-?L494)
	dc	lwrd(?L460-?L494)
	dc	lwrd(?L461-?L494)
	dc	lwrd(?L462-?L494)
	dc	lwrd(?L463-?L494)
	dc	lwrd(?L464-?L494)
	dc	lwrd(?L465-?L494)
	dc	lwrd(?L466-?L494)
	dc	lwrd(?L467-?L494)
	dc	lwrd(?L468-?L494)
	dc	lwrd(?L469-?L494)
	dc	lwrd(?L470-?L494)
	dc	lwrd(?L471-?L494)
	dc	lwrd(?L472-?L494)
	dc	lwrd(?L473-?L494)
	dc	lwrd(?L474-?L494)
	dc	lwrd(?L475-?L494)
	dc	lwrd(?L476-?L494)
	dc	lwrd(?L477-?L494)
	dc	lwrd(?L478-?L494)
	dc	lwrd(?L479-?L494)
	dc	lwrd(?L480-?L494)
	dc	lwrd(?L481-?L494)
	dc	lwrd(?L482-?L494)
	dc	lwrd(?L483-?L494)
	dc	lwrd(?L484-?L494)
	dc	lwrd(?L485-?L494)
	dc	lwrd(?L486-?L494)
	dc	lwrd(?L487-?L494)
	dc	lwrd(?L488-?L494)
	dc	lwrd(?L410-?L494)
	dc	lwrd(?L489-?L494)
	dc	lwrd(?L490-?L494)
	dc	lwrd(?L492-?L494)
	dc	lwrd(?L491-?L494)
	.CODE
?L388:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,#H'0018
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L386)
?L389:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,#H'0018
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L386)
?L390:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,#H'0009
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadLocalOobDataReq
	bra	(?L386)
?L391:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleAuthenticationReq
	bra	(?L386)
?L392:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,#H'0009
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleCancelAuthenticationReq
	bra	(?L386)
?L393:
	ld	AL,#H'0009
	add	AL,@H'fff8
	bsr	$_connectionHandleAuthenticationTimeout
	bra	(?L386)
?L394:
	ld	AL,@(H'0003,Y)
	bsr	$_handleRegisterReq
	bra	(?L386)
?L395:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUnRegisterReq
	bra	(?L386)
?L396:
	ld	AL,@(H'0003,Y)
	bsr	$_handleRegisterOutgoingReq
	bra	(?L386)
?L397:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUnRegisterOutgoingReq
	bra	(?L386)
?L398:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleEncryptReq
	bra	(?L386)
?L399:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleEncryptionKeyRefreshReq
	bra	(?L386)
?L400:
	ld	AL,@(H'0003,Y)
	bsr	$_handlePinRequestRes
	bra	(?L386)
?L401:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleIoCapabilityRequestRes
	bra	(?L386)
?L402:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUserConfirmationRequestRes
	bra	(?L386)
?L403:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUserPasskeyRequestRes
	bra	(?L386)
?L404:
	ld	AL,@(H'0003,Y)
	bsr	$_handleSendKeypressNotificationReq
	bra	(?L386)
?L405:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleSetTrustLevelReq
	bra	(?L386)
?L406:
	ld	AL,@(H'0003,Y)
	bsr	$_handleAuthoriseRes
	bra	(?L386)
?L407:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleAddAuthDeviceReq
	bra	(?L386)
?L408:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleGetAuthDeviceReq
	bra	(?L386)
?L409:
	ld	AL,#H'0009
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L386)
?L410:
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	or	AL,#H'0300
	st	AL,@(H'0003,X)
	ld	AL,#H'0018
	add	AL,@H'fff8
	bsr	$_connectionHandleEnterDutModeReq
	bra	(?L386)
?L411:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L386)
?L412:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L386)
?L413:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteInquiryScanTypeRequest
	bra	(?L386)
?L414:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWritePageScanTypeRequest
	bra	(?L386)
?L415:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteScanEnableRequest
	bra	(?L386)
?L416:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleInquiryStart
	bra	(?L386)
?L417:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleInquiryCancel
	bra	(?L386)
?L418:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteName
	bra	(?L386)
?L419:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteNameCancel
	bra	(?L386)
?L420:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLocalName
	bra	(?L386)
?L421:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleChangeLocalName
	bra	(?L386)
?L422:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleWriteInquiryTx
	bra	(?L386)
?L423:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadInquiryTx
	bra	(?L386)
?L424:
	ld	AL,#H'0023
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadTxPower
	bra	(?L386)
?L425:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleWriteEirDataRequest
	bra	(?L386)
?L426:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadEirDataRequest
	bra	(?L386)
?L427:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadClassOfDeviceRequest
	bra	(?L386)
?L428:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWritePageScanActivityRequest
	bra	(?L386)
?L429:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteInquiryScanActivityRequest
	bra	(?L386)
?L430:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteCodRequest
	bra	(?L386)
?L431:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteCachedPageModeRequest
	bra	(?L386)
?L432:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteCachedClkOffsetRequest
	bra	(?L386)
?L433:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleClearParamCacheRequest
	bra	(?L386)
?L434:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteFlushTimeoutRequest
	bra	(?L386)
?L435:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleWriteIacLapRequest
	bra	(?L386)
?L436:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleWriteInquiryModeRequest
	bra	(?L386)
?L437:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadInquiryModeRequest
	bra	(?L386)
?L438:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadAddrRequest
	bra	(?L386)
?L439:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLinkQualityRequest
	bra	(?L386)
?L440:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRssiRequest
	bra	(?L386)
?L441:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadclkOffsetRequest
	bra	(?L386)
?L442:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteSupportedFeaturesRequest
	bra	(?L386)
?L443:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionDmHandleAclDetach
	bra	(?L386)
?L444:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteVersionRequest
	bra	(?L386)
?L445:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSmChangeLinkKeyReq
	bra	(?L386)
?L446:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpRegisterRequest
	bra	(?L386)
?L447:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpUnregisterRequest
	bra	(?L386)
?L448:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpServerConfigMtu
	bra	(?L386)
?L449:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpClientConfigMtu
	bra	(?L386)
?L450:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpOpenSearchRequest
	bra	(?L386)
?L451:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpCloseSearchRequest
	bra	(?L386)
?L452:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpServiceSearchRequest
	bra	(?L386)
?L453:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpAttributeSearchRequest
	bra	(?L386)
?L454:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpServiceSearchAttrRequest
	bra	(?L386)
?L455:
	ld	AL,#H'001B
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpTerminatePrimitiveRequest
	bra	(?L386)
?L456:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capRegisterReq
	bra	(?L386)
?L457:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capUnregisterReq
	bra	(?L386)
?L458:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capConnectReq
	bra	(?L386)
?L459:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capConnectRes
	bra	(?L386)
?L460:
	ld	AL,#H'0022
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleL2capMapConnectionlessReq
	bra	(?L386)
?L461:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capMapConnectionlessRsp
	bra	(?L386)
?L462:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capUnmapConnectionlessReq
	bra	(?L386)
?L463:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capDisconnectReq
	bra	(?L386)
?L464:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capDisconnectRes
	bra	(?L386)
?L465:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommRegisterReq
	bra	(?L386)
?L466:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommUnregisterReq
	bra	(?L386)
?L467:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommConnectReq
	bra	(?L386)
?L468:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommConnectRes
	bra	(?L386)
?L469:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommDisconnectReq
	bra	(?L386)
?L470:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommDisconnectRsp
	bra	(?L386)
?L471:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommPortNegReq
	bra	(?L386)
?L472:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommPortNegRsp
	bra	(?L386)
?L473:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommControlReq
	bra	(?L386)
?L474:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommLineStatusReq
	bra	(?L386)
?L475:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncRegisterReq
	bra	(?L386)
?L476:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncUnregisterReq
	bra	(?L386)
?L477:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncConnectReq
	bra	(?L386)
?L478:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncConnectRes
	bra	(?L386)
?L479:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncDisconnectReq
	bra	(?L386)
?L480:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncRenegotiateReq
	bra	(?L386)
?L481:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncRegisterTimeoutInd
	bra	(?L386)
?L482:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncUnregisterTimeoutInd
	bra	(?L386)
?L483:
	ld	AL,#H'0021
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleLinkPolicySetRoleReq
	bra	(?L386)
?L484:
	ld	AL,#H'0021
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleLinkPolicyGetRoleReq
	bra	(?L386)
?L485:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSetLinkSupervisionTimeoutReq
	bra	(?L386)
?L486:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSetLinkPolicyReq
	bra	(?L386)
?L487:
	ld	AL,#H'0018
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSetSniffSubRatePolicyReq
	bra	(?L386)
?L488:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWritePageTimeout
	bra	(?L386)
?L489:
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0003,Y)
	bsr	$_connectionSmHandleGetAttributeReq
	bra	(?L386)
?L490:
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0003,Y)
	bsr	$_connectionSmHandleGetIndexedAttributeReq
	bra	(?L386)
?L491:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleInternalBleDmSecurityReq
	bra	(?L386)
?L492:
	ld	AL,#H'0022
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleDmBleConnectionParametersUpdateReq
?L386:
?LBE_connectionBluestackHandlerReady:
	leavel	#3
$_connectionBluestackHandler:
	enterl	#3
?LBB_connectionBluestackHandler:
	st	AH,@H'fff9
?LBB3:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	ld	AL,@H'fff9
	cmp	AL,#-H'7FFA
	beq	?L498
	cmp	AL,#(H'0001-H'7FFA)
	bcc	?L513
	cmp	AL,#-H'7FFC
	beq	?L497
	cmp	AL,#(H'0001-H'7FFC)
	bcc	?L499
	cmp	AL,#H'5031
	beq	?L495
	bra	(?L504)
?L513:
	cmp	AL,#-H'7FF9
	beq	?L500
	ld	AL,#H'7FF2
	add	AL,@H'fff9
	cmp	AL,#(H'0001+H'0001)
	bcc	?L504
	bra	(?L495)
?L497:
	ld	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerDm
	bra	(?L495)
?L498:
	ld	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerRfcomm
	bra	(?L495)
?L499:
	ld	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerL2cap
	bra	(?L495)
?L500:
	ld	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerSdp
	bra	(?L495)
?L504:
	cmp	AH,#H'0001
	beq	?L508
	cmp	AH,#H'0001
	bcs	?L507
	cmp	AH,#H'0002
	beq	?L506
	cmp	AH,#H'0003
	beq	?L509
	bra	(?L495)
?L506:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_connectionBluestackHandlerReady
	bra	(?L495)
?L507:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_connectionBluestackHandlerUninitialised
	bra	(?L495)
?L508:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_connectionBluestackHandlerInitialising
	bra	(?L495)
?L509:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_connectionBluestackHandlerTestMode
?L495:
?LBE3:
?LBE_connectionBluestackHandler:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 63 used[1] = 200 used[3] = 10 total = 273
;# Function pattern *movqi3 used[0] = 141 total = 141
;# Function pattern *addqi2 used[0] = 57 used[2] = 71 total = 128
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 285 total = 285
;# Function pattern *call1 used[0] = 246 total = 246
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern tablejump_1 used[0] = 4 total = 4
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+4 used[1] = 45 total = 45
;# Function pattern movstrqi+5 used[0] = 129 total = 129
	MODULE	common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionConvertHciStatus:
; leaf function with empty stack frame
?LBB_connectionConvertHciStatus:
	cmp	AL,#H'0035
	bcz	?L1
?L5:
	ld	AL,#H'0036
?L1:
?LBE_connectionConvertHciStatus:
	rts
$_connectionConvertAuthStatus:
	enterl	#2
?LBB_connectionConvertAuthStatus:
	cmp	AL,#(H'0001+H'0038)
	bcc	?L193
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE194,X)
	brxl
	.SEG	CONST
?JTBASE194:
	.CODE
?L194:
	.SEG	CONST
	dc	lwrd(?L169-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L176-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L179-?L194)
	dc	lwrd(?L182-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L185-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L193-?L194)
	dc	lwrd(?L188-?L194)
	dc	lwrd(?L191-?L194)
	.CODE
?L176:
	ld	AL,#H'0001
	bra	(?L169)
?L179:
	ld	AL,#H'0003
	bra	(?L169)
?L182:
	ld	AL,#H'0004
	bra	(?L169)
?L185:
	ld	AL,#H'0005
	bra	(?L169)
?L188:
	ld	AL,#H'0006
	bra	(?L169)
?L191:
	ld	AL,#H'0007
	bra	(?L169)
?L173:
?L193:
	ld	AL,#H'0002
?L169:
?LBE_connectionConvertAuthStatus:
	leavel	#2
$_connectionConvertHciVersion:
; leaf function with empty stack frame
?LBB_connectionConvertHciVersion:
	cmp	AL,#H'0008
	bcz	?L195
?L199:
	ld	AL,#H'0009
?L195:
?LBE_connectionConvertHciVersion:
	rts
$_connectionConvertInquiryMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertInquiryMode_t:
	cmp	AL,#H'0002
	bcz	?L228
?L232:
	ld	AL,#H'0000
?L228:
?LBE_connectionConvertInquiryMode_t:
	rts
$_connectionConvertInquiryMode:
; leaf function with empty stack frame
?LBB_connectionConvertInquiryMode:
	cmp	AL,#H'0002
	bcz	?L243
?L247:
	ld	AL,#H'0000
?L243:
?LBE_connectionConvertInquiryMode:
	rts
$_connectionConvertSdpOpenStatus:
	enterl	#2
?LBB_connectionConvertSdpOpenStatus:
	cmp	AL,#H'1800
	beq	?L265
	cmp	AL,#(H'0001+H'1800)
	bcc	?L278
	cmp	AL,#H'0000
	beq	?L258
	cmp	AL,#H'0801
	beq	?L274
	bra	(?L276)
?L278:
	cmp	AL,#H'1801
	beq	?L268
	cmp	AL,#H'1802
	beq	?L271
	bra	(?L276)
?L265:
	ld	AL,#H'0001
	bra	(?L258)
?L268:
	ld	AL,#H'0003
	bra	(?L258)
?L271:
	ld	AL,#H'0004
	bra	(?L258)
?L274:
	ld	AL,#H'0002
	bra	(?L258)
?L262:
?L276:
	bsr	$_connectionConvertL2capConnectStatus
?L258:
?LBE_connectionConvertSdpOpenStatus:
	leavel	#2
$_connectionConvertSdpSearchStatus:
	enterl	#2
?LBB_connectionConvertSdpSearchStatus:
	cmp	AL,#H'1809
	beq	?L308
	cmp	AL,#(H'0001+H'1809)
	bcc	?L333
	cmp	AL,#H'1805
	beq	?L296
	cmp	AL,#(H'0001+H'1805)
	bcc	?L334
	cmp	AL,#H'1803
	beq	?L290
	cmp	AL,#(H'0001+H'1803)
	bcc	?L293
	cmp	AL,#H'0000
	beq	?L283
	bra	(?L331)
?L334:
	cmp	AL,#H'1807
	beq	?L302
	cmp	AL,#(H'0001+H'1807)
	bcc	?L305
	bra	(?L299)
?L333:
	cmp	AL,#H'180D
	beq	?L320
	cmp	AL,#(H'0001+H'180D)
	bcc	?L335
	cmp	AL,#H'180B
	beq	?L314
	cmp	AL,#(H'0001+H'180B)
	bcc	?L317
	bra	(?L311)
?L335:
	cmp	AL,#H'180F
	beq	?L326
	cmp	AL,#H'180F
	bcs	?L323
	cmp	AL,#H'1810
	beq	?L329
	bra	(?L331)
?L290:
	ld	AL,#H'0001
	bra	(?L283)
?L293:
	ld	AL,#H'0002
	bra	(?L283)
?L296:
	ld	AL,#H'0003
	bra	(?L283)
?L299:
	ld	AL,#H'0004
	bra	(?L283)
?L302:
	ld	AL,#H'0005
	bra	(?L283)
?L305:
	ld	AL,#H'0006
	bra	(?L283)
?L308:
	ld	AL,#H'0007
	bra	(?L283)
?L311:
	ld	AL,#H'0008
	bra	(?L283)
?L314:
	ld	AL,#H'0009
	bra	(?L283)
?L317:
	ld	AL,#H'000A
	bra	(?L283)
?L320:
	ld	AL,#H'000B
	bra	(?L283)
?L323:
	ld	AL,#H'000C
	bra	(?L283)
?L326:
	ld	AL,#H'000D
	bra	(?L283)
?L329:
	ld	AL,#H'000E
	bra	(?L283)
?L287:
?L331:
	bsr	$_connectionConvertL2capConnectStatus
?L283:
?LBE_connectionConvertSdpSearchStatus:
	leavel	#2
$_connectionConvertRfcommDisconnectStatus:
; leaf function with empty stack frame
?LBB_connectionConvertRfcommDisconnectStatus:
	cmp	AL,#H'1006
	beq	?L358
	cmp	AL,#(H'0001+H'1006)
	bcc	?L388
	cmp	AL,#H'1003
	beq	?L364
	cmp	AL,#(H'0001+H'1003)
	bcc	?L389
	cmp	AL,#H'0000
	beq	?L345
	cmp	AL,#H'080C
	beq	?L382
	bra	(?L384)
?L389:
	cmp	AL,#H'1004
	beq	?L352
	cmp	AL,#H'1005
	beq	?L355
	bra	(?L384)
?L388:
	cmp	AL,#H'1009
	beq	?L370
	cmp	AL,#(H'0001+H'1009)
	bcc	?L390
	cmp	AL,#H'1007
	beq	?L361
	cmp	AL,#H'1008
	beq	?L367
	bra	(?L384)
?L390:
	cmp	AL,#H'100B
	beq	?L376
	cmp	AL,#H'100B
	bcs	?L373
	cmp	AL,#H'100C
	beq	?L379
	bra	(?L384)
?L352:
	ld	AL,#H'0001
	bra	(?L345)
?L355:
	ld	AL,#H'0002
	bra	(?L345)
?L358:
	ld	AL,#H'0003
	bra	(?L345)
?L361:
	ld	AL,#H'0004
	bra	(?L345)
?L364:
	ld	AL,#H'0005
	bra	(?L345)
?L367:
	ld	AL,#H'0006
	bra	(?L345)
?L370:
	ld	AL,#H'0007
	bra	(?L345)
?L373:
	ld	AL,#H'0008
	bra	(?L345)
?L376:
	ld	AL,#H'0009
	bra	(?L345)
?L379:
	ld	AL,#H'000A
	bra	(?L345)
?L382:
	ld	AL,#H'000C
	bra	(?L345)
?L349:
?L384:
	cmp	AL,#(H'0001+H'0FFF)
	bcc	?L385
	ld	AL,#H'000D
	bra	(?L345)
?L385:
	ld	AL,#H'000E
?L345:
?LBE_connectionConvertRfcommDisconnectStatus:
	rts
$_connectionConvertPageScanRepMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanRepMode_t:
	cmp	AL,#H'0002
	bcz	?L402
?L406:
	ld	AL,#H'0003
?L402:
?LBE_connectionConvertPageScanRepMode_t:
	rts
$_connectionConvertPageScanRepMode:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanRepMode:
	cmp	AL,#H'0002
	bcz	?L417
?L421:
	ld	AL,#H'0002
?L417:
?LBE_connectionConvertPageScanRepMode:
	rts
$_connectionConvertPageScanMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanMode_t:
	cmp	AL,#H'0003
	bcz	?L433
?L437:
	ld	AL,#H'0004
?L433:
?LBE_connectionConvertPageScanMode_t:
	rts
$_connectionConvertPageScanMode:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanMode:
	cmp	AL,#H'0003
	bcz	?L451
?L455:
	ld	AL,#H'0000
?L451:
?LBE_connectionConvertPageScanMode:
	rts
$_connectionConvertProtocolId_t:
; leaf function with empty stack frame
?LBB_connectionConvertProtocolId_t:
	cmp	AL,#H'0002
	bne	?L471
	ld	AL,#H'0000
	bra	(?L470)
?L471:
	cmp	AL,#H'0003
	bne	?L473
	ld	AL,#H'0001
	bra	(?L470)
?L473:
	cmp	AL,#H'0000
	bmi	?L470
	ld	AL,#H'0002
?L470:
?LBE_connectionConvertProtocolId_t:
	rts
$_connectionConvertProtocolId:
; leaf function with empty stack frame
?LBB_connectionConvertProtocolId:
	cmp	AL,#H'0000
	bne	?L480
	ld	AL,#H'0002
	bra	(?L479)
?L480:
	cmp	AL,#H'0001
	bne	?L479
	ld	AL,#H'0003
?L479:
?LBE_connectionConvertProtocolId:
	rts
$_connectionConvertHciScanEnable:
; leaf function with empty stack frame
?LBB_connectionConvertHciScanEnable:
	cmp	AL,#H'0003
	bcz	?L485
?L489:
	ld	AL,#H'0003
?L485:
?LBE_connectionConvertHciScanEnable:
	rts
$_connectionConvertSecurityMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertSecurityMode_t:
	cmp	AL,#H'0005
	beq	?L522
	cmp	AL,#H'0005
	bcs	?L503
	bra	(?L525)
?L522:
	ld	AL,#H'0080
	bra	(?L503)
?L507:
?L525:
	ld	AL,#H'0000
?L503:
?LBE_connectionConvertSecurityMode_t:
	rts
$_connectionConvertSspSecurityLevel_t:
	enterl	#2
?LBB_connectionConvertSspSecurityLevel_t:
	st	AL,@H'fffa
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@H'fff9
?LBB2:
	cmp	AH,#H'0000
	beq	?L530
	ld	AL,@H'fffa
	cmp	AL,#(H'0001+H'0005)
	bcc	?L538
	ld	X,@H'fffa
	ld	X,@(?JTBASE539,X)
	brxl
	.SEG	CONST
?JTBASE539:
	.CODE
?L539:
	.SEG	CONST
	dc	lwrd(?L532-?L539)
	dc	lwrd(?L533-?L539)
	dc	lwrd(?L538-?L539)
	dc	lwrd(?L535-?L539)
	dc	lwrd(?L536-?L539)
	dc	lwrd(?L538-?L539)
	.CODE
?L532:
	ld	AL,#H'0000
	bra	(?L531)
?L533:
	ld	AL,#H'0900
	bra	(?L531)
?L535:
	ld	AL,#H'1B36
	bra	(?L531)
?L536:
	ld	AL,#-H'00CA
	bra	(?L531)
?L538:
	ld	AL,#H'0936
?L531:
	tst	@H'fff8
	beq	?L540
	or	AL,#H'0009
?L540:
	tst	@H'fff9
	beq	?L542
	or	AL,#H'2400
	bra	(?L542)
?L530:
	ld	AL,@H'fffa
	cmp	AL,#(H'0001+H'0005)
	bcc	?L550
	ld	X,@H'fffa
	ld	X,@(?JTBASE551,X)
	brxl
	.SEG	CONST
?JTBASE551:
	.CODE
?L551:
	.SEG	CONST
	dc	lwrd(?L544-?L551)
	dc	lwrd(?L545-?L551)
	dc	lwrd(?L550-?L551)
	dc	lwrd(?L547-?L551)
	dc	lwrd(?L548-?L551)
	dc	lwrd(?L550-?L551)
	.CODE
?L544:
	ld	AL,#H'0000
	bra	(?L543)
?L545:
	ld	AL,#H'0100
	bra	(?L543)
?L547:
	ld	AL,#H'0306
	bra	(?L543)
?L548:
	ld	AL,#H'4706
	bra	(?L543)
?L550:
	ld	AL,#H'0106
?L543:
	tst	@H'fff8
	beq	?L552
	or	AL,#H'0001
?L552:
	tst	@H'fff9
	beq	?L542
	or	AL,#H'0400
?L542:
?LBE2:
?LBE_connectionConvertSspSecurityLevel_t:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_connectionConvertWriteAuthEnable_t:
	enterl	#2
?LBB_connectionConvertWriteAuthEnable_t:
	cmp	AL,#(H'0001+H'0005)
	bcc	?L575
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE576,X)
	brxl
	.SEG	CONST
?JTBASE576:
	.CODE
?L576:
	.SEG	CONST
	dc	lwrd(?L554-?L576)
	dc	lwrd(?L554-?L576)
	dc	lwrd(?L564-?L576)
	dc	lwrd(?L567-?L576)
	dc	lwrd(?L570-?L576)
	dc	lwrd(?L573-?L576)
	.CODE
?L564:
	ld	AL,#H'000F
	bra	(?L554)
?L567:
	ld	AL,#H'00FF
	bra	(?L554)
?L570:
	ld	AL,#H'0F0F
	bra	(?L554)
?L573:
	ld	AL,#-H'0001
	bra	(?L554)
?L558:
?L575:
	ld	AL,#H'0001
?L554:
?LBE_connectionConvertWriteAuthEnable_t:
	leavel	#2
$_connectionConvertAuthenticationRequirements:
; leaf function with empty stack frame
?LBB_connectionConvertAuthenticationRequirements:
	cmp	AL,#H'0005
	bcz	?L577
?L581:
	ld	AL,#H'0006
?L577:
?LBE_connectionConvertAuthenticationRequirements:
	rts
$_connectionConvertLinkKeyType_t:
	enterl	#2
?LBB_connectionConvertLinkKeyType_t:
	cmp	AL,#(H'0001+H'0007)
	bcc	?L628
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE629,X)
	brxl
	.SEG	CONST
?JTBASE629:
	.CODE
?L629:
	.SEG	CONST
	dc	lwrd(?L628-?L629)
	dc	lwrd(?L608-?L629)
	dc	lwrd(?L611-?L629)
	dc	lwrd(?L614-?L629)
	dc	lwrd(?L617-?L629)
	dc	lwrd(?L620-?L629)
	dc	lwrd(?L623-?L629)
	dc	lwrd(?L626-?L629)
	.CODE
?L608:
	ld	AL,#H'0000
	bra	(?L601)
?L611:
	ld	AL,#H'0003
	bra	(?L601)
?L614:
	ld	AL,#H'0004
	bra	(?L601)
?L617:
	ld	AL,#H'0005
	bra	(?L601)
?L620:
	ld	AL,#H'0006
	bra	(?L601)
?L623:
	ld	AL,#H'0007
	bra	(?L601)
?L626:
	ld	AL,#H'0008
	bra	(?L601)
?L605:
?L628:
	ld	AL,#H'00FE
?L601:
?LBE_connectionConvertLinkKeyType_t:
	leavel	#2
$_connectionConvertLinkKeyType:
; leaf function with empty stack frame
?LBB_connectionConvertLinkKeyType:
	cmp	AL,#H'0005
	beq	?L646
	cmp	AL,#(H'0001+H'0005)
	bcc	?L659
	cmp	AL,#H'0003
	beq	?L640
	cmp	AL,#(H'0001+H'0003)
	bcc	?L643
	cmp	AL,#H'0000
	beq	?L637
	bra	(?L657)
?L659:
	cmp	AL,#H'0007
	beq	?L652
	cmp	AL,#H'0007
	bcs	?L649
	cmp	AL,#H'0008
	beq	?L655
	bra	(?L657)
?L637:
	ld	AL,#H'0001
	bra	(?L630)
?L640:
	ld	AL,#H'0002
	bra	(?L630)
?L643:
	ld	AL,#H'0003
	bra	(?L630)
?L646:
	ld	AL,#H'0004
	bra	(?L630)
?L649:
	ld	AL,#H'0005
	bra	(?L630)
?L652:
	ld	AL,#H'0006
	bra	(?L630)
?L655:
	ld	AL,#H'0007
	bra	(?L630)
?L634:
?L657:
	ld	AL,#H'0000
?L630:
?LBE_connectionConvertLinkKeyType:
	rts
$_connectionConvertIoCapability_t:
; leaf function with empty stack frame
?LBB_connectionConvertIoCapability_t:
	cmp	AL,#H'0004
	bcz	?L665
?L669:
	ld	AL,#H'0003
?L665:
?LBE_connectionConvertIoCapability_t:
	rts
$_connectionConvertIoCapability:
; leaf function with empty stack frame
?LBB_connectionConvertIoCapability:
	cmp	AL,#H'0003
	bcz	?L686
?L690:
	ld	AL,#H'0003
?L686:
?LBE_connectionConvertIoCapability:
	rts
$_connectionConvertKeypressType_t:
; leaf function with empty stack frame
?LBB_connectionConvertKeypressType_t:
	cmp	AL,#H'0004
	bcz	?L704
?L708:
	ld	AL,#H'0001
?L704:
?LBE_connectionConvertKeypressType_t:
	rts
$_connectionConvertKeypressType:
; leaf function with empty stack frame
?LBB_connectionConvertKeypressType:
	cmp	AL,#H'0004
	bcz	?L725
?L729:
	ld	AL,#H'0001
?L725:
?LBE_connectionConvertKeypressType:
	rts
$_connectionConvertHciRole:
; leaf function with empty stack frame
?LBB_connectionConvertHciRole:
	cmp	AL,#H'0001
	bcz	?L746
?L750:
	ld	AL,#H'0002
?L746:
?LBE_connectionConvertHciRole:
	rts
$_connectionConvertHciRole_t:
; leaf function with empty stack frame
?LBB_connectionConvertHciRole_t:
	cmp	AL,#H'0001
	bcz	?L758
?L762:
	ld	AL,#H'0002
?L758:
?LBE_connectionConvertHciRole_t:
	rts
$_connectionConvertBtVersion:
; leaf function with empty stack frame
?LBB_connectionConvertBtVersion:
	cmp	AL,#H'0000
	beq	?L793
	cmp	AL,#H'0006
	bcz	?L771
?L775:
?L793:
	ld	AL,#H'0000
?L771:
?LBE_connectionConvertBtVersion:
	rts
$_connectionConvertSdsResult:
; leaf function with empty stack frame
?LBB_connectionConvertSdsResult:
	cmp	AL,#H'2001
	beq	?L806
	cmp	AL,#(H'0001+H'2001)
	bcc	?L819
	cmp	AL,#H'0000
	beq	?L796
	cmp	AL,#H'2000
	beq	?L803
	bra	(?L817)
?L819:
	cmp	AL,#H'2003
	beq	?L812
	cmp	AL,#H'2003
	bcs	?L809
	cmp	AL,#H'2004
	beq	?L815
	bra	(?L817)
?L803:
	ld	AL,#H'0001
	bra	(?L796)
?L806:
	ld	AL,#H'0002
	bra	(?L796)
?L809:
	ld	AL,#H'0003
	bra	(?L796)
?L812:
	ld	AL,#H'0004
	bra	(?L796)
?L815:
	ld	AL,#H'0005
	bra	(?L796)
?L800:
?L817:
	ld	AL,#H'0006
?L796:
?LBE_connectionConvertSdsResult:
	rts
$_connectionConvertL2capConnectStatus:
; leaf function with empty stack frame
?LBB_connectionConvertL2capConnectStatus:
	cmp	AL,#H'0807
	beq	?L830
	cmp	AL,#(H'0001+H'0807)
	bcc	?L855
	cmp	AL,#H'0005
	beq	?L852
	cmp	AL,#(H'0001+H'0005)
	bcc	?L856
	cmp	AL,#H'0002
	beq	?L834
	cmp	AL,#(H'0001+H'0002)
	bcc	?L857
	cmp	AL,#H'0000
	beq	?L827
	cmp	AL,#H'0001
	beq	?L828
	bra	(?L853)
?L857:
	cmp	AL,#H'0003
	beq	?L838
	cmp	AL,#H'0004
	beq	?L836
	bra	(?L853)
?L856:
	cmp	AL,#H'0802
	beq	?L852
	cmp	AL,#(H'0001+H'0802)
	bcc	?L858
	cmp	AL,#H'0800
	beq	?L852
	cmp	AL,#H'0801
	beq	?L829
	bra	(?L853)
?L858:
	cmp	AL,#H'0805
	beq	?L852
	cmp	AL,#(H'0001+H'0805)
	bcc	?L834
	cmp	AL,#H'0803
	beq	?L837
	bra	(?L853)
?L855:
	cmp	AL,#(H'0001+H'0818)
	bcc	?L859
	cmp	AL,#H'0817
	bcc	?L852
	cmp	AL,#(H'0001+H'080C)
	bcc	?L860
	cmp	AL,#H'080B
	bcc	?L852
	cmp	AL,#H'0809
	beq	?L852
	cmp	AL,#H'080A
	beq	?L834
	bra	(?L853)
?L860:
	cmp	AL,#H'0815
	beq	?L852
	bra	(?L853)
?L859:
	cmp	AL,#H'081B
	beq	?L852
	cmp	AL,#(H'0001+H'081B)
	bcc	?L861
	cmp	AL,#H'0819
	beq	?L834
	cmp	AL,#H'081A
	beq	?L835
	bra	(?L853)
?L861:
	cmp	AL,#H'081F
	beq	?L839
	cmp	AL,#(H'0001+H'081F)
	bcc	?L862
	cmp	AL,#H'081E
	beq	?L852
	bra	(?L853)
?L862:
	cmp	AL,#H'0820
	beq	?L852
	bra	(?L853)
?L827:
	ld	AL,#H'0000
	bra	(?L825)
?L828:
	ld	AL,#H'0001
	bra	(?L825)
?L829:
	ld	AL,#H'0080
	bra	(?L825)
?L830:
	ld	AL,#H'0087
	bra	(?L825)
?L834:
	ld	AL,#H'0083
	bra	(?L825)
?L835:
	ld	AL,#H'0086
	bra	(?L825)
?L836:
	ld	AL,#H'0082
	bra	(?L825)
?L837:
	ld	AL,#H'0088
	bra	(?L825)
?L838:
	ld	AL,#H'0084
	bra	(?L825)
?L839:
	ld	AL,#H'0085
	bra	(?L825)
?L852:
	ld	AL,#H'0089
	bra	(?L825)
?L853:
	ld	AL,#H'00FF
?L825:
?LBE_connectionConvertL2capConnectStatus:
	rts
$_connectionConvertL2capMapFixedCidResult:
; leaf function with empty stack frame
?LBB_connectionConvertL2capMapFixedCidResult:
	cmp	AL,#H'0804
	beq	?L898
	cmp	AL,#(H'0001+H'0804)
	bcc	?L914
	cmp	AL,#H'0801
	beq	?L904
	cmp	AL,#(H'0001+H'0801)
	bcc	?L915
	cmp	AL,#H'0000
	beq	?L885
	bra	(?L912)
?L915:
	cmp	AL,#H'0803
	beq	?L907
	bra	(?L912)
?L914:
	cmp	AL,#H'0816
	beq	?L901
	cmp	AL,#(H'0001+H'0816)
	bcc	?L916
	cmp	AL,#H'0805
	beq	?L895
	bra	(?L912)
?L916:
	cmp	AL,#H'0817
	beq	?L892
	cmp	AL,#H'081D
	beq	?L910
	bra	(?L912)
?L892:
	ld	AL,#H'0001
	bra	(?L885)
?L895:
	ld	AL,#H'0002
	bra	(?L885)
?L898:
	ld	AL,#H'0003
	bra	(?L885)
?L901:
	ld	AL,#H'0004
	bra	(?L885)
?L904:
	ld	AL,#H'0008
	bra	(?L885)
?L907:
	ld	AL,#H'0005
	bra	(?L885)
?L910:
	ld	AL,#H'0006
	bra	(?L885)
?L889:
?L912:
	ld	AL,#H'00FF
?L885:
?LBE_connectionConvertL2capMapFixedCidResult:
	rts
$_connectionConvertBleEventType:
; leaf function with empty stack frame
?LBB_connectionConvertBleEventType:
	cmp	AL,#H'0004
	bcz	?L924
?L928:
	ld	AL,#H'0005
?L924:
?LBE_connectionConvertBleEventType:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 4 total = 10
;# Function pattern *movqi3 used[0] = 122 total = 122
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 118 total = 118
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern tablejump_1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 11 used[1] = 4 total = 15
;# Function pattern movstrqi+4 used[1] = 31 total = 31
;# Function pattern movstrqi+5 used[0] = 86 total = 86
	MODULE	dm_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_setDefaultLinkPolicy:
	enterl	#7
?LBB_setDefaultLinkPolicy:
?LBB2:
	ld	X,#H'0003
	st	X,@(0,Y)
	ld	X,#H'0306
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_setDefaultLinkPolicy:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_connectionVersionInit:
	enterl	#2
?LBB_connectionVersionInit:
	bsr	$_connectionGetCmTask
	bsr	$_ConnectionReadLocalVersion
?LBE_connectionVersionInit:
	leavel	#2
$_connectionDmInit:
	enterl	#7
?LBB_connectionDmInit:
?LBB3:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0300
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_StreamConfigure
?LBE3:
?LBE_connectionDmInit:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_connectionDmInfoInit:
	enterl	#2
?LBB_connectionDmInfoInit:
	bsr	$_connectionGetBtVersion
	cmp	AL,#(H'0001+H'0001)
	bcc	?L5
	ld	AL,#H'0001
	ld	AH,#H'0001
	bra	(?L7)
?L5:
	ld	AL,#H'0005
	ld	AH,#H'0005
?L7:
	bsr	_setDefaultLinkPolicy
?LBE_connectionDmInfoInit:
	leavel	#2
$_connectionAuthInit:
	enterl	#3
?LBB_connectionAuthInit:
?LBB4:
	bsr	$_connectionInitTrustedDeviceList
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	bne	?L9
	ld	AL,#H'0009
	bsr	$_connectionSendInternalInitCfm
?L9:
?LBE4:
	ld	AL,@(0,Y)
?LBE_connectionAuthInit:
	leavel	#3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 7 used[1] = 1 total = 8
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	dm_security_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionSmInit:
	enterl	#10
?LBB_connectionSmInit:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'000A,Y)
?LBB2:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,#H'0187
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	cmp	X,#H'0004
	bcz	?L2
	ld	AL,@$XAP_AH
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0987
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0040
	st	AL,@(H'0005,Y)
	ld	AL,#H'0987
	or	AL,#H'0030
	st	AL,@(H'0003,Y)
?L2:
	ld	AH,#H'0002
	st	AH,@(H'0006,Y)
	cmp	X,#H'0001
	bcz	?L4
	ld	AL,@(H'0003,Y)
	or	AL,#H'0040
	st	AL,@(H'0003,Y)
	ld	AL,#H'0004
	st	AL,@(H'0004,Y)
	st	AH,@(H'0007,Y)
	bra	(?L5)
?L4:
	cmp	X,#H'0001
	bne	?L6
	ld	AL,@(H'0003,Y)
	or	AL,#H'0040
	st	AL,@(H'0003,Y)
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	X,@(H'0007,Y)
	bra	(?L5)
?L6:
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L5:
	ld	AH,@(H'0004,Y)
	and	AH,#H'00FF
	ld	X,@H'fff8
	ld	AL,@(0,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0007,Y)
	asl	#H'000A
	ld	AH,@(H'0001,X)
	and	AH,#H'03FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0010
	bsr	$_MessageSend
?LBE2:
?LBE_connectionSmInit:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 22 used[1] = 1 total = 23
;# Function pattern *movqi3 used[0] = 19 total = 19
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	l2cap_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionL2capInit:
	enterl	#2
?LBB_connectionL2capInit:
	ld	AL,#H'0003
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionL2capInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	rfc_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionRfcInit:
	enterl	#7
?LBB_connectionRfcInit:
?LBB2:
?LBB3:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0600
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE3:
?LBE2:
?LBE_connectionRfcInit:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	sdp_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionSdpInit:
	enterl	#2
?LBB_connectionSdpInit:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
	ld	AL,#H'0006
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionSdpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	tcp_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionTcpInit:
	enterl	#2
?LBB_connectionTcpInit:
	ld	AL,#H'0005
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionTcpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	udp_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionUdpInit:
	enterl	#2
?LBB_connectionUdpInit:
	ld	AL,#H'0004
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionUdpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	dm_bad_message_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionHandleDmBadMessageInd:
	enterl	#2
?LBB_connectionHandleDmBadMessageInd:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0006,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?LBE2:
?LBE_connectionHandleDmBadMessageInd:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_baseband_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionHandleReadClassOfDeviceRequest:
	enterl	#10
?LBB_connectionHandleReadClassOfDeviceRequest:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB2:
	tst	@(0,X)
	bne	?L2
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
?LBB3:
	ld	AH,#H'0002
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C23
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0028
	bsr	$_MessageSendConditionallyOnTask
?L1:
?LBE4:
?LBE2:
?LBE_connectionHandleReadClassOfDeviceRequest:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_connectionHandleReadClassOfDeviceComplete:
	enterl	#10
?LBB_connectionHandleReadClassOfDeviceComplete:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB5:
	tst	@(0,X)
	beq	?L4
?LBB6:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'500A
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
?L4:
?LBE6:
?LBE5:
?LBE_connectionHandleReadClassOfDeviceComplete:
	leavel	#10
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_connectionHandleWritePageScanActivityRequest:
	enterl	#7
?LBB_connectionHandleWritePageScanActivityRequest:
	ld	X,@$XAP_AL
?LBB7:
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AL,#H'0C1C
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE7:
?LBE_connectionHandleWritePageScanActivityRequest:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_connectionHandleWriteInquiryScanActivityRequest:
	enterl	#7
?LBB_connectionHandleWriteInquiryScanActivityRequest:
	ld	X,@$XAP_AL
?LBB8:
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AL,#H'0C1E
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE8:
?LBE_connectionHandleWriteInquiryScanActivityRequest:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_connectionHandleWriteInquiryScanTypeRequest:
	enterl	#7
?LBB_connectionHandleWriteInquiryScanTypeRequest:
	ld	X,@$XAP_AL
?LBB9:
	ld	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,#H'0C43
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE9:
?LBE_connectionHandleWriteInquiryScanTypeRequest:
	leavel	#7
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_connectionHandleWritePageScanTypeRequest:
	enterl	#7
?LBB_connectionHandleWritePageScanTypeRequest:
	ld	X,@$XAP_AL
?LBB10:
	ld	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,#H'0C47
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE10:
?LBE_connectionHandleWritePageScanTypeRequest:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_connectionHandleWriteScanEnableRequest:
	enterl	#7
?LBB_connectionHandleWriteScanEnableRequest:
	ld	X,@$XAP_AL
?LBB11:
	ld	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,#H'0312
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_connectionConvertHciScanEnable
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE11:
?LBE_connectionHandleWriteScanEnableRequest:
	leavel	#7
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_connectionHandleWriteCodRequest:
	enterl	#7
?LBB_connectionHandleWriteCodRequest:
	ld	X,@$XAP_AL
?LBB12:
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AL,#H'0C24
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE12:
?LBE_connectionHandleWriteCodRequest:
	leavel	#7
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_connectionHandleWriteCachedPageModeRequest:
	enterl	#11
?LBB_connectionHandleWriteCachedPageModeRequest:
	st	AL,@(H'0008,Y)
?LBB13:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0302
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0008,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertPageScanMode
	st	AL,@(H'0006,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0005,X)
	bsr	$_connectionConvertPageScanRepMode
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE13:
?LBE_connectionHandleWriteCachedPageModeRequest:
	leavel	#11
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_connectionHandleWriteCachedClkOffsetRequest:
	enterl	#10
?LBB_connectionHandleWriteCachedClkOffsetRequest:
	st	AL,@(H'0007,Y)
?LBB14:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,#H'0303
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0007,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE14:
?LBE_connectionHandleWriteCachedClkOffsetRequest:
	leavel	#10
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_connectionHandleClearParamCacheRequest:
	enterl	#8
?LBB_connectionHandleClearParamCacheRequest:
	ld	AH,@$XAP_AL
?LBB15:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0304
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE15:
?LBE_connectionHandleClearParamCacheRequest:
	leavel	#8
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_connectionHandleWriteFlushTimeoutRequest:
	enterl	#18
?LBB_connectionHandleWriteFlushTimeoutRequest:
	st	AL,@(H'000F,Y)
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L15
?LBB17:
	ld	AL,#H'0008
	st	AL,@(H'0006,Y)
	ld	AH,#H'0E28
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_VmSendDmPrim
?L15:
?LBE17:
?LBE16:
?LBE_connectionHandleWriteFlushTimeoutRequest:
	leavel	#18
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_connectionHandleChangeLocalName:
	enterl	#13
?LBB_connectionHandleChangeLocalName:
	ld	X,@$XAP_AL
?LBB18:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0C13
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#H'000A
	st	AL,@(H'0002,Y)
	tst	@(0,X)
	beq	?L18
	ld	AL,@(H'0001,X)
	bsr	$_VmGetHandleFromPointer
	bra	(?L27)
?L18:
	ld	AL,#H'0000
?L27:
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
?L24:
	ld	X,@$XAP_UY
	add	X,#H'0001
	add	X,@$XAP_AL
	st	AH,@(H'0002,X)
	add	AL,#H'0001
	cmp	AL,#H'0007
	bcz	?L24
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE18:
?LBE_connectionHandleChangeLocalName:
	leavel	#13
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
	ENDMOD

;# Function pattern *movqi2 used[0] = 77 used[1] = 2 total = 79
;# Function pattern *movqi3 used[0] = 59 total = 59
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi0 used[0] = 20 total = 20
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 3 total = 4
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	dm_ble_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionHandleDmBleAdvertisingReportInd:
	enterl	#6
?LBB_connectionHandleDmBleAdvertisingReportInd:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'000F,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000E,X)
	add	AL,#H'000E
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertBleEventType
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0010,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'000C,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000E,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'000D,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'000E
	ld	X,@(H'0001,Y)
	ld	AH,@(H'000E,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	AL,@(H'0002,Y)
	bsr	$_free
	bsr	$_connectionGetAppTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'505B
	bsr	$_MessageSend
?LBE2:
?LBE_connectionHandleDmBleAdvertisingReportInd:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_connectionHandleDmBleSetAdvertisingDataCfm:
	enterl	#8
?LBB_connectionHandleDmBleSetAdvertisingDataCfm:
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L3
	ld	AL,#H'0001
?L3:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'505C
	bsr	$_MessageSend
?LBE3:
?LBE_connectionHandleDmBleSetAdvertisingDataCfm:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_connectionHandleDmBleSetAdvertisingParamsCfm:
	enterl	#8
?LBB_connectionHandleDmBleSetAdvertisingParamsCfm:
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L5
	ld	AL,#H'0001
?L5:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'505D
	bsr	$_MessageSend
?LBE4:
?LBE_connectionHandleDmBleSetAdvertisingParamsCfm:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_connectionHandleDmSetBleConnectionParametersCfm:
	enterl	#8
?LBB_connectionHandleDmSetBleConnectionParametersCfm:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	tst	@(H'0002,X)
	bne	?L7
	ld	AL,#H'0000
	bra	(?L9)
?L7:
	ld	AL,#H'0001
?L9:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'505F
	bsr	$_MessageSend
?LBE5:
?LBE_connectionHandleDmSetBleConnectionParametersCfm:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_connectionHandleDmBleSetScanParamatersCfm:
	enterl	#8
?LBB_connectionHandleDmBleSetScanParamatersCfm:
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L11
	ld	AL,#H'0001
?L11:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5061
	bsr	$_MessageSend
?LBE6:
?LBE_connectionHandleDmBleSetScanParamatersCfm:
	leavel	#8
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_connectionHandleDmBleSetScanResponseDataCfm:
	enterl	#8
?LBB_connectionHandleDmBleSetScanResponseDataCfm:
	ld	X,@$XAP_AL
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L13
	ld	AL,#H'0001
?L13:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5062
	bsr	$_MessageSend
?LBE7:
?LBE_connectionHandleDmBleSetScanResponseDataCfm:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_connectionHandleDmBleReadWhiteListSizeCfm:
	enterl	#8
?LBB_connectionHandleDmBleReadWhiteListSizeCfm:
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L15
	ld	AL,#H'0001
?L15:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5063
	bsr	$_MessageSend
?LBE8:
?LBE_connectionHandleDmBleReadWhiteListSizeCfm:
	leavel	#8
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_connectionHandleDmBleClearWhiteListCfm:
	enterl	#8
?LBB_connectionHandleDmBleClearWhiteListCfm:
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L17
	ld	AL,#H'0001
?L17:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5064
	bsr	$_MessageSend
?LBE9:
?LBE_connectionHandleDmBleClearWhiteListCfm:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_connectionHandleDmBleAddDeviceToWhiteListCfm:
	enterl	#8
?LBB_connectionHandleDmBleAddDeviceToWhiteListCfm:
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L19
	ld	AL,#H'0001
?L19:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5065
	bsr	$_MessageSend
?LBE10:
?LBE_connectionHandleDmBleAddDeviceToWhiteListCfm:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_connectionHandleDmBleRemoveDeviceFromWhiteListCfm:
	enterl	#8
?LBB_connectionHandleDmBleRemoveDeviceFromWhiteListCfm:
	ld	X,@$XAP_AL
?LBB11:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L21
	ld	AL,#H'0001
?L21:
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5066
	bsr	$_MessageSend
?LBE11:
?LBE_connectionHandleDmBleRemoveDeviceFromWhiteListCfm:
	leavel	#8
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
	ENDMOD

;# Function pattern *movqi2 used[0] = 49 used[1] = 2 total = 51
;# Function pattern *movqi3 used[0] = 59 total = 59
;# Function pattern *addqi0 used[0] = 9 total = 9
;# Function pattern *addqi2 used[0] = 6 total = 6
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern movstrqi+3 used[1] = 9 total = 9
	MODULE	dm_ble_random_address
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionDmBleConfigureLocalAddressReq:
	enterl	#13
?LBB_ConnectionDmBleConfigureLocalAddressReq:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB2:
	bsr	$_connectionGetBtVersion
	cmp	AL,#H'0003
	bcz	?L1
	ld	AL,@(H'0009,Y)
	cmp	AL,#(H'0001+H'0003)
	bcc	?L1
?LBB3:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0397
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0001
	beq	?L8
	cmp	AL,#H'0001
	bcs	?L7
	cmp	AL,#H'0002
	beq	?L9
	cmp	AL,#H'0003
	beq	?L10
	bra	(?L6)
?L7:
	ld	AL,#H'0000
	bra	(?L15)
?L8:
	ld	AL,#H'0001
	bra	(?L15)
?L9:
	ld	AL,#H'0002
	bra	(?L15)
?L10:
	ld	AL,#H'0003
?L15:
	st	AL,@(H'0002,Y)
?L6:
	tst	@(H'000A,Y)
	beq	?L13
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	add	AL,#H'0002
	ld	AH,@(H'000A,Y)
	bsr	$_BdaddrConvertTypedVmToBluestack
	bra	(?L14)
?L13:
	ld	AL,#H'00FF
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
?L14:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L1:
?LBE3:
?LBE2:
?LBE_ConnectionDmBleConfigureLocalAddressReq:
	leavel	#13
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_connectionHandleDmSmConfigureLocalAddressCfm:
	enterl	#11
?LBB_connectionHandleDmSmConfigureLocalAddressCfm:
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	tst	@(H'0002,X)
	beq	?L22
	ld	AL,#H'0001
?L22:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L25
	cmp	AL,#H'0001
	bcs	?L24
	cmp	AL,#H'0002
	beq	?L26
	cmp	AL,#H'0003
	beq	?L27
	bra	(?L23)
?L24:
	ld	AL,#H'0000
	bra	(?L30)
?L25:
	ld	AL,#H'0001
	bra	(?L30)
?L26:
	ld	AL,#H'0002
	bra	(?L30)
?L27:
	ld	AL,#H'0003
?L30:
	st	AL,@(H'0003,Y)
?L23:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0002
	ld	AH,#H'0004
	add	AH,@$XAP_UXL
	bsr	$_BdaddrConvertTypedBluestackToVm
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5067
	bsr	$_MessageSend
?LBE4:
?LBE_connectionHandleDmSmConfigureLocalAddressCfm:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 16 used[1] = 1 total = 17
;# Function pattern *movqi3 used[0] = 20 total = 20
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 2 used[2] = 1 total = 3
;# Function pattern jump used[0] = 9 total = 9
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[1] = 2 total = 2
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 9 total = 9
	MODULE	dm_dut_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionSendDutCfmToClient:
	enterl	#8
?LBB_connectionSendDutCfmToClient:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'5050
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_connectionSendDutCfmToClient:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_connectionHandleEnterDutModeReq:
	enterl	#9
?LBB_connectionHandleEnterDutModeReq:
	st	AL,@(H'0006,Y)
?LBB4:
	ld	AL,#H'0003
	bsr	$_ConnectionWriteScanEnable
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L4
	bsr	$_connectionGetCmTask
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L3)
?L4:
?LBB5:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AL,#H'1803
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendDmPrim
?L3:
?LBE5:
?LBE4:
?LBE_connectionHandleEnterDutModeReq:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_connectionHandleDutSecurityDisabled:
	enterl	#7
?LBB_connectionHandleDutSecurityDisabled:
	ld	X,@$XAP_AH
?LBB6:
	tst	@(H'0007,X)
	bne	?L7
?LBB7:
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,#H'1803
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE7:
	bra	(?L6)
?L7:
	ld	AH,#H'0001
	bsr	$_connectionSendDutCfmToClient
?L6:
?LBE6:
?LBE_connectionHandleDutSecurityDisabled:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_connectionHandleDutCfm:
	enterl	#2
?LBB_connectionHandleDutCfm:
	ld	X,@$XAP_AH
	tst	@(H'0002,X)
	bne	?L10
	ld	AH,#H'0000
	bra	(?L12)
?L10:
	ld	AH,#H'0001
?L12:
	bsr	$_connectionSendDutCfmToClient
?LBE_connectionHandleDutCfm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 total = 15
;# Function pattern *movqi3 used[0] = 13 total = 13
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 2 total = 3
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	dm_info_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendLinkQualityCfm:
	enterl	#8
?LBB_sendLinkQualityCfm:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'5012
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendLinkQualityCfm:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sendRssiCfm:
	enterl	#8
?LBB_sendRssiCfm:
	ld	X,@$XAP_AL
?LBB4:
	cmp	AL,#H'0000
	beq	?L3
?LBB5:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'5013
	bsr	$_MessageSend
?L3:
?LBE5:
?LBE4:
?LBE_sendRssiCfm:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_sendRssiBdaddrCfm:
	enterl	#13
?LBB_sendRssiBdaddrCfm:
	st	AL,@(H'000A,Y)
	ld	X,@(H'000D,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L5
?LBB7:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000E,Y)
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'5014
	bsr	$_MessageSend
?L5:
?LBE7:
?LBE6:
?LBE_sendRssiBdaddrCfm:
	leavel	#13
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_sendClockOffsetCfm:
	enterl	#8
?LBB_sendClockOffsetCfm:
	st	AL,@H'fff8
	ld	X,@(H'0009,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L7
?LBB9:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'5018
	bsr	$_MessageSend
?L7:
?LBE9:
?LBE8:
?LBE_sendClockOffsetCfm:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_sendRemoteSupportedFeaturesCfm:
	enterl	#11
?LBB_sendRemoteSupportedFeaturesCfm:
	st	AL,@(H'0008,Y)
	ld	X,@(H'000C,Y)
?LBB10:
	cmp	AL,#H'0000
	beq	?L9
?LBB11:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	X,@(H'0003,Y)
	tst	@(H'000B,Y)
	beq	?L11
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	bra	(?L12)
?L11:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L12:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5015
	bsr	$_MessageSend
?L9:
?LBE11:
?LBE10:
?LBE_sendRemoteSupportedFeaturesCfm:
	leavel	#11
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_connectionHandleReadAddrRequest:
	enterl	#10
?LBB_connectionHandleReadAddrRequest:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB12:
	tst	@(0,X)
	bne	?L14
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
?LBB13:
	ld	AH,#H'0002
	st	AH,@(H'0002,Y)
	ld	AL,#H'1009
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE13:
	bra	(?L13)
?L14:
?LBB14:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0036
	bsr	$_MessageSendConditionallyOnTask
?L13:
?LBE14:
?LBE12:
?LBE_connectionHandleReadAddrRequest:
	leavel	#10
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_connectionHandleReadBdAddrComplete:
	enterl	#11
?LBB_connectionHandleReadBdAddrComplete:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB15:
	tst	@(0,X)
	beq	?L16
?LBB16:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5011
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?L16:
?LBE16:
?LBE15:
?LBE_connectionHandleReadBdAddrComplete:
	leavel	#11
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_connectionHandleReadLinkQualityRequest:
	enterl	#20
?LBB_connectionHandleReadLinkQualityRequest:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB17:
	tst	@(0,X)
	bne	?L19
	ld	X,@$XAP_AH
?LBB18:
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L20
?LBB19:
	ld	AH,#H'0007
	st	AH,@(H'0008,Y)
	ld	AL,#H'1603
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_VmSendDmPrim
	ld	X,@(H'0011,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0010,Y)
	st	AL,@(0,X)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0010,Y)
	st	AL,@(H'0001,X)
?LBE19:
	bra	(?L18)
?L20:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
	bsr	_sendLinkQualityCfm
?LBE18:
	bra	(?L18)
?L19:
?LBB20:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0037
	bsr	$_MessageSendConditionallyOnTask
?L18:
?LBE20:
?LBE17:
?LBE_connectionHandleReadLinkQualityRequest:
	leavel	#20
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_connectionHandleReadLinkQualityComplete:
	enterl	#6
?LBB_connectionHandleReadLinkQualityComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	_sendLinkQualityCfm
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?LBE_connectionHandleReadLinkQualityComplete:
	leavel	#6
$_connectionHandleReadRssiRequest:
	enterl	#22
?LBB_connectionHandleReadRssiRequest:
	st	AL,@(H'0012,Y)
	st	AH,@(H'0013,Y)
	ld	X,@$XAP_AL
?LBB21:
	tst	@(0,X)
	bne	?L25
	ld	X,@$XAP_AH
?LBB22:
	tst	@(H'0001,X)
	beq	?L26
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L26
	st	AL,@(0,Y)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
	bsr	_sendRssiCfm
	bra	(?L24)
?L26:
?LBB23:
	ld	AH,#H'0009
	st	AH,@(H'0008,Y)
	ld	AL,#H'1605
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	X,@(H'0013,Y)
	tst	@(H'0001,X)
	beq	?L28
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bra	(?L31)
?L28:
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	add	AL,#H'0003
	ld	AH,@(H'0013,Y)
	add	AH,#H'0002
?L31:
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_VmSendDmPrim
	ld	X,@(H'0013,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0012,Y)
	st	AL,@(0,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0012,Y)
	st	AL,@(H'0001,X)
?LBE23:
?LBE22:
	bra	(?L24)
?L25:
?LBB24:
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'0013,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0012,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0038
	bsr	$_MessageSendConditionallyOnTask
?L24:
?LBE24:
?LBE21:
?LBE_connectionHandleReadRssiRequest:
	leavel	#22
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_connectionHandleReadRssiComplete:
	enterl	#6
?LBB_connectionHandleReadRssiComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	tst	@(H'0001,X)
	beq	?L33
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	_sendRssiCfm
	bra	(?L34)
?L33:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	_sendRssiBdaddrCfm
?L34:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?LBE_connectionHandleReadRssiComplete:
	leavel	#6
$_connectionHandleReadclkOffsetRequest:
	enterl	#20
?LBB_connectionHandleReadclkOffsetRequest:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB25:
	tst	@(0,X)
	bne	?L36
	ld	X,@$XAP_AH
?LBB26:
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L37
?LBB27:
	ld	AH,#H'0007
	st	AH,@(H'0008,Y)
	ld	AL,#H'061F
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_VmSendDmPrim
	ld	X,@(H'0011,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0010,Y)
	st	AL,@(0,X)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0010,Y)
	st	AL,@(H'0001,X)
?LBE27:
	bra	(?L35)
?L37:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
	bsr	_sendClockOffsetCfm
?LBE26:
	bra	(?L35)
?L36:
?LBB28:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0039
	bsr	$_MessageSendConditionallyOnTask
?L35:
?LBE28:
?LBE25:
?LBE_connectionHandleReadclkOffsetRequest:
	leavel	#20
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_connectionHandleReadClkOffsetComplete:
	enterl	#6
?LBB_connectionHandleReadClkOffsetComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	_sendClockOffsetCfm
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?LBE_connectionHandleReadClkOffsetComplete:
	leavel	#6
$_connectionHandleReadRemoteSupportedFeaturesRequest:
	enterl	#20
?LBB_connectionHandleReadRemoteSupportedFeaturesRequest:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB29:
	tst	@(0,X)
	bne	?L42
	ld	X,@$XAP_AH
?LBB30:
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L43
?LBB31:
	ld	AH,#H'0007
	st	AH,@(H'0008,Y)
	ld	AL,#H'061B
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_VmSendDmPrim
	ld	X,@(H'0011,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0010,Y)
	st	AL,@(0,X)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0010,Y)
	st	AL,@(H'0001,X)
?LBE31:
	bra	(?L41)
?L43:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
	bsr	_sendRemoteSupportedFeaturesCfm
?LBE30:
	bra	(?L41)
?L42:
?LBB32:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'003B
	bsr	$_MessageSendConditionallyOnTask
?L41:
?LBE32:
?LBE29:
?LBE_connectionHandleReadRemoteSupportedFeaturesRequest:
	leavel	#20
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
$_connectionHandleReadRemoteSupportedFeaturesCfm:
	enterl	#6
?LBB_connectionHandleReadRemoteSupportedFeaturesCfm:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L47
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	_sendRemoteSupportedFeaturesCfm
?L47:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?LBE_connectionHandleReadRemoteSupportedFeaturesCfm:
	leavel	#6
$_connectionHandleReadLocalVersionRequest:
	enterl	#16
?LBB_connectionHandleReadLocalVersionRequest:
	st	AL,@(H'000C,Y)
	st	AH,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB33:
	tst	@(0,X)
	bne	?L49
?LBB34:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AH,#H'1001
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000C,Y)
	st	AL,@(0,X)
?LBE34:
	bra	(?L48)
?L49:
?LBB35:
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003C
	bsr	$_MessageSendConditionallyOnTask
?L48:
?LBE35:
?LBE33:
?LBE_connectionHandleReadLocalVersionRequest:
	leavel	#16
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_connectionHandleReadLocalVersionCfm:
	enterl	#17
?LBB_connectionHandleReadLocalVersionCfm:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB36:
	bsr	$_connectionGetCmTask
	ld	X,@(H'000D,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	bne	?L52
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0002
	bcz	?L53
?LBB37:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	bsr	$_connectionGetCmTask
	st	AL,@(H'0002,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0003,X)
	add	AL,#-H'0003
	cmp	AL,#(H'0001+H'0005)
	bcc	?L61
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE62,X)
	brxl
	.SEG	CONST
?JTBASE62:
	.CODE
?L62:
	.SEG	CONST
	dc	lwrd(?L55-?L62)
	dc	lwrd(?L56-?L62)
	dc	lwrd(?L57-?L62)
	dc	lwrd(?L58-?L62)
	dc	lwrd(?L59-?L62)
	dc	lwrd(?L61-?L62)
	.CODE
?L55:
	ld	AL,#H'0001
	bra	(?L66)
?L56:
	ld	AL,#H'0002
	bra	(?L66)
?L57:
	ld	AL,#H'0003
	bra	(?L66)
?L58:
	ld	AL,#H'0004
	bra	(?L66)
?L59:
	ld	AL,#H'0005
	bra	(?L66)
?L61:
	ld	AL,#H'0006
?L66:
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'003A
	bra	(?L67)
?L53:
?LBE37:
	ld	AL,#H'0000
	ld	X,@(H'000D,Y)
	st	AL,@(H'0002,X)
	ld	AL,#H'0007
	bsr	$_connectionSendInternalInitCfm
	bra	(?L64)
?L52:
	ld	X,@(H'000D,Y)
	tst	@(0,X)
	beq	?L64
?LBB38:
	ld	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertHciVersion
	st	AL,@(H'0008,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0007,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5016
?L67:
	bsr	$_MessageSend
?L64:
?LBE38:
	ld	AL,#H'0000
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?LBE36:
?LBE_connectionHandleReadLocalVersionCfm:
	leavel	#17
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
$_connectionHandleReadRemoteVersionRequest:
	enterl	#24
?LBB_connectionHandleReadRemoteVersionRequest:
	st	AL,@(H'0014,Y)
	st	AH,@(H'0015,Y)
	ld	X,@$XAP_AL
?LBB39:
	tst	@(0,X)
	bne	?L71
?LBB40:
	ld	AH,#H'0009
	st	AH,@(H'0002,Y)
	ld	AL,#H'061D
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0015,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
	ld	X,@(H'0015,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0014,Y)
	st	AL,@(0,X)
?LBE40:
	bra	(?L70)
?L71:
?LBB41:
	ld	AL,#H'0007
	st	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000D
	ld	AH,@(H'0015,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'000D
	st	AH,@(0,Y)
	ld	X,@(H'0014,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'003D
	bsr	$_MessageSendConditionallyOnTask
?L70:
?LBE41:
?LBE39:
?LBE_connectionHandleReadRemoteVersionRequest:
	leavel	#24
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_connectionHandleReadRemoteVersionCfm:
	enterl	#10
?LBB_connectionHandleReadRemoteVersionCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB42:
	tst	@(0,X)
	beq	?L73
?LBB43:
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5017
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?L73:
?LBE43:
?LBE42:
?LBE_connectionHandleReadRemoteVersionCfm:
	leavel	#10
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_connectionHandleSetBtVersionReq:
	enterl	#10
?LBB_connectionHandleSetBtVersionReq:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB44:
	tst	@(0,X)
	bne	?L76
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?LBB45:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,#H'0301
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE45:
	bra	(?L75)
?L76:
?LBB46:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'003A
	bsr	$_MessageSendConditionallyOnTask
?L75:
?LBE46:
?LBE44:
?LBE_connectionHandleSetBtVersionReq:
	leavel	#10
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
$_connectionHandleSetBtVersionCfm:
	enterl	#10
?LBB_connectionHandleSetBtVersionCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB47:
	tst	@(0,X)
	beq	?L79
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	bne	?L80
	ld	AL,#H'0007
	bsr	$_connectionSendInternalInitCfm
	bra	(?L79)
?L80:
?LBB48:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertBtVersion
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5019
	bsr	$_MessageSend
?L79:
?LBE48:
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
?LBE47:
?LBE_connectionHandleSetBtVersionCfm:
	leavel	#10
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
$_connectionHandleDmHciModeChangeEvent:
	enterl	#12
?LBB_connectionHandleDmHciModeChangeEvent:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB49:
	bsr	$_connectionGetMsgFilter
	ld	X,@$XAP_AL
	tst	@(H'0008,Y)
	beq	?L83
	ld	AL,@(0,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L83
	ld	X,@(H'0009,Y)
	tst	@(H'0002,X)
	bne	?L83
	tst	@(H'0007,X)
	beq	?L86
	ld	AL,@(H'0007,X)
	cmp	AL,#H'0002
	bne	?L83
?L86:
?LBB50:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0007,X)
	cmp	AL,#H'0000
	beq	?L88
	cmp	AL,#H'0002
	beq	?L89
	bra	(?L90)
?L88:
	ld	AL,#H'0000
	bra	(?L92)
?L89:
	ld	AL,#H'0001
?L92:
	st	AL,@(H'0006,Y)
	bra	(?L87)
?L90:
	bsr	$_Panic
?L87:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5051
	bsr	$_MessageSend
?L83:
?LBE50:
?LBE49:
?LBE_connectionHandleDmHciModeChangeEvent:
	leavel	#12
;.stabn	192,0,0,?LBB49
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	224,0,0,?LBE49
	ENDMOD

;# Function pattern *movqi2 used[0] = 228 used[1] = 8 total = 236
;# Function pattern *movqi3 used[0] = 245 total = 245
;# Function pattern *movhi used[2] = 4 used[3] = 4 total = 8
;# Function pattern *addqi0 used[0] = 47 total = 47
;# Function pattern *addqi2 used[0] = 8 total = 8
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 26 total = 26
;# Function pattern *call1 used[0] = 46 total = 46
;# Function pattern *call_value1 used[0] = 31 total = 31
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 11 used[1] = 20 total = 31
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	dm_info_local_version
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionReadLocalVersion:
	enterl	#8
?LBB_ConnectionReadLocalVersion:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'003C
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadLocalVersion:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_inquiry_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_inquirySendResult:
	enterl	#6
?LBB_inquirySendResult:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	tst	@(H'0001,Y)
	beq	?L1
	ld	AL,@(H'000D,Y)
?LBB3:
	add	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	tst	@(H'0006,Y)
	beq	?L3
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	bra	(?L4)
?L3:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	st	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0003,X)
?L4:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0007,X)
	ld	AL,@(H'000A,Y)
	bsr	$_connectionConvertPageScanRepMode_t
	ld	X,@(H'0003,Y)
	st	AL,@(H'0008,X)
	ld	AL,@(H'000B,Y)
	bsr	$_connectionConvertPageScanMode_t
	ld	X,@(H'0003,Y)
	st	AL,@(H'0009,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'000A,X)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'000B,X)
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@$XAP_UXL
	add	AL,#H'000C
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000E,Y)
	bsr	$_memmove
	bra	(?L6)
?L5:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'000C,X)
?L6:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5005
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_inquirySendResult:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_inquiryAddEirData:
	enterl	#5
?LBB_inquiryAddEirData:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	ld	X,@(H'0001,Y)
?LBB4:
	add	AH,@(0,X)
	bsr	$_realloc
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	add	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AH,@(H'0005,Y)
	ld	X,@(H'0001,Y)
	add	AH,@(0,X)
	st	AH,@(0,X)
?LBE4:
	ld	AL,@(H'0002,Y)
?LBE_inquiryAddEirData:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_inquiryParseEir:
	enterl	#14
?LBB_inquiryParseEir:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB5:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'000A,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	tst	@(0,X)
	bne	?L9
	ld	AH,#H'0000
	bra	(?L8)
?L9:
	ld	AL,#H'0020
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(0,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0002,Y)
	add	AL,@(0,X)
	cmp	AL,#H'0028
	bcz	?L10
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
?L10:
	ld	X,@(H'0006,Y)
	tst	@(0,X)
	beq	?L12
?L25:
	ld	AL,@(H'0008,Y)
	cmp	AL,@(H'0005,Y)
	bcc	?L14
	tst	@(H'000E,Y)
	beq	?L16
	tst	@(H'0009,Y)
	bne	?L15
?L16:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	bsr	_inquiryAddEirData
	st	AL,@(H'000A,Y)
?L15:
	ld	AL,@(H'0005,Y)
	sub	AL,@(H'0008,Y)
	st	AL,@(H'0005,Y)
	ld	X,@(H'0006,Y)
	add	X,@(H'0008,Y)
	st	X,@(H'0006,Y)
	bra	(?L28)
?L14:
	tst	@(H'000E,Y)
	beq	?L20
	tst	@(H'0009,Y)
	bne	?L19
?L20:
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	bsr	_inquiryAddEirData
	st	AL,@(H'000A,Y)
?L19:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	add	X,@$XAP_AL
	st	X,@(H'000B,Y)
	tst	@(0,X)
	beq	?L12
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	AL,@(H'0008,Y)
	sub	AL,@(H'0005,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0020
	st	AL,@(H'0005,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
	tst	@(H'0008,Y)
	bne	?L11
	ld	X,@$XAP_AL
?L28:
	ld	AL,@(0,X)
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0002,Y)
	add	AL,@(0,X)
	cmp	AL,#H'0028
	bcz	?L11
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
?L11:
	ld	X,@(H'0006,Y)
	tst	@(0,X)
	bne	?L25
?L12:
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	add	AH,#H'0001
	st	AH,@(0,X)
	ld	AL,@(H'000A,Y)
	bsr	$_realloc
	bsr	$_PanicNull
	st	AL,@(H'000A,Y)
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	add	AH,@(0,X)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(-H'0001,X)
	ld	AH,@(H'000A,Y)
?L8:
?LBE5:
	ld	AL,@$XAP_AH
?LBE_inquiryParseEir:
	leavel	#14
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_connectionHandleInquiryStart:
	enterl	#32
?LBB_connectionHandleInquiryStart:
	st	AL,@(H'001C,Y)
	st	AH,@(H'001D,Y)
	ld	X,@$XAP_AL
?LBB6:
	tst	@(H'0001,X)
	bne	?L33
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'001C,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'001D,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	cmp	AH,#H'0000
	bne	?L39
	cmp	AL,#H'0000
	beq	?L34
?L39:
?LBB7:
	ld	AL,#H'0009
	st	AL,@(H'0002,Y)
	ld	AH,#H'0C05
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(H'0009,Y)
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?L34:
	ld	X,@(H'001D,Y)
?LBE7:
	tst	@(H'0007,X)
	beq	?L35
?LBB8:
	ld	AH,#H'0008
	st	AH,@(H'000C,Y)
	ld	AL,#H'0403
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(H'0011,Y)
	st	AL,@(H'0012,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0013,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0014,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000F,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0010,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000D
	bsr	$_VmSendDmPrim
	ld	X,@(H'001C,Y)
	ld	AL,@(H'0003,X)
	or	AL,#-H'8000
	bra	(?L38)
?L35:
?LBE8:
?LBB9:
	ld	AH,#H'0006
	st	AH,@(H'0015,Y)
	ld	AL,#H'0401
	st	AL,@(H'0016,Y)
	st	AH,@(H'0017,Y)
	ld	X,@(H'001D,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(H'0018,Y)
	st	AL,@(H'0019,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'001A,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'001B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0016
	bsr	$_VmSendDmPrim
	ld	X,@(H'001C,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'7FFF
?L38:
	st	AL,@(H'0003,X)
?LBE9:
	bra	(?L32)
?L33:
?LBB10:
	ld	AL,#H'0009
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'001D,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'001C,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendConditionallyOnTask
?L32:
?LBE10:
?LBE6:
?LBE_connectionHandleInquiryStart:
	leavel	#32
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_connectionHandleInquiryResult:
	enterl	#23
?LBB_connectionHandleInquiryResult:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
	ld	X,@$XAP_AH
?LBB11:
	ld	X,@(H'0002,X)
	st	X,@(H'0011,Y)
	ld	AH,#H'0000
	st	AH,@(H'000F,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,#H'0000
	cmp	AH,@$XAP_AL
	bcc	?L53
?L51:
?LBB12:
	ld	AL,#H'0003
	st	AL,@(H'0012,Y)
	ld	X,@(H'000E,Y)
	add	X,@(H'000F,Y)
	ld	AL,@(H'0003,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0013,Y)
	ld	X,@(H'0011,Y)
	cmp	X,#H'0003
	bcc	?L45
	st	X,@(H'0012,Y)
?L45:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L55
?L50:
?LBB13:
	ld	AL,@(H'0010,Y)
	smult	#H'000A
	ld	X,@(H'0013,Y)
	add	X,@$XAP_AL
	st	X,@(H'0014,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000D,Y)
	ld	X,@(H'0001,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	st	AH,@(0,Y)
	ld	X,@(H'0014,Y)
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0009,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(H'0005,Y)
	ld	AH,#H'7FFF
	st	AH,@(H'0006,Y)
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@(-1,Y)
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0010,Y)
?LBE13:
	add	AL,#H'0001
	st	AL,@(H'0010,Y)
	cmp	AL,@(H'0012,Y)
	bcs	?L50
?L55:
	ld	AL,@(H'0013,Y)
	bsr	$_free
	ld	AH,@(H'000F,Y)
?LBE12:
	add	AH,#H'0001
	st	AH,@(H'000F,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0002
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,@(H'000F,Y)
	cmp	AH,@$XAP_AL
	bcs	?L51
?L53:
?LBE11:
?LBE_connectionHandleInquiryResult:
	leavel	#23
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_connectionHandleInquiryResultWithRssi:
	enterl	#23
?LBB_connectionHandleInquiryResultWithRssi:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
	ld	X,@$XAP_AH
?LBB14:
	ld	X,@(H'0002,X)
	st	X,@(H'0011,Y)
	ld	AH,#H'0000
	st	AH,@(H'000F,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,#H'0000
	cmp	AH,@$XAP_AL
	bcc	?L74
?L72:
?LBB15:
	ld	AL,#H'0003
	st	AL,@(H'0012,Y)
	ld	X,@(H'000E,Y)
	add	X,@(H'000F,Y)
	ld	AL,@(H'0003,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0013,Y)
	ld	X,@(H'0011,Y)
	cmp	X,#H'0003
	bcc	?L66
	st	X,@(H'0012,Y)
?L66:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L76
?L71:
?LBB16:
	ld	AL,@(H'0010,Y)
	smult	#H'000A
	ld	X,@(H'0013,Y)
	add	X,@$XAP_AL
	st	X,@(H'0014,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000D,Y)
	ld	X,@(H'0001,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	st	AH,@(0,Y)
	ld	X,@(H'0014,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0008,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0009,X)
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(-1,Y)
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	X,@(H'0010,Y)
?LBE16:
	add	X,#H'0001
	st	X,@(H'0010,Y)
	cmp	X,@(H'0012,Y)
	bcs	?L71
?L76:
	ld	AL,@(H'0013,Y)
	bsr	$_free
	ld	AH,@(H'000F,Y)
?LBE15:
	add	AH,#H'0001
	st	AH,@(H'000F,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0002
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,@(H'000F,Y)
	cmp	AH,@$XAP_AL
	bcs	?L72
?L74:
?LBE14:
?LBE_connectionHandleInquiryResultWithRssi:
	leavel	#23
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
$_connectionHandleExtendedInquiryResult:
	enterl	#19
?LBB_connectionHandleExtendedInquiryResult:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
	ld	AH,#H'0000
?LBB17:
	st	AH,@(H'0009,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'000D
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	_inquiryParseEir
	st	AL,@(H'0010,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	st	AL,@(0,Y)
	ld	X,@(H'000F,Y)
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000C,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0008,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0001
	bsr	_inquirySendResult
	tst	@(H'0009,Y)
	beq	?L82
	ld	AL,@(H'0010,Y)
	bsr	$_free
?L82:
?LBE17:
?LBE_connectionHandleExtendedInquiryResult:
	leavel	#19
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_connectionHandleInquiryComplete:
	enterl	#23
?LBB_connectionHandleInquiryComplete:
	st	AL,@(H'0013,Y)
?LBB18:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,#H'7FFF
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0000
	bsr	_inquirySendResult
	ld	X,@(H'0013,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'000F
	st	AH,@(H'0014,Y)
	cmp	AH,#H'0000
	bne	?L84
?LBB19:
	ld	AL,#H'0009
	st	AL,@(H'0009,Y)
	ld	AH,#H'0C05
	st	AH,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
	ld	AL,@(H'0014,Y)
	st	AL,@(H'000D,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bsr	$_VmSendDmPrim
	ld	AL,@(H'0014,Y)
	ld	X,@(H'0013,Y)
	st	AL,@(H'0001,X)
?L84:
?LBE19:
?LBE18:
?LBE_connectionHandleInquiryComplete:
	leavel	#23
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_connectionHandleExitPeriodicInquiryComplete:
	enterl	#13
?LBB_connectionHandleExitPeriodicInquiryComplete:
	st	AL,@(H'000A,Y)
	ld	X,@$XAP_AL
?LBB20:
	ld	AH,@(H'0003,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L86
?LBB21:
	ld	AH,#H'0009
	st	AH,@(0,Y)
	ld	AL,#H'0C05
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
	ld	AL,#H'0000
	ld	X,@(H'000A,Y)
	st	AL,@(H'0001,X)
?L86:
?LBE21:
?LBE20:
?LBE_connectionHandleExitPeriodicInquiryComplete:
	leavel	#13
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_connectionHandleInquiryCancel:
	enterl	#21
?LBB_connectionHandleInquiryCancel:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB22:
	tst	@(H'0001,X)
	beq	?L89
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bne	?L88
	ld	X,@H'fff9
	ld	AH,@(H'0003,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L91
?LBB23:
	ld	AH,#H'0002
	st	AH,@(H'0009,Y)
	ld	AL,#H'0404
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bra	(?L94)
?L91:
?LBE23:
?LBB24:
	ld	AH,#H'0002
	st	AH,@(H'000E,Y)
	ld	AL,#H'0402
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000F
?L94:
	bsr	$_VmSendDmPrim
?LBE24:
	bra	(?L88)
?L89:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,#H'7FFF
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	_inquirySendResult
?L88:
?LBE22:
?LBE_connectionHandleInquiryCancel:
	leavel	#21
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_connectionHandleWriteInquiryTx:
	enterl	#7
?LBB_connectionHandleWriteInquiryTx:
	ld	X,@$XAP_AL
?LBB25:
	tst	@(H'0002,X)
	beq	?L96
?LBB26:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AH,#H'0C59
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L96:
?LBE26:
?LBE25:
?LBE_connectionHandleWriteInquiryTx:
	leavel	#7
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_connectionHandleReadInquiryTx:
	enterl	#10
?LBB_connectionHandleReadInquiryTx:
	ld	X,@$XAP_AL
	st	AH,@(H'0007,Y)
?LBB27:
	tst	@(H'0002,X)
	beq	?L99
	ld	X,@$XAP_AH
	tst	@(H'0001,X)
	bne	?L100
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
?LBB28:
	ld	AH,#H'0002
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C58
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE28:
	bra	(?L98)
?L100:
?LBB29:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_MessageSendConditionallyOnTask
?LBE29:
	bra	(?L98)
?L99:
?LBB30:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,#H'0011
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5008
	bsr	$_MessageSend
?L98:
?LBE30:
?LBE27:
?LBE_connectionHandleReadInquiryTx:
	leavel	#10
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_connectionHandleReadInquiryTxComplete:
	enterl	#10
?LBB_connectionHandleReadInquiryTxComplete:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB31:
	tst	@(H'0001,X)
	beq	?L103
?LBB32:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'5008
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
?L103:
?LBE32:
?LBE31:
?LBE_connectionHandleReadInquiryTxComplete:
	leavel	#10
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
$_connectionHandleWriteIacLapRequest:
	enterl	#19
?LBB_connectionHandleWriteIacLapRequest:
	st	AL,@(H'000C,Y)
	st	AH,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB33:
	tst	@(H'0002,X)
	bne	?L106
?LBB34:
	ld	AH,#H'0009
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C3A
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000C,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0005,Y)
	add	AL,@$XAP_AL
	bsr	$_malloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@H'fff9
	ld	X,@(H'000D,Y)
	cmp	AH,@(H'0001,X)
	bcc	?L114
?L111:
	ld	X,@H'fff9
	add	X,@H'fff9
	ld	AH,@H'fff8
	add	AH,@$XAP_UXL
	st	AH,@(H'000F,Y)
	add	X,@(H'000D,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	ld	X,@(H'000F,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#H'0001
	add	AL,@H'fff9
	st	AL,@H'fff9
	ld	X,@(H'000D,Y)
	cmp	AL,@(H'0001,X)
	bcs	?L111
?L114:
	ld	AL,@(H'0006,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE34:
	bra	(?L105)
?L106:
	ld	X,@(H'000D,Y)
?LBB35:
	ld	AL,@(H'0001,X)
	add	AL,@$XAP_AL
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000E,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0001,X)
	add	AL,@$XAP_AL
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000E,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0034
	bsr	$_MessageSendConditionallyOnTask
?L105:
?LBE35:
?LBE33:
?LBE_connectionHandleWriteIacLapRequest:
	leavel	#19
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_connectionHandleWriteIacLapComplete:
	enterl	#9
?LBB_connectionHandleWriteIacLapComplete:
	st	AL,@(H'0006,Y)
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB36:
	tst	@(H'0002,X)
	beq	?L117
?LBB37:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	X,@H'fff8
	tst	@(H'0002,X)
	bne	?L119
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bra	(?L120)
?L119:
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L120:
	st	AH,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5052
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
?L117:
?LBE37:
?LBE36:
?LBE_connectionHandleWriteIacLapComplete:
	leavel	#9
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_connectionHandleWriteInquiryModeRequest:
	enterl	#10
?LBB_connectionHandleWriteInquiryModeRequest:
	st	AL,@(H'0007,Y)
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB38:
	tst	@(H'0001,X)
	bne	?L122
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
?LBB39:
	ld	AH,#H'0003
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C45
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	bsr	$_connectionConvertInquiryMode_t
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE39:
	bra	(?L121)
?L122:
?LBB40:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'000B
	bsr	$_MessageSendConditionallyOnTask
?L121:
?LBE40:
?LBE38:
?LBE_connectionHandleWriteInquiryModeRequest:
	leavel	#10
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
$_connectionHandleWriteInquiryModeComplete:
	enterl	#9
?LBB_connectionHandleWriteInquiryModeComplete:
	st	AL,@(H'0006,Y)
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB41:
	tst	@(H'0001,X)
	beq	?L124
?LBB42:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	AL,#H'0000
	ld	X,@H'fff8
	tst	@(H'0002,X)
	beq	?L126
	ld	AL,#H'0001
?L126:
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	st	AH,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'5053
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
?L124:
?LBE42:
?LBE41:
?LBE_connectionHandleWriteInquiryModeComplete:
	leavel	#9
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
$_connectionHandleReadInquiryModeRequest:
	enterl	#10
?LBB_connectionHandleReadInquiryModeRequest:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB43:
	tst	@(H'0001,X)
	bne	?L128
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
?LBB44:
	ld	AH,#H'0002
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C44
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE44:
	bra	(?L127)
?L128:
?LBB45:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'000C
	bsr	$_MessageSendConditionallyOnTask
?L127:
?LBE45:
?LBE43:
?LBE_connectionHandleReadInquiryModeRequest:
	leavel	#10
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
$_connectionHandleReadInquiryModeComplete:
	enterl	#9
?LBB_connectionHandleReadInquiryModeComplete:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB46:
	tst	@(H'0001,X)
	beq	?L130
?LBB47:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	tst	@(H'0002,X)
	beq	?L132
	ld	AL,#H'0001
?L132:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertInquiryMode
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'5054
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
?L130:
?LBE47:
?LBE46:
?LBE_connectionHandleReadInquiryModeComplete:
	leavel	#9
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
$_connectionHandleWriteEirDataRequest:
	enterl	#23
?LBB_connectionHandleWriteEirDataRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'000D,Y)
?LBB48:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bcz	?L134
?LBB49:
	ld	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	AH,#H'0C52
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0011,Y)
	cmp	AH,#H'00F0
	bcz	?L135
	ld	AL,#H'00F0
	st	AL,@(H'0011,Y)
?L135:
	ld	AH,#H'0000
	st	AH,@(H'000E,Y)
	ld	AH,@(H'0011,Y)
	lsr	#H'0005
	ld	AL,#H'0000
	cmp	AL,@$XAP_AH
	bcc	?L149
?L140:
	ld	AL,#H'0020
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000F,Y)
	ld	AH,@(H'0010,Y)
	ld	X,@(H'000D,Y)
	add	AH,@(H'0002,X)
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_memmove
	ld	AH,@(H'0010,Y)
	add	AH,#H'0020
	st	AH,@(H'0010,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,@(H'000E,Y)
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0012,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0001
	st	AH,@(H'000E,Y)
	ld	AH,@(H'0011,Y)
	lsr	#H'0005
	ld	AL,@(H'000E,Y)
	cmp	AL,@$XAP_AH
	bcs	?L140
?L149:
	ld	AH,@(H'0011,Y)
	and	AH,#H'001F
	st	AH,@(H'0013,Y)
	cmp	AH,#H'0000
	beq	?L141
	ld	AL,#H'0020
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000F,Y)
	ld	AH,@(H'0010,Y)
	ld	X,@(H'000D,Y)
	add	AH,@(H'0002,X)
	ld	AL,@(H'0013,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_memmove
	ld	AH,#H'0020
	sub	AH,@(H'0013,Y)
	ld	AL,@(H'000F,Y)
	add	AL,@(H'0013,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@$XAP_UY
	add	X,#H'0002
	add	X,@(H'000E,Y)
	st	X,@(H'0014,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0014,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0001
	st	AH,@(H'000E,Y)
?L141:
	ld	AL,@(H'000E,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L151
	ld	AL,#H'0000
?L146:
	ld	X,@$XAP_UY
	add	X,#H'0002
	add	X,@(H'000E,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0001
	st	AH,@(H'000E,Y)
	cmp	AH,#H'0007
	bcz	?L146
?L151:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendDmPrim
?L134:
	ld	X,@(H'000D,Y)
?LBE49:
	tst	@(H'0002,X)
	beq	?L133
	ld	AL,@(H'0002,X)
	bsr	$_free
?L133:
?LBE48:
?LBE_connectionHandleWriteEirDataRequest:
	leavel	#23
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
$_connectionHandleReadEirDataRequest:
	enterl	#10
?LBB_connectionHandleReadEirDataRequest:
	ld	X,@$XAP_AL
	st	AH,@(H'0007,Y)
?LBB50:
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bcz	?L158
	ld	X,@$XAP_AH
	tst	@(H'0001,X)
	bne	?L159
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
?LBB51:
	ld	AH,#H'0002
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C51
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE51:
	bra	(?L157)
?L159:
?LBB52:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'000E
	bsr	$_MessageSendConditionallyOnTask
?LBE52:
	bra	(?L157)
?L158:
?LBB53:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,#H'0011
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'5055
	bsr	$_MessageSend
?L157:
?LBE53:
?LBE50:
?LBE_connectionHandleReadEirDataRequest:
	leavel	#10
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
$_connectionHandleReadEirDataComplete:
	enterl	#8
?LBB_connectionHandleReadEirDataComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB54:
	tst	@(H'0001,X)
	beq	?L164
?LBB55:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	add	AH,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	_inquiryParseEir
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'5055
	bsr	$_MessageSend
	ld	AL,@(H'0004,Y)
	bsr	$_free
?L164:
?LBE55:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
?LBE54:
?LBE_connectionHandleReadEirDataComplete:
	leavel	#8
;.stabn	192,0,0,?LBB55
;.stabn	224,0,0,?LBE55
$_connectionHandleReadRemoteName:
	enterl	#15
?LBB_connectionHandleReadRemoteName:
	st	AL,@(H'000C,Y)
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB56:
	tst	@(0,X)
	bne	?L166
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'000C,Y)
	st	AL,@(0,X)
?LBB57:
	ld	AH,#H'0009
	st	AH,@(H'0002,Y)
	ld	AL,#H'0309
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE57:
	bra	(?L165)
?L166:
?LBB58:
	ld	AL,#H'0005
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'000C,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0005
	bsr	$_MessageSendConditionallyOnTask
?L165:
?LBE58:
?LBE56:
?LBE_connectionHandleReadRemoteName:
	leavel	#15
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
$_connectionHandleReadRemoteNameCancel:
	enterl	#9
?LBB_connectionHandleReadRemoteNameCancel:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
?LBB59:
	tst	@(0,X)
	beq	?L168
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bne	?L168
?LBB60:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AH,#H'041A
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L168:
?LBE60:
?LBE59:
?LBE_connectionHandleReadRemoteNameCancel:
	leavel	#9
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
_remoteNameComplete:
	enterl	#6
?LBB_remoteNameComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB61:
	cmp	AL,#H'0000
	beq	?L172
	ld	AL,@(H'0008,Y)
?LBB62:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0006,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	tst	@(H'0002,Y)
	beq	?L173
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	bra	(?L174)
?L173:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	st	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0003,X)
?L174:
	ld	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0005,X)
	cmp	AH,#H'0000
	beq	?L175
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	bra	(?L176)
?L175:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
?L176:
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5006
	bsr	$_MessageSend
?LBE62:
	bra	(?L171)
?L172:
	tst	@(H'0008,Y)
	beq	?L171
	ld	AL,@(H'0007,Y)
	bsr	$_free
?L171:
?LBE61:
?LBE_remoteNameComplete:
	leavel	#6
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
$_connectionHandleRemoteNameCancelCfm:
	enterl	#10
?LBB_connectionHandleRemoteNameCancelCfm:
	st	AL,@(H'0007,Y)
?LBB63:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,#H'0038
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	_remoteNameComplete
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?LBE63:
?LBE_connectionHandleRemoteNameCancelCfm:
	leavel	#10
;.stabn	192,0,0,?LBB63
;.stabn	224,0,0,?LBE63
$_connectionHandleRemoteNameComplete:
	enterl	#14
?LBB_connectionHandleRemoteNameComplete:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB64:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0008,Y)
	tst	@(H'0002,X)
	bne	?L181
	tst	@(H'0007,X)
	beq	?L181
?LBB65:
	ld	AL,@(H'0007,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000B,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
?L187:
	ld	X,@(H'000B,Y)
	add	X,@(H'0009,Y)
	tst	@(0,X)
	beq	?L183
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,#H'001E
	bcz	?L187
?L183:
	ld	X,@(H'000B,Y)
	add	X,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
?L193:
	ld	X,@(H'0008,Y)
	add	X,@(H'000A,Y)
	tst	@(H'0007,X)
	beq	?L190
	ld	AL,@(H'0007,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L190:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0007
	bcz	?L193
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'000B,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	bra	(?L200)
?L181:
	ld	X,@(H'0008,Y)
?LBE65:
	tst	@(H'0002,X)
	beq	?L195
	ld	AL,#H'0039
	bra	(?L196)
?L195:
	ld	AL,#H'0037
?L196:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L200:
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	_remoteNameComplete
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?LBE64:
?LBE_connectionHandleRemoteNameComplete:
	leavel	#14
;.stabn	192,0,0,?LBB64
;.stabn	192,0,0,?LBB65
;.stabn	224,0,0,?LBE65
;.stabn	224,0,0,?LBE64
$_connectionHandleReadLocalName:
	enterl	#10
?LBB_connectionHandleReadLocalName:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB66:
	tst	@(0,X)
	bne	?L204
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?LBB67:
	ld	AH,#H'0002
	st	AH,@(H'0002,Y)
	ld	AL,#H'0C14
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE67:
	bra	(?L203)
?L204:
?LBB68:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0007
	bsr	$_MessageSendConditionallyOnTask
?L203:
?LBE68:
?LBE66:
?LBE_connectionHandleReadLocalName:
	leavel	#10
;.stabn	192,0,0,?LBB67
;.stabn	224,0,0,?LBE67
;.stabn	192,0,0,?LBB68
;.stabn	224,0,0,?LBE68
_localNameComplete:
	enterl	#6
?LBB_localNameComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB69:
	cmp	AL,#H'0000
	beq	?L207
	ld	AL,@(H'0007,Y)
?LBB70:
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	cmp	AL,#H'0000
	beq	?L208
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	bsr	$_free
	bra	(?L209)
?L208:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
?L209:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5007
	bsr	$_MessageSend
?LBE70:
	bra	(?L206)
?L207:
	tst	@(H'0007,Y)
	beq	?L206
	ld	AL,@(H'0006,Y)
	bsr	$_free
?L206:
?LBE69:
?LBE_localNameComplete:
	leavel	#6
;.stabn	192,0,0,?LBB70
;.stabn	224,0,0,?LBE70
$_connectionHandleLocalNameComplete:
	enterl	#9
?LBB_connectionHandleLocalNameComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
?LBB71:
	tst	@(H'0002,X)
	bne	?L213
	tst	@(H'0003,X)
	beq	?L213
?LBB72:
	ld	AL,@(H'0003,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L219:
	ld	X,@(H'0006,Y)
	add	X,@(H'0004,Y)
	tst	@(0,X)
	beq	?L215
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'001E
	bcz	?L219
?L215:
	ld	X,@(H'0006,Y)
	add	X,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L225:
	ld	X,@(H'0003,Y)
	add	X,@(H'0005,Y)
	tst	@(H'0003,X)
	beq	?L222
	ld	AL,@(H'0003,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L222:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0007
	bcz	?L225
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	bra	(?L230)
?L213:
	ld	X,@(H'0003,Y)
?LBE72:
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L230:
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	_localNameComplete
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?LBE71:
?LBE_connectionHandleLocalNameComplete:
	leavel	#9
;.stabn	192,0,0,?LBB72
;.stabn	224,0,0,?LBE72
	ENDMOD

;# Function pattern *movqi2 used[0] = 440 used[1] = 44 total = 484
;# Function pattern *movqi3 used[0] = 414 total = 414
;# Function pattern *movqi8 used[0] = 22 total = 22
;# Function pattern *movhi used[2] = 11 used[3] = 10 total = 21
;# Function pattern *addqi0 used[0] = 50 total = 50
;# Function pattern *addqi2 used[0] = 70 used[2] = 5 total = 75
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *udivqi3_const used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 5 total = 5
;# Function pattern *zero_extendqihi2_1 used[0] = 4 total = 4
;# Function pattern jump used[0] = 26 total = 26
;# Function pattern *call1 used[0] = 62 total = 62
;# Function pattern *call_value1 used[0] = 55 total = 55
;# Function pattern movstrqi+3 used[0] = 9 used[1] = 46 total = 55
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 27 total = 27
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	dm_link_policy_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendRoleCfmToClient:
	enterl	#8
?LBB_sendRoleCfmToClient:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'5001
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendRoleCfmToClient:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sendSetRoleRequest:
	enterl	#17
?LBB_sendSetRoleRequest:
	st	AH,@(H'000E,Y)
?LBB4:
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L4
?LBB5:
	ld	AL,#H'0007
	st	AL,@(H'0006,Y)
	ld	AH,#H'030E
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@(H'000E,Y)
	bsr	$_connectionConvertHciRole_t
	st	AL,@(H'000D,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	bra	(?L3)
?L4:
?LBE5:
	ld	AL,#H'0000
?L3:
?LBE4:
?LBE_sendSetRoleRequest:
	leavel	#17
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
_sendGetRoleRequest:
	enterl	#16
?LBB_sendGetRoleRequest:
?LBB6:
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L6
?LBB7:
	ld	AH,#H'0007
	st	AH,@(H'0006,Y)
	ld	AL,#H'0A09
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	bra	(?L5)
?L6:
?LBE7:
	ld	AL,#H'0000
?L5:
?LBE6:
?LBE_sendGetRoleRequest:
	leavel	#16
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
_setLinkSupervisionTimeout:
	enterl	#12
?LBB_setLinkSupervisionTimeout:
	ld	X,@$XAP_AL
	st	AH,@(H'0009,Y)
?LBB8:
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AL,#H'0E37
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE8:
?LBE_setLinkSupervisionTimeout:
	leavel	#12
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_processPowerTable:
	enterl	#15
?LBB_processPowerTable:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB9:
	ld	AL,@$XAP_AH
	smult	#H'0006
	st	AL,@(H'000C,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000F,Y)
	bsr	$_memmove
?LBB10:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0305
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'0009,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendDmPrim
?LBE10:
?LBE9:
?LBE_processPowerTable:
	leavel	#15
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
$_connectionHandleLinkPolicySetRoleReq:
	enterl	#11
?LBB_connectionHandleLinkPolicySetRoleReq:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB11:
	tst	@(0,X)
	bne	?L10
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	_sendSetRoleRequest
	cmp	AL,#H'0000
	bne	?L11
	bsr	$_connectionGetAppTask
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	_sendRoleCfmToClient
	bra	(?L9)
?L11:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	bra	(?L9)
?L10:
?LBB12:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'0008,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0063
	bsr	$_MessageSendConditionallyOnTask
?L9:
?LBE12:
?LBE11:
?LBE_connectionHandleLinkPolicySetRoleReq:
	leavel	#11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_connectionHandleLinkPolicyGetRoleReq:
	enterl	#11
?LBB_connectionHandleLinkPolicyGetRoleReq:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB13:
	tst	@(0,X)
	bne	?L15
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	bsr	_sendGetRoleRequest
	cmp	AL,#H'0000
	bne	?L16
	bsr	$_connectionGetAppTask
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	_sendRoleCfmToClient
	bra	(?L14)
?L16:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	bra	(?L14)
?L15:
?LBB14:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0064
	bsr	$_MessageSendConditionallyOnTask
?L14:
?LBE14:
?LBE13:
?LBE_connectionHandleLinkPolicyGetRoleReq:
	leavel	#11
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_connectionHandleDmSwitchRoleComplete:
	enterl	#20
?LBB_connectionHandleDmSwitchRoleComplete:
	st	AH,@(H'000D,Y)
	ld	X,@$XAP_AH
?LBB15:
	tst	@(0,X)
	beq	?L20
	bsr	$_connectionGetAppTask
	st	AL,@(H'000E,Y)
	ld	X,@(H'0014,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'000F,Y)
	ld	X,@(H'0014,Y)
	ld	AL,@(H'0007,X)
	bsr	$_connectionConvertHciRole
	st	AL,@(0,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,@(H'000F,Y)
	bsr	_sendRoleCfmToClient
	ld	AL,#H'0000
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
	bra	(?L19)
?L20:
?LBB16:
	ld	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	X,@(H'0014,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0010,Y)
	ld	X,@(H'0014,Y)
	ld	AL,@(H'0007,X)
	bsr	$_connectionConvertHciRole
	st	AL,@(H'0011,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_UY
	add	X,#H'0009
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,#H'5002
	bsr	$_MessageSend
?L19:
?LBE16:
?LBE15:
?LBE_connectionHandleDmSwitchRoleComplete:
	leavel	#20
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_connectionHandleRoleDiscoveryComplete:
	enterl	#8
?LBB_connectionHandleRoleDiscoveryComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L22
	bsr	$_connectionGetAppTask
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	bsr	$_connectionConvertHciRole
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_sendRoleCfmToClient
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?L22:
?LBE_connectionHandleRoleDiscoveryComplete:
	leavel	#8
$_connectionHandleSetLinkSupervisionTimeoutReq:
	enterl	#9
?LBB_connectionHandleSetLinkSupervisionTimeoutReq:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB17:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L24
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	bsr	_setLinkSupervisionTimeout
?L24:
?LBE17:
?LBE_connectionHandleSetLinkSupervisionTimeoutReq:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_connectionHandleLinkSupervisionTimeoutInd:
	enterl	#10
?LBB_connectionHandleLinkSupervisionTimeoutInd:
	st	AL,@(H'0007,Y)
?LBB18:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5003
	bsr	$_MessageSend
?LBE18:
?LBE_connectionHandleLinkSupervisionTimeoutInd:
	leavel	#10
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_connectionHandleSetLinkPolicyReq:
	enterl	#10
?LBB_connectionHandleSetLinkPolicyReq:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB19:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L27
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0001,X)
	bsr	_processPowerTable
?L27:
?LBE19:
?LBE_connectionHandleSetLinkPolicyReq:
	leavel	#10
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_connectionLinkPolicyHandleWritePowerStatesCfm:
	enterl	#2
?LBB_connectionLinkPolicyHandleWritePowerStatesCfm:
	ld	X,@$XAP_AL
	tst	@(H'0002,X)
	beq	?L29
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0002
	beq	?L29
	bsr	$_Panic
?L29:
?LBE_connectionLinkPolicyHandleWritePowerStatesCfm:
	leavel	#2
$_connectionHandleSetSniffSubRatePolicyReq:
	enterl	#21
?LBB_connectionHandleSetSniffSubRatePolicyReq:
	st	AL,@(H'0011,Y)
	st	AH,@(H'0012,Y)
	ld	X,@$XAP_AH
?LBB20:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L32
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bcz	?L32
?LBB21:
	ld	AH,#H'000A
	st	AH,@(H'0006,Y)
	ld	AL,#H'0A11
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0012,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'000F,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0010,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_VmSendDmPrim
?L32:
?LBE21:
?LBE20:
?LBE_connectionHandleSetSniffSubRatePolicyReq:
	leavel	#21
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
$_connectionHandleSniffSubRatingInd:
	enterl	#14
?LBB_connectionHandleSniffSubRatingInd:
	st	AL,@(H'000B,Y)
?LBB22:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'000A,Y)
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5004
	bsr	$_MessageSend
?LBE22:
?LBE_connectionHandleSniffSubRatingInd:
	leavel	#14
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
	ENDMOD

;# Function pattern *movqi2 used[0] = 110 used[1] = 10 total = 120
;# Function pattern *movqi3 used[0] = 105 total = 105
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 27 total = 27
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 26 total = 26
;# Function pattern *call_value1 used[0] = 28 total = 28
;# Function pattern movstrqi+3 used[0] = 8 used[1] = 5 total = 13
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	dm_page_timeout_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionHandleWritePageTimeout:
	enterl	#7
?LBB_connectionHandleWritePageTimeout:
	ld	X,@$XAP_AL
?LBB2:
	ld	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,#H'0C18
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_connectionHandleWritePageTimeout:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	dm_read_tx_power_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_connectionHandleReadTxPower:
	enterl	#16
?LBB_connectionHandleReadTxPower:
	st	AL,@(H'000D,Y)
	st	AH,@H'fff8
	ld	X,@$XAP_AL
?LBB2:
	tst	@(0,X)
	bne	?L2
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
?LBB3:
	ld	AH,#H'000A
	st	AH,@(H'0002,Y)
	ld	AL,#H'0E2D
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendDmPrim
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'0007
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'000A
	bsr	$_MessageSendConditionallyOnTask
?L1:
?LBE4:
?LBE2:
?LBE_connectionHandleReadTxPower:
	leavel	#16
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_connectionHandleReadTxPowerComplete:
	enterl	#14
?LBB_connectionHandleReadTxPowerComplete:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB5:
	tst	@(0,X)
	beq	?L4
?LBB6:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5009
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
?L4:
?LBE6:
?LBE5:
?LBE_connectionHandleReadTxPowerComplete:
	leavel	#14
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 22 total = 22
;# Function pattern *movqi3 used[0] = 18 total = 18
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[1] = 2 total = 2
	MODULE	dm_security_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_aclOpen:
	enterl	#10
?LBB_aclOpen:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0307
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_aclOpen:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_aclClose:
	enterl	#12
?LBB_aclClose:
	ld	X,@$XAP_AL
	st	AH,@(H'0009,Y)
?LBB3:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0308
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE3:
?LBE_aclClose:
	leavel	#12
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_startBonding:
	enterl	#10
?LBB_startBonding:
	ld	AH,@$XAP_AL
?LBB4:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'038E
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE4:
?LBE_startBonding:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_cancelBonding:
	enterl	#11
?LBB_cancelBonding:
	ld	X,@$XAP_AL
	st	AH,@(H'0008,Y)
?LBB5:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'038F
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertVmToBluestack
	tst	@(H'0008,Y)
	beq	?L5
	ld	AL,#H'0004
	bra	(?L7)
?L5:
	ld	AL,#H'0000
?L7:
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE5:
?LBE_cancelBonding:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_connectionSendAuthenticateCfm:
	enterl	#11
?LBB_connectionSendAuthenticateCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(H'000B,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L8
?LBB7:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'5020
	bsr	$_MessageSend
?L8:
?LBE7:
?LBE6:
?LBE_connectionSendAuthenticateCfm:
	leavel	#11
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_handleInternalSetSecurityModeCfm:
	enterl	#4
?LBB_handleInternalSetSecurityModeCfm:
	st	AL,@(0,Y)
	ld	X,@(0,Y)
	tst	@(H'0006,X)
	beq	?L10
	ld	X,@$XAP_AH
	tst	@(H'0007,X)
	bne	?L10
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@(H'0001,Y)
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,@(H'0001,Y)
	bsr	_aclOpen
	bra	(?L10)
?L13:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0006,X)
?L10:
?LBE_handleInternalSetSecurityModeCfm:
	leavel	#4
_endAuthentication:
	enterl	#7
?LBB_endAuthentication:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	cmp	AH,#H'0000
	beq	?L16
	ld	AH,@$XAP_AL
	add	AH,#H'0009
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	bsr	_connectionSendAuthenticateCfm
?L16:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bne	?L17
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L18
	cmp	AL,#H'0002
	beq	?L18
	ld	AL,@$XAP_UXL
	add	AL,#H'0009
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	_aclClose
	bra	(?L20)
?L18:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	ld	AH,#H'0000
	bsr	_cancelBonding
	bra	(?L20)
?L17:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0014
	bsr	$_MessageCancelFirst
?L20:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'000A,X)
	st	AL,@(H'0009,X)
	st	AL,@(H'000C,X)
	st	AL,@(H'000B,X)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L21
	cmp	AL,#H'0002
	beq	?L21
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	st	AL,@(-1,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(-1,Y)
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L15)
?L21:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
?L15:
?LBE_endAuthentication:
	leavel	#7
_sendAclOpenedIndToClient:
	enterl	#20
?LBB_sendAclOpenedIndToClient:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
?LBB8:
	bsr	$_connectionGetMsgFilter
	ld	X,@$XAP_AL
	tst	@(H'0010,Y)
	beq	?L28
	ld	AL,@(0,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L28
?LBB9:
	ld	AL,#H'000E
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0011,Y)
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,@(H'0014,Y)
	and	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0015,Y)
	ld	AL,@(H'0016,Y)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0017,Y)
	st	AL,@(H'000A,Y)
	ld	X,@(H'0014,Y)
	st	X,@(H'000B,Y)
	ld	AL,@$XAP_UXL
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L30
	ld	X,@(H'0018,Y)
	ld	AL,@(0,X)
	st	AL,@(H'000C,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'000D,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'000E,Y)
	ld	AL,@(H'0003,X)
	bra	(?L32)
?L30:
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	st	AL,@(H'000D,Y)
	st	AL,@(H'000E,Y)
?L32:
	st	AL,@(H'000F,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,#H'501A
	bsr	$_MessageSend
?L28:
?LBE9:
?LBE8:
?LBE_sendAclOpenedIndToClient:
	leavel	#20
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_connectionHandleSmAddDeviceCfm:
	enterl	#3
?LBB_connectionHandleSmAddDeviceCfm:
	ld	X,@$XAP_AH
	tst	@(H'0007,X)
	bne	?L33
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	ld	AH,@$XAP_AL
	and	AH,#H'000F
	st	AH,@(0,Y)
	and	AL,#H'000F
	asl	#H'0008
	ld	AH,@(0,X)
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	st	AH,@(0,X)
	lsr	#H'000C
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bne	?L33
	ld	AL,#H'0009
	bsr	$_connectionSendInternalInitCfm
?L33:
?LBE_connectionHandleSmAddDeviceCfm:
	leavel	#3
$_connectionHandleSmAddDeviceCfmReady:
	enterl	#15
?LBB_connectionHandleSmAddDeviceCfmReady:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
	ld	X,@$XAP_AL
?LBB10:
	tst	@(H'0008,X)
	beq	?L38
?LBB11:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000B,Y)
?LBB12:
	ld	AL,@(H'0003,X)
	and	AL,#-H'8000
	cmp	AL,#H'0000
	bne	?L39
	ld	AL,#H'5058
	st	AL,@(-1,Y)
	bra	(?L40)
?L39:
	ld	X,#H'505A
	st	X,@(-1,Y)
?L40:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_UY
	add	X,#H'0007
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	ld	X,@(H'000C,Y)
	tst	@(H'0007,X)
	beq	?L41
	ld	AL,#H'0001
?L41:
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	st	AH,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0008,X)
	ld	AH,@(-1,Y)
	bsr	$_MessageSend
?L38:
?LBE12:
?LBE11:
	ld	AL,#H'0000
	ld	X,@(H'000B,Y)
	st	AL,@(H'0008,X)
?LBE10:
?LBE_connectionHandleSmAddDeviceCfmReady:
	leavel	#15
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_connectionHandleSmAccessInd:
	enterl	#8
?LBB_connectionHandleSmAccessInd:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB13:
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0002
	bne	?L44
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L42
?L44:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L42
	bsr	$_connectionGetCmTask
	ld	X,@(H'0004,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	bne	?L42
	bsr	$_connectionGetCmTask
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	cmp	AH,@$XAP_AL
	bne	?L46
	ld	AL,#H'0000
	bra	(?L48)
?L46:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0044
	bsr	$_MessageCancelFirst
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
?L48:
	st	AL,@(H'0001,X)
	bsr	$_connectionGetCmTask
	bsr	$_ConnectionSdpCloseSearchRequest
?L42:
?LBE13:
?LBE_connectionHandleSmAccessInd:
	leavel	#8
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_connectionHandleSmKeyReqInd:
	enterl	#15
?LBB_connectionHandleSmKeyReqInd:
?LBB14:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'039A
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0002
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0001
	bne	?L54
	tst	@(H'000D,X)
	bne	?L54
	tst	@(H'000C,X)
	beq	?L54
	ld	AH,@$XAP_UXL
?LBB15:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_BdaddrConvertBluestackToVm
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	bsr	$_ConnectionSdpOpenSearchRequest
?L54:
?LBE15:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendDmPrim
?LBE14:
?LBE_connectionHandleSmKeyReqInd:
	leavel	#15
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
_handleBredrKey:
	enterl	#13
?LBB_handleBredrKey:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	X,@(H'000E,Y)
?LBB16:
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,@(0,X)
	bsr	$_connectionConvertLinkKeyType
	st	AL,@(H'000A,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	and	AH,#H'000E
	cmp	AH,#H'0000
	beq	?L58
	ld	AH,#H'0001
?L58:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0001
	beq	?L60
	cmp	AH,#H'0000
	beq	?L59
	cmp	AL,#H'0002
	beq	?L59
?L60:
	ld	X,#H'0001
	st	X,@(H'0009,Y)
?L59:
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L62
	cmp	AL,#H'0002
	bne	?L61
?L62:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0001
	bne	?L61
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0000
	bsr	_endAuthentication
?L61:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'00F1
	or	AL,#H'0080
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'000D,Y)
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	_connectionSendAuthenticateCfm
?LBE16:
	ld	AL,@(H'0009,Y)
?LBE_handleBredrKey:
	leavel	#13
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_connectionHandleSmKeysInd:
	enterl	#18
?LBB_connectionHandleSmKeysInd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB17:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001
	ld	AH,#H'0015
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0010,X)
	ld	AL,@(H'0011,X)
	cmp	AH,#H'0000
	bne	?L69
	cmp	AL,#H'0000
	bne	?L69
	tst	@(H'0012,X)
	bne	?L69
	tst	@(H'0013,X)
	bne	?L69
	add	X,#H'0002
	st	X,@(H'0008,Y)
	bra	(?L70)
?L69:
	ld	AL,@(H'0012,Y)
	add	AL,#H'000F
	st	AL,@(H'0008,Y)
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0003,Y)
	st	AL,@(H'000E,X)
	ld	AH,@(H'0012,Y)
	add	AH,#H'000F
	bsr	$_BdaddrConvertTypedBluestackToVm
?L70:
	ld	AL,#H'0386
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memcpy
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(H'000C,X)
	st	AL,@(H'0007,X)
	ld	X,@(H'0012,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000D,X)
	ld	X,@(H'0012,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000E,X)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L87:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	st	AL,@H'fff8
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0009,X)
	lsr	@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	st	AL,@(H'0007,Y)
	cmp	AL,#(H'0001+H'0005)
	bcc	?L75
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE82,X)
	brxl
	.SEG	CONST
?JTBASE82:
	.CODE
?L82:
	.SEG	CONST
	dc	lwrd(?L75-?L82)
	dc	lwrd(?L76-?L82)
	dc	lwrd(?L77-?L82)
	dc	lwrd(?L78-?L82)
	dc	lwrd(?L80-?L82)
	dc	lwrd(?L79-?L82)
	.CODE
?L76:
	ld	AL,@(H'0009,Y)
	add	AL,@(H'0005,Y)
	st	AL,@(H'000A,Y)
	ld	X,@(H'0012,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(H'000A,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_PanicNull
	ld	X,@(H'000A,Y)
	st	AL,@(H'0010,X)
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	ld	AL,#H'0001
	bra	(?L99)
?L77:
	ld	X,@(H'0009,Y)
	add	X,@(H'0005,Y)
	st	X,@(H'000B,Y)
	ld	X,@(H'0012,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(H'000A,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_PanicNull
	ld	X,@(H'000B,Y)
	st	AL,@(H'0010,X)
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	ld	AL,#H'0002
	bra	(?L99)
?L78:
	ld	X,@(H'0012,Y)
	add	X,@(H'0004,Y)
	st	X,@(H'000C,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'000A
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'008B
	bsr	$_PsStore
	ld	AH,@(H'0009,Y)
	add	AH,@(H'0005,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(H'000A,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0010,X)
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	ld	AL,#H'0003
	bra	(?L99)
?L79:
	ld	X,@(H'0009,Y)
	add	X,@(H'0005,Y)
	st	X,@(H'000D,Y)
	ld	X,@(H'0012,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(H'000A,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_PanicNull
	ld	X,@(H'000D,Y)
	st	AL,@(H'0010,X)
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	ld	AL,#H'0005
	bra	(?L99)
?L80:
	ld	X,@(H'0009,Y)
	add	X,@(H'0005,Y)
	st	X,@(H'000E,Y)
	ld	X,@(H'0012,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(H'000A,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_PanicNull
	ld	X,@(H'000E,Y)
	st	AL,@(H'0010,X)
	ld	AL,@(H'0005,Y)
	smult	#H'0003
	ld	X,@$XAP_AL
	ld	AL,#H'0004
?L99:
	asl	@$XAP_UXL
	ld	X,@(H'0009,Y)
	or	AL,@(H'000F,X)
	st	AL,@(H'000F,X)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
?L75:
	ld	X,@(H'0007,Y)
	cmp	X,#H'0001
	bne	?L83
	ld	AL,@(H'0012,Y)
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	X,@(H'0009,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(H'0010,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_handleBredrKey
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	bne	?L73
	ld	AL,@(H'0008,Y)
	bsr	$_connectionAuthDeleteDeviceFromTdl
	bra	(?L73)
?L83:
	tst	@(H'0007,Y)
	beq	?L73
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
?L73:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0004
	bcz	?L87
	ld	X,@(H'0009,Y)
	ld	AL,@(H'000F,X)
	or	AL,#-H'8000
	st	AL,@(H'000F,X)
	tst	@(H'0006,Y)
	beq	?L88
	ld	AH,@$XAP_UXL
	add	AH,#H'000D
	ld	AL,@(H'0008,Y)
	bsr	$_connectionAuthUpdateTdl
?L88:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L94:
	ld	AL,@(H'0004,Y)
	smult	#H'0003
	st	AL,@H'fff8
	ld	X,@(H'0009,Y)
	ld	AH,@(H'000F,X)
	lsr	@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0003
	beq	?L91
	cmp	AL,#H'0000
	beq	?L91
	add	X,@(H'0004,Y)
	st	X,@(H'000F,Y)
	ld	AL,@(H'0010,X)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'000F,Y)
	st	AL,@(H'0010,X)
?L91:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0004
	bcz	?L94
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
?LBE17:
?LBE_connectionHandleSmKeysInd:
	leavel	#18
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_connectionHandleSmBondingCfm:
	enterl	#8
?LBB_connectionHandleSmBondingCfm:
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
?LBB18:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0004,Y)
	tst	@(H'0006,X)
	beq	?L105
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L107
	cmp	AL,#H'0002
	bne	?L105
?L107:
	ld	X,@(H'0008,Y)
?LBB19:
	ld	AL,@(H'0008,X)
	bsr	$_connectionConvertAuthStatus
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L105
	ld	AL,@(H'0004,Y)
	add	AL,#H'0009
	ld	AH,@$XAP_UY
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L105
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_endAuthentication
?L105:
?LBE19:
?LBE18:
?LBE_connectionHandleSmBondingCfm:
	leavel	#8
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
$_connectionHandleSmPinReqInd:
	enterl	#10
?LBB_connectionHandleSmPinReqInd:
	st	AL,@(H'0007,Y)
?LBB20:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'5023
	bsr	$_MessageSend
?LBE20:
?LBE_connectionHandleSmPinReqInd:
	leavel	#10
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_connectionHandleSmIoCapReqInd:
	enterl	#11
?LBB_connectionHandleSmIoCapReqInd:
	st	AL,@(H'0008,Y)
	st	AH,@H'fff8
?LBB21:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'000A,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0009
	ld	X,@H'fff8
	ld	AH,@(H'0001,X)
	and	AH,#-H'0201
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	X,@(H'000B,Y)
	add	X,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5024
	bsr	$_MessageSend
?LBE21:
?LBE_connectionHandleSmIoCapReqInd:
	leavel	#11
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_connectionHandleSmIoCapResInd:
	enterl	#15
?LBB_connectionHandleSmIoCapResInd:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB22:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'000A,X)
	bsr	$_connectionConvertAuthenticationRequirements
	st	AL,@(H'0002,Y)
	ld	X,@(H'000C,Y)
?LBB23:
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	and	AH,#H'000F
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L115
	ld	X,@(H'000F,Y)
	ld	AL,@(H'000A,X)
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@(H'000C,Y)
	ld	AH,@(H'0001,X)
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L115:
?LBE23:
	ld	AH,#H'0000
	ld	X,@(H'000F,Y)
	ld	AL,@(H'000B,X)
	and	AL,#H'0003
	cmp	AL,#H'0002
	bne	?L116
	ld	AH,#H'0001
?L116:
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0008
	ld	X,@(H'000C,Y)
	ld	AH,@(H'0001,X)
	and	AH,#-H'0101
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L117
	ld	X,@(H'000F,Y)
	ld	AL,@(H'000C,X)
	ld	X,@(H'000C,Y)
	st	AL,@(H'0002,X)
?L117:
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0008,X)
	bsr	$_connectionConvertIoCapability
	st	AL,@(H'0003,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#H'5025
	bsr	$_MessageSend
?LBE22:
?LBE_connectionHandleSmIoCapResInd:
	leavel	#15
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
$_connectionHandleSmUserConfirmationReqInd:
	enterl	#15
?LBB_connectionHandleSmUserConfirmationReqInd:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB24:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	X,@(H'000C,Y)
	ld	AH,@(H'000A,X)
	ld	AL,@(H'000B,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'0004
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#H'5026
	bsr	$_MessageSend
?LBE24:
?LBE_connectionHandleSmUserConfirmationReqInd:
	leavel	#15
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_connectionHandleSmUserPasskeyReqInd:
	enterl	#11
?LBB_connectionHandleSmUserPasskeyReqInd:
	st	AL,@(H'0008,Y)
?LBB25:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5027
	bsr	$_MessageSend
?LBE25:
?LBE_connectionHandleSmUserPasskeyReqInd:
	leavel	#11
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_connectionHandleSmUserPasskeyNotificationInd:
	enterl	#13
?LBB_connectionHandleSmUserPasskeyNotificationInd:
	st	AL,@(H'000A,Y)
?LBB26:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AH,@(H'000D,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0008,X)
	ld	AL,@(H'0009,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'5028
	bsr	$_MessageSend
?LBE26:
?LBE_connectionHandleSmUserPasskeyNotificationInd:
	leavel	#13
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_connectionHandleSmKeypressNotificationInd:
	enterl	#13
?LBB_connectionHandleSmKeypressNotificationInd:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB27:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	bsr	$_connectionConvertKeypressType
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'5029
	bsr	$_MessageSend
?LBE27:
?LBE_connectionHandleSmKeypressNotificationInd:
	leavel	#13
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_connectionHandleSmChangeLinkKeyReq:
	enterl	#16
?LBB_connectionHandleSmChangeLinkKeyReq:
	ld	X,@$XAP_AL
?LBB28:
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L123
?LBB29:
	ld	AH,#H'0007
	st	AH,@(H'0006,Y)
	ld	AL,#H'0615
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_VmSendDmPrim
?L123:
?LBE29:
?LBE28:
?LBE_connectionHandleSmChangeLinkKeyReq:
	leavel	#16
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
$_connectionHandleSmAuthoriseInd:
	enterl	#14
?LBB_connectionHandleSmAuthoriseInd:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB30:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertProtocolId_t
	st	AL,@(H'0006,Y)
	ld	X,@(H'000B,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'502A
	bsr	$_MessageSend
?LBE30:
?LBE_connectionHandleSmAuthoriseInd:
	leavel	#14
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_connectionHandleSmSimplePairingCompleteInd:
	enterl	#25
?LBB_connectionHandleSmSimplePairingCompleteInd:
	st	AL,@(H'0015,Y)
	st	AH,@(H'0016,Y)
	ld	X,@(H'0019,Y)
?LBB31:
	ld	AL,@(H'0009,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L127
?LBB32:
	ld	AL,#H'000D
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	tst	@(H'0008,X)
	beq	?L128
	ld	AL,#H'0001
?L128:
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	add	AL,#H'0001
	ld	AH,@(H'0019,Y)
	add	AH,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	X,@(H'0019,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'000B,Y)
	ld	X,@(H'0016,Y)
	tst	@(H'000E,X)
	beq	?L129
	ld	AH,@(H'000E,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	add	AL,#H'0008
	ld	X,#H'0005
	st	X,@(0,Y)
	bsr	$_memcpy
	ld	X,@(H'0016,Y)
	ld	AL,@(H'000E,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(H'0016,Y)
	st	AL,@(H'000E,X)
	bra	(?L130)
?L129:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	add	AL,#H'0008
	bsr	$_BdaddrTypedSetEmpty
?L130:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0015,Y)
	ld	AH,#H'5069
	bsr	$_MessageSend
?LBE32:
	bra	(?L126)
?L127:
	ld	AH,@(H'0019,Y)
?LBB33:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0011
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0019,Y)
	tst	@(H'0008,X)
	beq	?L132
	ld	X,@(H'0016,Y)
	tst	@(H'0006,X)
	bne	?L133
	ld	X,@(H'0019,Y)
	ld	AL,@(H'0008,X)
	bsr	$_connectionConvertAuthStatus
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0011
	bsr	_connectionSendAuthenticateCfm
?L133:
	ld	X,@(H'0016,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'00F1
	or	AL,#H'0080
	st	AL,@(H'0001,X)
?L132:
	ld	X,@(H'0016,Y)
	tst	@(H'0006,X)
	beq	?L126
	ld	X,@(H'0019,Y)
	ld	AL,@(H'0008,X)
	bsr	$_connectionConvertAuthStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0016,Y)
	bsr	_endAuthentication
?L126:
?LBE33:
?LBE31:
?LBE_connectionHandleSmSimplePairingCompleteInd:
	leavel	#25
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_connectionHandleDmAclOpenCfm:
	enterl	#9
?LBB_connectionHandleDmAclOpenCfm:
	st	AL,@(H'0005,Y)
	ld	X,@(H'0005,Y)
?LBB34:
	tst	@(H'0006,X)
	beq	?L135
	ld	X,@$XAP_AH
	tst	@(H'0007,X)
	beq	?L137
?LBB35:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@(H'0005,Y)
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L135
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0000
	bsr	_aclClose
?LBE35:
	bra	(?L135)
?L137:
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	_endAuthentication
?L135:
?LBE34:
?LBE_connectionHandleDmAclOpenCfm:
	leavel	#9
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_connectionHandleDmAclOpenInd:
	enterl	#10
?LBB_connectionHandleDmAclOpenInd:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@(H'000A,Y)
?LBB36:
	ld	AL,@(H'000A,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@H'fff8
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@(-1,Y)
	ld	X,@(H'000A,Y)
	ld	X,@(H'0007,X)
	st	X,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0008,X)
	ld	AL,@(H'0009,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UXL
	add	AL,#H'000B
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(-1,Y)
	bsr	_sendAclOpenedIndToClient
	ld	X,@(H'0006,Y)
	tst	@(H'0006,X)
	beq	?L140
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L142
	cmp	AL,#H'0002
	bne	?L140
?L142:
	ld	X,@(H'000A,Y)
?LBB37:
	ld	AL,@(H'000A,X)
	bsr	$_connectionConvertAuthStatus
	cmp	AL,#H'0001
	bne	?L140
	bsr	$_connectionGetCmTask
	ld	AH,#H'0014
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0001
	bsr	_endAuthentication
?L140:
?LBE37:
?LBE36:
?LBE_connectionHandleDmAclOpenInd:
	leavel	#10
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_connectionHandleDmAclClosedInd:
	enterl	#19
?LBB_connectionHandleDmAclClosedInd:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB38:
	bsr	$_connectionGetMsgFilter
	st	AL,@(H'000F,Y)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0007,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0010,Y)
	ld	AH,@(H'0013,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	X,@(H'000E,Y)
	tst	@(H'0006,X)
	beq	?L148
	ld	AL,@$XAP_UXL
	add	AL,#H'0009
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L148
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L148
	cmp	AL,#H'0002
	beq	?L148
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	_endAuthentication
?L148:
	tst	@(H'000D,Y)
	beq	?L147
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L147
?LBB39:
	ld	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_memcpy
	ld	AL,@(H'0010,Y)
	st	AL,@(H'000C,Y)
	ld	X,@$XAP_UY
	add	X,#H'0007
	st	X,@(0,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'501B
	bsr	$_MessageSend
?L147:
?LBE39:
?LBE38:
?LBE_connectionHandleDmAclClosedInd:
	leavel	#19
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE38
$_connectionHandleReadLocalOobDataReq:
	enterl	#10
?LBB_connectionHandleReadLocalOobDataReq:
	ld	X,@$XAP_AL
	st	AH,@(H'0007,Y)
?LBB40:
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bcz	?L155
	ld	X,@$XAP_AH
	tst	@(H'0006,X)
	bne	?L156
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
?LBB41:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(-1,Y)
	ld	AL,#H'039D
	st	AL,@(H'0003,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0000
	beq	?L158
	cmp	AL,#H'0001
	beq	?L159
	bra	(?L160)
?L158:
	ld	AL,#H'0000
	bra	(?L164)
?L159:
	ld	AL,#H'0001
	bra	(?L164)
?L160:
	ld	AL,#H'00FF
?L164:
	ld	X,@(-1,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(-1,Y)
	bsr	$_VmSendDmPrim
?LBE41:
	bra	(?L154)
?L156:
?LBB42:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0006
	st	AH,@(H'0001,Y)
	ld	AH,#H'0011
	bsr	$_MessageSendConditionallyOnTask
?LBE42:
	bra	(?L154)
?L155:
?LBB43:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,#H'0011
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	st	AL,@(H'0013,X)
	st	X,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	AH,#H'501F
	bsr	$_MessageSend
?L154:
?LBE43:
?LBE40:
?LBE_connectionHandleReadLocalOobDataReq:
	leavel	#10
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_connectionHandleReadLocalOobDataCfm:
	enterl	#7
?LBB_connectionHandleReadLocalOobDataCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB44:
	tst	@(H'0006,X)
	beq	?L168
?LBB45:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,#H'0001
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
?L169:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L170
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	or	AL,#H'0002
	st	AL,@(H'0002,X)
?L170:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0000
	beq	?L172
	cmp	AL,#H'0001
	beq	?L173
	bra	(?L174)
?L172:
	ld	AL,#H'0000
	bra	(?L178)
?L173:
	ld	AL,#H'0001
	bra	(?L178)
?L174:
	ld	AL,#H'00FF
?L178:
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	tst	@(H'0003,X)
	bne	?L176
?LBB46:
	ld	AL,@(H'0005,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	ld	AH,#H'0010
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	AL,@(H'0004,Y)
	bsr	$_free
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0013
	ld	AH,#H'0010
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	AL,@(H'0004,Y)
	bsr	$_free
?LBE46:
	bra	(?L177)
?L176:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	ld	X,#H'0010
	st	X,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0003,Y)
	add	AL,#H'0013
	ld	AH,#H'0010
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?L177:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	ld	AH,#H'501F
	bsr	$_MessageSend
?L168:
?LBE45:
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0006,X)
?LBE44:
?LBE_connectionHandleReadLocalOobDataCfm:
	leavel	#7
;.stabn	192,0,0,?LBB45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE45
$_connectionHandleAuthenticationReq:
	enterl	#14
?LBB_connectionHandleAuthenticationReq:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	X,@$XAP_AL
?LBB47:
	tst	@(H'0006,X)
	bne	?L181
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0006,X)
	ld	AH,@(H'000A,Y)
	add	AH,#H'0001
	ld	AL,#H'0000
	bsr	$_ConnectionSmDeleteAuthDeviceReq
?LBB48:
	ld	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0014
	bsr	$_MessageSendLater
	ld	X,@(H'000A,Y)
?LBE48:
	ld	AL,@(H'0001,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0009,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000A,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000B,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000C,X)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L182
	cmp	AL,#H'0002
	beq	?L182
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0003
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L180)
?L182:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'00F1
	or	AL,#H'0020
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0009
	bsr	_startBonding
	bra	(?L180)
?L181:
?LBB49:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0006
	st	AH,@(H'0001,Y)
	ld	AH,#H'0012
	bsr	$_MessageSendConditionallyOnTask
?L180:
?LBE49:
?LBE47:
?LBE_connectionHandleAuthenticationReq:
	leavel	#14
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
$_connectionHandleCancelAuthenticationReq:
	enterl	#3
?LBB_connectionHandleCancelAuthenticationReq:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(0,X)
	bne	?L187
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L190
	cmp	AL,#H'0001
	bne	?L189
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0002
	bne	?L189
?L190:
	ld	AL,#H'0009
	add	AL,@$XAP_AH
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	bsr	_cancelBonding
	bra	(?L187)
?L189:
	ld	X,@(H'0003,Y)
	tst	@(H'0001,X)
	beq	?L187
	ld	AL,#H'0009
	add	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	_aclClose
?L187:
?LBE_connectionHandleCancelAuthenticationReq:
	leavel	#3
$_connectionHandleAuthenticationTimeout:
	enterl	#2
?LBB_connectionHandleAuthenticationTimeout:
	ld	AH,#H'0001
	bsr	_endAuthentication
?LBE_connectionHandleAuthenticationTimeout:
	leavel	#2
$_handleSecurityInitReq:
	enterl	#7
?LBB_handleSecurityInitReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB50:
	ld	AL,#H'001C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0380
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertSecurityMode_t
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertWriteAuthEnable_t
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0003
	bcz	?L198
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@(H'0004,Y)
	ld	X,#H'0010
	st	X,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0017,X)
	st	AL,@(H'0019,X)
	st	AL,@(H'0018,X)
	ld	X,#H'0010
	st	X,@(0,Y)
	ld	AL,#H'008C
	ld	AH,@(H'0004,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L198
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	or	AL,#H'0200
	st	AL,@(H'0001,X)
	ld	AH,@$XAP_UXL
	add	AH,#H'0017
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'008B
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	bne	?L198
	bsr	$_Panic
?L198:
	ld	AL,@(H'0003,Y)
	bsr	$_VmSendDmPrim
?LBE50:
?LBE_handleSecurityInitReq:
	leavel	#7
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
$_handleSecurityInitCfm:
	enterl	#5
?LBB_handleSecurityInitCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AH
	tst	@(H'0007,X)
	beq	?L203
	bsr	$_Panic
?L203:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0003
	bcz	?L204
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,#H'008C
	bsr	$_PsStore
	ld	AH,@(H'0002,Y)
	add	AH,#H'0018
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'008B
	bsr	$_PsStore
?L204:
	ld	AL,#H'0008
	bsr	$_connectionSendInternalInitCfm
?LBE_handleSecurityInitCfm:
	leavel	#5
$_handleSetSecurityModeReq:
	enterl	#12
?LBB_handleSetSecurityModeReq:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB51:
	tst	@(H'0005,X)
	bne	?L207
	tst	@(H'0006,X)
	bne	?L208
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	asl	#H'000A
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'03FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L208:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'0010
	or	AL,#H'0001
	st	AL,@(H'0001,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0005,X)
?LBB52:
	ld	AL,#H'001C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	AL,#H'0380
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AL,#H'01B7
	st	AL,@(H'0001,X)
	ld	AL,#H'0008
	st	AL,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(H'0003,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	bsr	$_connectionConvertSecurityMode_t
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	AH,#H'0000
	st	AH,@(H'0005,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0006,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmSendDmPrim
?LBE52:
	bra	(?L206)
?L207:
?LBB53:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'0008,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AH,#H'0015
	bsr	$_MessageSendConditionallyOnTask
?L206:
?LBE53:
?LBE51:
?LBE_handleSetSecurityModeReq:
	leavel	#12
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
$_handleSetSspSecurityLevelReq:
	enterl	#14
?LBB_handleSetSspSecurityLevelReq:
	st	AL,@(H'000A,Y)
	ld	X,@(H'000E,Y)
?LBB54:
	ld	AL,@(H'0003,X)
	cmp	AL,#(H'0001+H'0004)
	bcc	?L210
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L212
?LBB55:
	ld	AL,#H'001C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	AL,#H'0380
	ld	X,@(H'000B,Y)
	st	AL,@(0,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'0010
	or	AL,#H'0003
	st	AL,@(H'0001,X)
	ld	AL,#H'0008
	ld	X,@(H'000B,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0001
	bsr	$_connectionConvertSspSecurityLevel_t
	ld	X,@(H'000B,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
	st	AL,@(H'0006,X)
	st	AL,@(H'0005,X)
	ld	AL,@$XAP_UXL
	bra	(?L214)
?L212:
?LBE55:
?LBB56:
	ld	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	AL,#H'0381
	st	AL,@(H'0003,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	bsr	$_connectionConvertProtocolId
	st	AL,@(H'0006,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0008,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertSspSecurityLevel_t
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
?L214:
	bsr	$_VmSendDmPrim
?L210:
?LBE56:
?LBE54:
?LBE_handleSetSspSecurityLevelReq:
	leavel	#14
;.stabn	192,0,0,?LBB55
;.stabn	224,0,0,?LBE55
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
$_handleSecModeConfigReq:
	enterl	#11
?LBB_handleSecModeConfigReq:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
?LBB57:
	tst	@(H'0002,X)
	beq	?L217
	ld	X,@$XAP_AL
	tst	@(H'0005,X)
	bne	?L218
?LBB58:
	ld	AL,#H'001C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AL,#H'0380
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'0010
	or	AL,#H'0002
	st	AL,@(H'0001,X)
	ld	AL,#H'0070
	ld	X,@(H'0008,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	X,@(H'000B,Y)
	tst	@(H'0002,X)
	beq	?L219
	ld	AL,#H'0004
	ld	X,@(H'0008,Y)
	st	AL,@(H'0004,X)
?L219:
	ld	X,@(H'000B,Y)
	tst	@(H'0003,X)
	beq	?L220
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	or	AL,#H'0008
	st	AL,@(H'0004,X)
?L220:
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	bsr	$_connectionConvertWriteAuthEnable_t
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	AL,#H'0000
	st	AL,@(H'0006,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0008,Y)
	bsr	$_VmSendDmPrim
?LBE58:
	bra	(?L216)
?L218:
?LBB59:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AH,#H'0017
	bsr	$_MessageSendConditionallyOnTask
?LBE59:
	bra	(?L216)
?L217:
?LBB60:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5022
	bsr	$_MessageSend
?L216:
?LBE60:
?LBE57:
?LBE_handleSecModeConfigReq:
	leavel	#11
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;.stabn	192,0,0,?LBB59
;.stabn	224,0,0,?LBE59
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
$_connectionHandleSetSecurityModeCfm:
	enterl	#10
?LBB_connectionHandleSetSecurityModeCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB61:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0005,X)
	cmp	AH,@$XAP_AL
	bne	?L224
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0007,Y)
	bsr	_handleInternalSetSecurityModeCfm
	bra	(?L225)
?L224:
	ld	X,@(H'0006,Y)
	tst	@(H'0005,X)
	beq	?L225
?LBB62:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	tst	@(H'0007,X)
	bne	?L227
	ld	AL,#H'0001
?L227:
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	st	AH,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	ld	AH,#H'5021
	bsr	$_MessageSend
?L225:
?LBE62:
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0005,X)
?LBE61:
?LBE_connectionHandleSetSecurityModeCfm:
	leavel	#10
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
$_connectionHandleConfigureSecurityCfm:
	enterl	#10
?LBB_connectionHandleConfigureSecurityCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB63:
	tst	@(H'0005,X)
	beq	?L230
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0005,X)
	cmp	AH,@$XAP_AL
	beq	?L230
?LBB64:
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	tst	@(H'0007,X)
	bne	?L232
	ld	AL,#H'0001
?L232:
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0002
	and	AH,#H'0001
	st	AH,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	ld	AH,#H'5022
	bsr	$_MessageSend
?L230:
?LBE64:
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0005,X)
?LBE63:
?LBE_connectionHandleConfigureSecurityCfm:
	leavel	#10
;.stabn	192,0,0,?LBB64
;.stabn	224,0,0,?LBE64
$_handleRegisterReq:
	enterl	#11
?LBB_handleRegisterReq:
	st	AL,@(H'0008,Y)
?LBB65:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0381
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	bsr	$_connectionConvertProtocolId
	st	AL,@(H'0004,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE65:
?LBE_handleRegisterReq:
	leavel	#11
;.stabn	192,0,0,?LBB65
;.stabn	224,0,0,?LBE65
$_handleUnRegisterReq:
	enterl	#9
?LBB_handleUnRegisterReq:
	st	AL,@(H'0006,Y)
?LBB66:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0382
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	bsr	$_connectionConvertProtocolId
	st	AL,@(H'0004,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE66:
?LBE_handleUnRegisterReq:
	leavel	#9
;.stabn	192,0,0,?LBB66
;.stabn	224,0,0,?LBE66
$_handleRegisterOutgoingReq:
	enterl	#15
?LBB_handleRegisterOutgoingReq:
	st	AL,@(H'000C,Y)
?LBB67:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,#H'0383
	st	AL,@(H'0001,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0005,X)
	bsr	$_connectionConvertProtocolId
	st	AL,@(H'0004,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE67:
?LBE_handleRegisterOutgoingReq:
	leavel	#15
;.stabn	192,0,0,?LBB67
;.stabn	224,0,0,?LBE67
$_handleRegisterOutgoingCfm:
	enterl	#10
?LBB_handleRegisterOutgoingCfm:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB68:
	tst	@(H'0002,X)
	beq	?L237
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0003
	bne	?L237
?LBB69:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0006
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'501E
	bsr	$_MessageSend
?L237:
?LBE69:
?LBE68:
?LBE_handleRegisterOutgoingCfm:
	leavel	#10
;.stabn	192,0,0,?LBB69
;.stabn	224,0,0,?LBE69
$_handleUnRegisterOutgoingReq:
	enterl	#14
?LBB_handleUnRegisterOutgoingReq:
	st	AL,@(H'000B,Y)
?LBB70:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0384
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@(H'000B,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertProtocolId
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE70:
?LBE_handleUnRegisterOutgoingReq:
	leavel	#14
;.stabn	192,0,0,?LBB70
;.stabn	224,0,0,?LBE70
$_handleEncryptReq:
	enterl	#19
?LBB_handleEncryptReq:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
	ld	X,@$XAP_AL
?LBB71:
	tst	@(H'0007,X)
	bne	?L242
	ld	X,@$XAP_AH
?LBB72:
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L241
?LBB73:
	ld	AL,#H'0006
	st	AL,@(H'0008,Y)
	ld	AL,#H'038C
	st	AL,@(H'0009,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000F,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'000F,Y)
	st	AL,@(H'000D,X)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_VmSendDmPrim
?LBE73:
	bra	(?L241)
?L242:
?LBE72:
?LBB74:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'0010,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0007
	st	AH,@(H'0001,Y)
	ld	AH,#H'001C
	bsr	$_MessageSendConditionallyOnTask
?L241:
?LBE74:
?LBE71:
?LBE_handleEncryptReq:
	leavel	#19
;.stabn	192,0,0,?LBB72
;.stabn	192,0,0,?LBB73
;.stabn	224,0,0,?LBE73
;.stabn	224,0,0,?LBE72
;.stabn	192,0,0,?LBB74
;.stabn	224,0,0,?LBE74
$_connectionHandleEncryptCfm:
	enterl	#9
?LBB_connectionHandleEncryptCfm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB75:
	tst	@(H'0007,X)
	beq	?L247
?LBB76:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	tst	@(H'0006,X)
	beq	?L248
	ld	AL,#H'0000
	bra	(?L250)
?L248:
	ld	AL,#H'0001
?L250:
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'000D,X)
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0007,X)
	ld	AH,#H'502B
	bsr	$_MessageSend
?L247:
?LBE76:
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0007,X)
	st	AL,@(H'000D,X)
?LBE75:
?LBE_connectionHandleEncryptCfm:
	leavel	#9
;.stabn	192,0,0,?LBB76
;.stabn	224,0,0,?LBE76
$_handleEncryptionKeyRefreshReq:
	enterl	#11
?LBB_handleEncryptionKeyRefreshReq:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
?LBB77:
	tst	@(H'0002,X)
	beq	?L251
?LBB78:
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AL,#H'0E53
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@H'fff8
	bsr	$_BdaddrConvertTypedVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?L251:
?LBE78:
?LBE77:
?LBE_handleEncryptionKeyRefreshReq:
	leavel	#11
;.stabn	192,0,0,?LBB78
;.stabn	224,0,0,?LBE78
_sendEncryptionKeyRefreshInd:
	enterl	#13
?LBB_sendEncryptionKeyRefreshInd:
	st	AL,@(H'000A,Y)
	ld	X,@(H'000D,Y)
?LBB79:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000E,Y)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'502C
	bsr	$_MessageSend
?LBE79:
?LBE_sendEncryptionKeyRefreshInd:
	leavel	#13
;.stabn	192,0,0,?LBB79
;.stabn	224,0,0,?LBE79
$_connectionHandleEncryptionKeyRefreshInd:
	enterl	#17
?LBB_connectionHandleEncryptionKeyRefreshInd:
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB80:
	ld	AL,@(H'0002,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'000B,Y)
	ld	AH,#H'0000
	st	AH,@(H'000D,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,#H'0005
	bra	(?L271)
?L260:
	ld	AL,@(H'000C,Y)
	bsr	$_free
	ld	AL,@(H'0008,Y)
	add	AL,#H'0005
?L271:
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L256
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,@(H'000C,Y)
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L260
?L256:
	ld	AH,#H'0000
	st	AH,@(H'000A,Y)
	cmp	AH,@(H'0008,Y)
	bcc	?L270
?L267:
	ld	AL,@(H'000C,Y)
	add	AL,@(H'000A,Y)
	st	AL,@(H'000E,Y)
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L263
?LBB81:
	ld	AL,@(0,X)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L263
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'000B,Y)
	bsr	_sendEncryptionKeyRefreshInd
	ld	AH,#H'0001
	st	AH,@(H'000D,Y)
?L263:
	ld	AL,@(H'000A,Y)
?LBE81:
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,@(H'0008,Y)
	bcs	?L267
?L270:
	tst	@(H'000D,Y)
	bne	?L268
	bsr	$_connectionGetAppTask
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,@(H'000B,Y)
	bsr	_sendEncryptionKeyRefreshInd
?L268:
	ld	AL,@(H'000C,Y)
	bsr	$_free
?LBE80:
?LBE_connectionHandleEncryptionKeyRefreshInd:
	leavel	#17
;.stabn	192,0,0,?LBB80
;.stabn	192,0,0,?LBB81
;.stabn	224,0,0,?LBE81
;.stabn	224,0,0,?LBE80
$_handlePinRequestRes:
	enterl	#6
?LBB_handlePinRequestRes:
	st	AL,@(H'0001,Y)
?LBB82:
	ld	AL,#H'0017
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,#H'0389
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_BdaddrConvertTypedVmToBluestack
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0005,X)
	ld	AL,#-H'0001
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'000F)
	bcc	?L275
	ld	X,@(H'0002,Y)
	st	AH,@(H'0006,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0007
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	ld	X,@(H'0001,Y)
	ld	X,@(H'0005,X)
	st	X,@(0,Y)
	bsr	$_memmove
	bra	(?L276)
?L275:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0006,X)
?L276:
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE82:
?LBE_handlePinRequestRes:
	leavel	#6
;.stabn	192,0,0,?LBB82
;.stabn	224,0,0,?LBE82
$_handleIoCapabilityRequestRes:
	enterl	#29
?LBB_handleIoCapabilityRequestRes:
	st	AL,@(H'0017,Y)
	st	AH,@(H'0018,Y)
	ld	X,@$XAP_AH
?LBB83:
	ld	X,@(H'0006,X)
	st	X,@(H'0019,Y)
	ld	AL,#H'0000
	st	AL,@(H'001A,Y)
	ld	X,@(H'0017,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L278
	ld	X,@(H'0018,Y)
	tst	@(H'0007,X)
	beq	?L279
	ld	AL,#H'0001
	st	AL,@(H'001A,Y)
?L279:
	ld	X,@(H'0018,Y)
	tst	@(H'0008,X)
	beq	?L281
	ld	AL,@(H'001A,Y)
	or	AL,#H'0004
	bra	(?L292)
?L278:
	ld	X,@(H'0017,Y)
?LBB84:
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	and	AH,#H'000F
	lsr	#H'0001
	and	AH,#H'0001
	ld	X,@(H'0018,Y)
	tst	@(H'0007,X)
	beq	?L282
	cmp	AH,#H'0000
	beq	?L283
	tst	@(H'0008,X)
	beq	?L284
	ld	AL,#H'0003
	bra	(?L292)
?L284:
	ld	X,#H'0002
	bra	(?L306)
?L283:
	ld	X,@(H'0018,Y)
	tst	@(H'0008,X)
	beq	?L287
	ld	AL,#H'0005
	bra	(?L292)
?L287:
	ld	X,#H'0004
	bra	(?L306)
?L282:
	cmp	AH,#H'0000
	beq	?L290
	ld	AL,#H'0005
	st	AL,@(H'0019,Y)
	ld	X,#H'0008
?L306:
	st	X,@(H'001A,Y)
	bra	(?L281)
?L290:
	ld	X,@(H'0018,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0000
	beq	?L292
	ld	AL,#H'0001
?L292:
	st	AL,@(H'001A,Y)
?L281:
	ld	AL,@(H'001A,Y)
?LBE84:
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@(H'0017,Y)
	ld	AH,@(H'0001,X)
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(H'0019,Y)
	cmp	AL,#H'0005
	beq	?L293
?LBB85:
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,#H'038D
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0018,Y)
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,@(H'0019,Y)
	bsr	$_connectionConvertIoCapability_t
	ld	AH,@$XAP_AL
	st	AL,@(H'0008,Y)
	ld	X,@(H'0018,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0002
	bne	?L294
	ld	AL,@$XAP_AH
	or	AL,#H'0080
	st	AL,@(H'0008,Y)
?L294:
	ld	AL,@(H'001A,Y)
	st	AL,@(H'000A,Y)
	ld	X,@(H'0018,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0009,Y)
	tst	@(H'000B,X)
	beq	?L295
	ld	AL,@(H'000B,X)
	bsr	$_VmGetHandleFromPointer
	bra	(?L307)
?L295:
	ld	AL,#H'0000
?L307:
	st	AL,@(H'000B,Y)
	ld	X,@(H'0018,Y)
	tst	@(H'000C,X)
	beq	?L297
	ld	AL,@(H'000C,X)
	bsr	$_VmGetHandleFromPointer
	bra	(?L308)
?L297:
	ld	AL,#H'0000
?L308:
	st	AL,@(H'000C,Y)
	ld	X,@(H'0017,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L299
	ld	X,@(H'0018,Y)
	tst	@(H'0009,X)
	beq	?L299
	ld	X,@(H'0017,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L300
	ld	AL,@(H'0002,X)
	ld	X,@(H'0018,Y)
	and	AL,@(H'0009,X)
	bra	(?L309)
?L300:
	ld	X,@(H'0018,Y)
	ld	AL,@(H'0009,X)
	bra	(?L309)
?L299:
	ld	AL,#H'0000
?L309:
	st	AL,@(H'000D,Y)
	ld	X,@(H'0017,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'0101
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bra	(?L310)
?L293:
?LBE85:
?LBB86:
	ld	AL,#H'0008
	st	AL,@(H'000E,Y)
	ld	AL,#H'0391
	st	AL,@(H'000F,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0010
	ld	AH,@(H'0018,Y)
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	X,@(H'0018,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0001
	bne	?L304
	ld	AL,#H'00C5
	bra	(?L305)
?L304:
	ld	AL,#H'0018
?L305:
	st	AL,@(H'0016,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000F
?L310:
	bsr	$_VmSendDmPrim
?LBE86:
?LBE83:
?LBE_handleIoCapabilityRequestRes:
	leavel	#29
;.stabn	192,0,0,?LBB83
;.stabn	192,0,0,?LBB84
;.stabn	224,0,0,?LBE84
;.stabn	192,0,0,?LBB85
;.stabn	224,0,0,?LBE85
;.stabn	192,0,0,?LBB86
;.stabn	224,0,0,?LBE86
;.stabn	224,0,0,?LBE83
$_handleUserConfirmationRequestRes:
	enterl	#18
?LBB_handleUserConfirmationRequestRes:
	ld	X,@$XAP_AL
?LBB87:
	tst	@(H'0006,X)
	beq	?L315
?LBB88:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0392
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bra	(?L317)
?L315:
?LBE88:
?LBB89:
	ld	AL,#H'0007
	st	AL,@(H'0008,Y)
	ld	AL,#H'0393
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0009
?L317:
	bsr	$_VmSendDmPrim
?LBE89:
?LBE87:
?LBE_handleUserConfirmationRequestRes:
	leavel	#18
;.stabn	192,0,0,?LBB88
;.stabn	224,0,0,?LBE88
;.stabn	192,0,0,?LBB89
;.stabn	224,0,0,?LBE89
$_handleUserPasskeyRequestRes:
	enterl	#21
?LBB_handleUserPasskeyRequestRes:
	st	AL,@(H'0012,Y)
	ld	X,@$XAP_AL
?LBB90:
	tst	@(H'0006,X)
	bne	?L319
?LBB91:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,#H'0394
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bra	(?L321)
?L319:
?LBE91:
?LBB92:
	ld	AL,#H'0007
	st	AL,@(H'000A,Y)
	ld	AL,#H'0395
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	ld	AH,@(H'0012,Y)
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'000B
?L321:
	bsr	$_VmSendDmPrim
?LBE92:
?LBE90:
?LBE_handleUserPasskeyRequestRes:
	leavel	#21
;.stabn	192,0,0,?LBB91
;.stabn	224,0,0,?LBE91
;.stabn	192,0,0,?LBB92
;.stabn	224,0,0,?LBE92
$_handleSendKeypressNotificationReq:
	enterl	#12
?LBB_handleSendKeypressNotificationReq:
	st	AL,@(H'0009,Y)
?LBB93:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'039E
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0009,Y)
	bsr	$_BdaddrConvertTpVmToBluestack
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0006,X)
	bsr	$_connectionConvertKeypressType_t
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE93:
?LBE_handleSendKeypressNotificationReq:
	leavel	#12
;.stabn	192,0,0,?LBB93
;.stabn	224,0,0,?LBE93
$_handleSetTrustLevelReq:
	enterl	#7
?LBB_handleSetTrustLevelReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB94:
	tst	@(H'0008,X)
	beq	?L324
?LBB95:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@(H'0001,Y)
	ld	AH,#H'0027
	bsr	$_MessageSendConditionallyOnTask
?LBE95:
	bra	(?L323)
?L324:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0005,X)
	bsr	$_connectionAuthSetTrustLevel
	cmp	AL,#H'0000
	bne	?L326
?LBB96:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0004,X)
	ld	AL,#H'0001
	st	AL,@(0,X)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'505A
	bsr	$_MessageSend
?LBE96:
	bra	(?L323)
?L326:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	or	AL,#-H'8000
	st	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0008,X)
?L323:
?LBE94:
?LBE_handleSetTrustLevelReq:
	leavel	#7
;.stabn	192,0,0,?LBB95
;.stabn	224,0,0,?LBE95
;.stabn	192,0,0,?LBB96
;.stabn	224,0,0,?LBE96
$_handleAuthoriseRes:
	enterl	#14
?LBB_handleAuthoriseRes:
	st	AL,@(H'000B,Y)
?LBB97:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'038A
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	ld	AH,@(H'000B,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertProtocolId
	st	AL,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0009,Y)
	tst	@(H'0008,X)
	beq	?L329
	ld	AL,#H'0001
	bra	(?L331)
?L329:
	ld	AL,#H'0000
?L331:
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE97:
?LBE_handleAuthoriseRes:
	leavel	#14
;.stabn	192,0,0,?LBB97
;.stabn	224,0,0,?LBE97
$_handleAddAuthDeviceReq:
	enterl	#7
?LBB_handleAddAuthDeviceReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB98:
	tst	@(H'0008,X)
	beq	?L333
?LBB99:
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@(H'0001,Y)
	ld	AH,#H'0025
	bsr	$_MessageSendConditionallyOnTask
?LBE99:
	bra	(?L332)
?L333:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionAuthAddDevice
	cmp	AL,#H'0000
	bne	?L335
?LBB100:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0004,X)
	ld	AL,#H'0001
	st	AL,@(0,X)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5058
	bsr	$_MessageSend
?LBE100:
	bra	(?L332)
?L335:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'7FFF
	st	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0008,X)
?L332:
?LBE98:
?LBE_handleAddAuthDeviceReq:
	leavel	#7
;.stabn	192,0,0,?LBB99
;.stabn	224,0,0,?LBE99
;.stabn	192,0,0,?LBB100
;.stabn	224,0,0,?LBE100
$_handleGetAuthDeviceReq:
	enterl	#23
?LBB_handleGetAuthDeviceReq:
	st	AL,@(H'0012,Y)
	st	AH,@(H'0013,Y)
	ld	X,@$XAP_AL
?LBB101:
	tst	@(H'0008,X)
	beq	?L338
?LBB102:
	ld	AL,#H'0005
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0012,Y)
	add	AH,#H'0008
	st	AH,@(H'0001,Y)
	ld	AH,#H'0026
	bsr	$_MessageSendConditionallyOnTask
?LBE102:
	bra	(?L337)
?L338:
?LBB103:
	ld	AL,#H'0019
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0014,Y)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0004,X)
	ld	AL,@(H'0013,Y)
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0010
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0011
	bsr	$_connectionAuthGetDevice
	cmp	AL,#H'0000
	beq	?L340
	ld	AL,#H'0000
	ld	X,@(H'0014,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0005,X)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0006,X)
	ld	AH,#H'0008
	st	AH,@(H'0007,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0008
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	bsr	$_memmove
	bra	(?L341)
?L340:
	ld	AL,#H'0001
	ld	X,@(H'0014,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0006,X)
?L341:
	ld	AH,@(H'0014,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0013,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5059
	bsr	$_MessageSend
?L337:
?LBE103:
?LBE101:
?LBE_handleGetAuthDeviceReq:
	leavel	#23
;.stabn	192,0,0,?LBB102
;.stabn	224,0,0,?LBE102
;.stabn	192,0,0,?LBB103
;.stabn	224,0,0,?LBE103
_sendEncryptionChangeInd:
	enterl	#13
?LBB_sendEncryptionChangeInd:
	st	AL,@(H'000A,Y)
	ld	X,@(H'000D,Y)
?LBB104:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000E,Y)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'502D
	bsr	$_MessageSend
?LBE104:
?LBE_sendEncryptionChangeInd:
	leavel	#13
;.stabn	192,0,0,?LBB104
;.stabn	224,0,0,?LBE104
$_connectionHandleEncryptionChange:
	enterl	#16
?LBB_connectionHandleEncryptionChange:
	st	AL,@(H'0009,Y)
?LBB105:
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,#H'0005
	bra	(?L360)
?L349:
	ld	AL,@(H'000B,Y)
	bsr	$_free
	ld	AL,@(H'0008,Y)
	add	AL,#H'0005
?L360:
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L345
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,@(H'000B,Y)
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L349
?L345:
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	cmp	AL,@(H'0008,Y)
	bcc	?L359
?L356:
	ld	X,@(H'000B,Y)
	add	X,@(H'000A,Y)
	st	X,@(H'000D,Y)
	tst	@(0,X)
	beq	?L352
?LBB106:
	ld	AL,@(0,X)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L352
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	X,@(H'000D,Y)
	ld	AH,@(0,X)
	bsr	_sendEncryptionChangeInd
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L352:
	ld	AL,@(H'000A,Y)
?LBE106:
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,@(H'0008,Y)
	bcs	?L356
?L359:
	tst	@(H'000C,Y)
	bne	?L357
	bsr	$_connectionGetAppTask
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0008,X)
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	_sendEncryptionChangeInd
?L357:
	ld	AL,@(H'000B,Y)
	bsr	$_free
?LBE105:
?LBE_connectionHandleEncryptionChange:
	leavel	#16
;.stabn	192,0,0,?LBB105
;.stabn	192,0,0,?LBB106
;.stabn	224,0,0,?LBE106
;.stabn	224,0,0,?LBE105
$_connectionSmHandleGetAttributeReq:
	enterl	#5
?LBB_connectionSmHandleGetAttributeReq:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	add	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0005,X)
	bsr	$_connectionAuthGetAttribute
?LBE_connectionSmHandleGetAttributeReq:
	leavel	#5
$_connectionSmHandleGetIndexedAttributeReq:
	enterl	#4
?LBB_connectionSmHandleGetIndexedAttributeReq:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	bsr	$_connectionAuthGetIndexedAttribute
?LBE_connectionSmHandleGetIndexedAttributeReq:
	leavel	#4
$_connectionDmHandleAclDetach:
	enterl	#3
?LBB_connectionDmHandleAclDetach:
	ld	X,@$XAP_AL
	ld	AH,@(H'0005,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,X)
	bsr	_aclClose
?LBE_connectionDmHandleAclDetach:
	leavel	#3
$_connectionHandleAPTExpiredInd:
	enterl	#11
?LBB_connectionHandleAPTExpiredInd:
	st	AL,@(H'0008,Y)
?LBB107:
	cmp	AL,#H'0000
	beq	?L366
?LBB108:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertTpBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'501C
	bsr	$_MessageSend
?L366:
?LBE108:
?LBE107:
?LBE_connectionHandleAPTExpiredInd:
	leavel	#11
;.stabn	192,0,0,?LBB108
;.stabn	224,0,0,?LBE108
	ENDMOD

;# Function pattern *movqi2 used[0] = 662 used[1] = 89 used[3] = 1 total = 752
;# Function pattern *movqi3 used[0] = 824 total = 824
;# Function pattern *movqi8 used[0] = 6 total = 6
;# Function pattern *movhi used[2] = 8 used[3] = 8 total = 16
;# Function pattern *addqi0 used[0] = 117 total = 117
;# Function pattern *addqi2 used[0] = 89 used[2] = 4 total = 93
;# Function pattern *andqi3 used[0] = 55 total = 55
;# Function pattern *iorqi3 used[0] = 21 total = 21
;# Function pattern *mulqi3_const used[0] = 7 total = 7
;# Function pattern *lshrqi3 used[0] = 17 total = 17
;# Function pattern *ashlqi3 used[0] = 7 total = 7
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 60 total = 60
;# Function pattern *call1 used[0] = 145 total = 145
;# Function pattern *call_value1 used[0] = 126 total = 126
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 43 used[1] = 63 total = 106
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 49 total = 49
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	dm_sync_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendSyncConnectCfmToClient:
	enterl	#22
?LBB_sendSyncConnectCfmToClient:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
	ld	X,@(H'0016,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'000C
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0009,Y)
	st	AL,@(H'000B,Y)
	st	AL,@(H'000A,Y)
	st	AL,@(H'000D,Y)
	st	AL,@(H'000C,Y)
	cmp	X,#H'0000
	beq	?L3
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0008,Y)
	bra	(?L4)
?L3:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	st	AL,@(H'0005,Y)
	st	AL,@(H'0008,Y)
	st	AL,@(H'0007,Y)
?L4:
	tst	@(H'0017,Y)
	bne	?L5
	tst	@(H'0018,Y)
	beq	?L5
	ld	X,@(H'0018,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'000E,Y)
	tst	@(0,X)
	bne	?L6
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,#H'1F40
	st	AL,@(H'000B,Y)
	ld	AH,@(H'0017,Y)
	st	AH,@(H'000A,Y)
	st	AL,@(H'000D,Y)
	st	AH,@(H'000C,Y)
	bra	(?L5)
?L6:
	ld	X,@(H'0018,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L5
	st	AL,@(H'0004,Y)
	tst	@(H'0001,X)
	beq	?L5
	ld	AL,@(H'0002,X)
	umult	#H'0640
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	st	AH,@(H'0011,Y)
	st	AL,@(H'0012,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
	st	AH,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	X,@(H'0018,Y)
	ld	AL,@(H'0003,X)
	umult	#H'0640
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0011,Y)
	ld	AL,@(H'0012,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
	st	AH,@(H'000C,Y)
	st	AL,@(H'000D,Y)
?L5:
	ld	AH,@(H'0017,Y)
	st	AH,@(H'0003,Y)
	cmp	AH,#H'0000
	bne	?L10
	tst	@(H'000F,Y)
	beq	?L10
?LBB4:
	bsr	$_connectionGetMsgFilter
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L10
?LBB5:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0013,Y)
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_memcpy
	ld	AL,@(H'0013,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'500D
	bsr	$_MessageSend
?L10:
	ld	X,@$XAP_UY
	add	X,#H'0003
?LBE5:
?LBE4:
	st	X,@(0,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,#H'500D
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendSyncConnectCfmToClient:
	leavel	#22
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_connectionHandleSyncRegisterReq:
	enterl	#18
?LBB_connectionHandleSyncRegisterReq:
	st	AL,@(H'000F,Y)
?LBB6:
	ld	AL,#H'0006
	st	AL,@(H'0003,Y)
	ld	AL,#H'0280
	st	AL,@(H'0004,Y)
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_VmSendDmPrim
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(0,X)
	st	AL,@(H'000B,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'000B
	st	AH,@(0,Y)
	ld	AH,#H'03E8
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,#H'0061
	bsr	$_MessageSendLater
?LBE7:
?LBE6:
?LBE_connectionHandleSyncRegisterReq:
	leavel	#18
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_connectionHandleSyncRegisterCfm:
	enterl	#9
?LBB_connectionHandleSyncRegisterCfm:
	st	AL,@(H'0006,Y)
?LBB8:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0061
	bsr	$_MessageCancelFirst
	ld	X,@(H'0006,Y)
	tst	@(H'0002,X)
	beq	?L14
?LBB9:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'500B
	bsr	$_MessageSend
?L14:
?LBE9:
?LBE8:
?LBE_connectionHandleSyncRegisterCfm:
	leavel	#9
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_connectionHandleSyncRegisterTimeoutInd:
	enterl	#8
?LBB_connectionHandleSyncRegisterTimeoutInd:
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'500B
	bsr	$_MessageSend
?LBE10:
?LBE_connectionHandleSyncRegisterTimeoutInd:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_connectionHandleSyncUnregisterReq:
	enterl	#16
?LBB_connectionHandleSyncUnregisterReq:
	st	AL,@(H'000D,Y)
?LBB11:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AL,#H'0281
	st	AL,@(H'0004,Y)
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_VmSendDmPrim
?LBB12:
	ld	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0009,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	st	AH,@(0,Y)
	ld	AH,#H'03E8
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,#H'0062
	bsr	$_MessageSendLater
?LBE12:
?LBE11:
?LBE_connectionHandleSyncUnregisterReq:
	leavel	#16
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_connectionHandleSyncUnregisterCfm:
	enterl	#9
?LBB_connectionHandleSyncUnregisterCfm:
	st	AL,@(H'0006,Y)
?LBB13:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0062
	bsr	$_MessageCancelFirst
	ld	X,@(H'0006,Y)
	tst	@(H'0002,X)
	beq	?L18
?LBB14:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'500C
	bsr	$_MessageSend
?L18:
?LBE14:
?LBE13:
?LBE_connectionHandleSyncUnregisterCfm:
	leavel	#9
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_connectionHandleSyncUnregisterTimeoutInd:
	enterl	#8
?LBB_connectionHandleSyncUnregisterTimeoutInd:
	ld	X,@$XAP_AL
?LBB15:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'500C
	bsr	$_MessageSend
?LBE15:
?LBE_connectionHandleSyncUnregisterTimeoutInd:
	leavel	#8
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_connectionHandleSyncConnectReq:
	enterl	#23
?LBB_connectionHandleSyncConnectReq:
	st	AL,@(H'0013,Y)
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L22
?LBB17:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0014,Y)
	ld	AL,#H'0009
	st	AL,@(H'0009,Y)
	ld	AL,#H'0282
	st	AL,@(H'000A,Y)
	ld	AH,#H'0000
	st	AH,@(H'000B,Y)
	ld	X,@(H'0013,Y)
	ld	AL,@(0,X)
	st	AL,@(H'000C,Y)
	st	AH,@(H'0011,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000D
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0013,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0014,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'0013,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0014,Y)
	st	AH,@(H'0006,X)
	st	AL,@(H'0007,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0014,Y)
	st	AL,@(0,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0013,Y)
	ld	AL,@(H'0009,X)
	ld	X,@(H'0014,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0012,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bsr	$_VmSendDmPrim
?LBE17:
	bra	(?L21)
?L22:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	ld	X,@(H'0013,Y)
	ld	AH,@(0,X)
	bsr	_sendSyncConnectCfmToClient
?L21:
?LBE16:
?LBE_connectionHandleSyncConnectReq:
	leavel	#23
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_connectionHandleSyncConnectCfm:
	enterl	#17
?LBB_connectionHandleSyncConnectCfm:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
	ld	X,@$XAP_AH
?LBB18:
	ld	AL,@(H'0009,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000C,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0008,Y)
	bsr	$_StreamScoSink
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	st	AL,@(0,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,@(H'0002,X)
	bsr	_sendSyncConnectCfmToClient
?LBE18:
?LBE_connectionHandleSyncConnectCfm:
	leavel	#17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_connectionHandleSyncConnectInd:
	enterl	#9
?LBB_connectionHandleSyncConnectInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB19:
	tst	@(H'0002,X)
	beq	?L25
?LBB20:
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'500E
	bsr	$_MessageSend
?L25:
?LBE20:
?LBE19:
?LBE_connectionHandleSyncConnectInd:
	leavel	#9
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_connectionHandleSyncConnectCompleteInd:
	enterl	#17
?LBB_connectionHandleSyncConnectCompleteInd:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
	ld	X,@$XAP_AH
?LBB21:
	ld	AL,@(H'0009,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000C,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0008,Y)
	bsr	$_StreamScoSink
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	st	AL,@(0,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,@(H'0002,X)
	bsr	_sendSyncConnectCfmToClient
?LBE21:
?LBE_connectionHandleSyncConnectCompleteInd:
	leavel	#17
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_connectionHandleSyncConnectRes:
	enterl	#18
?LBB_connectionHandleSyncConnectRes:
	st	AL,@(H'000F,Y)
?LBB22:
	ld	AL,#H'000E
	st	AL,@(0,Y)
	ld	AL,#H'0283
	st	AL,@(H'0001,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000F,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	st	AH,@(H'000B,Y)
	st	AL,@(H'000C,Y)
	ld	AH,@(H'0008,X)
	ld	AL,@(H'0009,X)
	st	AH,@(H'000D,Y)
	st	AL,@(H'000E,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000C,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000D,X)
	st	AL,@(H'0009,Y)
	tst	@(H'0005,X)
	beq	?L29
	ld	AL,#H'0000
	bra	(?L31)
?L29:
	ld	AL,#H'000D
?L31:
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE22:
?LBE_connectionHandleSyncConnectRes:
	leavel	#18
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_connectionHandleSyncDisconnectReq:
	enterl	#8
?LBB_connectionHandleSyncDisconnectReq:
	st	AL,@(H'0005,Y)
?LBB23:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0284
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_SinkGetScoHandle
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendDmPrim
?LBE23:
?LBE_connectionHandleSyncDisconnectReq:
	leavel	#8
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
$_connectionHandleSyncDisconnectInd:
	enterl	#9
?LBB_connectionHandleSyncDisconnectInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB24:
	tst	@(H'0002,X)
	beq	?L33
?LBB25:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamScoSink
	st	AL,@(H'0004,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'500F
	bsr	$_MessageSend
?L33:
?LBE25:
?LBE24:
?LBE_connectionHandleSyncDisconnectInd:
	leavel	#9
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_connectionHandleSyncDisconnectCfm:
	enterl	#9
?LBB_connectionHandleSyncDisconnectCfm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB26:
	tst	@(H'0002,X)
	beq	?L35
?LBB27:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamScoSink
	st	AL,@(H'0004,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'500F
	bsr	$_MessageSend
?L35:
?LBE27:
?LBE26:
?LBE_connectionHandleSyncDisconnectCfm:
	leavel	#9
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_connectionHandleSyncRenegotiateReq:
	enterl	#12
?LBB_connectionHandleSyncRenegotiateReq:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB28:
	tst	@(H'0001,X)
	bne	?L38
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,@(0,X)
	bsr	_sendSyncConnectCfmToClient
	bra	(?L37)
?L38:
?LBB29:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AL,#H'0285
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetScoHandle
	bsr	$_PanicNull
	st	AL,@(H'0005,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0009,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0009,Y)
	st	AH,@(H'0006,X)
	st	AL,@(H'0007,X)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_VmSendDmPrim
?L37:
?LBE29:
?LBE28:
?LBE_connectionHandleSyncRenegotiateReq:
	leavel	#12
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_connectionHandleSyncRenegotiateInd:
	enterl	#9
?LBB_connectionHandleSyncRenegotiateInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB30:
	tst	@(H'0002,X)
	beq	?L40
?LBB31:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamScoSink
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5010
	bsr	$_MessageSend
?L40:
?LBE31:
?LBE30:
?LBE_connectionHandleSyncRenegotiateInd:
	leavel	#9
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_connectionHandleSyncRenegotiateCfm:
	enterl	#9
?LBB_connectionHandleSyncRenegotiateCfm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB32:
	tst	@(H'0002,X)
	beq	?L42
?LBB33:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_StreamScoSink
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5010
	bsr	$_MessageSend
?L42:
?LBE33:
?LBE32:
?LBE_connectionHandleSyncRenegotiateCfm:
	leavel	#9
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
	ENDMOD

;# Function pattern *movqi2 used[0] = 168 used[1] = 5 total = 173
;# Function pattern *movqi3 used[0] = 188 total = 188
;# Function pattern *movhi used[2] = 9 used[3] = 13 total = 22
;# Function pattern *addqi0 used[0] = 30 total = 30
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 28 total = 28
;# Function pattern *call_value1 used[0] = 30 total = 30
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 14 total = 19
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	l2cap_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_setQosToDefault:
	enterl	#2
?LBB_setQosToDefault:
	ld	X,@$XAP_AL
	ld	AL,#H'0001
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	st	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0006,X)
	st	AL,@(H'0005,X)
	ld	AL,#-H'0001
	st	AL,@(H'0008,X)
	st	AL,@(H'0007,X)
	st	AL,@(H'000A,X)
	st	AL,@(H'0009,X)
?LBE_setQosToDefault:
	leavel	#2
_convertToQosFlow_t:
	enterl	#2
?LBB_convertToQosFlow_t:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff9
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	X,@H'fff8
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@H'fff9
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	X,@H'fff8
	ld	AH,@(H'0006,X)
	ld	AL,@(H'0007,X)
	ld	X,@H'fff9
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
	ld	X,@H'fff8
	ld	AH,@(H'0008,X)
	ld	AL,@(H'0009,X)
	ld	X,@H'fff9
	st	AH,@(H'0007,X)
	st	AL,@(H'0008,X)
	ld	X,@H'fff8
	ld	AH,@(H'000A,X)
	ld	AL,@(H'000B,X)
	ld	X,@H'fff9
	st	AH,@(H'0009,X)
	st	AL,@(H'000A,X)
?LBE_convertToQosFlow_t:
	leavel	#2
_sendL2capConnectCfm:
	enterl	#6
?LBB_sendL2capConnectCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0003,X)
	tst	@(H'000D,Y)
	beq	?L4
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0007,X)
?L4:
	ld	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0008,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0009,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0015,X)
	tst	@(H'000A,Y)
	beq	?L5
	ld	AL,@$XAP_UXL
	add	AL,#H'000A
	ld	AH,#H'000B
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memcpy
	bra	(?L6)
?L5:
	ld	AL,@(H'0003,Y)
	add	AL,#H'000A
	bsr	_setQosToDefault
?L6:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'503A
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_sendL2capConnectCfm:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sendL2capDisconnectCfm:
	enterl	#8
?LBB_sendL2capDisconnectCfm:
?LBB4:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0003,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5040
	bsr	$_MessageSend
?LBE4:
?LBE_sendL2capDisconnectCfm:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_convertDisconnectResult:
; leaf function with empty stack frame
?LBB_convertDisconnectResult:
	cmp	AL,#H'0803
	beq	?L12
	cmp	AL,#(H'0001+H'0803)
	bcc	?L15
	cmp	AL,#H'0000
	beq	?L10
	bra	(?L13)
?L15:
	cmp	AL,#H'080C
	beq	?L11
	bra	(?L13)
?L10:
	ld	AL,#H'0000
	bra	(?L8)
?L11:
	ld	AL,#H'0004
	bra	(?L8)
?L12:
	ld	AL,#H'0001
	bra	(?L8)
?L13:
	ld	AL,#H'0002
?L8:
?LBE_convertDisconnectResult:
	rts
$_connectionHandleL2capRegisterReq:
	enterl	#13
?LBB_connectionHandleL2capRegisterReq:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'0500
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	ld	AL,#H'0019
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
?LBE5:
?LBE_connectionHandleL2capRegisterReq:
	leavel	#13
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_connectionHandleL2capRegisterCfm:
	enterl	#9
?LBB_connectionHandleL2capRegisterCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB6:
	tst	@(H'0003,X)
	beq	?L19
?LBB7:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	tst	@(H'0006,X)
	beq	?L21
	ld	X,#H'0001
	st	X,@(H'0006,Y)
?L21:
	ld	AL,@(H'0006,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	st	AH,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	AH,#H'5038
	bsr	$_MessageSend
?L19:
?LBE7:
?LBE6:
?LBE_connectionHandleL2capRegisterCfm:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_connectionHandleL2capUnregisterReq:
	enterl	#7
?LBB_connectionHandleL2capUnregisterReq:
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0515
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
?LBE8:
?LBE_connectionHandleL2capUnregisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_connectionHandleL2capUnregisterCfm:
	enterl	#8
?LBB_connectionHandleL2capUnregisterCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB9:
	tst	@(H'0003,X)
	beq	?L23
?LBB10:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	tst	@(H'0004,X)
	bne	?L25
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bra	(?L26)
?L25:
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L26:
	st	AH,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	AH,#H'5039
	bsr	$_MessageSend
?L23:
?LBE10:
?LBE9:
?LBE_connectionHandleL2capUnregisterCfm:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_connectionHandleL2capConnectReq:
	enterl	#17
?LBB_connectionHandleL2capConnectReq:
	st	AL,@(H'000E,Y)
?LBB11:
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,#H'0501
	st	AL,@(H'0001,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L28
	ld	AL,@(H'0008,X)
	bsr	$_VmGetHandleFromPointer
	bra	(?L30)
?L28:
	ld	AL,#H'0000
?L30:
	st	AL,@(H'000D,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
?LBE11:
?LBE_connectionHandleL2capConnectReq:
	leavel	#17
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_connectionHandleL2capConnectCfm:
	enterl	#33
?LBB_connectionHandleL2capConnectCfm:
	st	AL,@(H'0017,Y)
	ld	X,@$XAP_AL
?LBB12:
	ld	AL,@(H'0004,X)
	st	AL,@(H'0018,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0013
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0017,Y)
	tst	@(H'000A,X)
	bne	?L32
?LBB13:
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	st	AL,@(H'0019,Y)
	ld	AL,#H'0000
	st	AL,@(H'001A,Y)
	st	AL,@(H'001B,Y)
	ld	X,@(H'0017,Y)
	ld	X,@(H'000F,X)
	st	X,@(H'001C,Y)
	ld	X,@(H'0017,Y)
	ld	X,@(H'0010,X)
	st	X,@(H'001D,Y)
	ld	X,@(H'0017,Y)
	ld	AL,@(H'000B,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L33
?LBB14:
	ld	AL,@(H'0011,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'001E,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	bsr	_convertToQosFlow_t
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	st	AL,@(H'001A,Y)
	ld	AL,@(H'001E,Y)
	bsr	$_free
?L33:
	ld	X,@(H'0017,Y)
?LBE14:
	ld	AL,@(H'000B,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L34
?LBB15:
	ld	AL,@(H'0012,X)
	bsr	$_VmGetPointerFromHandle
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	st	AH,@(H'001B,Y)
	bsr	$_free
?L34:
	ld	X,@(H'0017,Y)
?LBE15:
	ld	AL,@(H'0009,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0019,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'001C,Y)
	st	X,@(H'0002,Y)
	ld	AL,@(H'001D,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'001A,Y)
	st	X,@(H'0004,Y)
	ld	AL,@(H'001B,Y)
	st	AL,@(H'0005,Y)
	ld	X,@(H'0017,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0013
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0018,Y)
	ld	AH,#H'0000
	bsr	_sendL2capConnectCfm
	ld	AL,@(H'0019,Y)
	ld	AH,@(H'0018,Y)
	bsr	$_MessageSinkTask
?LBE13:
	bra	(?L35)
?L32:
	ld	X,@(H'0017,Y)
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0001
	bne	?L36
	ld	AL,@(H'0009,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0013
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0018,Y)
	ld	AH,#H'0001
	bra	(?L40)
?L36:
	ld	X,@(H'0017,Y)
	ld	AH,@(H'000A,X)
	ld	AL,#-H'0817
	add	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L35
	tst	@(H'0018,Y)
	beq	?L35
	ld	AL,@$XAP_AH
	bsr	$_connectionConvertL2capConnectStatus
	ld	AH,@$XAP_AL
	ld	X,@(H'0017,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0013
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0018,Y)
?L40:
	bsr	_sendL2capConnectCfm
?L35:
	ld	X,@(H'0017,Y)
	ld	AL,@(H'000E,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?LBE12:
?LBE_connectionHandleL2capConnectCfm:
	leavel	#33
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_connectionHandleL2capConnectInd:
	enterl	#16
?LBB_connectionHandleL2capConnectInd:
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB16:
	tst	@(H'0003,X)
	beq	?L43
?LBB17:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_UY
	add	X,#H'0009
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0005,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'503B
	bsr	$_MessageSend
?L43:
?LBE17:
?LBE16:
?LBE_connectionHandleL2capConnectInd:
	leavel	#16
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_connectionHandleL2capConnectRes:
	enterl	#10
?LBB_connectionHandleL2capConnectRes:
	ld	X,@$XAP_AL
?LBB18:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,#H'0502
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0002,Y)
	tst	@(H'0001,X)
	beq	?L46
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L47
	ld	AL,@(H'0006,X)
	bsr	$_VmGetHandleFromPointer
	bra	(?L50)
?L47:
	ld	AL,#H'0000
?L50:
	st	AL,@(H'0007,Y)
	bra	(?L49)
?L46:
	ld	AL,#H'0004
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
?L49:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
?LBE18:
?LBE_connectionHandleL2capConnectRes:
	leavel	#10
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_connectionHandleL2capDisconnectReq:
	enterl	#9
?LBB_connectionHandleL2capDisconnectReq:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB19:
	tst	@(H'0001,X)
	beq	?L52
	ld	AL,@(H'0001,X)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L52
?LBB20:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0503
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetL2capCid
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendL2capPrim
?LBE20:
	bra	(?L51)
?L52:
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bsr	_sendL2capDisconnectCfm
?L51:
?LBE19:
?LBE_connectionHandleL2capDisconnectReq:
	leavel	#9
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_connectionHandleL2capDisconnectCfm:
	enterl	#5
?LBB_connectionHandleL2capDisconnectCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	tst	@(H'0004,X)
	beq	?L54
	ld	AL,@(H'0005,X)
	bsr	_convertDisconnectResult
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0002,Y)
	bsr	_sendL2capDisconnectCfm
?L54:
?LBE_connectionHandleL2capDisconnectCfm:
	leavel	#5
$_connectionHandleL2capDisconnectInd:
	enterl	#9
?LBB_connectionHandleL2capDisconnectInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB21:
	tst	@(H'0004,X)
	beq	?L56
?LBB22:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	bsr	_convertDisconnectResult
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'503F
	bsr	$_MessageSend
?L56:
?LBE22:
?LBE21:
?LBE_connectionHandleL2capDisconnectInd:
	leavel	#9
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_connectionHandleL2capDisconnectRes:
	enterl	#7
?LBB_connectionHandleL2capDisconnectRes:
	ld	X,@$XAP_AL
?LBB23:
	tst	@(H'0001,X)
	beq	?L58
?LBB24:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0504
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetL2capCid
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L60
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
	bra	(?L58)
?L60:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_free
?L58:
?LBE24:
?LBE23:
?LBE_connectionHandleL2capDisconnectRes:
	leavel	#7
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_connectionHandleQosSetupCfm:
	enterl	#20
?LBB_connectionHandleQosSetupCfm:
	ld	X,@$XAP_AL
?LBB25:
	ld	AH,@(H'000D,X)
	ld	AL,@(H'000E,X)
	cmp	AH,#hwrd(H'0001+H'222D)
	bcs	?L64
	bne	?L62
	cmp	AL,#lwrd(H'0001+H'222D)
	bcc	?L62
?L64:
	ld	AH,#H'0011
?LBB26:
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(-1,Y)
	ld	AH,#H'0A07
	st	AH,@(H'0001,Y)
	ld	AH,#H'0011
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0005,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(H'0006,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(H'0007,Y)
	ld	AH,@(H'0008,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	st	AH,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	st	AH,@(H'000C,Y)
	st	AL,@(H'000D,Y)
	ld	AH,#H'61A8
	st	AH,@(H'000F,Y)
	ld	AH,#H'0000
	st	AH,@(H'000E,Y)
	ld	AH,@(H'000F,X)
	ld	AL,@(H'0010,X)
	st	AH,@(H'0010,Y)
	st	AL,@(H'0011,Y)
	ld	AL,@(-1,Y)
	bsr	$_VmSendDmPrim
?L62:
?LBE26:
?LBE25:
?LBE_connectionHandleQosSetupCfm:
	leavel	#20
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_connectionHandleL2capTimeout:
	enterl	#9
?LBB_connectionHandleL2capTimeout:
	ld	X,@$XAP_AL
?LBB27:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	tst	@(H'0004,X)
	beq	?L66
	ld	AL,@(H'0004,X)
	bra	(?L70)
?L66:
	tst	@(H'0003,X)
	beq	?L67
	ld	AL,@(H'0003,X)
?L70:
	st	AL,@(H'0006,Y)
?L67:
	tst	@(H'0006,Y)
	beq	?L65
?LBB28:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'5041
	bsr	$_MessageSend
?L65:
?LBE28:
?LBE27:
?LBE_connectionHandleL2capTimeout:
	leavel	#9
;.stabn	192,0,0,?LBB27
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;.stabn	224,0,0,?LBE27
_sendL2capMapFixedCidReq:
	enterl	#15
?LBB_sendL2capMapFixedCidReq:
	st	AL,@H'fff8
	st	AH,@(H'000C,Y)
?LBB29:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,#H'050E
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,#H'0002
	st	AL,@(H'0007,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(0,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0007,X)
	cmp	AL,#H'0001
	bne	?L72
	ld	AL,#H'0004
	bra	(?L74)
?L72:
	ld	AL,#H'0001
?L74:
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
?LBE29:
?LBE_sendL2capMapFixedCidReq:
	leavel	#15
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_connectionHandleL2capMapConnectionlessReq:
	enterl	#21
?LBB_connectionHandleL2capMapConnectionlessReq:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB30:
	tst	@(0,X)
	bne	?L77
	ld	X,@$XAP_AH
	tst	@(H'0007,X)
	bne	?L78
?LBB31:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0012,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_memcpy
	ld	AH,@(H'0012,Y)
	ld	X,@(H'0010,Y)
	st	AH,@(0,X)
	ld	AH,@(H'0011,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	bsr	$_BdaddrConvertVmToBluestack
?LBB32:
	ld	AL,#H'0009
	st	AL,@(H'0002,Y)
	ld	AL,#H'0506
	st	AL,@(H'0003,Y)
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_UY
	add	X,#H'000C
	ld	AL,@(H'0001,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0002
	st	AL,@(H'0009,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(0,X)
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendL2capPrim
?LBE32:
?LBE31:
	bra	(?L76)
?L78:
	ld	AL,@(H'0010,Y)
	ld	AH,@(H'0011,Y)
	bsr	_sendL2capMapFixedCidReq
	bra	(?L76)
?L77:
?LBB33:
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'0011,Y)
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'004C
	bsr	$_MessageSendConditionallyOnTask
?L76:
?LBE33:
?LBE30:
?LBE_connectionHandleL2capMapConnectionlessReq:
	leavel	#21
;.stabn	192,0,0,?LBB31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE31
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
_sendL2capMapConnectionlessCfm:
	enterl	#12
?LBB_sendL2capMapConnectionlessCfm:
	st	AL,@H'fff8
	ld	X,@(H'000E,Y)
?LBB34:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L82
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0008,Y)
?L82:
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'503C
	bsr	$_MessageSend
?LBE34:
?LBE_sendL2capMapConnectionlessCfm:
	leavel	#12
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
$_connectionHandleL2capGetInfoCfm:
	enterl	#9
?LBB_connectionHandleL2capGetInfoCfm:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB35:
	tst	@(0,X)
	beq	?L83
?LBB36:
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AH
	tst	@(H'0009,X)
	bne	?L85
	ld	AL,@(H'0006,X)
	cmp	AL,#H'0002
	bne	?L85
?LBB37:
	ld	AL,@(H'0008,X)
	bsr	$_VmGetPointerFromHandle
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	asl	#H'0008
	or	AL,@(0,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UXL
	bsr	$_free
	ld	AL,@(H'0006,Y)
	and	AL,#H'0200
	cmp	AL,#H'0000
	beq	?L86
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_sendL2capMapFixedCidReq
	bra	(?L88)
?L86:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,#H'0000
	st	X,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0007
	bra	(?L89)
?L85:
	ld	X,@(H'0005,Y)
?LBE37:
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,#H'0000
	st	X,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0008
?L89:
	bsr	_sendL2capMapConnectionlessCfm
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
?L88:
	ld	AL,@(H'0005,Y)
	bsr	$_free
?L83:
?LBE36:
?LBE35:
?LBE_connectionHandleL2capGetInfoCfm:
	leavel	#9
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
$_connectionHandleL2capMapFixedCidCfm:
	enterl	#14
?LBB_connectionHandleL2capMapFixedCidCfm:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB38:
	tst	@(0,X)
	beq	?L91
	ld	X,@$XAP_AH
	ld	AL,@(H'000C,X)
	cmp	AL,#H'0817
	beq	?L91
?LBB39:
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000B,X)
	bsr	$_PanicNull
	st	AL,@(H'000B,Y)
	ld	X,@(H'0009,Y)
	tst	@(H'000C,X)
	bne	?L94
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	bsr	$_PanicNull
	st	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_MessageSinkTask
?L94:
	ld	AH,@(H'0009,Y)
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0009,Y)
	ld	AL,@(H'000C,X)
	bsr	$_connectionConvertL2capMapFixedCidResult
	ld	AH,@$XAP_AL
	ld	X,@(H'0009,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	bsr	_sendL2capMapConnectionlessCfm
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
?L91:
?LBE39:
?LBE38:
?LBE_connectionHandleL2capMapFixedCidCfm:
	leavel	#14
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_connectionHandleL2capMapFixedCidInd:
	enterl	#15
?LBB_connectionHandleL2capMapFixedCidInd:
	st	AL,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB40:
	tst	@(H'0003,X)
	beq	?L96
?LBB41:
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	bsr	$_StreamSourceFromSink
	bsr	$_PanicNull
	st	AL,@(H'000C,Y)
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0005
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,#H'0002
	bsr	$_SourceConfigure
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L98
	ld	AL,#H'0001
	bra	(?L100)
?L98:
	ld	AL,#H'0000
?L100:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	X,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'503D
	bsr	$_MessageSend
?L96:
?LBE41:
?LBE40:
?LBE_connectionHandleL2capMapFixedCidInd:
	leavel	#15
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_connectionHandleL2capMapConnectionlessRsp:
	enterl	#12
?LBB_connectionHandleL2capMapConnectionlessRsp:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB42:
	ld	AL,@(H'0001,X)
	bsr	$_StreamSinkFromSource
	st	AL,@(H'0009,Y)
	ld	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'050F
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(0,X)
	bsr	$_MessageSinkTask
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0002
	bsr	$_SourceConfigure
	ld	AL,@(H'0009,Y)
	bsr	$_SinkGetL2capCid
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	tst	@(H'0002,X)
	bne	?L102
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L102:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendL2capPrim
?LBE42:
?LBE_connectionHandleL2capMapConnectionlessRsp:
	leavel	#12
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
$_connectionHandleL2capUnmapConnectionlessReq:
	enterl	#7
?LBB_connectionHandleL2capUnmapConnectionlessReq:
	ld	X,@$XAP_AL
?LBB43:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0512
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_SinkGetL2capCid
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendL2capPrim
?LBE43:
?LBE_connectionHandleL2capUnmapConnectionlessReq:
	leavel	#7
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_connectionHandleL2capUnmapFixedCidInd:
	enterl	#9
?LBB_connectionHandleL2capUnmapFixedCidInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB44:
	tst	@(H'0004,X)
	beq	?L104
?LBB45:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamL2capSink
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0005,X)
	bsr	_convertDisconnectResult
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'503E
	bsr	$_MessageSend
?L104:
?LBE45:
?LBE44:
?LBE_connectionHandleL2capUnmapFixedCidInd:
	leavel	#9
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
	ENDMOD

;# Function pattern *movqi2 used[0] = 293 used[1] = 38 total = 331
;# Function pattern *movqi3 used[0] = 290 total = 290
;# Function pattern *movhi used[2] = 9 used[3] = 8 total = 17
;# Function pattern *addqi0 used[0] = 38 total = 38
;# Function pattern *addqi2 used[0] = 11 used[2] = 1 total = 12
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 21 total = 21
;# Function pattern *call1 used[0] = 45 total = 45
;# Function pattern *call_value1 used[0] = 40 total = 40
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 10 used[1] = 26 total = 36
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 7 total = 7
;# Function pattern movstrqi+7 used[0] = 1 total = 1
	MODULE	rfc_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_convertRfcPortnegValuesToPortPar:
	enterl	#2
?LBB_convertRfcPortnegValuesToPortPar:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	ld	X,@H'fff8
	st	AL,@(H'0004,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	ld	X,@H'fff8
	st	AL,@(H'0005,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	st	AL,@(H'0006,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,X)
	ld	X,@H'fff8
	st	AL,@(H'0007,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0008,X)
	ld	X,@H'fff8
	st	AL,@(H'0008,X)
?LBE_convertRfcPortnegValuesToPortPar:
	leavel	#2
_convertPortParToRfcPortnegValues:
	enterl	#2
?LBB_convertPortParToRfcPortnegValues:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	ld	X,@H'fff8
	st	AL,@(H'0004,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	ld	X,@H'fff8
	st	AL,@(H'0005,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	st	AL,@(H'0006,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,X)
	ld	X,@H'fff8
	st	AL,@(H'0007,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0008,X)
	ld	X,@H'fff8
	st	AL,@(H'0008,X)
?LBE_convertPortParToRfcPortnegValues:
	leavel	#2
_encode_break_signal:
; leaf function with empty stack frame
?LBB_encode_break_signal:
	ld	AH,@$XAP_AL
	and	AL,#H'000F
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'0003
	or	AL,#H'0001
	bra	(?L3)
?L4:
	ld	AL,#H'0000
?L3:
?LBE_encode_break_signal:
	rts
$_connectionHandleRfcommRegisterReq:
	enterl	#8
?LBB_connectionHandleRfcommRegisterReq:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0601
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE2:
?LBE_connectionHandleRfcommRegisterReq:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_connectionHandleRfcommRegisterCfm:
	enterl	#8
?LBB_connectionHandleRfcommRegisterCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB3:
	tst	@(H'0004,X)
	beq	?L7
?LBB4:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	tst	@(H'0003,X)
	beq	?L9
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	bra	(?L10)
?L9:
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
?L10:
	st	AH,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	ld	AH,#H'5042
	bsr	$_MessageSend
?L7:
?LBE4:
?LBE3:
?LBE_connectionHandleRfcommRegisterCfm:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_connectionHandleRfcommUnregisterReq:
	enterl	#7
?LBB_connectionHandleRfcommUnregisterReq:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0602
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE5:
?LBE_connectionHandleRfcommUnregisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_connectionHandleRfcommUnregisterCfm:
	enterl	#8
?LBB_connectionHandleRfcommUnregisterCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB6:
	tst	@(H'0004,X)
	beq	?L12
?LBB7:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	tst	@(H'0003,X)
	bne	?L14
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bra	(?L15)
?L14:
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L15:
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	st	AH,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	ld	AH,#H'5043
	bsr	$_MessageSend
?L12:
?LBE7:
?LBE6:
?LBE_connectionHandleRfcommUnregisterCfm:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_sendRfcommConnectionCfm:
	enterl	#12
?LBB_sendRfcommConnectionCfm:
	st	AL,@H'fff8
	ld	X,@(H'0010,Y)
?LBB8:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0005,Y)
	cmp	X,#H'0000
	beq	?L17
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0009,Y)
?L17:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'5044
	bsr	$_MessageSend
?LBE8:
?LBE_sendRfcommConnectionCfm:
	leavel	#12
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_connectionHandleRfcommConnectReq:
	enterl	#9
?LBB_connectionHandleRfcommConnectReq:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB9:
	tst	@(H'0006,X)
	beq	?L19
?LBB10:
	ld	AL,#H'0014
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AL,#H'0604
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0008,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0009,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'000A,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'00CE
	ld	X,@(H'0006,Y)
	st	AL,@(H'0011,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0009,X)
	bsr	_encode_break_signal
	ld	X,@(H'0006,Y)
	st	AL,@(H'0012,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0013,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	st	AL,@(H'0007,X)
	st	AL,@(H'000B,X)
	st	AL,@(H'000C,X)
	st	AL,@(H'000D,X)
	st	AL,@(H'000E,X)
	st	AL,@(H'000F,X)
	st	AL,@(H'0010,X)
	ld	AL,@$XAP_UXL
	bsr	$_VmSendRfcommPrim
?LBE10:
	bra	(?L18)
?L19:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0004
	bsr	_sendRfcommConnectionCfm
?L18:
?LBE9:
?LBE_connectionHandleRfcommConnectReq:
	leavel	#9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_connectionHandleRfcommClientConnectCfm:
	enterl	#14
?LBB_connectionHandleRfcommClientConnectCfm:
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB11:
	ld	AL,@(H'000A,X)
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L21
?LBB12:
	ld	AL,@(H'0008,X)
	bsr	$_StreamRfcommSink
	st	AL,@(H'000B,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'1006
	beq	?L27
	cmp	AL,#(H'0001+H'1006)
	bcc	?L35
	cmp	AL,#H'1002
	beq	?L24
	cmp	AL,#(H'0001+H'1002)
	bcc	?L36
	cmp	AL,#H'0000
	beq	?L25
	bra	(?L31)
?L36:
	cmp	AL,#H'1003
	beq	?L28
	bra	(?L31)
?L35:
	cmp	AL,#H'100B
	beq	?L30
	cmp	AL,#(H'0001+H'100B)
	bcc	?L37
	cmp	AL,#H'1007
	beq	?L26
	bra	(?L31)
?L37:
	cmp	AL,#H'100D
	beq	?L29
	bra	(?L31)
?L24:
	ld	AL,@(H'000B,Y)
	bsr	$_PanicNull
	ld	AL,@(H'000B,Y)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_SourceConfigure
	ld	AL,@(H'000B,Y)
	ld	X,@(H'0009,Y)
	ld	AH,@(H'000A,X)
	bsr	$_MessageSinkTask
	ld	AH,#H'0001
	bra	(?L23)
?L25:
	ld	AL,@(H'000B,Y)
	bsr	$_PanicNull
	ld	AL,@(H'000B,Y)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_SourceConfigure
	ld	AH,#H'0000
	bra	(?L23)
?L26:
	ld	AH,#H'0007
	bra	(?L23)
?L27:
	ld	AH,#H'0006
	bra	(?L23)
?L28:
	ld	AH,#H'0008
	bra	(?L23)
?L29:
	ld	AH,#H'0009
	bra	(?L23)
?L30:
	ld	AH,#H'000A
	bra	(?L23)
?L31:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#(H'0001+H'0FFF)
	bcc	?L32
	bsr	$_connectionConvertL2capConnectStatus
	ld	AH,@$XAP_AL
	bra	(?L23)
?L32:
	ld	AH,#H'0002
?L23:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	bsr	_sendRfcommConnectionCfm
?L21:
?LBE12:
?LBE11:
?LBE_connectionHandleRfcommClientConnectCfm:
	leavel	#14
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_connectionHandleRfcommConnectInd:
	enterl	#12
?LBB_connectionHandleRfcommConnectInd:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB13:
	ld	AL,@(H'0009,X)
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L44
?LBB14:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0008,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0007,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'5046
	bsr	$_MessageSend
?L44:
?LBE14:
?LBE13:
?LBE_connectionHandleRfcommConnectInd:
	leavel	#12
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_connectionHandleRfcommConnectRes:
	enterl	#18
?LBB_connectionHandleRfcommConnectRes:
	st	AL,@(H'000F,Y)
?LBB15:
	ld	AL,#H'000C
	st	AL,@(H'0002,Y)
	ld	AL,#H'0605
	st	AL,@(H'0003,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0002,X)
	bsr	$_SinkGetRfcommConnId
	bsr	$_PanicNull
	st	AL,@(H'0005,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_SourceConfigure
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(0,X)
	bsr	$_MessageSinkTask
	ld	X,@(H'000F,Y)
	tst	@(H'0001,X)
	beq	?L47
	ld	AL,#H'1000
	bra	(?L49)
?L47:
	ld	AL,#H'1001
?L49:
	st	AL,@(H'0006,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00CE
	st	AL,@(H'000C,Y)
	ld	AL,@(H'0006,X)
	bsr	_encode_break_signal
	st	AL,@(H'000D,Y)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000E,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	st	AL,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendRfcommPrim
?LBE15:
?LBE_connectionHandleRfcommConnectRes:
	leavel	#18
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_connectionHandleRfcommServerConnectCfm:
	enterl	#17
?LBB_connectionHandleRfcommServerConnectCfm:
	st	AL,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(H'0008,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'000C,Y)
	bsr	$_MessageSinkGetTask
	st	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L50
?LBB17:
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'1003
	beq	?L56
	cmp	AL,#(H'0001+H'1003)
	bcc	?L62
	cmp	AL,#H'0000
	beq	?L53
	cmp	AL,#H'1001
	beq	?L55
	bra	(?L58)
?L62:
	cmp	AL,#H'1008
	beq	?L54
	cmp	AL,#H'100B
	beq	?L57
	bra	(?L58)
?L53:
	ld	AH,#H'0000
	st	AH,@(H'000E,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_StreamSourceFromSink
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_SourceConfigure
	bra	(?L52)
?L54:
	ld	AL,#H'0003
	bra	(?L64)
?L55:
	ld	AH,#H'0005
	bra	(?L63)
?L56:
	ld	AL,#H'0008
	bra	(?L64)
?L57:
	ld	AH,#H'000A
	bra	(?L63)
?L58:
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#(H'0001+H'0FFF)
	bcc	?L59
	bsr	$_connectionConvertL2capConnectStatus
?L64:
	st	AL,@(H'000E,Y)
	bra	(?L52)
?L59:
	ld	AH,#H'0002
?L63:
	st	AH,@(H'000E,Y)
?L52:
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	add	AL,#H'0004
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	bsr	$_BdaddrConvertBluestackToVm
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'5045
	bsr	$_MessageSend
?L50:
?LBE17:
?LBE16:
?LBE_connectionHandleRfcommServerConnectCfm:
	leavel	#17
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
_sendRfcommDisconnectCfm:
	enterl	#8
?LBB_sendRfcommDisconnectCfm:
?LBB18:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5048
	bsr	$_MessageSend
?LBE18:
?LBE_sendRfcommDisconnectCfm:
	leavel	#8
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_connectionHandleRfcommDisconnectReq:
	enterl	#9
?LBB_connectionHandleRfcommDisconnectReq:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB19:
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetRfcommConnId
	ld	AH,@$XAP_AL
	ld	X,@(H'0006,Y)
	tst	@(H'0001,X)
	beq	?L71
	cmp	AL,#H'0000
	beq	?L71
?LBB20:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0606
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendRfcommPrim
?LBE20:
	bra	(?L70)
?L71:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	_sendRfcommDisconnectCfm
?L70:
?LBE19:
?LBE_connectionHandleRfcommDisconnectReq:
	leavel	#9
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
$_connectionHandleRfcommDisconnectCfm:
	enterl	#6
?LBB_connectionHandleRfcommDisconnectCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB21:
	ld	AL,@(H'0003,X)
	cmp	AL,#H'1008
	beq	?L73
?LBB22:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	bsr	$_MessageSinkGetTask
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L73
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertRfcommDisconnectStatus
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	_sendRfcommDisconnectCfm
?L73:
?LBE22:
?LBE21:
?LBE_connectionHandleRfcommDisconnectCfm:
	leavel	#6
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_connectionHandleRfcommDisconnectInd:
	enterl	#11
?LBB_connectionHandleRfcommDisconnectInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB23:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0007,Y)
	bsr	$_MessageSinkGetTask
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L77
?LBB24:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertRfcommDisconnectStatus
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5047
	bsr	$_MessageSend
?L77:
?LBE24:
?LBE23:
?LBE_connectionHandleRfcommDisconnectInd:
	leavel	#11
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
$_connectionHandleRfcommDisconnectRsp:
	enterl	#7
?LBB_connectionHandleRfcommDisconnectRsp:
	ld	X,@$XAP_AL
?LBB25:
	ld	AL,@(0,X)
	bsr	$_SinkGetRfcommConnId
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L79
?LBB26:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0607
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?L79:
?LBE26:
?LBE25:
?LBE_connectionHandleRfcommDisconnectRsp:
	leavel	#7
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
$_connectionHandleRfcommPortNegReq:
	enterl	#16
?LBB_connectionHandleRfcommPortNegReq:
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB27:
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetRfcommConnId
	bsr	$_PanicNull
	ld	AH,#H'000C
	st	AH,@(0,Y)
	ld	AH,#H'060A
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	_convertPortParToRfcPortnegValues
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE27:
?LBE_connectionHandleRfcommPortNegReq:
	leavel	#16
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_connectionHandleRfcommPortNegCfm:
	enterl	#18
?LBB_connectionHandleRfcommPortNegCfm:
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB28:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'000E,Y)
	bsr	$_MessageSinkGetTask
	st	AL,@(H'000F,Y)
	cmp	AL,#H'0000
	beq	?L82
?LBB29:
	ld	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	X,@(H'000D,Y)
	tst	@(H'000C,X)
	bne	?L84
	ld	AL,#H'0000
	bra	(?L86)
?L84:
	ld	AL,#H'0002
?L86:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0002
	ld	AH,@(H'000D,Y)
	add	AH,#H'0003
	bsr	_convertRfcPortnegValuesToPortPar
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(0,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'504A
	bsr	$_MessageSend
?L82:
?LBE29:
?LBE28:
?LBE_connectionHandleRfcommPortNegCfm:
	leavel	#18
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
$_connectionHandleRfcommPortNegInd:
	enterl	#18
?LBB_connectionHandleRfcommPortNegInd:
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB30:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'000E,Y)
	bsr	$_MessageSinkGetTask
	st	AL,@(H'000F,Y)
	cmp	AL,#H'0000
	beq	?L87
?LBB31:
	ld	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0004
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	_convertRfcPortnegValuesToPortPar
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'5049
	bsr	$_MessageSend
?L87:
?LBE31:
?LBE30:
?LBE_connectionHandleRfcommPortNegInd:
	leavel	#18
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
$_connectionHandleRfcommPortNegRsp:
	enterl	#15
?LBB_connectionHandleRfcommPortNegRsp:
	st	AL,@(H'000C,Y)
	ld	X,@$XAP_AL
?LBB32:
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetRfcommConnId
	bsr	$_PanicNull
	ld	AH,#H'000B
	st	AH,@(0,Y)
	ld	AH,#H'060B
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	_convertPortParToRfcPortnegValues
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE32:
?LBE_connectionHandleRfcommPortNegRsp:
	leavel	#15
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
$_connectionHandleRfcommControlReq:
	enterl	#8
?LBB_connectionHandleRfcommControlReq:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB33:
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetRfcommConnId
	bsr	$_PanicNull
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,#H'060C
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'00CE
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	_encode_break_signal
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE33:
?LBE_connectionHandleRfcommControlReq:
	leavel	#8
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_connectionHandleRfcommControlCfm:
	enterl	#10
?LBB_connectionHandleRfcommControlCfm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB34:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0007,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L91
?LBB35:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0000
	beq	?L94
	cmp	AL,#H'100B
	beq	?L95
	bra	(?L96)
?L94:
	ld	AL,#H'0000
	bra	(?L98)
?L95:
	ld	AL,#H'0001
	bra	(?L98)
?L96:
	ld	AL,#H'0002
?L98:
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'504C
	bsr	$_MessageSend
?L91:
?LBE35:
?LBE34:
?LBE_connectionHandleRfcommControlCfm:
	leavel	#10
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
$_connectionHandleRfcommControlInd:
	enterl	#10
?LBB_connectionHandleRfcommControlInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB36:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0007,Y)
	bsr	$_MessageSinkGetTask
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L100
?LBB37:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0004,Y)
	tst	@(H'0004,X)
	beq	?L102
	ld	AH,@(H'0004,X)
	lsr	#H'0003
	and	AH,#H'000F
	st	AH,@(H'0003,Y)
	bra	(?L103)
?L102:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L103:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'504B
	bsr	$_MessageSend
?L100:
?LBE37:
?LBE36:
?LBE_connectionHandleRfcommControlInd:
	leavel	#10
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
$_connectionHandleRfcommLineStatusReq:
	enterl	#8
?LBB_connectionHandleRfcommLineStatusReq:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB38:
	ld	AL,@(H'0001,X)
	bsr	$_SinkGetRfcommConnId
	bsr	$_PanicNull
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,#H'060D
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendRfcommPrim
?LBE38:
?LBE_connectionHandleRfcommLineStatusReq:
	leavel	#8
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
$_connectionHandleRfcommLineStatusCfm:
	enterl	#10
?LBB_connectionHandleRfcommLineStatusCfm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB39:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0007,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L105
?LBB40:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0000
	beq	?L108
	cmp	AL,#H'100B
	beq	?L109
	bra	(?L110)
?L108:
	ld	AL,#H'0000
	bra	(?L112)
?L109:
	ld	AL,#H'0001
	bra	(?L112)
?L110:
	ld	AL,#H'0003
?L112:
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'504E
	bsr	$_MessageSend
?L105:
?LBE40:
?LBE39:
?LBE_connectionHandleRfcommLineStatusCfm:
	leavel	#10
;.stabn	192,0,0,?LBB39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	224,0,0,?LBE39
$_connectionHandleRfcommLineStatusInd:
	enterl	#10
?LBB_connectionHandleRfcommLineStatusInd:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB41:
	ld	AL,@(H'0002,X)
	bsr	$_StreamRfcommSink
	bsr	$_PanicNull
	st	AL,@(H'0007,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L114
?LBB42:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'504D
	bsr	$_MessageSend
?L114:
?LBE42:
?LBE41:
?LBE_connectionHandleRfcommLineStatusInd:
	leavel	#10
;.stabn	192,0,0,?LBB41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;.stabn	224,0,0,?LBE41
	ENDMOD

;# Function pattern *movqi2 used[0] = 270 used[1] = 37 total = 307
;# Function pattern *movqi3 used[0] = 248 total = 248
;# Function pattern *addqi0 used[0] = 30 total = 30
;# Function pattern *addqi2 used[0] = 11 total = 11
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 34 total = 34
;# Function pattern *call1 used[0] = 35 total = 35
;# Function pattern *call_value1 used[0] = 62 total = 62
;# Function pattern movstrqi+3 used[0] = 19 used[1] = 9 total = 28
;# Function pattern movstrqi+4 used[1] = 6 total = 6
;# Function pattern movstrqi+5 used[0] = 13 total = 13
	MODULE	sdp_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_SdpPingServiceRequest:
	dc	H'0035
	dc	H'0005
	dc	H'001A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	.CODE
_sendSdpCloseSearchCfm:
	enterl	#8
?LBB_sendSdpCloseSearchCfm:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'5031
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendSdpCloseSearchCfm:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sendSearchRequest:
	enterl	#4
?LBB_sendSearchRequest:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	tst	@(0,X)
	beq	?L4
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0001
	bra	(?L3)
?L5:
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L13
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L12
	ld	AL,#H'0003
	bra	(?L3)
?L4:
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	bne	?L13
	bsr	$_connectionGetCmTask
	ld	AH,@(0,Y)
	cmp	AH,@$XAP_AL
	bne	?L12
?L13:
	ld	AL,#H'0002
	bra	(?L3)
?L12:
	ld	AL,#H'0000
?L3:
?LBE_sendSearchRequest:
	leavel	#4
$_connectionHandleSdpRegisterRequest:
	enterl	#11
?LBB_connectionHandleSdpRegisterRequest:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB4:
	tst	@(0,X)
	bne	?L17
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
?LBB5:
	ld	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,#H'0800
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
?LBE5:
	bra	(?L16)
?L17:
?LBB6:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'003E
	bsr	$_MessageSendConditionallyOnTask
?L16:
?LBE6:
?LBE4:
?LBE_connectionHandleSdpRegisterRequest:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_connectionHandleSdpRegisterCfm:
	enterl	#10
?LBB_connectionHandleSdpRegisterCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB7:
	tst	@(0,X)
	beq	?L19
?LBB8:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	bsr	$_connectionConvertSdsResult
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'502E
	bsr	$_MessageSend
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'2000
	beq	?L19
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
?L19:
?LBE8:
?LBE7:
?LBE_connectionHandleSdpRegisterCfm:
	leavel	#10
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_connectionHandleSdpUnregisterRequest:
	enterl	#10
?LBB_connectionHandleSdpUnregisterRequest:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB9:
	tst	@(0,X)
	bne	?L24
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?LBB10:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,#H'0801
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
?LBE10:
	bra	(?L23)
?L24:
?LBB11:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	X,@(0,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003F
	bsr	$_MessageSendConditionallyOnTask
?L23:
?LBE11:
?LBE9:
?LBE_connectionHandleSdpUnregisterRequest:
	leavel	#10
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_connectionHandleSdpUnregisterCfm:
	enterl	#10
?LBB_connectionHandleSdpUnregisterCfm:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB12:
	tst	@(0,X)
	beq	?L26
?LBB13:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	bsr	$_connectionConvertSdsResult
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'502F
	bsr	$_MessageSend
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,#H'2000
	beq	?L26
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
?L26:
?LBE13:
?LBE12:
?LBE_connectionHandleSdpUnregisterCfm:
	leavel	#10
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_connectionHandleSdpServerConfigMtu:
	enterl	#15
?LBB_connectionHandleSdpServerConfigMtu:
	st	AL,@(H'000C,Y)
	ld	X,@$XAP_AL
?LBB14:
	tst	@(0,X)
	bne	?L31
?LBB15:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,#H'0802
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
?LBE15:
	bra	(?L30)
?L31:
?LBB16:
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0040
	bsr	$_MessageSendConditionallyOnTask
?L30:
?LBE16:
?LBE14:
?LBE_connectionHandleSdpServerConfigMtu:
	leavel	#15
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_connectionHandleSdpClientConfigMtu:
	enterl	#15
?LBB_connectionHandleSdpClientConfigMtu:
	st	AL,@(H'000C,Y)
	ld	X,@$XAP_AL
?LBB17:
	tst	@(0,X)
	bne	?L34
?LBB18:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,#H'0705
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
?LBE18:
	bra	(?L33)
?L34:
?LBB19:
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0008,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0041
	bsr	$_MessageSendConditionallyOnTask
?L33:
?LBE19:
?LBE17:
?LBE_connectionHandleSdpClientConfigMtu:
	leavel	#15
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_connectionHandleSdpOpenSearchRequest:
	enterl	#14
?LBB_connectionHandleSdpOpenSearchRequest:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB20:
	tst	@(0,X)
	bne	?L37
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'000A,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'000A,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'000A,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'000A,Y)
	st	AL,@(H'0005,X)
?LBB21:
	ld	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	AL,#H'0703
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_BdaddrConvertVmToBluestack
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
?LBE21:
	bra	(?L36)
?L37:
	bsr	$_connectionGetCmTask
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	beq	?L36
?LBB22:
	ld	AL,#H'0005
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0042
	bsr	$_MessageSendConditionallyOnTask
?L36:
?LBE22:
?LBE20:
?LBE_connectionHandleSdpOpenSearchRequest:
	leavel	#14
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
$_connectionHandleSdpOpenSearchCfm:
	enterl	#12
?LBB_connectionHandleSdpOpenSearchCfm:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB23:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0008,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	bne	?L42
	ld	X,@(H'0009,Y)
?LBB24:
	tst	@(H'0003,X)
	bne	?L44
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	ld	X,#H'0001
	st	X,@(0,Y)
	ld	X,#H'0007
	st	X,@(H'0001,Y)
	ld	X,#(_SdpPingServiceRequest)
	st	X,@(H'0002,Y)
	bsr	$_ConnectionSdpServiceSearchRequest
?LBE24:
	bra	(?L44)
?L42:
	ld	X,@(H'0008,Y)
	tst	@(0,X)
	beq	?L44
?LBB25:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0003,X)
	bsr	$_connectionConvertSdpOpenStatus
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5030
	bsr	$_MessageSend
?L44:
	ld	X,@(H'0009,Y)
?LBE25:
	tst	@(H'0003,X)
	beq	?L41
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
?L41:
?LBE23:
?LBE_connectionHandleSdpOpenSearchCfm:
	leavel	#12
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_connectionHandleSdpCloseSearchRequest:
	enterl	#9
?LBB_connectionHandleSdpCloseSearchRequest:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB26:
	tst	@(0,X)
	beq	?L49
	add	AL,#H'0002
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L49
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0006,Y)
	cmp	AL,@(0,X)
	bne	?L51
?LBB27:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0704
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendSdpPrim
?LBE27:
	bra	(?L48)
?L51:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0003
	bra	(?L55)
?L49:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0002
?L55:
	bsr	_sendSdpCloseSearchCfm
?L48:
?LBE26:
?LBE_connectionHandleSdpCloseSearchRequest:
	leavel	#9
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_connectionHandleSdpCloseSearchInd:
	enterl	#3
?LBB_connectionHandleSdpCloseSearchInd:
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
?LBB28:
	ld	AL,@(H'0003,X)
	cmp	AL,#H'1811
	beq	?L59
	cmp	AL,#H'1812
	beq	?L60
	bra	(?L61)
?L59:
	ld	AH,#H'0000
	bra	(?L58)
?L60:
	ld	AH,#H'0001
	bra	(?L58)
?L61:
	ld	AH,#H'0004
?L58:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	bsr	_sendSdpCloseSearchCfm
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(0,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
?LBE28:
?LBE_connectionHandleSdpCloseSearchInd:
	leavel	#3
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_connectionHandleSdpServiceSearchRequest:
	enterl	#22
?LBB_connectionHandleSdpServiceSearchRequest:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB29:
	add	AH,#H'0001
	st	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'000D,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'000F,Y)
	cmp	AL,#H'0000
	bne	?L66
?LBB30:
	ld	AL,#H'000A
	st	AL,@(H'0002,Y)
	ld	AL,#H'0700
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'0010,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L67
?LBB31:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0011,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0008
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0011,Y)
	bsr	$_memmove
	ld	AL,@(H'0011,Y)
	bsr	$_VmGetHandleFromPointer
	bra	(?L77)
?L67:
?LBE31:
	ld	AL,#H'0000
?L77:
	st	AL,@(H'000B,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000D,Y)
	st	AL,@(H'0001,X)
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	ld	X,@(H'000E,Y)
	or	AL,@(H'0006,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@H'fff8
	st	AH,@(H'0003,X)
?LBE30:
	bra	(?L65)
?L66:
	bsr	$_connectionGetCmTask
	ld	X,@(H'000E,Y)
	ld	AH,@(0,X)
	cmp	AH,@$XAP_AL
	beq	?L65
?LBB32:
	ld	AH,#H'0000
	st	AH,@(H'0012,Y)
	ld	AL,@(H'0007,X)
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0013,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0007,X)
	add	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AH,@(H'000F,Y)
	cmp	AH,#H'0001
	beq	?L79
	ld	AH,@(H'000F,Y)
	cmp	AH,#H'0002
	bne	?L73
	ld	AL,@(H'000D,Y)
	add	AL,#H'0001
	bra	(?L78)
?L73:
	ld	AH,@(H'000F,Y)
	cmp	AH,#H'0003
	bne	?L75
?L79:
	ld	AL,@(H'000D,Y)
?L78:
	st	AL,@(H'0012,Y)
	bra	(?L72)
?L75:
	bsr	$_Panic
?L72:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0013,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0012,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0044
	bsr	$_MessageSendConditionallyOnTask
?L65:
?LBE32:
?LBE29:
?LBE_connectionHandleSdpServiceSearchRequest:
	leavel	#22
;.stabn	192,0,0,?LBB29
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE29
$_connectionHandleSdpServiceSearchCfm:
	enterl	#12
?LBB_connectionHandleSdpServiceSearchCfm:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB33:
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	X,@(H'0003,X)
	ld	AH,@$XAP_UXL
	and	AH,#H'00FF
	ld	AL,@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L85
	and	AH,#H'00FE
	ld	AL,@$XAP_UXL
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	AL,#H'5033
	st	AL,@(H'0006,Y)
	bra	(?L86)
?L85:
	ld	X,@(H'0004,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0005,Y)
	ld	AH,#H'5032
	st	AH,@(H'0006,Y)
?L86:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	cmp	AH,@$XAP_AL
	bne	?L87
?LBB34:
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0001
	st	AL,@(H'0005,X)
	ld	AH,#H'0007
	st	AH,@(H'0007,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0008
	st	AH,@(0,Y)
	ld	AH,#(_SdpPingServiceRequest)
	bsr	$_memmove
	ld	AH,#H'0000
	ld	X,@(H'0007,Y)
	st	AH,@(H'0006,X)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0007,Y)
	st	X,@(0,Y)
	ld	AH,#H'07D0
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,#H'0044
	bsr	$_MessageSendLater
	ld	X,@(H'0004,Y)
	tst	@(H'0008,X)
	beq	?L97
?LBB35:
	ld	AL,@(H'0009,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
	bra	(?L97)
?L87:
	ld	X,@(H'0003,Y)
?LBE35:
?LBE34:
	tst	@(H'0001,X)
	beq	?L90
	ld	AL,@(H'0005,Y)
?LBB36:
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000A,X)
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000B,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0004,Y)
	tst	@(H'0008,X)
	beq	?L91
?LBB37:
	ld	AL,@(H'0009,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'5032
	bne	?L92
	ld	AL,@(H'0008,Y)
	add	AL,#H'0008
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	ld	AL,@(H'0009,Y)
	bsr	$_free
	bra	(?L94)
?L92:
	ld	AH,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	AH,@(H'0008,X)
?LBE37:
	bra	(?L94)
?L91:
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(H'0008,X)
?L94:
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSend
?L97:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
?LBE36:
	bra	(?L84)
?L90:
	ld	X,@(H'0004,Y)
	tst	@(H'0008,X)
	beq	?L84
?LBB38:
	ld	AL,@(H'0009,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L84:
?LBE38:
?LBE33:
?LBE_connectionHandleSdpServiceSearchCfm:
	leavel	#12
;.stabn	192,0,0,?LBB33
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	224,0,0,?LBE33
$_connectionHandleSdpAttributeSearchRequest:
	enterl	#24
?LBB_connectionHandleSdpAttributeSearchRequest:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB39:
	add	AH,#H'0001
	st	AH,@(H'0012,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'000F,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	bne	?L101
?LBB40:
	ld	AL,#H'000C
	st	AL,@(H'0002,Y)
	ld	AL,#H'0701
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0011,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'0012,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0010,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(H'000A,Y)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L102
?LBB41:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0010,Y)
	add	AH,#H'000A
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	bsr	$_memmove
	ld	AL,@(H'0013,Y)
	bsr	$_VmGetHandleFromPointer
	bra	(?L111)
?L102:
?LBE41:
	ld	AL,#H'0000
?L111:
	st	AL,@(H'000D,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000F,Y)
	st	AL,@(H'0001,X)
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	ld	X,@(H'0010,Y)
	or	AL,@(H'0009,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@H'fff8
	st	AH,@(H'0003,X)
?LBE40:
	bra	(?L100)
?L101:
?LBB42:
	ld	AH,#H'0000
	st	AH,@(H'0014,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0007,X)
	add	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0015,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0007,X)
	add	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0001
	beq	?L113
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0002
	bne	?L107
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	bra	(?L112)
?L107:
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0003
	bne	?L109
?L113:
	ld	AL,@(H'000F,Y)
?L112:
	st	AL,@(H'0014,Y)
	bra	(?L106)
?L109:
	bsr	$_Panic
?L106:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0015,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0014,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0045
	bsr	$_MessageSendConditionallyOnTask
?L100:
?LBE42:
?LBE39:
?LBE_connectionHandleSdpAttributeSearchRequest:
	leavel	#24
;.stabn	192,0,0,?LBB39
;.stabn	192,0,0,?LBB40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	224,0,0,?LBE40
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;.stabn	224,0,0,?LBE39
$_connectionHandleSdpAttributeSearchCfm:
	enterl	#9
?LBB_connectionHandleSdpAttributeSearchCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB43:
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	X,@(H'0003,X)
	ld	AH,@$XAP_UXL
	and	AH,#H'00FF
	ld	AL,@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L118
	and	AH,#H'00FE
	ld	AL,@$XAP_UXL
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	ld	AL,#H'5035
	st	AL,@(H'0004,Y)
	bra	(?L119)
?L118:
	ld	X,@(H'0002,Y)
	ld	X,@(H'0007,X)
	st	X,@(H'0003,Y)
	ld	AH,#H'5034
	st	AH,@(H'0004,Y)
?L119:
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	beq	?L120
	ld	AL,@(H'0003,Y)
?LBB44:
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0009,X)
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0002,Y)
	tst	@(H'0007,X)
	beq	?L121
?LBB45:
	ld	AL,@(H'0008,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'5034
	bne	?L122
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	bsr	$_free
	bra	(?L124)
?L122:
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	st	AH,@(H'0007,X)
?LBE45:
	bra	(?L124)
?L121:
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	AL,@(H'0007,X)
?L124:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0004,Y)
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0001,X)
?LBE44:
	bra	(?L117)
?L120:
	ld	X,@(H'0002,Y)
	tst	@(H'0007,X)
	beq	?L117
?LBB46:
	ld	AL,@(H'0008,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L117:
?LBE46:
?LBE43:
?LBE_connectionHandleSdpAttributeSearchCfm:
	leavel	#9
;.stabn	192,0,0,?LBB43
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	224,0,0,?LBE44
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE43
$_connectionHandleSdpServiceSearchAttrRequest:
	enterl	#26
?LBB_connectionHandleSdpServiceSearchAttrRequest:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB47:
	add	AH,#H'0001
	st	AH,@(H'0012,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'000F,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	bne	?L129
?LBB48:
	ld	AL,#H'000C
	st	AL,@(H'0002,Y)
	ld	AL,#H'0702
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0011,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'0012,Y)
	bsr	$_BdaddrConvertVmToBluestack
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L130
?LBB49:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0010,Y)
	add	AH,#H'0009
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	bsr	$_memmove
	ld	AL,@(H'0013,Y)
	bsr	$_VmGetHandleFromPointer
	bra	(?L141)
?L130:
?LBE49:
	ld	AL,#H'0000
?L141:
	st	AL,@(H'000B,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L132
?LBB50:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0014,Y)
	ld	AH,@(H'0010,Y)
	ld	X,@$XAP_AH
	add	AH,@(H'0006,X)
	add	AH,#H'0009
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0014,Y)
	bsr	$_memmove
	ld	AL,@(H'0014,Y)
	bsr	$_VmGetHandleFromPointer
	bra	(?L142)
?L132:
?LBE50:
	ld	AL,#H'0000
?L142:
	st	AL,@(H'000D,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'000E,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000F,Y)
	st	AL,@(H'0001,X)
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	ld	X,@(H'0010,Y)
	or	AL,@(H'0008,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@H'fff8
	st	AH,@(H'0003,X)
?LBE48:
	bra	(?L128)
?L129:
?LBB51:
	ld	AH,#H'0000
	st	AH,@(H'0015,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0006,X)
	add	AL,@(H'0007,X)
	add	AL,#H'000A
	st	AL,@(H'0017,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0016,Y)
	ld	AH,@(H'0017,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_memmove
	ld	AL,@(H'0011,Y)
	cmp	AL,#H'0001
	bne	?L135
	ld	X,@(H'000F,Y)
	st	X,@(H'0015,Y)
	bra	(?L136)
?L135:
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0002
	bne	?L137
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	bra	(?L143)
?L137:
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0003
	bne	?L139
	ld	AL,@(H'000F,Y)
?L143:
	st	AL,@(H'0015,Y)
	bra	(?L136)
?L139:
	bsr	$_Panic
?L136:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0016,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0015,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0046
	bsr	$_MessageSendConditionallyOnTask
?L128:
?LBE51:
?LBE47:
?LBE_connectionHandleSdpServiceSearchAttrRequest:
	leavel	#26
;.stabn	192,0,0,?LBB47
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	224,0,0,?LBE48
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;.stabn	224,0,0,?LBE47
$_connectionHandleSdpServiceSearchAttributeCfm:
	enterl	#9
?LBB_connectionHandleSdpServiceSearchAttributeCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB52:
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	X,@(H'0003,X)
	ld	AH,@$XAP_UXL
	and	AH,#H'00FF
	ld	AL,@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L148
	and	AH,#H'00FE
	ld	AL,@$XAP_UXL
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	ld	AL,#H'5037
	st	AL,@(H'0004,Y)
	bra	(?L149)
?L148:
	ld	X,@(H'0002,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0003,Y)
	ld	AH,#H'5036
	st	AH,@(H'0004,Y)
?L149:
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	beq	?L150
	ld	AL,@(H'0003,Y)
?LBB53:
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000B,X)
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000C,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	bsr	$_BdaddrConvertBluestackToVm
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0002,Y)
	tst	@(H'0008,X)
	beq	?L151
?LBB54:
	ld	AL,@(H'0009,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'5036
	bne	?L152
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	bsr	$_free
	bra	(?L154)
?L152:
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	st	AH,@(H'0008,X)
?LBE54:
	bra	(?L154)
?L151:
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	AL,@(H'0008,X)
?L154:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0004,Y)
	bsr	$_MessageSend
	ld	X,@(H'0002,Y)
	tst	@(H'000A,X)
	bne	?L147
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0001,X)
?LBE53:
	bra	(?L147)
?L150:
	ld	X,@(H'0002,Y)
	tst	@(H'0008,X)
	beq	?L147
?LBB55:
	ld	AL,@(H'0009,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L147:
?LBE55:
?LBE52:
?LBE_connectionHandleSdpServiceSearchAttributeCfm:
	leavel	#9
;.stabn	192,0,0,?LBB52
;.stabn	192,0,0,?LBB53
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;.stabn	224,0,0,?LBE53
;.stabn	192,0,0,?LBB55
;.stabn	224,0,0,?LBE55
;.stabn	224,0,0,?LBE52
$_connectionHandleSdpTerminatePrimitiveRequest:
	enterl	#7
?LBB_connectionHandleSdpTerminatePrimitiveRequest:
	st	AL,@H'fff8
	ld	X,@H'fff8
?LBB56:
	tst	@(H'0001,X)
	beq	?L159
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff8
	cmp	AL,@(H'0001,X)
	bne	?L159
?LBB57:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0706
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendSdpPrim
?L159:
?LBE57:
?LBE56:
?LBE_connectionHandleSdpTerminatePrimitiveRequest:
	leavel	#7
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
	ENDMOD

;# Function pattern *movqi2 used[0] = 280 used[1] = 32 total = 312
;# Function pattern *movqi3 used[0] = 352 total = 352
;# Function pattern *movhi used[2] = 4 used[3] = 4 total = 8
;# Function pattern *addqi0 used[0] = 26 total = 26
;# Function pattern *addqi2 used[0] = 35 total = 35
;# Function pattern *andqi3 used[0] = 21 total = 21
;# Function pattern *iorqi3 used[0] = 9 total = 9
;# Function pattern jump used[0] = 41 total = 41
;# Function pattern *call1 used[0] = 46 total = 46
;# Function pattern *call_value1 used[0] = 71 total = 71
;# Function pattern movstrqi+2 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 14 used[1] = 26 total = 40
;# Function pattern movstrqi+5 used[0] = 23 total = 23
	MODULE	sdp_search
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ConnectionSdpOpenSearchRequest:
	enterl	#9
?LBB_ConnectionSdpOpenSearchRequest:
	ld	X,@$XAP_AH
?LBB2:
?LBB3:
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0042
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSdpOpenSearchRequest:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionSdpCloseSearchRequest:
	enterl	#8
?LBB_ConnectionSdpCloseSearchRequest:
?LBB4:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0043
	bsr	$_MessageSend
?LBE4:
?LBE_ConnectionSdpCloseSearchRequest:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ConnectionSdpServiceSearchRequest:
	enterl	#6
?LBB_ConnectionSdpServiceSearchRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
?LBB5:
?LBB6:
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0005,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0007,X)
	cmp	AH,#H'0000
	bpl	?L4
	ld	AL,#H'0001
	bra	(?L8)
?L4:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
?L8:
	st	AL,@(H'0006,X)
	tst	@(H'0007,Y)
	beq	?L6
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
	bra	(?L7)
?L6:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0008,X)
?L7:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0044
	bsr	$_MessageSend
?LBE6:
?LBE5:
?LBE_ConnectionSdpServiceSearchRequest:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_ConnectionSdpServiceSearchRefRequest:
	enterl	#5
?LBB_ConnectionSdpServiceSearchRefRequest:
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	or	X,#-H'8000
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	$_ConnectionSdpServiceSearchRequest
?LBE_ConnectionSdpServiceSearchRefRequest:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 30 used[1] = 2 total = 32
;# Function pattern *movqi3 used[0] = 36 total = 36
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	bdaddr_bs_to_vm
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrConvertBluestackToVm:
	enterl	#2
?LBB_BdaddrConvertBluestackToVm:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	ld	X,@H'fff8
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@H'fff9
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@H'fff9
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
?LBE_BdaddrConvertBluestackToVm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 used[1] = 5 total = 10
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
	MODULE	bdaddr_is_same
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrIsSame:
	enterl	#2
?LBB_BdaddrIsSame:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@H'fff9
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	cmp	AL,@(H'0003,X)
	bne	?L2
	ld	X,@H'fff9
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	cmp	AL,@(H'0002,X)
	bne	?L2
	ld	X,@H'fff9
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	ld	X,@H'fff8
	cmp	AH,@(0,X)
	bne	?L2
	cmp	AL,@(1,X)
	bne	?L2
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L2:
	ld	AL,@(-1,Y)
?LBE_BdaddrIsSame:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 5 total = 11
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
;# Function pattern movstrqi+7 used[1] = 1 total = 1
	MODULE	bdaddr_is_zero
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrIsZero:
	enterl	#2
?LBB_BdaddrIsZero:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	tst	@(H'0003,X)
	bne	?L2
	tst	@(H'0002,X)
	bne	?L2
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L2
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L2:
	ld	AL,@(-1,Y)
?LBE_BdaddrIsZero:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 2 total = 2
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	bdaddr_tp_bs_to_vm
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrConvertTpBluestackToVm:
	enterl	#2
?LBB_BdaddrConvertTpBluestackToVm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0000
	beq	?L3
	cmp	AL,#H'0001
	beq	?L4
	bra	(?L5)
?L3:
	ld	AL,#H'0000
	bra	(?L7)
?L4:
	ld	AL,#H'0001
	bra	(?L7)
?L5:
	ld	AL,#H'00FF
?L7:
	ld	X,@H'fff8
	st	AL,@(H'0005,X)
	ld	AL,@H'fff8
	bsr	$_BdaddrConvertTypedBluestackToVm
?LBE_BdaddrConvertTpBluestackToVm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 2 total = 5
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	bdaddr_tp_vm_to_bs
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrConvertTpVmToBluestack:
	enterl	#2
?LBB_BdaddrConvertTpVmToBluestack:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	cmp	AL,#H'0000
	beq	?L3
	cmp	AL,#H'0001
	beq	?L4
	bra	(?L5)
?L3:
	ld	AL,#H'0000
	bra	(?L7)
?L4:
	ld	AL,#H'0001
	bra	(?L7)
?L5:
	ld	AL,#H'00FF
?L7:
	ld	X,@H'fff8
	st	AL,@(H'0005,X)
	ld	AL,@H'fff8
	bsr	$_BdaddrConvertTypedVmToBluestack
?LBE_BdaddrConvertTpVmToBluestack:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 2 total = 5
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	bdaddr_typed_bs_to_vm
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrConvertTypedBluestackToVm:
	enterl	#2
?LBB_BdaddrConvertTypedBluestackToVm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L3
	cmp	AL,#H'0001
	beq	?L4
	bra	(?L5)
?L3:
	ld	AL,#H'0000
	bra	(?L7)
?L4:
	ld	AL,#H'0001
	bra	(?L7)
?L5:
	ld	AL,#H'00FF
?L7:
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0001
	add	AL,@H'fff8
	add	AH,#H'0001
	bsr	$_BdaddrConvertBluestackToVm
?LBE_BdaddrConvertTypedBluestackToVm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	bdaddr_typed_is_empty
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrTypedIsEmpty:
	enterl	#3
?LBB_BdaddrTypedIsEmpty:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'00FF
	bne	?L2
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L2:
	ld	AL,@(0,Y)
?LBE_BdaddrTypedIsEmpty:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	bdaddr_typed_set_empty
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrTypedSetEmpty:
	enterl	#2
?LBB_BdaddrTypedSetEmpty:
	ld	X,@$XAP_AL
	ld	AL,#H'00FF
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	st	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0003,X)
?LBE_BdaddrTypedSetEmpty:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *movqi3 used[0] = 2 total = 2
	MODULE	bdaddr_typed_vm_to_bs
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrConvertTypedVmToBluestack:
	enterl	#2
?LBB_BdaddrConvertTypedVmToBluestack:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L3
	cmp	AL,#H'0001
	beq	?L4
	bra	(?L5)
?L3:
	ld	AL,#H'0000
	bra	(?L7)
?L4:
	ld	AL,#H'0001
	bra	(?L7)
?L5:
	ld	AL,#H'00FF
?L7:
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0001
	add	AL,@H'fff8
	add	AH,#H'0001
	bsr	$_BdaddrConvertVmToBluestack
?LBE_BdaddrConvertTypedVmToBluestack:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	bdaddr_vm_to_bs
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrConvertVmToBluestack:
	enterl	#2
?LBB_BdaddrConvertVmToBluestack:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	ld	X,@H'fff8
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@H'fff9
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@H'fff9
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
?LBE_BdaddrConvertVmToBluestack:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 used[1] = 5 total = 10
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
	MODULE	hfp_at_cmd
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpAtCmdRequest:
	enterl	#7
?LBB_HfpAtCmdRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@$XAP_AH
	bsr	$_strlen
	bra	(?L5)
?L2:
	ld	AL,#H'0000
?L5:
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0002,Y)
	beq	?L4
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'0002,Y)
	bsr	$_strcpy
?L4:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'001E
	bsr	$_MessageSend
?LBE2:
?LBE_HfpAtCmdRequest:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 2 total = 10
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	hfp_audio
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpAudioTransferRequest:
	enterl	#14
?LBB_HfpAudioTransferRequest:
	st	AH,@(H'000B,Y)
?LBB2:
	ld	AH,#H'0008
	st	AH,@(H'0002,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000E
	bsr	$_hfpAudioGetParams
	ld	AH,@$XAP_AL
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_memcpy
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'001F
	bsr	$_MessageSend
?LBE2:
?LBE_HfpAudioTransferRequest:
	leavel	#14
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_HfpAudioConnectResponse:
	enterl	#13
?LBB_HfpAudioConnectResponse:
?LBB3:
	ld	X,#H'0008
	st	X,@(H'0002,Y)
	st	AH,@(H'0004,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000F,Y)
	st	X,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'000D
	bsr	$_hfpAudioGetParams
	ld	AH,@$XAP_AL
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	bsr	$_memcpy
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0021
	bsr	$_MessageSend
?LBE3:
?LBE_HfpAudioConnectResponse:
	leavel	#13
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_HfpAudioDisconnectRequest:
	enterl	#2
?LBB_HfpAudioDisconnectRequest:
	ld	AH,@$XAP_AL
	ld	AL,#H'0022
	bsr	$_hfpSendCommonInternalMessagePriority
?LBE_HfpAudioDisconnectRequest:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 20 total = 20
;# Function pattern *movqi3 used[0] = 16 total = 16
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 6 total = 6
	MODULE	hfp_call
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpCallAnswerRequest:
	enterl	#9
?LBB_HfpCallAnswerRequest:
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0009
	bsr	$_MessageSend
?LBE2:
?LBE_HfpCallAnswerRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_HfpCallTerminateRequest:
	enterl	#2
?LBB_HfpCallTerminateRequest:
	ld	AH,@$XAP_AL
	ld	AL,#H'000A
	bsr	$_hfpSendCommonInternalMessagePriority
?LBE_HfpCallTerminateRequest:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	hfp_call_waiting
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpCallWaitingEnableRequest:
	enterl	#9
?LBB_HfpCallWaitingEnableRequest:
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0015
	bsr	$_MessageSend
?LBE2:
?LBE_HfpCallWaitingEnableRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	hfp_caller_id
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpCallerIdEnableRequest:
	enterl	#9
?LBB_HfpCallerIdEnableRequest:
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0011
	bsr	$_MessageSend
?LBE2:
?LBE_HfpCallerIdEnableRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	hfp_csr_features
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpCsrFeaturesReq:
	enterl	#35
?LBB_hfpCsrFeaturesReq:
	st	AL,@(H'0020,Y)
?LBB2:
	ld	X,@$_theHfp
	ld	X,@(H'0004,X)
	ld	AL,@$XAP_UXL
	and	AL,#-H'0040
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'000F
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'000E
	and	AH,#H'0001
	st	AH,@(H'0002,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'000D
	and	AH,#H'0001
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'000C
	and	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'000B
	and	AH,#H'0001
	st	AH,@(H'0005,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	and	AH,#H'0007
	st	AH,@(H'0006,Y)
	ld	AH,@$XAP_UXL
	lsr	#H'0006
	and	AH,#H'0003
	st	AH,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0025
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0020,Y)
	bsr	$_hfpSendAtCmd
?L1:
?LBE3:
?LBE2:
?LBE_hfpCsrFeaturesReq:
	leavel	#35
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'53
	dc	H'52
	dc	H'53
	dc	H'46
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_hfpCsrFeaturesHandleBandwidthCodecRes:
	enterl	#2
?LBB_hfpCsrFeaturesHandleBandwidthCodecRes:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	X,@$XAP_AH
?LBB4:
	ld	AL,@(H'0001,X)
	asl	#H'000F
	ld	X,@H'fff9
	ld	AH,@(H'0007,X)
	and	AH,#H'7FFF
	or	AL,@$XAP_AH
	st	AL,@H'fffa
	st	AL,@(H'0007,X)
	ld	X,@H'fff8
	ld	AL,@(H'0007,X)
	and	AL,#H'0001
	asl	#H'000E
	ld	AH,@H'fffa
	and	AH,#-H'4001
	or	AL,@$XAP_AH
	st	AL,@H'fffa
	ld	X,@H'fff9
	st	AL,@(H'0007,X)
	ld	X,@H'fff8
	ld	AL,@(H'0008,X)
	and	AL,#H'0001
	asl	#H'000D
	ld	AH,@H'fffa
	and	AH,#-H'2001
	or	AL,@$XAP_AH
	st	AL,@H'fffa
	ld	X,@H'fff9
	st	AL,@(H'0007,X)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	and	AL,#H'0001
	asl	#H'000C
	ld	AH,@H'fffa
	and	AH,#-H'1001
	or	AL,@$XAP_AH
	st	AL,@H'fffa
	ld	X,@H'fff9
	st	AL,@(H'0007,X)
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	asl	#H'000B
	ld	AH,@H'fffa
	and	AH,#-H'0801
	or	AL,@$XAP_AH
	st	AL,@H'fffa
	ld	X,@H'fff9
	st	AL,@(H'0007,X)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	and	AL,#H'0007
	asl	#H'0008
	ld	AH,@H'fffa
	and	AH,#-H'0701
	or	AL,@$XAP_AH
	st	AL,@H'fffa
	ld	X,@H'fff9
	st	AL,@(H'0007,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	and	AL,#H'0003
	asl	#H'0006
	ld	AH,@H'fffa
	and	AH,#-H'00C1
	or	AH,@$XAP_AL
	ld	X,@H'fff9
	st	AH,@(H'0007,X)
?LBE4:
?LBE_hfpCsrFeaturesHandleBandwidthCodecRes:
	leavel	#2
$_hfpCsrFeaturesHandleCodecRes:
	enterl	#13
?LBB_hfpCsrFeaturesHandleCodecRes:
	st	AL,@(H'000A,Y)
?LBB5:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_memmove
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_hfpCsrFeaturesHandleBandwidthCodecRes
?LBE5:
?LBE_hfpCsrFeaturesHandleCodecRes:
	leavel	#13
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpCsrFeaturesHandleNormalRes:
	enterl	#13
?LBB_hfpCsrFeaturesHandleNormalRes:
	st	AL,@(H'000A,Y)
?LBB6:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_memmove
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_hfpCsrFeaturesHandleBandwidthCodecRes
?LBE6:
?LBE_hfpCsrFeaturesHandleNormalRes:
	leavel	#13
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_hfpCsrFeaturesHandleCsrSfAtAck:
	enterl	#2
?LBB_hfpCsrFeaturesHandleCsrSfAtAck:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@H'fff8
	cmp	AH,#H'0000
	bne	?L7
	ld	AL,#H'0001
	st	AL,@H'fff8
?L7:
	ld	AL,@(H'0006,X)
	and	AL,#-H'0002
	or	AL,@H'fff8
	st	AL,@(H'0006,X)
?LBE_hfpCsrFeaturesHandleCsrSfAtAck:
	leavel	#2
$_hfpCsrFeaturesHandleModifyIndicatorsInd:
	enterl	#8
?LBB_hfpCsrFeaturesHandleModifyIndicatorsInd:
	st	AH,@(H'0002,Y)
?LBB7:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	ld	X,#H'0000
	st	X,@(H'0005,Y)
	cmp	X,@$XAP_AL
	bcc	?L25
?L23:
	st	Y,@H'fff8
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_get_hfpCsrFeaturesHandleModifyIndicatorsInd_p
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	st	AH,@H'fff8
	cmp	AH,#(H'0001+H'0007)
	bcc	?L11
	ld	X,@H'fff8
	ld	X,@(?JTBASE21,X)
	brxl
	.SEG	CONST
?JTBASE21:
	.CODE
?L21:
	.SEG	CONST
	dc	lwrd(?L11-?L21)
	dc	lwrd(?L14-?L21)
	dc	lwrd(?L15-?L21)
	dc	lwrd(?L16-?L21)
	dc	lwrd(?L17-?L21)
	dc	lwrd(?L18-?L21)
	dc	lwrd(?L19-?L21)
	dc	lwrd(?L20-?L21)
	.CODE
?L14:
	asl	#H'000F
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#H'7FFF
	bra	(?L26)
?L15:
	and	AL,#H'0001
	asl	#H'000E
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#-H'4001
	bra	(?L26)
?L16:
	and	AL,#H'0001
	asl	#H'000D
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#-H'2001
	bra	(?L26)
?L17:
	and	AL,#H'0001
	asl	#H'000C
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#-H'1001
	bra	(?L26)
?L18:
	and	AL,#H'0001
	asl	#H'000B
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#-H'0801
	bra	(?L26)
?L19:
	and	AL,#H'0007
	asl	#H'0008
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#-H'0701
	bra	(?L26)
?L20:
	and	AL,#H'0003
	asl	#H'0006
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	and	AH,#-H'00C1
?L26:
	or	AH,@$XAP_AL
	st	AH,@(H'0007,X)
?L11:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,@(H'0004,Y)
	bcs	?L23
?L25:
?LBE7:
?LBE_hfpCsrFeaturesHandleModifyIndicatorsInd:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_hfpCsrFeaturesHandleDisableIndicatorsInd:
	enterl	#2
?LBB_hfpCsrFeaturesHandleDisableIndicatorsInd:
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,@(H'0006,X)
	and	AL,#-H'0002
	st	AL,@(H'0006,X)
?LBE8:
?LBE_hfpCsrFeaturesHandleDisableIndicatorsInd:
	leavel	#2
$_hfpCsrFeaturesHandleBatteryLevelRequestInd:
	enterl	#8
?LBB_hfpCsrFeaturesHandleBatteryLevelRequestInd:
	st	AL,@H'fff8
?LBB9:
	ld	X,@$_theHfp
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L30
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L30
	ld	AH,@(H'0007,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L30
?LBB10:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A21
	bsr	$_MessageSend
?L30:
?LBE10:
?LBE9:
?LBE_hfpCsrFeaturesHandleBatteryLevelRequestInd:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_HfpCsrFeaturesBatteryLevelRequest:
	enterl	#9
?LBB_HfpCsrFeaturesBatteryLevelRequest:
	st	AH,@(H'0006,Y)
?LBB11:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0024
	bsr	$_MessageSend
?LBE11:
?LBE_HfpCsrFeaturesBatteryLevelRequest:
	leavel	#9
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_hfpCsrFeaturesHandleBatteryLevelReq:
	enterl	#21
?LBB_hfpCsrFeaturesHandleBatteryLevelReq:
	st	AL,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB12:
	ld	X,@(0,X)
	st	X,@(H'0012,Y)
	ld	X,@$_theHfp
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L33
	ld	X,@(H'0012,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L33
	ld	AH,@(H'0007,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L33
?LBB13:
	ld	AL,#(?LC1)
	st	AL,@(0,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0026
	st	AL,@(H'0001,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(0,X)
	bsr	$_hfpSendAtCmd
?L33:
?LBE13:
?LBE12:
?LBE_hfpCsrFeaturesHandleBatteryLevelReq:
	leavel	#21
	.SEG	CONST
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'53
	dc	H'52
	dc	H'42
	dc	H'41
	dc	H'54
	dc	H'54
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_HfpCsrFeaturesPowerSourceRequest:
	enterl	#9
?LBB_HfpCsrFeaturesPowerSourceRequest:
	st	AH,@(H'0006,Y)
?LBB14:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0025
	bsr	$_MessageSend
?LBE14:
?LBE_HfpCsrFeaturesPowerSourceRequest:
	leavel	#9
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_hfpCsrFeaturesHandlePowerSourceReq:
	enterl	#20
?LBB_hfpCsrFeaturesHandlePowerSourceReq:
	st	AL,@(H'0011,Y)
?LBB15:
	ld	X,@$_theHfp
	ld	AH,@(H'0004,X)
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L36
	ld	X,@(H'0011,Y)
	ld	AH,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L36
	ld	AH,@(H'0007,X)
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L36
?LBB16:
	ld	AL,#(?LC2)
	st	AL,@(0,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0027
	st	AL,@(H'0001,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(0,X)
	bsr	$_hfpSendAtCmd
?L36:
?LBE16:
?LBE15:
?LBE_hfpCsrFeaturesHandlePowerSourceReq:
	leavel	#20
	.SEG	CONST
?LC2:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'53
	dc	H'52
	dc	H'50
	dc	H'57
	dc	H'52
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_hfpCsrFeaturesHandleTextInd:
	enterl	#7
?LBB_hfpCsrFeaturesHandleTextInd:
	st	AH,@(H'0001,Y)
?LBB17:
	st	AL,@(H'0002,Y)
	ld	X,@$_theHfp
	ld	AH,@(H'0004,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L38
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L38
	ld	AH,@(H'0007,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L38
	ld	X,@(H'0001,Y)
?LBB18:
	ld	AH,@(H'0001,X)
	st	AH,@(H'0003,Y)
	cmp	AH,#H'001F
	bcz	?L40
	ld	AL,#H'001F
	st	AL,@(H'0003,Y)
?L40:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_memmove
	ld	X,@(H'0004,Y)
	add	X,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A1E
	bsr	$_MessageSend
?L38:
?LBE18:
?LBE17:
?LBE_hfpCsrFeaturesHandleTextInd:
	leavel	#7
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_hfpCsrFeaturesHandleSmsInd:
	enterl	#8
?LBB_hfpCsrFeaturesHandleSmsInd:
	st	AH,@(H'0001,Y)
?LBB19:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0005,X)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0004,Y)
	cmp	AH,#H'001F
	bcz	?L43
	ld	AH,#H'001F
	st	AH,@(H'0003,Y)
?L43:
	ld	AL,#H'0020
	sub	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	cmp	AH,@$XAP_AL
	bcs	?L44
	ld	AL,#H'001F
	sub	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
?L44:
	ld	X,@$_theHfp
	ld	AH,@(H'0004,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L42
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L42
	ld	AH,@(H'0007,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L42
	ld	AL,@(H'0003,Y)
?LBB20:
	add	AL,@(H'0004,Y)
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AH,#H'0000
	st	AH,@(H'0002,X)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(H'0005,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	add	AL,@(H'0004,X)
	add	AL,#H'0006
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	add	AL,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	AL,@(H'0005,Y)
	add	AL,@(H'0004,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0004,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A1F
	bsr	$_MessageSend
?L42:
?LBE20:
?LBE19:
?LBE_hfpCsrFeaturesHandleSmsInd:
	leavel	#8
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
$_HfpCsrFeaturesGetSmsRequest:
	enterl	#9
?LBB_HfpCsrFeaturesGetSmsRequest:
	st	AH,@(H'0006,Y)
?LBB21:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0028
	bsr	$_MessageSend
?LBE21:
?LBE_HfpCsrFeaturesGetSmsRequest:
	leavel	#9
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_hfpHandleCsrGetSmsReq:
	enterl	#25
?LBB_hfpHandleCsrGetSmsReq:
	st	AL,@(H'0016,Y)
?LBB22:
	ld	X,@$_theHfp
	ld	AH,@(H'0004,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L50
	ld	X,@(H'0016,Y)
	ld	AH,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L50
	ld	AH,@(H'0007,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L50
?LBB23:
	ld	AL,#(?LC3)
	st	AL,@(0,Y)
	ld	X,@(H'0016,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0029
	st	AL,@(H'0001,Y)
	ld	X,@(H'0016,Y)
	ld	AL,@(0,X)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L49)
?L50:
?LBE23:
	ld	AL,#H'0000
?L49:
?LBE22:
?LBE_hfpHandleCsrGetSmsReq:
	leavel	#25
	.SEG	CONST
?LC3:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'53
	dc	H'52
	dc	H'47
	dc	H'45
	dc	H'54
	dc	H'53
	dc	H'4D
	dc	H'53
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
_hfpCsrFeaturesSendSmsCfm:
	enterl	#6
?LBB_hfpCsrFeaturesSendSmsCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
?LBB24:
	add	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
	add	AH,@(H'0002,X)
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A20
	bsr	$_MessageSend
?LBE24:
?LBE_hfpCsrFeaturesSendSmsCfm:
	leavel	#6
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_hfpCsrFeaturesHandleGetSmsRes:
	enterl	#4
?LBB_hfpCsrFeaturesHandleGetSmsRes:
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	st	AH,@(0,Y)
	ld	AH,@(0,X)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	_hfpCsrFeaturesSendSmsCfm
?LBE_hfpCsrFeaturesHandleGetSmsRes:
	leavel	#4
$_hfpCsrFeaturesHandleGetSmsAtAck:
	enterl	#4
?LBB_hfpCsrFeaturesHandleGetSmsAtAck:
	ld	X,@$XAP_AL
	cmp	AH,#H'0000
	beq	?L53
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	_hfpCsrFeaturesSendSmsCfm
?L53:
?LBE_hfpCsrFeaturesHandleGetSmsAtAck:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 151 used[1] = 30 total = 181
;# Function pattern *movqi3 used[0] = 165 total = 165
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *addqi0 used[0] = 20 total = 20
;# Function pattern *addqi2 used[0] = 15 used[2] = 2 total = 17
;# Function pattern *andqi3 used[0] = 53 total = 53
;# Function pattern *iorqi3 used[0] = 9 total = 9
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 19 total = 19
;# Function pattern *ashlqi3 used[0] = 14 total = 14
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 24 total = 24
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 21 total = 21
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	hfp_dial
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpDialLastNumberRequest:
	enterl	#2
?LBB_HfpDialLastNumberRequest:
	ld	AH,@$XAP_AL
	ld	AL,#H'000B
	bsr	$_hfpSendCommonInternalMessagePriority
?LBE_HfpDialLastNumberRequest:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	hfp_dial_number
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpDialNumberRequest:
	enterl	#6
?LBB_HfpDialNumberRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_AH
?LBB2:
?LBB3:
	add	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'000C
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_HfpDialNumberRequest:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 9 used[1] = 2 total = 11
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 3 total = 3
	MODULE	hfp_hs
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpHsButtonPressRequest:
	enterl	#2
?LBB_HfpHsButtonPressRequest:
	ld	AH,@$XAP_AL
	ld	AL,#H'002D
	bsr	$_hfpSendCommonInternalMessagePriority
?LBE_HfpHsButtonPressRequest:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	hfp_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_hfpInitCfmToApp:
	enterl	#9
?LBB_hfpInitCfmToApp:
	st	AL,@(H'0006,Y)
?LBB2:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A00
	bsr	$_MessageSend
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	bcz	?L1
	ld	AL,@$_theHfp
	bsr	$_free
?L1:
?LBE2:
?LBE_hfpInitCfmToApp:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_HfpInit:
	enterl	#12
?LBB_HfpInit:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	tst	@$_theHfp
	beq	?L5
	ld	AL,#H'0001
	bra	(?L23)
?L5:
	tst	@(H'0002,Y)
	beq	?L4
	ld	X,@(H'0002,Y)
?LBB4:
	ld	X,@(0,X)
	st	X,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L8
	ld	AH,#H'0002
	st	AH,@(H'0006,Y)
	bra	(?L9)
?L8:
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
?L9:
	ld	X,#H'0000
	st	X,@(H'0007,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_supportedProfileIsHfp
	cmp	AL,#H'0000
	beq	?L10
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?L10:
	ld	AL,@(H'0005,Y)
	bsr	$_supportedProfileIsHsp
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@(H'0007,Y)
	add	AL,@(H'0006,Y)
	st	AL,@(H'0007,Y)
?L11:
	ld	AL,@(H'0006,Y)
	smult	#H'001E
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0007,Y)
	smult	#H'0003
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	add	AH,#H'000D
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	st	AL,@$_theHfp
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0004,Y)
	add	AL,#H'000D
	ld	X,@(H'0004,Y)
	st	AL,@(H'000A,X)
	ld	AL,@(H'0006,Y)
	smult	#H'001E
	add	AL,@(H'000A,X)
	st	AL,@(H'000B,X)
	ld	AL,@(H'0008,Y)
	add	AL,@(H'000B,X)
	st	AL,@(H'000C,X)
	ld	AH,#hwrd($_hfpProfileHandler)
	ld	AL,#lwrd($_hfpProfileHandler)
	ld	X,@(H'0004,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	and	AL,#-H'0041
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0005,Y)
	bsr	$_supportedProfileIsHfp106
	cmp	AL,#H'0000
	bne	?L12
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	and	AL,#-H'0081
	st	AL,@(H'0003,X)
?L12:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L13
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	bsr	$_hfpWbsEnable
?L13:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	asl	#H'0008
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0007,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0007,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	st	AH,@(H'0007,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0005,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'000E
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0008,X)
	and	AH,#-H'4001
	or	AL,@$XAP_AH
	st	AL,@H'fff8
	st	AL,@(H'0008,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'000D
	ld	AH,@H'fff8
	and	AH,#-H'2001
	or	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	st	AH,@(H'0008,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0001,Y)
	st	AH,@(H'0002,X)
	ld	X,@(H'0002,Y)
	tst	@(0,X)
	bne	?L14
	ld	AL,#H'0000
?L23:
	bsr	_hfpInitCfmToApp
	bra	(?L4)
?L14:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L22
	ld	AL,#H'0009
?L19:
	ld	X,@(-1,Y)
	st	AL,@(H'0008,X)
	ld	AH,#H'001E
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@$_theHfp
	st	X,@(H'0009,Y)
	cmp	AH,@(H'000B,X)
	bcs	?L19
?L22:
	ld	AL,@(H'0005,Y)
	bsr	$_supportedProfileIsHfp106
	cmp	AL,#H'0000
	beq	?L20
	ld	AH,@(H'0005,Y)
	and	AH,#-H'0003
	st	AH,@(H'0005,Y)
?L20:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,Y)
	and	AH,#H'0001
	bsr	$_hfpServicesInit
	ld	AH,@$_theHfp
	st	AH,@(-1,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'000B,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@(-1,Y)
	bsr	$_ConnectionRfcommAllocateChannel
	ld	AL,@$_theHfp
	bsr	$_ConnectionSyncRegister
?L4:
?LBE4:
?LBE3:
?LBE_HfpInit:
	leavel	#12
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	.SEG	VAR
_index?0?:
	DS	1
	.CODE
$_hfpInitRfcommRegisterCfm:
	enterl	#4
?LBB_hfpInitRfcommRegisterCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB5:
	tst	@(0,X)
	bne	?L27
?LBB6:
	ld	AH,@$_theHfp
	st	AH,@(H'0001,Y)
	ld	AL,@_index?0?
	smult	#H'0003
	ld	X,@(H'0001,Y)
	add	AL,@(H'000B,X)
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	asl	#H'0008
	ld	X,@(0,Y)
	ld	AH,@(H'0002,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	AL,@$XAP_UXL
	bsr	$_hfpRegisterServiceRecord
	ld	AH,@$_theHfp
	st	AH,@(-1,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'000C,X)
	add	AL,#-H'0003
	ld	AH,@(0,Y)
	cmp	AH,@$XAP_AL
	bcc	?L26
	ld	AL,@_index?0?
	add	AL,#H'0001
	st	AL,@_index?0?
	smult	#H'0003
	add	AL,@(H'000B,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@(-1,Y)
	bsr	$_ConnectionRfcommAllocateChannel
	bra	(?L26)
?L27:
?LBE6:
	ld	AL,#H'0002
	bsr	_hfpInitCfmToApp
?L26:
?LBE5:
?LBE_hfpInitRfcommRegisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_hfpInitSdpRegisterComplete:
	enterl	#2
?LBB_hfpInitSdpRegisterComplete:
?LBB7:
	cmp	AL,#H'0000
	bne	?L31
?LBB8:
	ld	X,@$_theHfp
	ld	AL,@(H'0009,X)
	bsr	$_hfpGetServiceFromChannel
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L31
	ld	X,@$_theHfp
	ld	AL,@(H'000C,X)
	add	AL,#-H'0003
	cmp	AH,@$XAP_AL
	bne	?L33
	ld	AL,#H'0000
	bsr	_hfpInitCfmToApp
	ld	X,@$_theHfp
	ld	AL,@(H'0008,X)
	or	AL,#-H'8000
	st	AL,@(H'0008,X)
?L33:
	ld	X,@$_theHfp
	ld	AL,#H'0000
	st	AL,@(H'0009,X)
	bra	(?L30)
?L31:
?LBE8:
	ld	AL,#H'0003
	bsr	_hfpInitCfmToApp
?L30:
?LBE7:
?LBE_hfpInitSdpRegisterComplete:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_hfpInitSdpRegisterCfm:
	enterl	#4
?LBB_hfpInitSdpRegisterCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L36
	ld	AL,#H'0001
?L36:
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L37
?LBB10:
	ld	X,@$_theHfp
	ld	AL,@(H'0009,X)
	bsr	$_hfpGetServiceFromChannel
	st	AL,@H'fff8
	ld	X,@(0,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AH,@(0,X)
	st	AL,@(1,X)
?L37:
?LBE10:
	ld	AL,@(H'0001,Y)
	bsr	$_hfpInitSdpRegisterComplete
?LBE9:
?LBE_hfpInitSdpRegisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
	.SEG	VAR
$_theHfp:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 65 used[1] = 16 total = 81
;# Function pattern *movqi3 used[0] = 93 total = 93
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 11 used[2] = 1 total = 12
;# Function pattern *andqi3 used[0] = 14 total = 14
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *mulqi3_const used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 5 total = 5
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+3 used[0] = 10 used[1] = 4 total = 14
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	hfp_link_manager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpLinkSetup:
	enterl	#4
?LBB_hfpLinkSetup:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0001
	bsr	$_hfpGetLinkFromPriority
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(0,Y)
	ld	AH,#H'0002
	bra	(?L6)
?L3:
	ld	AL,@(0,Y)
	ld	AH,#H'0001
?L6:
	bsr	$_hfpSetLinkPriority
?L2:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0004
	bne	?L5
	ld	X,@(0,Y)
	ld	AL,@(H'0006,X)
	or	AL,#-H'8000
	st	AL,@(H'0006,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	or	AL,#H'0010
	st	AL,@(H'0002,X)
?L5:
	ld	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	st	AL,@(H'0005,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	bsr	$_hfpSetLinkBdaddr
	ld	AL,@(0,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_hfpSetLinkSink
	ld	AL,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_hfpSetLinkSlcState
?LBE_hfpLinkSetup:
	leavel	#4
$_hfpLinkReset:
	enterl	#5
?LBB_hfpLinkReset:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	tst	@(H'0012,X)
	beq	?L9
	ld	AL,@(H'0012,X)
	bsr	$_free
?L9:
	ld	X,@(H'0001,Y)
	tst	@(H'0005,X)
	beq	?L10
	ld	AH,@(H'0006,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L10
	ld	AH,@(H'0005,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	and	AL,#-H'0011
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	bsr	$_hfpRegisterServiceRecord
?L10:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_hfpSetLinkCallState
?L11:
	ld	AL,#H'001E
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0009
	ld	X,@(H'0001,Y)
	st	AL,@(H'0008,X)
	tst	@(H'0002,Y)
	beq	?L8
	ld	AL,#H'0002
	bsr	$_hfpGetLinkFromPriority
	ld	AH,#H'0001
	bsr	$_hfpSetLinkPriority
?L8:
?LBE_hfpLinkReset:
	leavel	#5
$_hfpSetLinkSink:
	enterl	#2
?LBB_hfpSetLinkSink:
	ld	X,@$XAP_AL
	st	AH,@(H'0004,X)
?LBE_hfpSetLinkSink:
	leavel	#2
$_hfpGetLinkSink:
	enterl	#2
?LBB_hfpGetLinkSink:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(H'0004,X)
	bra	(?L14)
?L15:
	ld	AL,#H'0000
?L14:
?LBE_hfpGetLinkSink:
	leavel	#2
$_hfpSetLinkBdaddr:
	enterl	#2
?LBB_hfpSetLinkBdaddr:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
?LBE_hfpSetLinkBdaddr:
	leavel	#2
$_hfpSetLinkSlcState:
	enterl	#2
?LBB_hfpSetLinkSlcState:
	ld	X,@$XAP_AL
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	asl	#H'000A
	ld	AH,@(H'0006,X)
	and	AH,#-H'1C01
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
?LBE_hfpSetLinkSlcState:
	leavel	#2
$_hfpSetLinkCallState:
	enterl	#11
?LBB_hfpSetLinkCallState:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,@(H'0007,Y)
	beq	?L18
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	$_hfpGetLinkPriority
	st	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bne	?L20
	ld	X,@$_theHfp
	st	X,@(H'0008,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'0009
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L22
	ld	AL,@H'fff8
	and	AL,#H'0003
	asl	#H'0009
	ld	AH,@(H'0008,X)
	and	AH,#-H'0601
	or	AH,@$XAP_AL
	st	AH,@(H'0008,X)
	bra	(?L22)
?L20:
	ld	X,@$_theHfp
	ld	AH,@(H'0008,X)
	lsr	#H'0009
	and	AH,#H'0003
	cmp	AH,@(H'0002,Y)
	bne	?L22
	ld	AL,@(H'0008,X)
	and	AL,#-H'0601
	st	AL,@(H'0008,X)
?L22:
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A0E
	bsr	$_MessageSend
	ld	AL,@(H'0007,Y)
	and	AL,#H'000F
	asl	#H'0006
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0006,X)
	and	AH,#-H'03C1
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
?L18:
?LBE3:
?LBE2:
?LBE_hfpSetLinkCallState:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpGetLinkBdaddr:
	enterl	#2
?LBB_hfpGetLinkBdaddr:
	st	AL,@H'fff8
	st	AH,@H'fff9
	cmp	AL,#H'0000
	beq	?L28
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0007
	cmp	AH,#H'0001
	bcz	?L28
	ld	AL,@(0,X)
	ld	X,@H'fff9
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	ld	X,@H'fff9
	st	AL,@(H'0001,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	X,@H'fff9
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
	bra	(?L27)
?L28:
	ld	AL,#H'0000
	ld	X,@H'fff9
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
?L27:
?LBE_hfpGetLinkBdaddr:
	leavel	#2
$_hfpGetLinkFromSink:
	enterl	#10
?LBB_hfpGetLinkFromSink:
	st	AL,@(H'0006,Y)
?LBB4:
	cmp	AL,#H'0000
	beq	?L31
	ld	X,@$_theHfp
	ld	AL,@(H'000A,X)
	st	AL,@(H'0007,Y)
	cmp	AL,@(H'000B,X)
	bcc	?L31
?L42:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0007
	cmp	AH,#H'0001
	bcz	?L34
	cmp	AH,#(H'0001+H'0002)
	bcc	?L38
?LBB5:
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0007,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L34
	ld	AH,@(H'0007,Y)
	bra	(?L30)
?L38:
	ld	X,@(H'0007,Y)
?LBE5:
	ld	AL,@(H'0004,X)
	cmp	AL,@(H'0006,Y)
	bne	?L34
	ld	AH,@$XAP_UXL
	bra	(?L30)
?L34:
	ld	AL,@(H'0007,Y)
	add	AL,#H'001E
	st	AL,@(H'0007,Y)
	ld	X,@$_theHfp
	cmp	AL,@(H'000B,X)
	bcs	?L42
?L31:
	ld	AH,#H'0000
?L30:
?LBE4:
	ld	AL,@$XAP_AH
?LBE_hfpGetLinkFromSink:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_hfpGetLinkFromBdaddr:
	enterl	#8
?LBB_hfpGetLinkFromBdaddr:
	st	AL,@(H'0004,Y)
?LBB6:
	ld	X,@$_theHfp
	ld	AL,@(H'000A,X)
	st	AL,@(H'0005,Y)
	cmp	AL,@(H'000B,X)
	bcc	?L56
?L54:
?LBB7:
	ld	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	bsr	$_hfpGetLinkBdaddr
	cmp	AL,#H'0000
	beq	?L51
	ld	AL,@$XAP_UY
	ld	AH,@(H'0004,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L51
	ld	AL,@(H'0005,Y)
	bra	(?L48)
?L51:
	ld	AL,@(H'0005,Y)
?LBE7:
	add	AL,#H'001E
	st	AL,@(H'0005,Y)
	ld	X,@$_theHfp
	cmp	AL,@(H'000B,X)
	bcs	?L54
?L56:
	ld	AL,#H'0000
?L48:
?LBE6:
?LBE_hfpGetLinkFromBdaddr:
	leavel	#8
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_hfpGetLinkFromAudioSink:
	enterl	#15
?LBB_hfpGetLinkFromAudioSink:
	st	AL,@(H'000B,Y)
?LBB8:
	ld	X,@$_theHfp
	ld	AL,@(H'000A,X)
	st	AL,@(H'000C,Y)
	cmp	AL,@(H'000B,X)
	bcc	?L70
?L68:
	ld	X,@(H'000C,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'000D
	cmp	AH,#(H'0001+H'0004)
	bcc	?L64
?LBB9:
	ld	AL,@(H'000B,Y)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L62
	ld	AL,@(H'000C,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0007
	bsr	$_hfpGetLinkBdaddr
	cmp	AL,#H'0000
	beq	?L62
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L62
	ld	AL,@(H'000C,Y)
	bra	(?L59)
?L64:
	ld	X,@(H'000C,Y)
?LBE9:
	ld	AL,@(H'0014,X)
	cmp	AL,@(H'000B,Y)
	bne	?L62
	ld	AL,@$XAP_UXL
	bra	(?L59)
?L62:
	ld	AL,@(H'000C,Y)
	add	AL,#H'001E
	st	AL,@(H'000C,Y)
	ld	X,@$_theHfp
	cmp	AL,@(H'000B,X)
	bcs	?L68
?L70:
	ld	AL,#H'0000
?L59:
?LBE8:
?LBE_hfpGetLinkFromAudioSink:
	leavel	#15
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
_hfpGetLinkFromSlcState:
	enterl	#3
?LBB_hfpGetLinkFromSlcState:
	st	AL,@H'fff8
?LBB10:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L82
	st	AL,@(0,Y)
?L80:
	ld	X,@(-1,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0007
	cmp	AH,@H'fff8
	bne	?L77
	ld	AL,@(-1,Y)
	bra	(?L74)
?L77:
	ld	AH,#H'001E
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000B,X)
	bcs	?L80
?L82:
	ld	AL,#H'0000
?L74:
?LBE10:
?LBE_hfpGetLinkFromSlcState:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_hfpGetIdleLink:
	enterl	#3
?LBB_hfpGetIdleLink:
?LBB11:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L94
	st	AL,@(0,Y)
?L92:
	ld	X,@(-1,Y)
	ld	AH,@(H'0006,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1C00
	cmp	AL,#H'0000
	bne	?L89
	ld	AL,@$XAP_AH
	and	AL,#H'0030
	cmp	AL,#H'0010
	beq	?L89
	ld	AL,@(-1,Y)
	bra	(?L86)
?L89:
	ld	AH,#H'001E
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000B,X)
	bcs	?L92
?L94:
	ld	AL,#H'0000
?L86:
?LBE11:
?LBE_hfpGetIdleLink:
	leavel	#3
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_hfpGetLinkFromAudioState:
	enterl	#3
?LBB_hfpGetLinkFromAudioState:
	st	AL,@H'fff8
?LBB12:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L106
	st	AL,@(0,Y)
?L104:
	ld	X,@(-1,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'000D
	cmp	AH,@H'fff8
	bne	?L101
	ld	AL,@(-1,Y)
	bra	(?L98)
?L101:
	ld	AH,#H'001E
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000B,X)
	bcs	?L104
?L106:
	ld	AL,#H'0000
?L98:
?LBE12:
?LBE_hfpGetLinkFromAudioState:
	leavel	#3
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_hfpGetLinkFromService:
	enterl	#3
?LBB_hfpGetLinkFromService:
	st	AL,@H'fff8
?LBB13:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L118
	st	AL,@(0,Y)
?L116:
	ld	X,@(-1,Y)
	ld	AL,@(H'0005,X)
	cmp	AL,@H'fff8
	bne	?L113
	ld	AH,@(H'0006,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L113
	ld	AL,@(-1,Y)
	bra	(?L110)
?L113:
	ld	AH,#H'001E
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000B,X)
	bcs	?L116
?L118:
	ld	AL,#H'0000
?L110:
?LBE13:
?LBE_hfpGetLinkFromService:
	leavel	#3
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_hfpSetLinkPriority:
	enterl	#2
?LBB_hfpSetLinkPriority:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L122
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'000D
	ld	AH,@(H'0006,X)
	and	AH,#-H'6001
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
?L122:
?LBE_hfpSetLinkPriority:
	leavel	#2
$_hfpGetLinkPriority:
	enterl	#2
?LBB_hfpGetLinkPriority:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L125
	ld	AH,@(H'0006,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	bra	(?L124)
?L125:
	ld	AL,#H'0000
?L124:
?LBE_hfpGetLinkPriority:
	leavel	#2
$_hfpGetLinkFromPriority:
	enterl	#4
?LBB_hfpGetLinkFromPriority:
	st	AL,@H'fff8
?LBB14:
	tst	@$_theHfp
	beq	?L128
	ld	AL,@$_theHfp
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0008,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L128
	tst	@H'fff8
	beq	?L128
	ld	AL,@(H'000A,X)
	st	AL,@(-1,Y)
	cmp	AL,@(H'000B,X)
	bcc	?L128
	st	X,@(H'0001,Y)
?L134:
	ld	X,@(-1,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000D
	and	AH,#H'0003
	cmp	AH,@H'fff8
	bne	?L131
	ld	AL,@(-1,Y)
	bra	(?L127)
?L131:
	ld	AL,#H'001E
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@(H'0001,Y)
	cmp	AL,@(H'000B,X)
	bcs	?L134
?L128:
	ld	AL,#H'0000
?L127:
?LBE14:
?LBE_hfpGetLinkFromPriority:
	leavel	#4
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_hfpGetLinkTimeoutMessage:
	enterl	#2
?LBB_hfpGetLinkTimeoutMessage:
?LBB15:
	ld	X,#H'0000
	st	X,@H'fff8
	ld	X,@$_theHfp
	cmp	AL,@(H'000A,X)
	bne	?L140
	ld	AL,#H'0001
	st	AL,@H'fff8
?L140:
	cmp	AH,#H'0003
	beq	?L151
	cmp	AH,#(H'0001+H'0003)
	bcc	?L156
	cmp	AH,#H'0001
	beq	?L148
	bra	(?L154)
?L156:
	cmp	AH,#H'0007
	beq	?L142
	cmp	AH,#H'002B
	beq	?L145
	bra	(?L154)
?L142:
	tst	@H'fff8
	beq	?L143
	ld	AL,#H'0007
	bra	(?L139)
?L143:
	ld	AL,#H'0008
	bra	(?L139)
?L145:
	tst	@H'fff8
	beq	?L146
	ld	AL,#H'002B
	bra	(?L139)
?L146:
	ld	AL,#H'002C
	bra	(?L139)
?L148:
	tst	@H'fff8
	beq	?L149
	ld	AL,#H'0001
	bra	(?L139)
?L149:
	ld	AL,#H'0002
	bra	(?L139)
?L151:
	tst	@H'fff8
	beq	?L152
	ld	AL,#H'0003
	bra	(?L139)
?L152:
	ld	AL,#H'0004
	bra	(?L139)
?L154:
	bsr	$_Panic
	ld	AL,#H'0000
?L139:
?LBE15:
?LBE_hfpGetLinkTimeoutMessage:
	leavel	#2
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_hfpGetLinkFromTimeoutMessage:
	enterl	#2
?LBB_hfpGetLinkFromTimeoutMessage:
	cmp	AL,#(H'0001+H'002C)
	bcc	?L172
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE173,X)
	brxl
	.SEG	CONST
?JTBASE173:
	.CODE
?L173:
	.SEG	CONST
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L167-?L173)
	dc	lwrd(?L171-?L173)
	dc	lwrd(?L167-?L173)
	dc	lwrd(?L171-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L167-?L173)
	dc	lwrd(?L171-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L172-?L173)
	dc	lwrd(?L167-?L173)
	dc	lwrd(?L171-?L173)
	.CODE
?L167:
	ld	X,@$_theHfp
	ld	AL,@(H'000A,X)
	bra	(?L162)
?L171:
	ld	X,@$_theHfp
	ld	AL,@(H'000A,X)
	add	AL,#H'001E
	bra	(?L162)
?L172:
	ld	AL,#H'0000
?L162:
?LBE_hfpGetLinkFromTimeoutMessage:
	leavel	#2
$_hfpLinkGetProfile:
	enterl	#2
?LBB_hfpLinkGetProfile:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L175
	tst	@(H'0005,X)
	beq	?L175
	ld	X,@(H'0005,X)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bra	(?L174)
?L175:
	ld	AL,#H'0000
?L174:
?LBE_hfpLinkGetProfile:
	leavel	#2
$_hfpLinkIsHsp:
	enterl	#2
?LBB_hfpLinkIsHsp:
	bsr	$_hfpLinkGetProfile
	bsr	$_supportedProfileIsHsp
?LBE_hfpLinkIsHsp:
	leavel	#2
$_hfpLinkIsHfp:
	enterl	#2
?LBB_hfpLinkIsHfp:
	bsr	$_hfpLinkGetProfile
	bsr	$_supportedProfileIsHfp
?LBE_hfpLinkIsHfp:
	leavel	#2
$_hfpLinkIsHfp106:
	enterl	#2
?LBB_hfpLinkIsHfp106:
	bsr	$_hfpLinkGetProfile
	bsr	$_supportedProfileIsHfp106
?LBE_hfpLinkIsHfp106:
	leavel	#2
_hfpLinkDisable:
	enterl	#2
?LBB_hfpLinkDisable:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L187
	cmp	AH,#H'0000
	beq	?L182
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'0000
	bne	?L187
	ld	AL,@(H'0006,X)
	and	AL,#-H'1C01
	or	AL,#H'0400
	bra	(?L186)
?L182:
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'0400
	beq	?L185
?L187:
	ld	AL,#H'0000
	bra	(?L180)
?L185:
	ld	AL,@(H'0006,X)
	and	AL,#-H'1C01
?L186:
	st	AL,@(H'0006,X)
	ld	AL,#H'0001
?L180:
?LBE_hfpLinkDisable:
	leavel	#2
$_HfpLinkGetBdaddr:
	enterl	#3
?LBB_HfpLinkGetBdaddr:
	st	AH,@(0,Y)
?LBB16:
	bsr	$_hfpGetLinkFromPriority
	ld	AH,@(0,Y)
	bsr	$_hfpGetLinkBdaddr
?LBE16:
?LBE_HfpLinkGetBdaddr:
	leavel	#3
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_HfpLinkGetSlcSink:
	enterl	#3
?LBB_HfpLinkGetSlcSink:
	st	AH,@(0,Y)
?LBB17:
	bsr	$_hfpGetLinkFromPriority
	bsr	$_hfpGetLinkSink
	ld	X,@(0,Y)
	st	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L191
	ld	AL,#H'0001
?L191:
?LBE17:
?LBE_HfpLinkGetSlcSink:
	leavel	#3
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_HfpLinkGetAudioSink:
	enterl	#3
?LBB_HfpLinkGetAudioSink:
	st	AH,@(0,Y)
?LBB18:
	bsr	$_hfpGetLinkFromPriority
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L193
	tst	@(H'0014,X)
	beq	?L193
	ld	AL,@(H'0014,X)
	ld	X,@(0,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L192)
?L193:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(0,X)
?L192:
?LBE18:
?LBE_HfpLinkGetAudioSink:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_HfpLinkGetCallState:
	enterl	#3
?LBB_HfpLinkGetCallState:
	st	AH,@(0,Y)
?LBB19:
	bsr	$_hfpGetLinkFromPriority
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L195
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	ld	X,@(0,Y)
	st	AH,@(0,X)
	ld	AL,#H'0001
	bra	(?L194)
?L195:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(0,X)
?L194:
?LBE19:
?LBE_HfpLinkGetCallState:
	leavel	#3
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_HfpLinkSetMaxConnections:
	enterl	#2
?LBB_HfpLinkSetMaxConnections:
	st	AL,@H'fff9
?LBB20:
	ld	AH,#H'0000
	st	AH,@H'fff8
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@H'fffa
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L208
	ld	AH,@$XAP_AL
?L202:
	ld	X,@H'fffa
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'0400
	beq	?L199
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
?L199:
	ld	X,#H'001E
	add	X,@H'fffa
	st	X,@H'fffa
	ld	AL,@$XAP_UXL
	ld	X,@$XAP_AH
	cmp	AL,@(H'000B,X)
	bcs	?L202
?L208:
	ld	X,@H'fff9
	cmp	X,@H'fff8
	bne	?L203
	ld	AL,#H'0001
	bra	(?L196)
?L203:
	cmp	X,@H'fff8
	bcz	?L205
	ld	AL,#H'0001
	bsr	_hfpGetLinkFromSlcState
	ld	AH,#H'0000
	bra	(?L209)
?L205:
	bsr	$_hfpGetIdleLink
	ld	AH,#H'0001
?L209:
	bsr	_hfpLinkDisable
?L196:
?LBE20:
?LBE_HfpLinkSetMaxConnections:
	leavel	#2
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_HfpLinkPriorityFromCallState:
	enterl	#5
?LBB_HfpLinkPriorityFromCallState:
	st	AL,@(H'0001,Y)
?LBB21:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L221:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetCallState
	cmp	AL,#H'0000
	beq	?L218
	ld	AL,@(H'0001,Y)
	cmp	AL,@(0,Y)
	bne	?L218
	ld	AL,@(H'0002,Y)
	bra	(?L215)
?L218:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bcz	?L221
	ld	AL,#H'0000
?L215:
?LBE21:
?LBE_HfpLinkPriorityFromCallState:
	leavel	#5
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_HfpLinkPriorityWithActiveCall:
	enterl	#6
?LBB_HfpLinkPriorityWithActiveCall:
	st	AL,@(H'0002,Y)
?LBB22:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L241:
	tst	@(H'0002,Y)
	beq	?L232
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L229
?L232:
?LBB23:
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_HfpLinkGetCallState
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0004
	bcs	?L229
	cmp	AL,#H'0007
	bcz	?L252
	cmp	AL,#H'0009
	beq	?L252
?L229:
	ld	AL,@(H'0003,Y)
?LBE23:
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0002
	bcz	?L241
	tst	@(H'0002,Y)
	beq	?L242
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L248:
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	bsr	$_HfpLinkGetAudioSink
	cmp	AL,#H'0000
	beq	?L245
?L252:
	ld	AL,@(H'0003,Y)
	bra	(?L226)
?L245:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0002
	bcz	?L248
?L242:
	ld	AL,#H'0000
?L226:
?LBE22:
?LBE_HfpLinkPriorityWithActiveCall:
	leavel	#6
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
$_HfpLinkPriorityFromAudioSink:
	enterl	#2
?LBB_HfpLinkPriorityFromAudioSink:
?LBB24:
	bsr	$_hfpGetLinkFromAudioSink
	bsr	$_hfpGetLinkPriority
?LBE24:
?LBE_HfpLinkPriorityFromAudioSink:
	leavel	#2
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_HfpLinkPriorityFromBdaddr:
	enterl	#2
?LBB_HfpLinkPriorityFromBdaddr:
?LBB25:
	bsr	$_hfpGetLinkFromBdaddr
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L260
	ld	AH,@(H'0006,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	bra	(?L259)
?L260:
	ld	AL,#H'0000
?L259:
?LBE25:
?LBE_HfpLinkPriorityFromBdaddr:
	leavel	#2
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_HfpLinkLoss:
	enterl	#2
?LBB_HfpLinkLoss:
?LBB26:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000A,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000B,X)
	bcc	?L269
	ld	AH,@$XAP_AL
?L267:
	ld	X,@(-1,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0010
	bne	?L264
	ld	AL,#H'0001
	bra	(?L261)
?L264:
	ld	AL,#H'001E
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@$XAP_AH
	cmp	AL,@(H'000B,X)
	bcs	?L267
?L269:
	ld	AL,#H'0000
?L261:
?LBE26:
?LBE_HfpLinkLoss:
	leavel	#2
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_HfpPriorityIsHsp:
	enterl	#2
?LBB_HfpPriorityIsHsp:
?LBB27:
	bsr	$_hfpGetLinkFromPriority
	bsr	$_hfpLinkIsHsp
?LBE27:
?LBE_HfpPriorityIsHsp:
	leavel	#2
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_HfpGetFirstIncomingCallPriority:
	enterl	#2
?LBB_HfpGetFirstIncomingCallPriority:
	ld	X,@$_theHfp
	ld	AH,@(H'0008,X)
	lsr	#H'0009
	ld	AL,@$XAP_AH
	and	AL,#H'0003
?LBE_HfpGetFirstIncomingCallPriority:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 159 used[1] = 50 total = 209
;# Function pattern *movqi3 used[0] = 162 total = 162
;# Function pattern *movqi8 used[0] = 11 total = 11
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 7 used[2] = 8 total = 15
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 7 total = 7
;# Function pattern *lshrqi3 used[0] = 17 total = 17
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 38 total = 38
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 36 total = 36
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 31 used[1] = 13 total = 44
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 50 total = 50
	MODULE	hfp_multiple_calls
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpCallHoldActionRequest:
	enterl	#9
?LBB_HfpCallHoldActionRequest:
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0016
	bsr	$_MessageSend
?LBE2:
?LBE_HfpCallHoldActionRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	hfp_response_hold
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpResponseHoldActionRequest:
	enterl	#9
?LBB_HfpResponseHoldActionRequest:
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0019
	bsr	$_MessageSend
?LBE2:
?LBE_HfpResponseHoldActionRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	hfp_slc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpSlcConnectRequest:
	enterl	#6
?LBB_HfpSlcConnectRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	bsr	$_hfpGetLinkFromBdaddr
	cmp	AL,#H'0000
	bne	?L2
	bsr	$_hfpGetIdleLink
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,@(H'0006,Y)
	bsr	$_hfpGetServiceFromProfile
	st	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L4
	ld	AL,@(H'0006,Y)
	xor	AL,#-H'0001
	and	AL,@(H'0002,Y)
	st	AL,@(H'0002,Y)
	bsr	$_hfpGetServiceFromProfile
	st	AL,@H'fff8
?L4:
	tst	@H'fff8
	beq	?L2
	ld	AL,@(H'0002,Y)
	and	AL,#H'0007
	asl	#H'0001
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0006,X)
	and	AH,#-H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@H'fff8
	bsr	$_hfpGetProfileServerChannel
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	bsr	$_hfpSendSlcConnectCfmToApp
?L1:
?LBE2:
?LBE_HfpSlcConnectRequest:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_HfpSlcDisconnectRequest:
	enterl	#2
?LBB_HfpSlcDisconnectRequest:
	ld	AH,@$XAP_AL
	ld	AL,#H'0005
	bsr	$_hfpSendCommonInternalMessagePriority
?LBE_HfpSlcDisconnectRequest:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 11 used[1] = 3 total = 14
;# Function pattern *movqi3 used[0] = 8 total = 8
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 1 total = 4
	MODULE	hfp_voice
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpVoiceRecognitionEnableRequest:
	enterl	#9
?LBB_HfpVoiceRecognitionEnableRequest:
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'000E
	bsr	$_MessageSend
?LBE2:
?LBE_HfpVoiceRecognitionEnableRequest:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	hfp_voice_tag
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpVoiceTagNumberRequest:
	enterl	#2
?LBB_HfpVoiceTagNumberRequest:
	ld	AH,@$XAP_AL
	ld	AL,#H'0012
	bsr	$_hfpSendCommonInternalMessagePriority
?LBE_HfpVoiceTagNumberRequest:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	hfp_volume
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_HfpVolumeSyncSpeakerGainRequest:
	enterl	#4
?LBB_HfpVolumeSyncSpeakerGainRequest:
	st	AH,@(0,Y)
?LBB2:
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1800
	bne	?L2
	ld	AL,@$XAP_UXL
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	bsr	$_hfpHandleVgsRequest
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'000F
	ld	X,@(0,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_HfpVolumeSyncSpeakerGainRequest:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_HfpVolumeSyncMicrophoneGainRequest:
	enterl	#3
?LBB_HfpVolumeSyncMicrophoneGainRequest:
	st	AH,@(0,Y)
?LBB3:
	bsr	$_hfpGetLinkFromPriority
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1800
	bne	?L5
	ld	AL,@$XAP_UXL
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	bsr	$_hfpHandleVgmRequest
	ld	AL,#H'0001
	bra	(?L4)
?L5:
	ld	AL,#H'0000
?L4:
?LBE3:
?LBE_HfpVolumeSyncMicrophoneGainRequest:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 total = 8
;# Function pattern *movqi3 used[0] = 13 total = 13
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	rfc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_initPortParams:
	enterl	#2
?LBB_initPortParams:
	ld	X,@$XAP_AL
	ld	AH,#H'0003
	st	AH,@(0,X)
	st	AH,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	AL,#H'0001
	st	AL,@(H'0003,X)
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
	st	AH,@(H'0005,X)
	ld	AL,#H'0011
	st	AL,@(H'0006,X)
	ld	AL,#H'0013
	st	AL,@(H'0007,X)
	ld	AL,#H'0000
	st	AL,@(H'0008,X)
?LBE_initPortParams:
	leavel	#2
_initConfigParams:
	enterl	#2
?LBB_initConfigParams:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0374
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'008C
	st	AL,@(H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,X)
	ld	AL,@H'ffff
	ld	AL,#H'01F4
	bra	(?L5)
?L3:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
?L5:
	st	AL,@(H'0003,X)
?LBE_initConfigParams:
	leavel	#2
$_ConnectionRfcommAllocateChannel:
	enterl	#8
?LBB_ConnectionRfcommAllocateChannel:
?LBB2:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0051
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionRfcommAllocateChannel:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_ConnectionRfcommDeallocateChannel:
	enterl	#8
?LBB_ConnectionRfcommDeallocateChannel:
?LBB3:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0052
	bsr	$_MessageSend
?LBE3:
?LBE_ConnectionRfcommDeallocateChannel:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_ConnectionRfcommConnectRequest:
	enterl	#15
?LBB_ConnectionRfcommConnectRequest:
	ld	X,@$XAP_AH
?LBB4:
?LBB5:
	ld	AH,#H'000B
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0011,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	bsr	_initConfigParams
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0053
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionRfcommConnectRequest:
	leavel	#15
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_ConnectionRfcommConnectResponse:
	enterl	#12
?LBB_ConnectionRfcommConnectResponse:
?LBB6:
	ld	X,#H'0008
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	_initConfigParams
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0054
	bsr	$_MessageSend
?LBE6:
?LBE_ConnectionRfcommConnectResponse:
	leavel	#12
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_ConnectionRfcommDisconnectRequest:
	enterl	#8
?LBB_ConnectionRfcommDisconnectRequest:
?LBB7:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0055
	bsr	$_MessageSend
?LBE7:
?LBE_ConnectionRfcommDisconnectRequest:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_ConnectionRfcommDisconnectResponse:
	enterl	#8
?LBB_ConnectionRfcommDisconnectResponse:
?LBB8:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0056
	bsr	$_MessageSend
?LBE8:
?LBE_ConnectionRfcommDisconnectResponse:
	leavel	#8
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_ConnectionRfcommPortNegRequest:
	enterl	#16
?LBB_ConnectionRfcommPortNegRequest:
?LBB9:
	ld	X,#H'000C
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0004,Y)
	tst	@(H'0011,Y)
	beq	?L13
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	ld	AH,@(H'0011,Y)
	bsr	$_memcpy
	bra	(?L14)
?L13:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0003
	bsr	_initPortParams
?L14:
	bsr	$_connectionGetCmTask
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(0,Y)
	ld	AH,#H'0057
	bsr	$_MessageSend
?LBE9:
?LBE_ConnectionRfcommPortNegRequest:
	leavel	#16
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_ConnectionRfcommPortNegResponse:
	enterl	#15
?LBB_ConnectionRfcommPortNegResponse:
?LBB10:
	ld	X,#H'000B
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	tst	@(H'000F,Y)
	beq	?L16
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000F,Y)
	bsr	$_memcpy
	bra	(?L17)
?L16:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0002
	bsr	_initPortParams
?L17:
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0058
	bsr	$_MessageSend
?LBE10:
?LBE_ConnectionRfcommPortNegResponse:
	leavel	#15
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_ConnectionRfcommControlSignalRequest:
	enterl	#8
?LBB_ConnectionRfcommControlSignalRequest:
?LBB11:
	ld	X,#H'0004
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0059
	bsr	$_MessageSend
?LBE11:
?LBE_ConnectionRfcommControlSignalRequest:
	leavel	#8
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_ConnectionRfcommLineStatusRequest:
	enterl	#8
?LBB_ConnectionRfcommLineStatusRequest:
?LBB12:
	ld	X,#H'0004
	st	X,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'005A
	bsr	$_MessageSend
?LBE12:
?LBE_ConnectionRfcommLineStatusRequest:
	leavel	#8
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 77 used[1] = 7 used[3] = 1 total = 85
;# Function pattern *movqi3 used[0] = 49 total = 49
;# Function pattern *addqi0 used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 14 total = 14
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 2 total = 3
	MODULE	hfp_parse
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_skip1:
	enterl	#2
?LBB_skip1:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L2
	cmp	AL,@$XAP_AH
	beq	?L2
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L9
	cmp	AL,#H'0009
	bne	?L2
?L9:
	add	X,#H'0001
	cmp	X,@$XAP_AH
	beq	?L2
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L9
	cmp	AL,#H'0009
	beq	?L9
?L2:
	ld	AL,@$XAP_UXL
?LBE_skip1:
	leavel	#2
_skipOnce1:
	enterl	#2
?LBB_skipOnce1:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L17
	cmp	AL,@$XAP_AH
	beq	?L17
	ld	AL,@(0,X)
	cmp	AL,#H'002C
	beq	?L19
	cmp	AL,#H'003B
	bne	?L17
?L19:
	add	X,#H'0001
?L17:
	ld	AL,@$XAP_UXL
?LBE_skipOnce1:
	leavel	#2
	.SEG	CONST
_isStringTable:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	.CODE
_getString:
	enterl	#2
?LBB_getString:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB2:
?LBB3:
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L25
	cmp	AL,@H'fff9
	beq	?L25
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'0022
	bne	?L25
	ld	AH,#H'0001
	add	AH,@H'fff8
?L25:
?LBE3:
	st	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L26
?LBB4:
	st	AH,@H'fffa
	bra	(?L27)
?L33:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
?L27:
	ld	X,@H'fff8
	cmp	X,@H'fff9
	beq	?L28
?LBB5:
	ld	AL,@(0,X)
	st	AL,@H'fffb
	ld	AH,#H'0000
	and	AL,#-H'0080
	cmp	AL,#H'0000
	bne	?L32
	ld	X,@H'fffb
	tst	@(_isStringTable,X)
	beq	?L32
	ld	AH,#H'0001
?L32:
?LBE5:
	cmp	AH,#H'0000
	bne	?L33
?L28:
	ld	AL,@H'fff8
	cmp	AL,@H'fffa
	beq	?L34
	ld	X,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,@H'fffa
	st	AL,@(0,X)
	ld	AL,@H'ffff
	sub	AL,@H'fffa
	st	AL,@(H'0001,X)
?LBB6:
	ld	AH,@H'fff8
	tst	@H'fff8
	beq	?L36
	cmp	AH,@H'fff9
	beq	?L36
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0022
	bne	?L36
	ld	AH,#H'0001
	add	AH,@H'fff8
?L36:
?LBE6:
	ld	AL,@$XAP_AH
	bra	(?L23)
?L34:
?LBB7:
	ld	AH,@H'fff8
	tst	@H'fff8
	beq	?L39
	cmp	AL,@H'fff9
	beq	?L39
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0022
	bne	?L39
	ld	AH,#H'0001
	add	AH,@H'fff8
?L39:
?LBE7:
	st	AH,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'002C
	beq	?L41
	cmp	AL,#H'000D
	bne	?L26
?L41:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
	ld	AL,@H'fff8
	bra	(?L23)
?L26:
?LBE4:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?L23:
?LBE2:
?LBE_getString:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
_getWildString:
	enterl	#8
?LBB_getWildString:
	st	AL,@H'fff8
	st	AH,@(H'0004,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L53
?LBB9:
	st	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_AH
	sub	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,#H'000D
	bsr	$_UtilFind
	st	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L54
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,#H'0001
	st	X,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,#H'000A
	bsr	$_UtilFind
	st	AL,@H'fff8
?L54:
	tst	@H'fff8
	bne	?L55
	ld	AL,@(H'0004,Y)
	st	AL,@H'fff8
?L55:
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	nadd	AL,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,@H'fff8
	bra	(?L52)
?L53:
?LBE9:
	ld	AL,#H'0000
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
?L52:
?LBE8:
?LBE_getWildString:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_match1:
	enterl	#2
?LBB_match1:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L57
	cmp	AL,@$XAP_AH
	beq	?L57
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	beq	?L59
	cmp	AL,#H'000A
	bne	?L57
?L59:
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	bra	(?L58)
?L57:
	ld	AL,#H'0000
?L58:
?LBE_match1:
	leavel	#2
_skip2:
	enterl	#2
?LBB_skip2:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L64
	cmp	AL,@$XAP_AH
	beq	?L64
	ld	AL,@(0,X)
	add	AL,#-H'0028
	cmp	AL,#(H'0001+H'0001)
	bcc	?L64
?L69:
	add	X,#H'0001
	cmp	X,@$XAP_AH
	beq	?L64
	ld	AL,@(0,X)
	add	AL,#-H'0028
	cmp	AL,#H'0001
	bcz	?L69
?L64:
	ld	AL,@$XAP_UXL
?LBE_skip2:
	leavel	#2
$_get_hfpCsrFeaturesHandleModifyIndicatorsInd_p:
	enterl	#10
?LBB_get_hfpCsrFeaturesHandleModifyIndicatorsInd_p:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0004,Y)
?LBB10:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	cmp	AH,@(H'0003,X)
	bcc	?L75
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
?L75:
	ld	X,@(H'0005,Y)
?LBB11:
	ld	X,@(H'0003,X)
	st	X,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L77
	cmp	AL,@$XAP_AH
	beq	?L77
	ld	X,@(H'0006,Y)
	cmp	X,@(H'0004,Y)
	beq	?L84
	bcc	?L77
?L84:
?L80:
	ld	AH,@(H'0006,Y)
	add	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skip2
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,#H'0001
	add	AH,@$XAP_UY
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skip2
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	cmp	AL,#H'0000
	beq	?L77
	cmp	AL,@(H'0007,Y)
	beq	?L77
	ld	X,@(H'0006,Y)
	cmp	X,@(H'0004,Y)
	bcz	?L80
?L77:
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
?LBE11:
?LBE10:
	ld	AL,@$XAP_UXL
?LBE_get_hfpCsrFeaturesHandleModifyIndicatorsInd_p:
	leavel	#10
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
_loop4:
	enterl	#8
?LBB_loop4:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0001,X)
	cmp	AL,#H'0000
	beq	?L89
	cmp	AL,@(H'0004,Y)
	beq	?L89
?L95:
?LBB13:
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skip2
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,#H'0001
	add	AH,@$XAP_UY
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skip2
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	cmp	AL,#H'0000
	beq	?L89
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0062
	bgt	?L88
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	st	AL,@(H'0003,Y)
?L88:
?LBE13:
	tst	@(H'0003,Y)
	beq	?L89
	ld	AL,@(H'0003,Y)
	cmp	AL,@(H'0004,Y)
	beq	?L89
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0062
	ble	?L95
?L89:
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	tst	@(H'0005,Y)
	bmi	?L96
	beq	?L96
	ld	AL,@(H'0003,Y)
	bra	(?L97)
?L96:
	ld	AL,#H'0000
?L97:
?LBE12:
?LBE_loop4:
	leavel	#8
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
_matchChar:
	enterl	#2
?LBB_matchChar:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L104
	cmp	AL,@$XAP_AH
	beq	?L104
?LBB14:
	ld	AH,@(0,X)
	ld	AL,#-H'0061
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0019)
	bcc	?L107
	add	AH,#-H'0020
?L107:
?LBE14:
	cmp	AH,@(H'0002,Y)
	bne	?L104
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	bra	(?L105)
?L104:
	ld	AL,#H'0000
?L105:
?LBE_matchChar:
	leavel	#2
_skip3:
	enterl	#2
?LBB_skip3:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L111
	cmp	AL,@$XAP_AH
	beq	?L111
	ld	AL,@(0,X)
	cmp	AL,#H'002D
	bne	?L111
?L116:
	add	X,#H'0001
	cmp	X,@$XAP_AH
	beq	?L111
	ld	AL,@(0,X)
	cmp	AL,#H'002D
	beq	?L116
?L111:
	ld	AL,@$XAP_UXL
?LBE_skip3:
	leavel	#2
$_get_hfpHandleCallHoldInfoRange_p:
	enterl	#11
?LBB_get_hfpHandleCallHoldInfoRange_p:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0004,Y)
?LBB15:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	cmp	AH,@(H'0003,X)
	bcc	?L123
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
?L123:
	ld	X,@(H'0005,Y)
?LBB16:
	ld	X,@(H'0003,X)
	st	X,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	cmp	AH,#H'0000
	beq	?L125
	cmp	AH,@$XAP_AL
	beq	?L125
	ld	X,@(H'0006,Y)
	cmp	X,@(H'0004,Y)
	beq	?L132
	bcc	?L125
?L132:
	ld	AL,#H'0001
	add	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
?L128:
	ld	X,@(H'0006,Y)
	add	X,#H'0001
	st	X,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0007,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skip3
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L125
	cmp	AL,@(H'0007,Y)
	beq	?L125
	ld	AL,@(H'0006,Y)
	cmp	AL,@(H'0004,Y)
	bcz	?L128
?L125:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	st	AH,@(H'0004,X)
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
?LBE16:
?LBE15:
	ld	AL,@$XAP_UXL
?LBE_get_hfpHandleCallHoldInfoRange_p:
	leavel	#11
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
_loop2:
	enterl	#9
?LBB_loop2:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB17:
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0003,Y)
	beq	?L137
	ld	AH,@(H'0003,Y)
	cmp	AH,@(H'0004,Y)
	beq	?L137
	ld	AL,#H'0001
	add	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
?L143:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB18:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skip3
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_UtilGetNumber
	cmp	AL,#H'0000
	beq	?L137
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	cmp	AH,#H'0062
	bgt	?L136
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	st	AL,@(H'0003,Y)
?L136:
?LBE18:
	tst	@(H'0003,Y)
	beq	?L137
	ld	AL,@(H'0003,Y)
	cmp	AL,@(H'0004,Y)
	beq	?L137
	ld	AH,@(H'0005,Y)
	cmp	AH,#H'0062
	ble	?L143
?L137:
	ld	AH,@(H'0003,Y)
	ld	X,@(H'0009,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	tst	@(H'0005,Y)
	bmi	?L144
	beq	?L144
	ld	AL,@$XAP_AH
	bra	(?L145)
?L144:
	ld	AL,#H'0000
?L145:
?LBE17:
?LBE_loop2:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_get_hfpHandleCallHoldInfo_p:
	enterl	#10
?LBB_get_hfpHandleCallHoldInfo_p:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0004,Y)
?LBB19:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	cmp	AH,@(H'0003,X)
	bcc	?L152
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
?L152:
	ld	X,@(H'0005,Y)
?LBB20:
	ld	X,@(H'0003,X)
	st	X,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	cmp	AH,#H'0000
	beq	?L154
	cmp	AH,@$XAP_AL
	beq	?L154
	ld	X,@(H'0006,Y)
	cmp	X,@(H'0004,Y)
	beq	?L161
	bcc	?L154
?L161:
?L157:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0007,Y)
	bsr	_getString
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@(H'0007,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0007,Y)
	bsr	_skip1
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L154
	cmp	AL,@(H'0007,Y)
	beq	?L154
	ld	X,@(H'0006,Y)
	cmp	X,@(H'0004,Y)
	bcz	?L157
?L154:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	st	AH,@(H'0004,X)
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
?LBE20:
?LBE19:
	ld	AL,@$XAP_UXL
?LBE_get_hfpHandleCallHoldInfo_p:
	leavel	#10
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
_loop3:
	enterl	#8
?LBB_loop3:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB21:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0001,X)
	cmp	AL,#H'0000
	beq	?L166
	cmp	AL,@(H'0004,Y)
	beq	?L166
?L172:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB22:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	_getString
	cmp	AL,#H'0000
	beq	?L166
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0062
	bgt	?L165
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	ld	AH,@(H'0004,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0004,Y)
	bsr	_skip1
	st	AL,@(H'0003,Y)
?L165:
?LBE22:
	tst	@(H'0003,Y)
	beq	?L166
	ld	AL,@(H'0003,Y)
	cmp	AL,@(H'0004,Y)
	beq	?L166
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0062
	ble	?L172
?L166:
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	tst	@(H'0005,Y)
	bmi	?L173
	beq	?L173
	ld	AL,@(H'0003,Y)
	bra	(?L174)
?L173:
	ld	AL,#H'0000
?L174:
?LBE21:
?LBE_loop3:
	leavel	#8
;.stabn	192,0,0,?LBB21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	224,0,0,?LBE21
$_get_hfpHandleIndicatorStatus_d:
	enterl	#9
?LBB_get_hfpHandleIndicatorStatus_d:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0003,Y)
?LBB23:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
	cmp	AH,@(H'0003,X)
	bcc	?L181
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
?L181:
	ld	X,@(H'0004,Y)
?LBB24:
	ld	X,@(H'0003,X)
	st	X,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	cmp	AH,#H'0000
	beq	?L183
	cmp	AH,@$XAP_AL
	beq	?L183
	ld	X,@(H'0005,Y)
	cmp	X,@(H'0003,Y)
	beq	?L190
	bcc	?L183
?L190:
?L186:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0006,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0006,Y)
	bsr	_skip1
	ld	AH,@(H'0006,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0006,Y)
	bsr	_skip1
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L183
	cmp	AL,@(H'0006,Y)
	beq	?L183
	ld	X,@(H'0005,Y)
	cmp	X,@(H'0003,Y)
	bcz	?L186
?L183:
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	st	AH,@(H'0004,X)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?LBE24:
?LBE23:
	ld	AL,@$XAP_UXL
?LBE_get_hfpHandleIndicatorStatus_d:
	leavel	#9
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
_loop1:
	enterl	#7
?LBB_loop1:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB25:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
	cmp	AL,#H'0000
	beq	?L195
	cmp	AL,@(H'0003,Y)
	beq	?L195
?L201:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB26:
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_UtilGetNumber
	cmp	AL,#H'0000
	beq	?L195
	st	AL,@(H'0002,Y)
	ld	X,@(H'0004,Y)
	add	X,#H'0001
	st	X,@(H'0004,Y)
	cmp	X,#H'0062
	bgt	?L194
	ld	AH,@(H'0003,Y)
	bsr	_skip1
	ld	AH,@(H'0003,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0003,Y)
	bsr	_skip1
	st	AL,@(H'0002,Y)
?L194:
?LBE26:
	tst	@(H'0002,Y)
	beq	?L195
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0003,Y)
	beq	?L195
	ld	X,@(H'0004,Y)
	cmp	X,#H'0062
	ble	?L201
?L195:
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	cmp	X,#H'0001
	ble	?L202
	ld	AL,@(H'0002,Y)
	bra	(?L203)
?L202:
	ld	AL,#H'0000
?L203:
?LBE25:
?LBE_loop1:
	leavel	#7
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
_findEndOfPacket:
	enterl	#8
?LBB_findEndOfPacket:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB27:
	cmp	AL,@$XAP_AH
	beq	?L236
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	bne	?L212
	ld	AL,@$XAP_UXL
	nadd	AL,@(H'0005,Y)
	cmp	AL,#H'0003
	ble	?L236
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000A
	bne	?L230
	ld	AL,@(H'0002,X)
	cmp	AL,#H'000D
	beq	?L230
?LBB28:
	add	X,#H'0002
	st	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	nadd	AL,@(H'0005,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,#H'000D
	bsr	$_UtilFind
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L236
	add	AL,#H'0001
	cmp	AL,@(H'0005,Y)
	beq	?L236
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000A
	bne	?L230
	ld	AL,#H'0002
	add	AL,@$XAP_UXL
	bra	(?L210)
?L212:
?LBE28:
?LBB29:
	ld	X,@(H'0004,Y)
	cmp	X,@(H'0005,Y)
	beq	?L225
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L240
	cmp	AL,#H'0000
	beq	?L240
	cmp	AL,#H'0009
	bne	?L225
?L240:
	add	X,#H'0001
	cmp	X,@(H'0005,Y)
	beq	?L225
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L240
	cmp	AL,#H'0000
	beq	?L240
	cmp	AL,#H'0009
	beq	?L240
?L225:
	cmp	X,@(H'0005,Y)
	beq	?L229
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	beq	?L230
	cmp	AL,#H'000A
	bne	?L229
?L230:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	bra	(?L210)
?L229:
	cmp	X,@(H'0005,Y)
	beq	?L232
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	beq	?L232
?L235:
	add	X,#H'0001
	cmp	X,@(H'0005,Y)
	beq	?L232
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	bne	?L235
?L232:
	cmp	X,@(H'0005,Y)
	beq	?L236
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	bra	(?L210)
?L236:
	ld	AL,#H'0000
?L210:
?LBE29:
?LBE27:
?LBE_findEndOfPacket:
	leavel	#8
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_parseSource:
	enterl	#6
?LBB_parseSource:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB30:
	bsr	$_SourceMap
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_SourceSize
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_parseData
	cmp	AL,@(H'0003,Y)
	beq	?L263
	ld	AH,@(H'0003,Y)
	nadd	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_SourceDrop
	ld	AL,#H'0001
	bra	(?L262)
?L263:
	ld	AL,#H'0000
?L262:
?LBE30:
?LBE_parseSource:
	leavel	#6
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
	.SEG	CONST
_arcs:
	dc	H'0009
	dc	H'0000
	dc	H'000A
	dc	H'0001
	dc	H'000D
	dc	H'0001
	dc	H'0020
	dc	H'0000
	dc	H'002B
	dc	H'0002
	dc	H'0009
	dc	H'0001
	dc	H'000A
	dc	H'0003
	dc	H'000D
	dc	H'0003
	dc	H'0020
	dc	H'0001
	dc	H'0009
	dc	H'0002
	dc	H'0020
	dc	H'0002
	dc	H'0043
	dc	H'0004
	dc	H'0009
	dc	H'0003
	dc	H'0020
	dc	H'0003
	dc	H'002B
	dc	H'0005
	dc	H'0045
	dc	H'0006
	dc	H'004E
	dc	H'0007
	dc	H'004F
	dc	H'0008
	dc	H'0052
	dc	H'0009
	dc	H'004C
	dc	H'000A
	dc	H'0009
	dc	H'000B
	dc	H'0020
	dc	H'000B
	dc	H'0042
	dc	H'000C
	dc	H'0043
	dc	H'000D
	dc	H'004D
	dc	H'000E
	dc	H'0056
	dc	H'000F
	dc	H'0052
	dc	H'0010
	dc	H'004F
	dc	H'0011
	dc	H'004B
	dc	H'0012
	dc	H'0049
	dc	H'0013
	dc	H'0043
	dc	H'0014
	dc	H'0009
	dc	H'000B
	dc	H'0020
	dc	H'000B
	dc	H'0042
	dc	H'000C
	dc	H'0043
	dc	H'000D
	dc	H'0056
	dc	H'000F
	dc	H'0043
	dc	H'0015
	dc	H'0049
	dc	H'0016
	dc	H'0052
	dc	H'0017
	dc	H'0053
	dc	H'0018
	dc	H'0054
	dc	H'0019
	dc	H'0056
	dc	H'001A
	dc	H'0043
	dc	H'001B
	dc	H'0048
	dc	H'001C
	dc	H'0049
	dc	H'001D
	dc	H'004C
	dc	H'001E
	dc	H'004D
	dc	H'001F
	dc	H'004E
	dc	H'0020
	dc	H'004F
	dc	H'0021
	dc	H'0053
	dc	H'0022
	dc	H'0042
	dc	H'0023
	dc	H'0047
	dc	H'0024
	dc	H'0052
	dc	H'0025
	dc	H'0009
	dc	H'0011
	dc	H'0020
	dc	H'0011
	dc	H'0043
	dc	H'0026
	dc	H'0009
	dc	H'0012
	dc	H'000A
	dc	H'0027
	dc	H'000D
	dc	H'0027
	dc	H'0020
	dc	H'0012
	dc	H'004E
	dc	H'0028
	dc	H'0043
	dc	H'0029
	dc	H'0053
	dc	H'002A
	dc	H'004E
	dc	H'002B
	dc	H'0053
	dc	H'002C
	dc	H'0049
	dc	H'002D
	dc	H'0052
	dc	H'002E
	dc	H'0052
	dc	H'002F
	dc	H'0057
	dc	H'0030
	dc	H'004C
	dc	H'0031
	dc	H'0045
	dc	H'0032
	dc	H'004E
	dc	H'0033
	dc	H'0043
	dc	H'0014
	dc	H'0049
	dc	H'0034
	dc	H'0045
	dc	H'0035
	dc	H'0055
	dc	H'0036
	dc	H'0050
	dc	H'0037
	dc	H'0052
	dc	H'0038
	dc	H'0041
	dc	H'0039
	dc	H'004D
	dc	H'003A
	dc	H'0053
	dc	H'003B
	dc	H'004F
	dc	H'003C
	dc	H'0041
	dc	H'003D
	dc	H'0009
	dc	H'0027
	dc	H'000A
	dc	H'FFFF
	dc	H'000D
	dc	H'FFFF
	dc	H'0020
	dc	H'0027
	dc	H'0047
	dc	H'003E
	dc	H'0009
	dc	H'0029
	dc	H'0020
	dc	H'0029
	dc	H'003A
	dc	H'FFFE
	dc	H'003D
	dc	H'FFFE
	dc	H'0009
	dc	H'002A
	dc	H'0020
	dc	H'002A
	dc	H'003A
	dc	H'FFFD
	dc	H'003D
	dc	H'FFFD
	dc	H'0050
	dc	H'003F
	dc	H'0046
	dc	H'0040
	dc	H'0052
	dc	H'0041
	dc	H'0048
	dc	H'0042
	dc	H'0041
	dc	H'0043
	dc	H'0041
	dc	H'0044
	dc	H'0044
	dc	H'0045
	dc	H'0056
	dc	H'0046
	dc	H'0044
	dc	H'0047
	dc	H'0050
	dc	H'0048
	dc	H'0009
	dc	H'0035
	dc	H'0020
	dc	H'0035
	dc	H'0045
	dc	H'0049
	dc	H'004D
	dc	H'004A
	dc	H'0053
	dc	H'004B
	dc	H'0009
	dc	H'004C
	dc	H'0020
	dc	H'004C
	dc	H'003A
	dc	H'FFFC
	dc	H'003D
	dc	H'FFFC
	dc	H'0042
	dc	H'004D
	dc	H'0047
	dc	H'004E
	dc	H'0053
	dc	H'004F
	dc	H'0054
	dc	H'0050
	dc	H'004E
	dc	H'0051
	dc	H'0009
	dc	H'003A
	dc	H'0020
	dc	H'003A
	dc	H'003A
	dc	H'FFFB
	dc	H'003D
	dc	H'FFFB
	dc	H'0009
	dc	H'003B
	dc	H'0020
	dc	H'003B
	dc	H'003A
	dc	H'FFFA
	dc	H'003D
	dc	H'FFFA
	dc	H'0052
	dc	H'0052
	dc	H'0052
	dc	H'0053
	dc	H'0009
	dc	H'003E
	dc	H'000A
	dc	H'0054
	dc	H'000D
	dc	H'0054
	dc	H'0020
	dc	H'003E
	dc	H'0009
	dc	H'003F
	dc	H'0020
	dc	H'003F
	dc	H'003A
	dc	H'FFF9
	dc	H'003D
	dc	H'FFF9
	dc	H'0009
	dc	H'0040
	dc	H'0020
	dc	H'0040
	dc	H'003A
	dc	H'FFF8
	dc	H'003D
	dc	H'FFF8
	dc	H'0009
	dc	H'0041
	dc	H'0020
	dc	H'0041
	dc	H'003A
	dc	H'FFF7
	dc	H'003D
	dc	H'FFF7
	dc	H'0009
	dc	H'0042
	dc	H'0020
	dc	H'0042
	dc	H'003A
	dc	H'FFF6
	dc	H'003D
	dc	H'FFF6
	dc	H'0009
	dc	H'0043
	dc	H'0020
	dc	H'0043
	dc	H'003A
	dc	H'FFF5
	dc	H'003D
	dc	H'FFF5
	dc	H'0009
	dc	H'0044
	dc	H'0020
	dc	H'0044
	dc	H'003A
	dc	H'FFF4
	dc	H'003D
	dc	H'FFF4
	dc	H'0009
	dc	H'0045
	dc	H'0020
	dc	H'0045
	dc	H'003A
	dc	H'FFF3
	dc	H'003D
	dc	H'FFF3
	dc	H'0009
	dc	H'0046
	dc	H'0020
	dc	H'0046
	dc	H'003A
	dc	H'FFF2
	dc	H'003D
	dc	H'FFF2
	dc	H'0009
	dc	H'0047
	dc	H'0020
	dc	H'0047
	dc	H'003A
	dc	H'FFF1
	dc	H'003D
	dc	H'FFF1
	dc	H'0009
	dc	H'0048
	dc	H'0020
	dc	H'0048
	dc	H'003A
	dc	H'FFF0
	dc	H'003D
	dc	H'FFF0
	dc	H'0052
	dc	H'0055
	dc	H'0009
	dc	H'004A
	dc	H'0020
	dc	H'004A
	dc	H'003A
	dc	H'FFEF
	dc	H'003D
	dc	H'FFEF
	dc	H'0009
	dc	H'004B
	dc	H'0020
	dc	H'004B
	dc	H'003A
	dc	H'FFEE
	dc	H'003D
	dc	H'FFEE
	dc	H'0009
	dc	H'004C
	dc	H'0020
	dc	H'004C
	dc	H'003A
	dc	H'FFFC
	dc	H'003D
	dc	H'FFFC
	dc	H'0041
	dc	H'0056
	dc	H'0045
	dc	H'0057
	dc	H'0046
	dc	H'0058
	dc	H'004D
	dc	H'0059
	dc	H'0058
	dc	H'005A
	dc	H'003A
	dc	H'FFED
	dc	H'003D
	dc	H'FFED
	dc	H'0009
	dc	H'0052
	dc	H'000A
	dc	H'005B
	dc	H'000D
	dc	H'005B
	dc	H'0020
	dc	H'0052
	dc	H'0052
	dc	H'005C
	dc	H'0009
	dc	H'0054
	dc	H'000A
	dc	H'FFEC
	dc	H'000D
	dc	H'FFEC
	dc	H'0020
	dc	H'0054
	dc	H'0052
	dc	H'005D
	dc	H'0054
	dc	H'005E
	dc	H'0054
	dc	H'005F
	dc	H'0009
	dc	H'0058
	dc	H'0020
	dc	H'0058
	dc	H'003A
	dc	H'FFEB
	dc	H'003D
	dc	H'FFEB
	dc	H'0053
	dc	H'0060
	dc	H'0054
	dc	H'0061
	dc	H'0009
	dc	H'005B
	dc	H'000A
	dc	H'FFEA
	dc	H'000D
	dc	H'FFEA
	dc	H'0020
	dc	H'005B
	dc	H'0049
	dc	H'0062
	dc	H'004F
	dc	H'0063
	dc	H'0054
	dc	H'0064
	dc	H'0053
	dc	H'0065
	dc	H'0009
	dc	H'0060
	dc	H'0020
	dc	H'0060
	dc	H'003A
	dc	H'FFE9
	dc	H'003D
	dc	H'FFE9
	dc	H'0009
	dc	H'0061
	dc	H'0020
	dc	H'0061
	dc	H'003A
	dc	H'FFE8
	dc	H'003D
	dc	H'FFE8
	dc	H'0045
	dc	H'0066
	dc	H'0052
	dc	H'0067
	dc	H'0009
	dc	H'0068
	dc	H'000A
	dc	H'0069
	dc	H'000D
	dc	H'0069
	dc	H'0020
	dc	H'0068
	dc	H'003F
	dc	H'0064
	dc	H'004D
	dc	H'006A
	dc	H'0052
	dc	H'006B
	dc	H'0009
	dc	H'0067
	dc	H'0020
	dc	H'0067
	dc	H'003A
	dc	H'FFE7
	dc	H'003D
	dc	H'FFE7
	dc	H'0009
	dc	H'0068
	dc	H'000A
	dc	H'0069
	dc	H'000D
	dc	H'0069
	dc	H'0020
	dc	H'0068
	dc	H'0009
	dc	H'0069
	dc	H'000A
	dc	H'FFE6
	dc	H'000D
	dc	H'FFE6
	dc	H'0020
	dc	H'0069
	dc	H'0053
	dc	H'006C
	dc	H'0009
	dc	H'006B
	dc	H'000A
	dc	H'006D
	dc	H'000D
	dc	H'006D
	dc	H'0020
	dc	H'006B
	dc	H'0009
	dc	H'006C
	dc	H'0020
	dc	H'006C
	dc	H'003A
	dc	H'FFE5
	dc	H'003D
	dc	H'FFE5
	dc	H'0009
	dc	H'006D
	dc	H'000A
	dc	H'FFE4
	dc	H'000D
	dc	H'FFE4
	dc	H'0020
	dc	H'006D
_states:
	dc	_arcs
	dc	_arcs + (H'000A)
	dc	_arcs + (H'0012)
	dc	_arcs + (H'0018)
	dc	_arcs + (H'0026)
	dc	_arcs + (H'0028)
	dc	_arcs + (H'0034)
	dc	_arcs + (H'0036)
	dc	_arcs + (H'0038)
	dc	_arcs + (H'003A)
	dc	_arcs + (H'003C)
	dc	_arcs + (H'003E)
	dc	_arcs + (H'0048)
	dc	_arcs + (H'0054)
	dc	_arcs + (H'0064)
	dc	_arcs + (H'0066)
	dc	_arcs + (H'0068)
	dc	_arcs + (H'006A)
	dc	_arcs + (H'0070)
	dc	_arcs + (H'0078)
	dc	_arcs + (H'007A)
	dc	_arcs + (H'007C)
	dc	_arcs + (H'007E)
	dc	_arcs + (H'0080)
	dc	_arcs + (H'0082)
	dc	_arcs + (H'0084)
	dc	_arcs + (H'0086)
	dc	_arcs + (H'0088)
	dc	_arcs + (H'008A)
	dc	_arcs + (H'008C)
	dc	_arcs + (H'0090)
	dc	_arcs + (H'0094)
	dc	_arcs + (H'0096)
	dc	_arcs + (H'0098)
	dc	_arcs + (H'009A)
	dc	_arcs + (H'009C)
	dc	_arcs + (H'009E)
	dc	_arcs + (H'00A2)
	dc	_arcs + (H'00A4)
	dc	_arcs + (H'00A6)
	dc	_arcs + (H'00AE)
	dc	_arcs + (H'00B0)
	dc	_arcs + (H'00B8)
	dc	_arcs + (H'00C0)
	dc	_arcs + (H'00C2)
	dc	_arcs + (H'00C4)
	dc	_arcs + (H'00C6)
	dc	_arcs + (H'00C8)
	dc	_arcs + (H'00CA)
	dc	_arcs + (H'00CC)
	dc	_arcs + (H'00CE)
	dc	_arcs + (H'00D0)
	dc	_arcs + (H'00D2)
	dc	_arcs + (H'00D4)
	dc	_arcs + (H'00DA)
	dc	_arcs + (H'00DC)
	dc	_arcs + (H'00DE)
	dc	_arcs + (H'00EE)
	dc	_arcs + (H'00F0)
	dc	_arcs + (H'00F8)
	dc	_arcs + (H'0100)
	dc	_arcs + (H'0102)
	dc	_arcs + (H'0104)
	dc	_arcs + (H'010C)
	dc	_arcs + (H'0114)
	dc	_arcs + (H'011C)
	dc	_arcs + (H'0124)
	dc	_arcs + (H'012C)
	dc	_arcs + (H'0134)
	dc	_arcs + (H'013C)
	dc	_arcs + (H'0144)
	dc	_arcs + (H'014C)
	dc	_arcs + (H'0154)
	dc	_arcs + (H'015C)
	dc	_arcs + (H'015E)
	dc	_arcs + (H'0166)
	dc	_arcs + (H'016E)
	dc	_arcs + (H'0176)
	dc	_arcs + (H'0178)
	dc	_arcs + (H'017A)
	dc	_arcs + (H'017E)
	dc	_arcs + (H'0180)
	dc	_arcs + (H'0184)
	dc	_arcs + (H'018C)
	dc	_arcs + (H'018E)
	dc	_arcs + (H'0196)
	dc	_arcs + (H'0198)
	dc	_arcs + (H'019A)
	dc	_arcs + (H'019C)
	dc	_arcs + (H'01A4)
	dc	_arcs + (H'01A6)
	dc	_arcs + (H'01A8)
	dc	_arcs + (H'01B0)
	dc	_arcs + (H'01B2)
	dc	_arcs + (H'01B4)
	dc	_arcs + (H'01B6)
	dc	_arcs + (H'01B8)
	dc	_arcs + (H'01C0)
	dc	_arcs + (H'01C8)
	dc	_arcs + (H'01CA)
	dc	_arcs + (H'01CC)
	dc	_arcs + (H'01D6)
	dc	_arcs + (H'01D8)
	dc	_arcs + (H'01DA)
	dc	_arcs + (H'01E2)
	dc	_arcs + (H'01EA)
	dc	_arcs + (H'01F2)
	dc	_arcs + (H'01F4)
	dc	_arcs + (H'01FC)
	dc	_arcs + (H'0204)
	dc	_arcs + (H'020C)
	.CODE
_matchLiteral:
	enterl	#7
?LBB_matchLiteral:
	st	AL,@(H'0001,Y)
?LBB31:
	sub	AH,@$XAP_AL
	st	AH,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
?L267:
	ld	AL,@(H'0002,Y)
?LBB32:
	sub	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0040
	bcz	?L270
	ld	AL,#H'0040
	st	AL,@(H'0004,Y)
?L270:
	ld	AL,@(H'0001,Y)
	add	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_UtilHash
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
?LBE32:
	cmp	AL,@(H'0002,Y)
	bcs	?L267
	cmp	AH,#H'37C2
	beq	?L277
	cmp	AH,#(H'0001+H'37C2)
	bcc	?L287
	cmp	AH,#H'0E69
	beq	?L273
	cmp	AH,#H'2200
	beq	?L275
	bra	(?L272)
?L287:
	cmp	AH,#H'7C36
	beq	?L281
	cmp	AH,#(H'0001+H'7C36)
	bcc	?L288
	cmp	AH,#H'6438
	beq	?L279
	bra	(?L272)
?L288:
	cmp	AH,#-H'6DB0
	beq	?L283
	bra	(?L272)
?L273:
	ld	AL,@(H'0002,Y)
?LBB33:
	cmp	AL,#H'000C
	bne	?L272
	st	AL,@(0,Y)
	ld	AL,#(?LC0)
	ld	AH,@(H'0001,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L272
	ld	AL,@(H'0007,Y)
	bsr	$_hfpHandleInBandRingToneDisable
	bra	(?L289)
?L275:
	ld	AL,@(H'0002,Y)
?LBE33:
?LBB34:
	cmp	AL,#H'001C
	bne	?L272
	st	AL,@(0,Y)
	ld	AL,#(?LC1)
	ld	AH,@(H'0001,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L272
	ld	AL,@(H'0007,Y)
	bsr	$_hfpHandleCallHoldInfoCommon
	bra	(?L289)
?L277:
	ld	AL,@(H'0002,Y)
?LBE34:
?LBB35:
	cmp	AL,#H'0006
	bne	?L272
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	ld	AH,@(H'0001,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L272
	ld	AL,@(H'0007,Y)
	bsr	$_hfpHandleOk
	bra	(?L289)
?L279:
	ld	AL,@(H'0002,Y)
?LBE35:
?LBB36:
	cmp	AL,#H'0009
	bne	?L272
	st	AL,@(0,Y)
	ld	AL,#(?LC3)
	ld	AH,@(H'0001,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L272
	ld	AL,@(H'0007,Y)
	bsr	$_hfpHandleError
	bra	(?L289)
?L281:
	ld	AL,@(H'0002,Y)
?LBE36:
?LBB37:
	cmp	AL,#H'0008
	bne	?L272
	st	AL,@(0,Y)
	ld	AL,#(?LC4)
	ld	AH,@(H'0001,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L272
	ld	AL,@(H'0007,Y)
	bsr	$_hfpHandleRing
	bra	(?L289)
?L283:
	ld	AL,@(H'0002,Y)
?LBE37:
?LBB38:
	cmp	AL,#H'000C
	bne	?L272
	st	AL,@(0,Y)
	ld	AL,#(?LC5)
	ld	AH,@(H'0001,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L272
	ld	AL,@(H'0007,Y)
	bsr	$_hfpHandleInBandRingToneEnable
?L289:
	ld	AL,#H'0001
	bra	(?L266)
?L272:
?LBE38:
	ld	AL,#H'0000
?L266:
?LBE31:
?LBE_matchLiteral:
	leavel	#7
	.SEG	CONST
?LC0:
	dc	H'0D
	dc	H'0A
	dc	H'2B
	dc	H'42
	dc	H'53
	dc	H'49
	dc	H'52
	dc	H'3A
	dc	H'20
	dc	H'30
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC1:
	dc	H'0D
	dc	H'0A
	dc	H'2B
	dc	H'43
	dc	H'48
	dc	H'4C
	dc	H'44
	dc	H'3A
	dc	H'20
	dc	H'28
	dc	H'30
	dc	H'2C
	dc	H'31
	dc	H'2C
	dc	H'31
	dc	H'78
	dc	H'2C
	dc	H'32
	dc	H'2C
	dc	H'32
	dc	H'78
	dc	H'2C
	dc	H'33
	dc	H'2C
	dc	H'34
	dc	H'29
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC2:
	dc	H'0D
	dc	H'0A
	dc	H'4F
	dc	H'4B
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC3:
	dc	H'0D
	dc	H'0A
	dc	H'45
	dc	H'52
	dc	H'52
	dc	H'4F
	dc	H'52
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC4:
	dc	H'0D
	dc	H'0A
	dc	H'52
	dc	H'49
	dc	H'4E
	dc	H'47
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC5:
	dc	H'0D
	dc	H'0A
	dc	H'2B
	dc	H'42
	dc	H'53
	dc	H'49
	dc	H'52
	dc	H'3A
	dc	H'20
	dc	H'31
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE31
$_parseData:
	enterl	#21
?LBB_parseData:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB39:
	bra	(?L305)
?L393:
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	ld	AH,@(H'0011,Y)
	cmp	AH,@$XAP_AL
	beq	?L307
	ld	AL,@(H'0015,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	bsr	_matchLiteral
	cmp	AL,#H'0000
	bne	?L307
?LBB40:
	ld	AH,#H'0000
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0012,Y)
	cmp	AL,@(H'0010,Y)
	beq	?L314
?L321:
	ld	X,@(H'0012,Y)
?LBB41:
?LBB42:
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	AL,#-H'0061
	add	AL,@$XAP_UXL
	cmp	AL,#(H'0001+H'0019)
	bcc	?L318
	ld	AL,#-H'0020
	add	AL,@$XAP_UXL
	st	AL,@(-1,Y)
?L318:
	ld	X,@$XAP_AH
?LBE42:
	ld	X,@(_states,X)
	st	X,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(_states+H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	sub	AH,@H'fff8
	asr	#H'0001
	st	AH,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,@(-1,Y)
	bsr	$_UtilFind
	cmp	AL,#H'0000
	beq	?L320
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0012,Y)
	add	AL,#H'0001
	st	AL,@(H'0012,Y)
?LBE41:
	cmp	AL,@(H'0010,Y)
	beq	?L314
	cmp	AH,#H'0000
	bpl	?L321
?L314:
	ld	AL,@$XAP_AH
	nadd	AL,#H'0000
	cmp	AL,#(H'0001+H'001C)
	bcc	?L320
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE392,X)
	brxl
	.SEG	CONST
?JTBASE392:
	.CODE
?L392:
	.SEG	CONST
	dc	lwrd(?L320-?L392)
	dc	lwrd(?L323-?L392)
	dc	lwrd(?L325-?L392)
	dc	lwrd(?L328-?L392)
	dc	lwrd(?L330-?L392)
	dc	lwrd(?L333-?L392)
	dc	lwrd(?L335-?L392)
	dc	lwrd(?L337-?L392)
	dc	lwrd(?L340-?L392)
	dc	lwrd(?L342-?L392)
	dc	lwrd(?L344-?L392)
	dc	lwrd(?L346-?L392)
	dc	lwrd(?L348-?L392)
	dc	lwrd(?L352-?L392)
	dc	lwrd(?L355-?L392)
	dc	lwrd(?L357-?L392)
	dc	lwrd(?L360-?L392)
	dc	lwrd(?L364-?L392)
	dc	lwrd(?L366-?L392)
	dc	lwrd(?L369-?L392)
	dc	lwrd(?L371-?L392)
	dc	lwrd(?L373-?L392)
	dc	lwrd(?L377-?L392)
	dc	lwrd(?L379-?L392)
	dc	lwrd(?L381-?L392)
	dc	lwrd(?L383-?L392)
	dc	lwrd(?L385-?L392)
	dc	lwrd(?L387-?L392)
	dc	lwrd(?L389-?L392)
	.CODE
?L323:
	tst	@(H'0012,Y)
	beq	?L320
	ld	AL,@(H'0015,Y)
	bsr	$_hfpHandleOk
	bra	(?L307)
?L325:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0009
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L326
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCurrentCallsWithNumber
	bra	(?L307)
?L326:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCurrentCalls
	bra	(?L307)
?L328:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleResponseWbsCodec
	bra	(?L307)
?L330:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_loop4
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L331
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleModifyIndicatorsInd
	bra	(?L307)
?L331:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,#H'0030
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_matchChar
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	bsr	$_hfpCsrFeaturesHandleDisableIndicatorsInd
	bra	(?L307)
?L333:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleMicrophoneGain
	bra	(?L307)
?L335:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleSpeakerGain
	bra	(?L307)
?L337:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L338
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleDataResponse
	bra	(?L307)
?L338:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleDataResponseExtended
	bra	(?L307)
?L340:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleSupportedFeaturesInd
	bra	(?L307)
?L342:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleInBandRingTone
	bra	(?L307)
?L344:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleResponseHold
	bra	(?L307)
?L346:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleVoiceRecognitionStatus
	bra	(?L307)
?L348:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L349
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallWaitingNotificationWithName
	bra	(?L307)
?L349:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L350
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallWaitingNotification
	bra	(?L307)
?L350:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallWaitingNotificationIllegal
	bra	(?L307)
?L352:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skip2
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_loop2
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skip2
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L353
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallHoldInfoRange
	bra	(?L307)
?L353:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skip2
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_loop3
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skip2
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallHoldInfo
	bra	(?L307)
?L355:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleIndicatorStatusUpdate
	bra	(?L307)
?L357:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_loop1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L358
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleIndicatorStatus
	bra	(?L307)
?L358:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleIndicatorList
	bra	(?L307)
?L360:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'000A
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L361
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallerIdWithName
	bra	(?L307)
?L361:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L362
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallerId
	bra	(?L307)
?L362:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleCallerIdIllegal
	bra	(?L307)
?L364:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleSubscriberNumber
	bra	(?L307)
?L366:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L367
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleNetworkOperatorModeName
	bra	(?L307)
?L367:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleNetworkOperatorMode
	bra	(?L307)
?L369:
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleNull
	bra	(?L307)
?L371:
	tst	@(H'0012,Y)
	beq	?L320
	ld	AL,@(H'0015,Y)
	bsr	$_hfpHandleRing
	bra	(?L307)
?L373:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L374
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleBandwidthCodecRes
	bra	(?L307)
?L374:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L375
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleCodecRes
	bra	(?L307)
?L375:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleNormalRes
	bra	(?L307)
?L377:
	tst	@(H'0012,Y)
	beq	?L320
	ld	AL,@(H'0015,Y)
	bsr	$_hfpHandleError
	bra	(?L307)
?L379:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getWildString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleSmsInd
	bra	(?L307)
?L381:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleTextInd
	bra	(?L307)
?L383:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpHandleExtendedError
	bra	(?L307)
?L385:
	tst	@(H'0012,Y)
	beq	?L320
	ld	AL,@(H'0015,Y)
	bsr	$_hfpCsrFeaturesHandleBatteryLevelRequestInd
	bra	(?L307)
?L387:
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	_getString
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	ld	AH,@(H'0010,Y)
	bsr	_skip1
	ld	AH,@(H'0010,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L320
	ld	AL,@(H'0015,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_hfpCsrFeaturesHandleGetSmsRes
	bra	(?L307)
?L389:
	tst	@(H'0012,Y)
	beq	?L320
	ld	AL,@(H'0015,Y)
	bsr	$_hfpHandleNoCarrierInd
	bra	(?L307)
?L320:
	ld	AH,@(H'0011,Y)
	sub	AH,@(H'000F,Y)
	ld	AL,@(H'0015,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_handleUnrecognised
?L307:
	ld	AH,@(H'0011,Y)
?LBE40:
	st	AH,@(H'000F,Y)
?L305:
	ld	AL,@(H'000F,Y)
	ld	AH,@(H'0010,Y)
	bsr	_findEndOfPacket
	st	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	bne	?L393
?LBE39:
	ld	AL,@(H'000F,Y)
?LBE_parseData:
	leavel	#21
;.stabn	192,0,0,?LBB39
;.stabn	192,0,0,?LBB40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	224,0,0,?LBE40
;.stabn	224,0,0,?LBE39
	ENDMOD

;# Function pattern *movqi2 used[0] = 292 used[1] = 620 used[3] = 6 total = 918
;# Function pattern *movqi3 used[0] = 183 total = 183
;# Function pattern *movqi8 used[0] = 15 total = 15
;# Function pattern *movhi used[2] = 3 used[3] = 3 total = 6
;# Function pattern *addqi4 used[0] = 4 total = 4
;# Function pattern *addqi0 used[0] = 133 total = 133
;# Function pattern *addqi2 used[0] = 82 used[2] = 11 total = 93
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 6 used[1] = 4 total = 10
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern negqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 64 total = 64
;# Function pattern *call1 used[0] = 48 total = 48
;# Function pattern *call_value1 used[0] = 521 total = 521
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 75 used[1] = 17 total = 92
;# Function pattern movstrqi+4 used[1] = 6 used[2] = 4 total = 10
;# Function pattern movstrqi+5 used[0] = 103 total = 103
	MODULE	hfp_audio_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_default_esco_audio_params:
	dc	H'0000
	dc	H'1F40
	dc	H'000A
	dc	H'0000
	dc	H'0001
$_default_sco_audio_params:
	dc	H'0000
	dc	H'1F40
	dc	H'0005
	dc	H'0000
	dc	H'0000
_msbc_audio_params:
	dc	H'0000
	dc	H'1F40
	dc	H'000E
	dc	H'0003
	dc	H'0002
_default_s1_sync_config_params:
	dc	H'0000
	dc	H'1F40
	dc	H'0000
	dc	H'1F40
	dc	H'0007
	dc	H'0000
	dc	H'0001
	dc	H'03C8
	.CODE
$_hfpAudioGetParams:
	enterl	#2
?LBB_hfpAudioGetParams:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'001D,X)
	and	AL,#H'1800
	cmp	AL,#H'1000
	bne	?L2
	tst	@(H'0003,Y)
	bne	?L2
	ld	AL,#H'0388
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#(_msbc_audio_params)
	bra	(?L1)
?L2:
	cmp	AH,#H'0000
	beq	?L3
	ld	AL,@$XAP_AH
	bra	(?L1)
?L3:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	and	AL,#H'0038
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,#($_default_esco_audio_params)
	bra	(?L1)
?L4:
	ld	AL,#($_default_sco_audio_params)
?L1:
?LBE_hfpAudioGetParams:
	leavel	#2
_resetAudioParams:
	enterl	#2
?LBB_resetAudioParams:
	ld	X,@$XAP_AL
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	st	AL,@(H'001C,X)
	ld	AL,#H'0000
	st	AL,@(H'0014,X)
?LBE_resetAudioParams:
	leavel	#2
$_sendAudioConnectCfmFailToApp:
	enterl	#15
?LBB_sendAudioConnectCfmFailToApp:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L7
?LBB3:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0003,Y)
	tst	@(H'000B,Y)
	beq	?L9
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0014,X)
	bra	(?L10)
?L9:
	ld	AL,#H'0000
?L10:
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
	st	AL,@(H'0009,Y)
	st	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'000A,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A05
	bsr	$_MessageSend
?L7:
?LBE3:
?LBE2:
?LBE_sendAudioConnectCfmFailToApp:
	leavel	#15
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_sendAudioDisconnectIndToApp:
	enterl	#3
?LBB_sendAudioDisconnectIndToApp:
	ld	X,@$XAP_AL
	st	AH,@(0,Y)
	ld	AL,#H'5A07
	ld	AH,@$XAP_UXL
	bsr	$_hfpSendCommonCfmMessageToApp
?LBE_sendAudioDisconnectIndToApp:
	leavel	#3
_startAudioConnectRequest:
	enterl	#13
?LBB_startAudioConnectRequest:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB4:
	bsr	$_hfpWbsStartCodecNegotiation
	cmp	AL,#H'0000
	beq	?L13
	ld	X,@(H'0009,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	or	AL,#H'2000
	st	AL,@(H'001C,X)
	bra	(?L12)
?L13:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	or	AL,#H'4000
	st	AL,@(H'001C,X)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'001A,X)
	st	AH,@(H'001B,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0015
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_memcpy
	ld	AL,@(H'000A,Y)
	and	AL,#H'0038
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'000A,Y)
	and	AL,#H'03F8
	st	AL,@(H'0008,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0004,X)
	bra	(?L16)
?L14:
	ld	AL,@(H'000A,Y)
	and	AL,#H'0007
	or	AL,#H'03C0
	st	AL,@(H'0008,Y)
	ld	AL,#H'0000
?L16:
	st	AL,@(H'0007,Y)
	ld	X,@(H'000D,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0009,Y)
	bsr	$_hfpGetLinkSink
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	bsr	$_ConnectionSyncConnectRequest
?L12:
?LBE4:
?LBE_startAudioConnectRequest:
	leavel	#13
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_continueAudioConnectRequest:
	enterl	#13
?LBB_continueAudioConnectRequest:
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'001B,X)
	cmp	AL,#H'03C1
	beq	?L18
?LBB6:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	st	AH,@(H'000A,Y)
	and	AL,#H'03C0
	cmp	AL,#H'03C0
	beq	?L19
	ld	AL,@(H'001A,X)
	and	AL,#H'0038
	or	AL,#H'03C0
	bra	(?L26)
?L19:
	ld	X,@(H'0009,Y)
	ld	AH,@(H'001B,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0038
	cmp	AL,#H'0000
	beq	?L21
	cmp	AH,#H'03C8
	beq	?L21
	ld	AL,#H'03C8
	st	AL,@(H'001B,X)
	ld	AH,#(_default_s1_sync_config_params)
	st	AH,@(H'000A,Y)
	bra	(?L20)
?L21:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'001B,X)
	cmp	AL,#H'03C8
	bne	?L23
	ld	AL,@(H'001A,X)
	and	AL,#H'0007
	or	AL,#H'03C0
	st	AL,@(H'001B,X)
	ld	AL,#H'0000
	st	AL,@(H'0019,X)
	bra	(?L20)
?L23:
	ld	AL,#H'03C1
	ld	X,@(H'0009,Y)
?L26:
	st	AL,@(H'001B,X)
?L20:
	ld	X,@(H'0009,Y)
	ld	AL,@(H'001B,X)
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0015,X)
	ld	AL,@(H'0016,X)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0015,X)
	ld	AL,@(H'0016,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0019,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0017,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0018,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UXL
	bsr	$_hfpGetLinkSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	bsr	$_ConnectionSyncConnectRequest
?LBE6:
	bra	(?L17)
?L18:
	ld	AL,@(H'0009,Y)
	bsr	_resetAudioParams
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0001
	bsr	$_sendAudioConnectCfmFailToApp
?L17:
?LBE5:
?LBE_continueAudioConnectRequest:
	leavel	#13
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_hfpHandleAudioConnectReq:
	enterl	#5
?LBB_hfpHandleAudioConnectReq:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB7:
	ld	X,@(0,X)
	st	X,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'000D
	cmp	AH,#(H'0001+H'0006)
	bcc	?L32
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE41,X)
	brxl
	.SEG	CONST
?JTBASE41:
	.CODE
?L41:
	.SEG	CONST
	dc	lwrd(?L33-?L41)
	dc	lwrd(?L37-?L41)
	dc	lwrd(?L37-?L41)
	dc	lwrd(?L37-?L41)
	dc	lwrd(?L37-?L41)
	dc	lwrd(?L39-?L41)
	dc	lwrd(?L39-?L41)
	.CODE
?L33:
	ld	AL,#H'0002
	add	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	ld	AH,@(H'0001,X)
	bsr	_startAudioConnectRequest
	bra	(?L32)
?L37:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	bra	(?L32)
?L39:
	ld	X,#H'0002
	st	X,@(H'0002,Y)
?L32:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_sendAudioConnectCfmFailToApp
?LBE7:
?LBE_hfpHandleAudioConnectReq:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_hfpHandleSyncConnectInd:
	enterl	#11
?LBB_hfpHandleSyncConnectInd:
	st	AL,@(H'0007,Y)
?LBB8:
	bsr	$_hfpGetLinkFromBdaddr
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L43
	ld	X,@$XAP_AL
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#H'0000
	beq	?L44
	cmp	AL,#H'2000
	bne	?L43
?L44:
?LBB9:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'001D,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1800
	cmp	AL,#H'0000
	beq	?L45
	lsr	#H'000B
	and	AH,#H'0003
	bra	(?L46)
?L45:
	ld	AH,#H'0001
?L46:
	st	AH,@(H'0004,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A06
	bsr	$_MessageSend
	ld	X,@(H'0008,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	or	AL,#H'6000
	bra	(?L50)
?L43:
?LBE9:
	tst	@(H'0008,Y)
	beq	?L48
	ld	X,@(H'0008,Y)
	ld	AH,@(H'001C,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'2000
	cmp	AL,#H'4000
	bne	?L48
	ld	AL,@$XAP_AH
	and	AL,#H'1FFF
	or	AL,#-H'8000
?L50:
	st	AL,@(H'001C,X)
	bra	(?L42)
?L48:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0007,Y)
	bsr	$_ConnectionSyncConnectResponse
?L42:
?LBE8:
?LBE_hfpHandleSyncConnectInd:
	leavel	#11
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
_audioConnectResponse:
	enterl	#18
?LBB_audioConnectResponse:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
?LBB10:
	ld	AH,@$XAP_UY
	add	AH,#H'000A
	bsr	$_hfpGetLinkBdaddr
	tst	@(H'000F,Y)
	beq	?L54
	cmp	AL,#H'0000
	beq	?L54
	ld	X,@(H'0013,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
?LBB11:
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,@$XAP_UY
	add	AH,#H'000A
	bsr	$_ConnectionSyncConnectResponse
?LBE11:
	bra	(?L53)
?L54:
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,@$XAP_UY
	add	AH,#H'000A
	bsr	$_ConnectionSyncConnectResponse
?L56:
	ld	AL,@(H'000E,Y)
	ld	AH,#H'0001
	bsr	$_sendAudioConnectCfmFailToApp
	ld	AL,@(H'000E,Y)
	bsr	_resetAudioParams
?L53:
?LBE10:
?LBE_audioConnectResponse:
	leavel	#18
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
$_hfpHandleAudioConnectRes:
	enterl	#6
?LBB_hfpHandleAudioConnectRes:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB12:
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'000D
	cmp	AH,#(H'0001+H'0006)
	bcc	?L58
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE66,X)
	brxl
	.SEG	CONST
?JTBASE66:
	.CODE
?L66:
	.SEG	CONST
	dc	lwrd(?L64-?L66)
	dc	lwrd(?L58-?L66)
	dc	lwrd(?L61-?L66)
	dc	lwrd(?L60-?L66)
	dc	lwrd(?L59-?L66)
	dc	lwrd(?L63-?L66)
	dc	lwrd(?L63-?L66)
	.CODE
?L59:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	or	AL,#H'4000
	st	AL,@(H'001C,X)
?L60:
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,#H'0003
	add	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	bsr	_audioConnectResponse
	bra	(?L58)
?L61:
	ld	AL,#H'0003
	bra	(?L67)
?L63:
	ld	X,#H'0002
	st	X,@(H'0003,Y)
	bra	(?L58)
?L64:
	ld	AL,#H'0001
?L67:
	st	AL,@(H'0003,Y)
?L58:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_sendAudioConnectCfmFailToApp
?LBE12:
?LBE_hfpHandleAudioConnectRes:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_hfpHandleSyncConnectCfm:
	enterl	#20
?LBB_hfpHandleSyncConnectCfm:
	st	AL,@(H'0010,Y)
?LBB13:
	add	AL,#H'0002
	bsr	$_hfpGetLinkFromBdaddr
	st	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	beq	?L69
	ld	X,@$XAP_AL
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#H'4000
	beq	?L71
	cmp	AL,#H'6000
	beq	?L71
	cmp	AL,#-H'8000
	bne	?L70
?L71:
	ld	X,@(H'0010,Y)
	tst	@(0,X)
	bne	?L72
?LBB14:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0011,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(H'001D,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1800
	cmp	AL,#H'0000
	beq	?L73
	lsr	#H'000B
	and	AH,#H'0003
	bra	(?L74)
?L73:
	ld	AH,#H'0001
?L74:
	st	AH,@(H'000A,Y)
	ld	X,@$_theHfp
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A05
	bsr	$_MessageSend
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0011,Y)
	st	AL,@(H'0014,X)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	or	AL,#-H'6000
	st	AL,@(H'001C,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_hfpHandleCallAudio
	bra	(?L68)
?L72:
	ld	X,@(H'0011,Y)
?LBE14:
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#H'4000
	bne	?L76
	ld	AL,@$XAP_UXL
	bsr	_continueAudioConnectRequest
	bra	(?L68)
?L76:
	ld	X,@(H'0011,Y)
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#-H'8000
	bne	?L70
?LBB15:
	ld	AL,#H'0002
	st	AL,@(H'000B,Y)
	ld	AL,@$XAP_UXL
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'000C,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A06
	bra	(?L83)
?L70:
?LBE15:
	ld	AL,@(H'0011,Y)
	bsr	_resetAudioParams
	ld	AL,@(H'0011,Y)
	ld	AH,#H'0001
	bsr	$_sendAudioConnectCfmFailToApp
	bra	(?L68)
?L69:
	ld	X,@(H'0010,Y)
	tst	@(0,X)
	bne	?L68
?LBB16:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'0008
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	st	AH,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(H'001D,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1800
	cmp	AL,#H'0000
	beq	?L81
	lsr	#H'000B
	and	AH,#H'0003
	bra	(?L82)
?L81:
	ld	AH,#H'0001
?L82:
	st	AH,@(H'000A,Y)
	ld	X,@$_theHfp
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A05
?L83:
	bsr	$_MessageSend
?L68:
?LBE16:
?LBE13:
?LBE_hfpHandleSyncConnectCfm:
	leavel	#20
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE13
_audioDisconnectRequest:
	enterl	#2
?LBB_audioDisconnectRequest:
	ld	X,@$XAP_AL
	ld	AL,@(H'001C,X)
	and	AL,#H'1FFF
	or	AL,#-H'4000
	st	AL,@(H'001C,X)
	ld	AL,@(H'0014,X)
	ld	AH,#H'0013
	bsr	$_ConnectionSyncDisconnect
?LBE_audioDisconnectRequest:
	leavel	#2
$_hfpHandleAudioDisconnectReq:
	enterl	#2
?LBB_hfpHandleAudioDisconnectReq:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AH,@(H'001C,X)
	lsr	#H'000D
	cmp	AH,#(H'0001+H'0006)
	bcc	?L90
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE99,X)
	brxl
	.SEG	CONST
?JTBASE99:
	.CODE
?L99:
	.SEG	CONST
	dc	lwrd(?L95-?L99)
	dc	lwrd(?L90-?L99)
	dc	lwrd(?L95-?L99)
	dc	lwrd(?L95-?L99)
	dc	lwrd(?L95-?L99)
	dc	lwrd(?L97-?L99)
	dc	lwrd(?L96-?L99)
	.CODE
?L95:
	ld	AL,@H'fff8
	ld	AH,#H'0002
	bra	(?L100)
?L96:
	ld	AL,@H'fff8
	ld	AH,#H'0003
?L100:
	bsr	$_sendAudioDisconnectIndToApp
	bra	(?L90)
?L97:
	ld	AL,@H'fff8
	bsr	_audioDisconnectRequest
?L90:
?LBE_hfpHandleAudioDisconnectReq:
	leavel	#2
$_hfpManageSyncDisconnect:
	enterl	#3
?LBB_hfpManageSyncDisconnect:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#H'0000
	beq	?L101
	ld	AL,@$XAP_UXL
	bsr	_resetAudioParams
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_sendAudioDisconnectIndToApp
?L101:
?LBE_hfpManageSyncDisconnect:
	leavel	#3
$_hfpHandleSyncDisconnectInd:
	enterl	#4
?LBB_hfpHandleSyncDisconnectInd:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB17:
	ld	AL,@(H'0002,X)
	bsr	$_hfpGetLinkFromAudioSink
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L103
	ld	X,@$XAP_AL
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#-H'6000
	beq	?L106
	cmp	AL,#-H'4000
	bne	?L105
?L106:
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L107
	ld	AL,@(H'0001,Y)
	bsr	$_hfpManageSyncDisconnect
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_hfpHandleCallAudio
	bra	(?L103)
?L107:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_sendAudioDisconnectIndToApp
	bra	(?L103)
?L105:
	ld	AL,@(H'0001,Y)
	bsr	_resetAudioParams
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_sendAudioConnectCfmFailToApp
?L103:
?LBE17:
?LBE_hfpHandleSyncDisconnectInd:
	leavel	#4
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_hfpHandleAudioTransferReq:
	enterl	#14
?LBB_hfpHandleAudioTransferReq:
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB18:
	ld	X,@(0,X)
	st	X,@(H'000A,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0002
	bne	?L113
	ld	X,@(H'000A,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'000D
	cmp	AH,#(H'0001+H'0006)
	bcc	?L113
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE123,X)
	brxl
	.SEG	CONST
?JTBASE123:
	.CODE
?L123:
	.SEG	CONST
	dc	lwrd(?L115-?L123)
	dc	lwrd(?L119-?L123)
	dc	lwrd(?L119-?L123)
	dc	lwrd(?L119-?L123)
	dc	lwrd(?L119-?L123)
	dc	lwrd(?L121-?L123)
	dc	lwrd(?L120-?L123)
	.CODE
?L115:
	ld	AL,#H'0000
	bra	(?L127)
?L119:
	ld	AL,@(H'000A,Y)
	ld	AH,#H'0003
	bsr	$_sendAudioConnectCfmFailToApp
	bra	(?L113)
?L120:
	ld	AL,@(H'000A,Y)
	ld	AH,#H'0003
	bsr	$_sendAudioDisconnectIndToApp
	bra	(?L113)
?L121:
	ld	AL,#H'0001
?L127:
	st	AL,@(H'000B,Y)
?L113:
	tst	@(H'000B,Y)
	bne	?L124
?LBB19:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	st	X,@(H'0002,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0003
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0020
	bsr	$_MessageSend
?LBE19:
	bra	(?L112)
?L124:
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	bne	?L112
	ld	AL,#H'0022
	ld	AH,@(H'000A,Y)
	bsr	$_hfpSendCommonInternalMessage
?L112:
?LBE18:
?LBE_hfpHandleAudioTransferReq:
	leavel	#14
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
	ENDMOD

;# Function pattern *movqi2 used[0] = 147 used[1] = 34 total = 181
;# Function pattern *movqi3 used[0] = 165 total = 165
;# Function pattern *movhi used[2] = 10 used[3] = 10 total = 20
;# Function pattern *addqi0 used[0] = 13 total = 13
;# Function pattern *addqi2 used[0] = 3 used[2] = 2 total = 5
;# Function pattern *andqi3 used[0] = 30 total = 30
;# Function pattern *iorqi3 used[0] = 10 total = 10
;# Function pattern *lshrqi3 used[0] = 7 total = 7
;# Function pattern jump used[0] = 33 total = 33
;# Function pattern *call1 used[0] = 36 total = 36
;# Function pattern *call_value1 used[0] = 13 total = 13
;# Function pattern tablejump_1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 16 used[1] = 8 total = 24
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 16 total = 16
	MODULE	hfp_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpSkipSpace:
	enterl	#2
?LBB_hfpSkipSpace:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L2
	cmp	AL,@$XAP_AH
	beq	?L2
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L9
	cmp	AL,#H'002C
	beq	?L9
	cmp	AL,#H'003B
	bne	?L2
?L9:
	add	X,#H'0001
	cmp	X,@$XAP_AH
	beq	?L2
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	beq	?L9
	cmp	AL,#H'002C
	beq	?L9
	cmp	AL,#H'003B
	beq	?L9
?L2:
	ld	AL,@$XAP_UXL
?LBE_hfpSkipSpace:
	leavel	#2
$_hfpMatchChar:
	enterl	#2
?LBB_hfpMatchChar:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L19
	cmp	AL,@$XAP_AH
	beq	?L19
	ld	X,@$XAP_AL
?LBB2:
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	AL,#-H'0061
	add	AL,@$XAP_UXL
	cmp	AL,#(H'0001+H'0019)
	bcc	?L22
	ld	AL,#-H'0020
	add	AL,@$XAP_UXL
	st	AL,@(-1,Y)
?L22:
?LBE2:
?LBB3:
	ld	AH,@(H'0002,Y)
	ld	AL,#-H'0061
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0019)
	bcc	?L24
	add	AH,#-H'0020
?L24:
	ld	X,@(-1,Y)
?LBE3:
	cmp	X,@$XAP_AH
	bne	?L19
	ld	AL,#H'0001
	add	AL,@H'fff8
	bra	(?L20)
?L19:
	ld	AL,#H'0000
?L20:
?LBE_hfpMatchChar:
	leavel	#2
$_hfpSkipPastChar:
	enterl	#2
?LBB_hfpSkipPastChar:
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	cmp	X,#H'0000
	beq	?L28
	cmp	X,@$XAP_AH
	beq	?L28
?L33:
	ld	AL,@(0,X)
	add	X,#H'0001
	cmp	AL,@H'fff8
	bne	?L29
	ld	AL,@$XAP_UXL
	bra	(?L27)
?L29:
	cmp	X,@$XAP_AH
	bne	?L33
?L28:
	ld	AL,#H'0000
?L27:
?LBE_hfpSkipPastChar:
	leavel	#2
$_hfpSendCommonCfmMessageToApp:
	enterl	#9
?LBB_hfpSendCommonCfmMessageToApp:
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_AH
?LBB4:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSend
?LBE4:
?LBE_hfpSendCommonCfmMessageToApp:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_hfpSendCommonInternalMessage:
	enterl	#8
?LBB_hfpSendCommonInternalMessage:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,@$XAP_UXL
	bsr	$_MessageSend
?LBE5:
?LBE_hfpSendCommonInternalMessage:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpSendCommonInternalMessagePriority:
	enterl	#9
?LBB_hfpSendCommonInternalMessagePriority:
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_AH
?LBB6:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkFromPriority
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSend
?LBE6:
?LBE_hfpSendCommonInternalMessagePriority:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_hfpConvertNumberType:
; leaf function with empty stack frame
?LBB_hfpConvertNumberType:
	and	AL,#H'0070
	cmp	AL,#H'0020
	beq	?L45
	cmp	AL,#(H'0001+H'0020)
	bcc	?L50
	cmp	AL,#H'0000
	beq	?L48
	cmp	AL,#H'0010
	beq	?L44
	bra	(?L48)
?L50:
	cmp	AL,#H'0030
	beq	?L46
	cmp	AL,#H'0040
	beq	?L47
	bra	(?L48)
?L44:
	ld	AL,#H'0001
	bra	(?L41)
?L45:
	ld	AL,#H'0002
	bra	(?L41)
?L46:
	ld	AL,#H'0003
	bra	(?L41)
?L47:
	ld	AL,#H'0004
	bra	(?L41)
?L48:
	ld	AL,#H'0000
?L41:
?LBE_hfpConvertNumberType:
	rts
$_supportedProfileIsHfp:
; leaf function with empty stack frame
?LBB_supportedProfileIsHfp:
	and	AL,#H'0006
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,#H'0001
	bra	(?L55)
?L56:
	ld	AL,#H'0000
?L55:
?LBE_supportedProfileIsHfp:
	rts
$_supportedProfileIsHfp106:
; leaf function with empty stack frame
?LBB_supportedProfileIsHfp106:
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L59
	ld	AL,#H'0001
	bra	(?L58)
?L59:
	ld	AL,#H'0000
?L58:
?LBE_supportedProfileIsHfp106:
	rts
$_supportedProfileIsHsp:
; leaf function with empty stack frame
?LBB_supportedProfileIsHsp:
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L62
	ld	AL,#H'0001
	bra	(?L61)
?L62:
	ld	AL,#H'0000
?L61:
?LBE_supportedProfileIsHsp:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 25 used[1] = 4 total = 29
;# Function pattern *movqi3 used[0] = 24 total = 24
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 3 used[2] = 4 total = 7
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 7 total = 7
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 17 total = 17
	MODULE	hfp_profile_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleUnexpected:
; leaf function with empty stack frame
?LBB_handleUnexpected:
?LBE_handleUnexpected:
	rts
$_hfpProfileHandler:
	enterl	#8
?LBB_hfpProfileHandler:
	st	AH,@(H'0002,Y)
?LBB2:
	ld	X,@$_theHfp
	ld	AH,@(H'0008,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L3
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'002D)
	bcc	?L4
	cmp	AL,#H'0000
	bne	?L8
	bra	(?L196)
?L4:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'5000
	cmp	AL,#(H'0001+H'006A)
	bcc	?L21
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'502E
	beq	?L15
	cmp	AL,#(H'0001+H'502E)
	bcc	?L19
	cmp	AL,#H'500B
	beq	?L2
	bra	(?L17)
?L19:
	ld	X,@(H'0002,Y)
	cmp	X,#H'5042
	bne	?L17
	ld	AL,@(H'0008,Y)
	bsr	$_hfpInitRfcommRegisterCfm
	bra	(?L2)
?L15:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpInitSdpRegisterCfm
	bra	(?L2)
?L3:
	tst	@(H'0002,Y)
	bne	?L23
?L196:
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	bsr	$_hfpRegisterServiceRecord
	bra	(?L2)
?L23:
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'002D)
	bcc	?L25
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	tst	@(H'0008,Y)
	beq	?L26
	ld	X,@(H'0008,Y)
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	bra	(?L27)
?L26:
	ld	AL,@(H'0002,Y)
	bsr	$_hfpGetLinkFromTimeoutMessage
	st	AL,@(H'0003,Y)
?L27:
	tst	@(H'0003,Y)
	beq	?L28
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE103,X)
	brxl
	.SEG	CONST
?JTBASE103:
	.CODE
?L103:
	.SEG	CONST
	dc	lwrd(?L28-?L103)
	dc	lwrd(?L28-?L103)
	dc	lwrd(?L33-?L103)
	dc	lwrd(?L33-?L103)
	dc	lwrd(?L33-?L103)
	dc	lwrd(?L33-?L103)
	dc	lwrd(?L43-?L103)
	.CODE
?L33:
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0021)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE42,X)
	brxl
	.SEG	CONST
?JTBASE42:
	.CODE
?L42:
	.SEG	CONST
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L37-?L42)
	dc	lwrd(?L37-?L42)
	dc	lwrd(?L39-?L42)
	dc	lwrd(?L39-?L42)
	dc	lwrd(?L90-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L28-?L42)
	dc	lwrd(?L92-?L42)
	.CODE
?L37:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleRfcommLinkLossReconnect
	bra	(?L191)
?L39:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleRfcommLinkLossTimeout
	bra	(?L191)
?L43:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L44
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0005
	cmp	AL,#(H'0001+H'0025)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE80,X)
	brxl
	.SEG	CONST
?JTBASE80:
	.CODE
?L80:
	.SEG	CONST
	dc	lwrd(?L90-?L80)
	dc	lwrd(?L28-?L80)
	dc	lwrd(?L89-?L80)
	dc	lwrd(?L89-?L80)
	dc	lwrd(?L49-?L80)
	dc	lwrd(?L50-?L80)
	dc	lwrd(?L54-?L80)
	dc	lwrd(?L55-?L80)
	dc	lwrd(?L56-?L80)
	dc	lwrd(?L57-?L80)
	dc	lwrd(?L28-?L80)
	dc	lwrd(?L28-?L80)
	dc	lwrd(?L48-?L80)
	dc	lwrd(?L62-?L80)
	dc	lwrd(?L58-?L80)
	dc	lwrd(?L63-?L80)
	dc	lwrd(?L65-?L80)
	dc	lwrd(?L52-?L80)
	dc	lwrd(?L61-?L80)
	dc	lwrd(?L46-?L80)
	dc	lwrd(?L53-?L80)
	dc	lwrd(?L51-?L80)
	dc	lwrd(?L64-?L80)
	dc	lwrd(?L60-?L80)
	dc	lwrd(?L59-?L80)
	dc	lwrd(?L66-?L80)
	dc	lwrd(?L93-?L80)
	dc	lwrd(?L75-?L80)
	dc	lwrd(?L92-?L80)
	dc	lwrd(?L94-?L80)
	dc	lwrd(?L68-?L80)
	dc	lwrd(?L69-?L80)
	dc	lwrd(?L70-?L80)
	dc	lwrd(?L28-?L80)
	dc	lwrd(?L28-?L80)
	dc	lwrd(?L71-?L80)
	dc	lwrd(?L28-?L80)
	dc	lwrd(?L47-?L80)
	.CODE
?L46:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleBtrhStatusReq
	bra	(?L191)
?L47:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleBacRequest
	bra	(?L191)
?L48:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleCallerIdEnableReq
	bra	(?L192)
?L49:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleAnswerCall
	bra	(?L192)
?L50:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0009
	bsr	$_hfpHandleTerminateCall
	bra	(?L192)
?L51:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleCurrentCallsGetReq
	bra	(?L192)
?L52:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpSendChldCmd
	bra	(?L192)
?L53:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleBtrhReq
	bra	(?L192)
?L54:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleLastNumberRedial
	bra	(?L191)
?L55:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleDialNumberRequest
	bra	(?L191)
?L56:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleDialMemoryRequest
	bra	(?L191)
?L57:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleVoiceRecognitionEnable
	bra	(?L192)
?L58:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleNrEcDisable
	bra	(?L191)
?L59:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleSetActiveIndicatorsReq
	bra	(?L191)
?L60:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleExtendedErrorReq
	bra	(?L191)
?L61:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleSubscriberNumberGetReq
	bra	(?L191)
?L62:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleGetVoiceTagReq
	bra	(?L192)
?L63:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleDtmfRequest
	bra	(?L191)
?L64:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleNetworkOperatorReq
	bra	(?L191)
?L65:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleCallWaitingNotificationEnable
	bra	(?L192)
?L66:
	ld	X,@(H'0008,Y)
?LBB4:
	tst	@(H'0001,X)
	beq	?L28
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'002D
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_hfpSendAtCmd
	bra	(?L191)
?L68:
?LBE4:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpCsrFeaturesReq
	bra	(?L191)
?L69:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpCsrFeaturesHandleBatteryLevelReq
	bra	(?L191)
?L70:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpCsrFeaturesHandlePowerSourceReq
	bra	(?L191)
?L71:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleCsrGetSmsReq
	bra	(?L192)
?L75:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleAudioConnectReq
	bra	(?L191)
?L44:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L28
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0005
	cmp	AL,#(H'0001+H'0028)
	bcc	?L28
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE99,X)
	brxl
	.SEG	CONST
?JTBASE99:
	.CODE
?L99:
	.SEG	CONST
	dc	lwrd(?L90-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L89-?L99)
	dc	lwrd(?L89-?L99)
	dc	lwrd(?L84-?L99)
	dc	lwrd(?L85-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L86-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L87-?L99)
	dc	lwrd(?L93-?L99)
	dc	lwrd(?L91-?L99)
	dc	lwrd(?L92-?L99)
	dc	lwrd(?L94-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L28-?L99)
	dc	lwrd(?L96-?L99)
	dc	lwrd(?L96-?L99)
	dc	lwrd(?L97-?L99)
	.CODE
?L84:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleAnswerHspCall
	bra	(?L192)
?L85:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleTerminateHspCall
	bra	(?L192)
?L86:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleHspVoiceRecognitionEnable
	bra	(?L192)
?L87:
	ld	AL,@(H'0008,Y)
?LBB5:
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'002D
	st	AL,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_hfpSendAtCmd
?LBE5:
	bra	(?L28)
?L89:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleWaitAtTimeout
	bra	(?L191)
?L90:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleDisconnectRequest
	bra	(?L191)
?L91:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bra	(?L197)
?L92:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleAudioConnectRes
	bra	(?L191)
?L93:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleAudioTransferReq
	bra	(?L191)
?L94:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleAudioDisconnectReq
	bra	(?L191)
?L96:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleCallIncomingTimeout
	bra	(?L191)
?L97:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
?L197:
	bsr	$_hfpSendHsButtonPress
?L191:
	ld	AL,#H'0001
?L192:
	st	AL,@(H'0004,Y)
?L28:
	tst	@(H'0004,Y)
	bne	?L2
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	cmp	X,#(H'0001+H'002D)
	bcc	?L8
	ld	X,@(?JTBASE154,X)
	brxl
	.SEG	CONST
?JTBASE154:
	.CODE
?L154:
	.SEG	CONST
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L137-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L115-?L154)
	dc	lwrd(?L116-?L154)
	dc	lwrd(?L117-?L154)
	dc	lwrd(?L118-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L121-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L141-?L154)
	dc	lwrd(?L146-?L154)
	dc	lwrd(?L146-?L154)
	dc	lwrd(?L144-?L154)
	dc	lwrd(?L131-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L134-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L105-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L8-?L154)
	dc	lwrd(?L105-?L154)
	.CODE
?L115:
	ld	AL,#H'5A10
	bra	(?L194)
?L116:
	ld	AL,#H'5A11
	bra	(?L194)
?L117:
	ld	AL,#H'5A12
	bra	(?L194)
?L118:
	ld	AL,#H'5A13
?L194:
	st	AL,@(H'0005,Y)
	bra	(?L105)
?L121:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0001,X)
	bsr	$_hfpHandleChldAtAck
	bra	(?L105)
?L131:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_hfpCsrFeaturesHandleCsrSfAtAck
	bra	(?L105)
?L134:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_hfpCsrFeaturesHandleGetSmsAtAck
	bra	(?L105)
?L137:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_hfpSendSlcDisconnectIndToApp
	bra	(?L105)
?L141:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0001
	beq	?L144
	cmp	AL,#H'0001
	bcs	?L146
	cmp	AL,#H'0002
	beq	?L145
	bra	(?L105)
?L144:
	ld	AL,@(H'0003,Y)
	bra	(?L193)
?L145:
	tst	@(H'0003,Y)
	beq	?L146
	ld	X,@(H'0003,Y)
	tst	@(H'0014,X)
	beq	?L146
	ld	AL,@$XAP_UXL
?L193:
	ld	AH,#H'0004
	bsr	$_sendAudioDisconnectIndToApp
	bra	(?L105)
?L146:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0005
	bsr	$_sendAudioConnectCfmFailToApp
?L105:
	tst	@(H'0005,Y)
	beq	?L2
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_hfpSendCommonCfmMessageToApp
?LBE6:
?LBE3:
	bra	(?L2)
?L25:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'5000
	cmp	AL,#(H'0001+H'006A)
	bcc	?L157
	ld	AL,@(H'0002,Y)
	add	AL,#-H'5001
	cmp	AL,#(H'0001+H'004C)
	bcc	?L17
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE181,X)
	brxl
	.SEG	CONST
?JTBASE181:
	.CODE
?L181:
	.SEG	CONST
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L169-?L181)
	dc	lwrd(?L168-?L181)
	dc	lwrd(?L170-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L165-?L181)
	dc	lwrd(?L166-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L167-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L17-?L181)
	dc	lwrd(?L161-?L181)
	dc	lwrd(?L162-?L181)
	dc	lwrd(?L160-?L181)
	dc	lwrd(?L163-?L181)
	dc	lwrd(?L164-?L181)
	dc	lwrd(?L171-?L181)
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L2-?L181)
	dc	lwrd(?L2-?L181)
	.CODE
?L160:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleRfcommConnectInd
	bra	(?L2)
?L161:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleRfcommClientConnectCfm
	bra	(?L2)
?L162:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleRfcommServerConnectCfm
	bra	(?L2)
?L163:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleRfcommDisconnectInd
	bra	(?L2)
?L164:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleRfcommDisconnectCfm
	bra	(?L2)
?L165:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleSdpRegisterCfm
	bra	(?L2)
?L166:
	ld	AL,@(H'0008,Y)
	bsr	$_handleSdpUnregisterCfm
	bra	(?L2)
?L167:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleServiceSearchAttributeCfm
	bra	(?L2)
?L168:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleSyncConnectInd
	bra	(?L2)
?L169:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleSyncConnectCfm
	bra	(?L2)
?L170:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleSyncDisconnectInd
	bra	(?L2)
?L171:
	ld	AL,@(H'0008,Y)
	bsr	$_hfpHandleRfcommPortnegInd
	bra	(?L2)
?L157:
	ld	AL,@(H'0002,Y)
	cmp	AL,#-H'7FDE
	beq	?L2
	cmp	AL,#(H'0001-H'7FDE)
	bcc	?L190
	cmp	AL,#-H'7FDF
	beq	?L184
	bra	(?L21)
?L190:
	ld	X,@(H'0002,Y)
	cmp	X,#-H'7FDA
	beq	?L2
	cmp	X,#-H'7FD7
	beq	?L2
	bra	(?L21)
?L184:
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	bsr	$_hfpHandleReceivedData
	bra	(?L2)
?L21:
	ld	AL,#H'0002
	bra	(?L195)
?L17:
	ld	AL,#H'0000
	bra	(?L195)
?L8:
	ld	AL,#H'0001
?L195:
	ld	AH,@(H'0002,Y)
	bsr	_handleUnexpected
?L2:
?LBE2:
?LBE_hfpProfileHandler:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 21 used[1] = 64 total = 85
;# Function pattern *movqi3 used[0] = 57 total = 57
;# Function pattern *addqi2 used[0] = 7 total = 7
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 74 total = 74
;# Function pattern *call1 used[0] = 50 total = 50
;# Function pattern *call_value1 used[0] = 16 total = 16
;# Function pattern tablejump_1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 8 total = 12
;# Function pattern movstrqi+4 used[1] = 12 total = 12
;# Function pattern movstrqi+5 used[0] = 10 total = 10
	MODULE	hfp_sdp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_hsp_service_record:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0009
	dc	H'0019
	dc	H'0011
	dc	H'0008
	dc	H'0019
	dc	H'0011
	dc	H'0031
	dc	H'0019
	dc	H'0012
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'000C
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0035
	dc	H'0005
	dc	H'0019
	dc	H'0000
	dc	H'0003
	dc	H'0008
	dc	H'000B
	dc	H'0009
	dc	H'0000
	dc	H'0006
	dc	H'0035
	dc	H'0009
	dc	H'0009
	dc	H'0065
	dc	H'006E
	dc	H'0009
	dc	H'0000
	dc	H'006A
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'0008
	dc	H'0009
	dc	H'0001
	dc	H'0002
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0025
	dc	H'0007
	dc	H'0048
	dc	H'0065
	dc	H'0061
	dc	H'0064
	dc	H'0073
	dc	H'0065
	dc	H'0074
	dc	H'0009
	dc	H'0003
	dc	H'0002
	dc	H'0028
	dc	H'0001
_hsp_service_record_2:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0009
	dc	H'0019
	dc	H'0011
	dc	H'0008
	dc	H'0019
	dc	H'0011
	dc	H'0031
	dc	H'0019
	dc	H'0012
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'000C
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0035
	dc	H'0005
	dc	H'0019
	dc	H'0000
	dc	H'0003
	dc	H'0008
	dc	H'000D
	dc	H'0009
	dc	H'0000
	dc	H'0006
	dc	H'0035
	dc	H'0009
	dc	H'0009
	dc	H'0065
	dc	H'006E
	dc	H'0009
	dc	H'0000
	dc	H'006A
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'0008
	dc	H'0009
	dc	H'0001
	dc	H'0002
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0025
	dc	H'0007
	dc	H'0048
	dc	H'0065
	dc	H'0061
	dc	H'0064
	dc	H'0073
	dc	H'0065
	dc	H'0074
	dc	H'0009
	dc	H'0003
	dc	H'0002
	dc	H'0028
	dc	H'0001
_hfp_service_record:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'001E
	dc	H'0019
	dc	H'0012
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'000C
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0035
	dc	H'0005
	dc	H'0019
	dc	H'0000
	dc	H'0003
	dc	H'0008
	dc	H'000A
	dc	H'0009
	dc	H'0000
	dc	H'0006
	dc	H'0035
	dc	H'0009
	dc	H'0009
	dc	H'0065
	dc	H'006E
	dc	H'0009
	dc	H'0000
	dc	H'006A
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'001E
	dc	H'0009
	dc	H'0001
	dc	H'0006
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0025
	dc	H'000F
	dc	H'0048
	dc	H'0061
	dc	H'006E
	dc	H'0064
	dc	H'0073
	dc	H'002D
	dc	H'0046
	dc	H'0072
	dc	H'0065
	dc	H'0065
	dc	H'0020
	dc	H'0075
	dc	H'006E
	dc	H'0069
	dc	H'0074
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'003F
_hfp_service_record_2:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'001E
	dc	H'0019
	dc	H'0012
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'000C
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0035
	dc	H'0005
	dc	H'0019
	dc	H'0000
	dc	H'0003
	dc	H'0008
	dc	H'000C
	dc	H'0009
	dc	H'0000
	dc	H'0006
	dc	H'0035
	dc	H'0009
	dc	H'0009
	dc	H'0065
	dc	H'006E
	dc	H'0009
	dc	H'0000
	dc	H'006A
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'001E
	dc	H'0009
	dc	H'0001
	dc	H'0006
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0025
	dc	H'000F
	dc	H'0048
	dc	H'0061
	dc	H'006E
	dc	H'0064
	dc	H'0073
	dc	H'002D
	dc	H'0046
	dc	H'0072
	dc	H'0065
	dc	H'0065
	dc	H'0020
	dc	H'0075
	dc	H'006E
	dc	H'0069
	dc	H'0074
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'003F
_HspServiceRequest:
	dc	H'0035
	dc	H'0005
	dc	H'001A
	dc	H'0000
	dc	H'0000
	dc	H'0011
	dc	H'0012
_HfpServiceRequest:
	dc	H'0035
	dc	H'0005
	dc	H'001A
	dc	H'0000
	dc	H'0000
	dc	H'0011
	dc	H'001F
_protocolAttributeRequest:
	dc	H'0035
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0004
_supportedFeaturesAttributeRequest:
	dc	H'0035
	dc	H'0003
	dc	H'0009
	dc	H'0003
	dc	H'0011
_profileDescriptorRequest:
	dc	H'0035
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0009
	.CODE
_findRfcommServerChannel:
	enterl	#11
?LBB_findRfcommServerChannel:
	st	AL,@(H'0002,Y)
?LBB2:
	st	AH,@(H'0003,Y)
	bra	(?L13)
?L11:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0006
	bne	?L13
	bra	(?L12)
?L10:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0006
	bne	?L12
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0003
	bne	?L12
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_RegionMatchesUUID32
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@(H'000B,Y)
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	bne	?L12
	ld	AL,#H'0001
	bra	(?L1)
?L12:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	bne	?L10
?L13:
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0004
	bsr	$_ServiceFindAttribute
	cmp	AL,#H'0000
	bne	?L11
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_findRfcommServerChannel:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_getRfcommChannelNumber:
	enterl	#5
?LBB_getRfcommChannelNumber:
	ld	X,@$XAP_UY
	add	X,#H'0001
?LBB3:
	st	X,@(0,Y)
	bsr	_findRfcommServerChannel
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_RegionReadUnsigned
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L18)
?L19:
	ld	AL,#H'0000
?L18:
?LBE3:
?LBE_getRfcommChannelNumber:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_findHfpSupportedFeatures:
	enterl	#7
?LBB_findHfpSupportedFeatures:
	ld	X,@(H'0007,Y)
	st	AL,@(H'0002,Y)
?LBB4:
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0311
	bsr	$_ServiceFindAttribute
	cmp	AL,#H'0000
	beq	?L21
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bne	?L21
	ld	AL,#H'0001
	bra	(?L20)
?L21:
	ld	AL,#H'0000
?L20:
?LBE4:
?LBE_findHfpSupportedFeatures:
	leavel	#7
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_getHfpAgSupportedFeatures:
	enterl	#5
?LBB_getHfpAgSupportedFeatures:
	ld	X,@$XAP_UY
	add	X,#H'0001
?LBB5:
	st	X,@(0,Y)
	bsr	_findHfpSupportedFeatures
	cmp	AL,#H'0000
	beq	?L25
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_RegionReadUnsigned
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L24)
?L25:
	ld	AL,#H'0000
?L24:
?LBE5:
?LBE_getHfpAgSupportedFeatures:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_hfpSdpHspRecordCreate:
	enterl	#4
?LBB_hfpSdpHspRecordCreate:
?LBB6:
	ld	AL,#H'004B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	ld	AL,#H'004B
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#(_hsp_service_record)
	bsr	$_memmove
	ld	X,@$_theHfp
	ld	AL,@(H'0009,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'001E,X)
?LBE6:
	ld	AL,@$XAP_UXL
?LBE_hfpSdpHspRecordCreate:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_hfpSdpRecordCreate:
	enterl	#6
?LBB_hfpSdpRecordCreate:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0051
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0051
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#(_hfp_service_record)
	bsr	$_memmove
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'001B,X)
	ld	AH,@(H'0002,Y)
	lsr	#H'0008
	st	AH,@(H'0035,X)
	ld	AH,@(H'0002,Y)
	and	AH,#H'00FF
	st	AH,@(H'0036,X)
	ld	AH,@(H'0006,Y)
	lsr	#H'0008
	st	AH,@(H'004F,X)
	ld	AH,@(H'0006,Y)
	and	AH,#H'00FF
	st	AH,@(H'0050,X)
?LBE7:
	ld	AL,@$XAP_UXL
?LBE_hfpSdpRecordCreate:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_hfpRegisterServiceRecord:
	enterl	#14
?LBB_hfpRegisterServiceRecord:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB8:
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L29
	cmp	AL,#H'0000
	bne	?L29
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	$_hfpGetVisibleServiceFromProfile
	cmp	AL,#H'0000
	bne	?L29
	ld	AH,@$_theHfp
	st	AH,@(H'000B,Y)
	ld	X,@$XAP_AH
	tst	@(H'0009,X)
	bne	?L30
?LBB9:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	X,@(H'000B,Y)
	st	AH,@(H'0009,X)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	$_supportedProfileIsHsp
	cmp	AL,#H'0000
	beq	?L31
	ld	AH,#H'004B
	st	AH,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'000B
	bne	?L32
	ld	AH,#(_hsp_service_record)
	bra	(?L51)
?L32:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'000D
	bne	?L34
	ld	AH,#(_hsp_service_record_2)
?L51:
	st	AH,@(H'0008,Y)
	bra	(?L36)
?L34:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_hfpSdpHspRecordCreate
	bra	(?L50)
?L31:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	$_supportedProfileIsHfp
	cmp	AL,#H'0000
	beq	?L37
?LBB10:
	ld	X,@$_theHfp
	ld	AH,@(H'0003,X)
	lsr	#H'0002
	and	AH,#-H'0020
	ld	AL,@(H'0003,X)
	and	AL,#H'001F
	or	AL,@$XAP_AH
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	$_supportedProfileIsHfp106
	cmp	AL,#H'0000
	beq	?L38
	ld	AH,#H'0106
	st	AH,@(-1,Y)
	bra	(?L39)
?L38:
	ld	AL,#H'0105
	st	AL,@(-1,Y)
?L39:
	ld	X,#H'0051
	st	X,@(H'0009,Y)
	ld	AH,@(H'000A,Y)
	cmp	AH,#H'003F
	bne	?L40
	ld	AL,@(-1,Y)
	cmp	AL,#H'0106
	bne	?L40
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'000A
	bne	?L41
	ld	AH,#(_hfp_service_record)
	bra	(?L49)
?L41:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'000C
	bne	?L40
	ld	AH,#(_hfp_service_record_2)
?L49:
	st	AH,@(H'0008,Y)
?L40:
	tst	@(H'0008,Y)
	bne	?L36
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(-1,Y)
	bsr	_hfpSdpRecordCreate
?L50:
	st	AL,@(H'0008,Y)
?LBE10:
	bra	(?L36)
?L37:
	ld	AL,#H'0001
	bra	(?L52)
?L36:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0009,Y)
	bsr	$_ConnectionRegisterServiceRecord
?LBE9:
	bra	(?L28)
?L30:
?LBB11:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0009
	add	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendConditionally
?LBE11:
	bra	(?L28)
?L29:
	ld	AH,@$_theHfp
	st	AH,@(H'000B,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0008,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L28
	ld	AL,@(H'000C,X)
	add	AL,#-H'0003
	ld	AH,@(H'0007,Y)
	cmp	AH,@$XAP_AL
	bne	?L28
	ld	X,@$XAP_AH
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	X,@(H'000B,Y)
	st	AH,@(H'0009,X)
	ld	AL,#H'0000
?L52:
	bsr	$_hfpInitSdpRegisterComplete
?L28:
?LBE8:
?LBE_hfpRegisterServiceRecord:
	leavel	#14
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_hfpUnregisterServiceRecord:
	enterl	#4
?LBB_hfpUnregisterServiceRecord:
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L63
	cmp	AL,#H'0000
	beq	?L61
?L63:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$_theHfp
	bsr	$_ConnectionUnregisterServiceRecord
?L61:
?LBE_hfpUnregisterServiceRecord:
	leavel	#4
$_hfpHandleSdpRegisterCfm:
	enterl	#4
?LBB_hfpHandleSdpRegisterCfm:
	st	AL,@(0,Y)
?LBB12:
	ld	X,@$_theHfp
	ld	AL,@(H'0009,X)
	bsr	$_hfpGetServiceFromChannel
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L65
?LBB13:
	bsr	$_hfpGetLinkFromService
	st	AL,@H'fff8
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L64
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@$_theHfp
	ld	AL,#H'0000
	st	AL,@(H'0009,X)
	tst	@H'fff8
	beq	?L64
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1800
	bne	?L64
	ld	AL,@(H'0001,Y)
	bsr	$_hfpUnregisterServiceRecord
?LBE13:
	bra	(?L64)
?L65:
	bsr	$_Panic
?L64:
?LBE12:
?LBE_hfpHandleSdpRegisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_handleSdpUnregisterCfm:
	enterl	#4
?LBB_handleSdpUnregisterCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB14:
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0002,X)
	bsr	$_hfpGetServiceFromHandle
	cmp	AL,#H'0000
	beq	?L70
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L70
	ld	X,@$XAP_AL
?LBB15:
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetVisibleServiceFromProfile
	cmp	AL,#H'0000
	bne	?L70
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetDisconnectedServiceFromProfile
	cmp	AL,#H'0000
	beq	?L70
	bsr	$_hfpRegisterServiceRecord
?L70:
?LBE15:
?LBE14:
?LBE_handleSdpUnregisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
$_hfpGetProfileServerChannel:
	enterl	#9
?LBB_hfpGetProfileServerChannel:
	st	AL,@(H'0005,Y)
?LBB16:
	ld	AL,#(_HfpServiceRequest)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_hfpLinkSetup
	ld	AL,@(H'0005,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,#(_HspServiceRequest)
	st	AL,@(H'0006,Y)
?L75:
	ld	AL,#H'0032
	st	AL,@(0,Y)
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,#(_protocolAttributeRequest)
	st	AL,@(H'0004,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0009,Y)
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?LBE16:
?LBE_hfpGetProfileServerChannel:
	leavel	#9
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_hfpSdpRetry:
	enterl	#9
?LBB_hfpSdpRetry:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB17:
	ld	AH,@(H'0006,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	st	AL,@H'fff8
	ld	AL,@(H'0005,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	and	AH,#H'0007
	xor	AH,#-H'0001
	ld	AL,@H'fff8
	and	AL,@$XAP_AH
	asl	#H'0001
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0006,X)
	and	AH,#-H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	$_hfpGetServiceFromProfile
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L77
?LBB18:
	ld	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_hfpGetLinkBdaddr
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_hfpGetProfileServerChannel
	bra	(?L76)
?L77:
?LBE18:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
?L76:
?LBE17:
?LBE_hfpSdpRetry:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_hfpHandleServiceSearchAttributeCfm:
	enterl	#9
?LBB_hfpHandleServiceSearchAttributeCfm:
	st	AL,@(H'0004,Y)
?LBB19:
	add	AL,#H'0003
	st	AL,@(H'0006,Y)
	bsr	$_hfpGetLinkFromBdaddr
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L78
	ld	X,@(H'0004,Y)
	tst	@(0,X)
	bne	?L80
	ld	AL,#H'0000
?LBB20:
	st	AL,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'0800
	bne	?L81
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	ld	AH,@(H'0004,Y)
	ld	X,@$XAP_AH
	add	AH,@(H'0007,X)
	add	AH,#H'0008
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	X,@(0,Y)
	bsr	_getRfcommChannelNumber
	cmp	AL,#H'0000
	beq	?L92
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0003
	bsr	$_hfpSetLinkSlcState
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0006,Y)
	bsr	$_ConnectionRfcommConnectRequest
	bra	(?L78)
?L81:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1400
	bne	?L78
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	ld	AH,@(H'0004,Y)
	ld	X,@$XAP_AH
	add	AH,@(H'0007,X)
	add	AH,#H'0008
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	X,@(0,Y)
	bsr	_getHfpAgSupportedFeatures
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_hfpHandleSupportedFeaturesNotification
?LBE20:
	bra	(?L78)
?L80:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'0800
	bne	?L78
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L89
?L92:
	ld	AL,@(H'0005,Y)
	bsr	_hfpSdpRetry
	bra	(?L78)
?L89:
?LBB21:
	ld	AH,#H'0004
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0004
	bne	?L91
	ld	AH,#H'0006
?L91:
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
?L78:
?LBE21:
?LBE19:
?LBE_hfpHandleServiceSearchAttributeCfm:
	leavel	#9
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE19
$_hfpGetAgSupportedFeatures:
	enterl	#11
?LBB_hfpGetAgSupportedFeatures:
?LBB22:
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	bsr	$_hfpGetLinkBdaddr
	cmp	AL,#H'0000
	beq	?L98
	ld	AL,#H'0032
	st	AL,@(0,Y)
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#(_HfpServiceRequest)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,#(_supportedFeaturesAttributeRequest)
	st	AL,@(H'0004,Y)
	ld	AL,@$_theHfp
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?L98:
?LBE22:
?LBE_hfpGetAgSupportedFeatures:
	leavel	#11
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
	ENDMOD

;# Function pattern *movqi2 used[0] = 112 used[1] = 25 total = 137
;# Function pattern *movqi3 used[0] = 141 total = 141
;# Function pattern *movqi8 used[0] = 6 total = 6
;# Function pattern *movhi used[2] = 4 used[3] = 2 total = 6
;# Function pattern *addqi0 used[0] = 23 total = 23
;# Function pattern *addqi2 used[0] = 8 used[2] = 1 total = 9
;# Function pattern *andqi3 used[0] = 18 total = 18
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 21 total = 21
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 20 total = 20
;# Function pattern *call1 used[0] = 17 total = 17
;# Function pattern *call_value1 used[0] = 32 total = 32
;# Function pattern movstrqi+3 used[0] = 23 used[1] = 6 total = 29
;# Function pattern movstrqi+5 used[0] = 18 total = 18
;# Function pattern movstrqi+6 used[0] = 2 total = 2
	MODULE	hfp_send_data
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_getBytesToFlush:
	enterl	#7
?LBB_getBytesToFlush:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	cmp	AH,@(H'0007,Y)
	beq	?L1
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	cmp	AL,@(H'0007,Y)
	beq	?L15
?L13:
	ld	X,@(H'0002,Y)
	add	X,@(H'0003,Y)
	st	X,@(H'0004,Y)
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0007,Y)
	bsr	$_hfpMatchChar
	cmp	AL,#H'0000
	beq	?L6
	ld	X,@(H'0004,Y)
?LBB3:
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	asl	#H'0005
	ld	X,@(H'0001,Y)
	ld	AH,@(H'001C,X)
	and	AH,#-H'1FE1
	or	AH,@$XAP_AL
	st	AH,@(H'001C,X)
	ld	AL,#H'0054
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'001C,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1FE0
	cmp	AL,#H'0580
	bne	?L7
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	ld	X,#H'0005
	add	X,@$XAP_AL
	st	X,@(-1,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'000A
	add	AL,#H'0030
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'000F
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'000A
	add	AH,#H'0030
	ld	X,@(-1,Y)
	st	AH,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001C,X)
	and	AL,#-H'0011
	st	AL,@(H'001C,X)
?L7:
	ld	X,@(H'0002,Y)
	add	X,@(H'0003,Y)
	cmp	X,@(H'0007,Y)
	beq	?L15
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	beq	?L15
?L12:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	cmp	X,@(H'0007,Y)
	beq	?L15
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	bne	?L12
	bra	(?L15)
?L6:
	ld	AL,@(H'0003,Y)
?LBE3:
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	cmp	AL,@(H'0007,Y)
	bne	?L13
?L15:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
?L1:
?LBE2:
?LBE_getBytesToFlush:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_hfpSendAtCmd:
	enterl	#9
?LBB_hfpSendAtCmd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	bsr	$_hfpGetLinkSink
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L25
	ld	AL,@(H'0003,Y)
	bsr	$_SinkSlack
	cmp	AL,@(H'0002,Y)
	bcs	?L25
?LBB5:
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_SinkClaim
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_SinkMap
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L25
	add	AL,@(H'0004,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	ld	AL,@(H'000A,Y)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_SinkClaim
	ld	AH,@$XAP_AL
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpSendNextAtCmd
?L25:
?LBE5:
?LBE4:
?LBE_hfpSendAtCmd:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_hfpSendNextAtCmd:
	enterl	#11
?LBB_hfpSendNextAtCmd:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB6:
	bsr	$_hfpGetLinkSink
	st	AL,@(H'0005,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L34
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FE0
	cmp	AL,#H'0000
	bne	?L34
	tst	@(H'000B,Y)
	beq	?L34
	ld	AL,@(H'000B,Y)
?LBB7:
	add	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'000B,Y)
	bsr	_getBytesToFlush
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L38
?LBB8:
	ld	AL,@(H'0005,Y)
	bsr	$_SinkFlush
?L38:
	ld	X,@(H'0003,Y)
?LBE8:
	ld	AL,@(H'001C,X)
	and	AL,#H'1FE0
	cmp	AL,#H'0000
	beq	?L34
?LBB9:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0007
	bsr	$_hfpGetLinkTimeoutMessage
	st	AL,@(H'0006,Y)
	ld	AL,#H'1388
	st	AL,@(H'0008,Y)
	ld	X,#H'0000
	st	X,@(H'0007,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0006,Y)
	bsr	$_MessageCancelAll
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'0005
	and	AH,#H'00FF
	cmp	AH,#H'000F
	beq	?L43
	cmp	AH,#H'001A
	bne	?L41
	ld	AL,#H'2710
	bra	(?L46)
?L43:
	ld	AL,#H'7530
?L46:
	st	AL,@(H'0008,Y)
	ld	X,#H'0000
	st	X,@(H'0007,Y)
?L41:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSendLater
?L34:
?LBE9:
?LBE7:
?LBE6:
?LBE_hfpSendNextAtCmd:
	leavel	#11
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 40 used[1] = 14 total = 54
;# Function pattern *movqi3 used[0] = 35 total = 35
;# Function pattern *movqi8 used[0] = 12 total = 12
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 14 used[2] = 1 total = 15
;# Function pattern *andqi3 used[0] = 9 total = 9
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *divqi3_const used[0] = 1 total = 1
;# Function pattern *modqi3_const used[0] = 1 total = 1
;# Function pattern *extendqihi2 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 15 total = 15
;# Function pattern movstrqi+3 used[0] = 7 used[1] = 1 total = 8
;# Function pattern movstrqi+5 used[0] = 11 total = 11
	MODULE	hfp_service_manager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_hfpServiceInit:
	enterl	#2
?LBB_hfpServiceInit:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AL,@(H'0002,Y)
	asl	#H'0008
	ld	X,@H'fff8
	ld	AH,@(H'0002,X)
	ld	X,@$XAP_AH
	and	X,#H'00FF
	or	X,@$XAP_AL
	ld	AL,@H'fff9
	and	AL,#H'0007
	asl	#H'0005
	ld	AH,@$XAP_UXL
	and	AH,#-H'00E1
	or	AH,@$XAP_AL
	ld	X,@H'fff8
	st	AH,@(H'0002,X)
	ld	AL,#H'0003
	add	AL,@H'fff8
?LBE_hfpServiceInit:
	leavel	#2
$_hfpServicesInit:
	enterl	#6
?LBB_hfpServicesInit:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	X,@$_theHfp
	ld	AL,@(H'000B,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_supportedProfileIsHfp
	cmp	AL,#H'0000
	beq	?L3
?LBB3:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	and	AH,#H'0006
	bsr	_hfpServiceInit
	st	AL,@(H'0003,Y)
	tst	@(H'0002,Y)
	beq	?L3
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	and	AH,#H'0006
	bsr	_hfpServiceInit
	st	AL,@(H'0003,Y)
?L3:
?LBE3:
	ld	AL,@(H'0001,Y)
	bsr	$_supportedProfileIsHsp
	cmp	AL,#H'0000
	beq	?L2
?LBB4:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	and	AH,#H'0001
	bsr	_hfpServiceInit
	st	AL,@(H'0003,Y)
	tst	@(H'0002,Y)
	beq	?L2
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	and	AH,#H'0001
	bsr	_hfpServiceInit
?L2:
?LBE4:
?LBE2:
?LBE_hfpServicesInit:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpGetServiceFromChannel:
	enterl	#3
?LBB_hfpGetServiceFromChannel:
	st	AL,@H'fff8
?LBB5:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000C,X)
	bcc	?L15
	st	AL,@(0,Y)
?L13:
	ld	X,@(-1,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,@H'fff8
	bne	?L10
	ld	AL,@(-1,Y)
	bra	(?L7)
?L10:
	ld	AH,#H'0003
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000C,X)
	bcs	?L13
?L15:
	ld	AL,#H'0000
?L7:
?LBE5:
?LBE_hfpGetServiceFromChannel:
	leavel	#3
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpGetServiceFromHandle:
	enterl	#3
?LBB_hfpGetServiceFromHandle:
	st	AH,@H'fff8
	st	AL,@H'fff9
?LBB6:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000C,X)
	bcc	?L27
	st	AL,@(0,Y)
?L25:
	ld	X,@(-1,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,@H'fff8
	bne	?L22
	cmp	AL,@H'fff9
	bne	?L22
	ld	AL,@(-1,Y)
	bra	(?L19)
?L22:
	ld	AH,#H'0003
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000C,X)
	bcs	?L25
?L27:
	ld	AL,#H'0000
?L19:
?LBE6:
?LBE_hfpGetServiceFromHandle:
	leavel	#3
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_hfpGetServiceFromProfile:
	enterl	#3
?LBB_hfpGetServiceFromProfile:
	st	AL,@H'fff8
?LBB7:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000C,X)
	bcc	?L39
	st	AL,@(0,Y)
?L37:
	ld	X,@(-1,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	and	AH,#H'0007
	and	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L34
	ld	AL,@(-1,Y)
	bra	(?L31)
?L34:
	ld	AH,#H'0003
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000C,X)
	bcs	?L37
?L39:
	ld	AL,#H'0000
?L31:
?LBE7:
?LBE_hfpGetServiceFromProfile:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_hfpGetDisconnectedServiceFromProfile:
	enterl	#4
?LBB_hfpGetDisconnectedServiceFromProfile:
	st	AL,@(0,Y)
?LBB8:
	ld	X,@$_theHfp
	ld	AL,@(H'000B,X)
	st	AL,@(H'0001,Y)
	cmp	AL,@(H'000C,X)
	bcc	?L52
?L50:
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	and	AH,#H'0007
	and	AH,@(0,Y)
	cmp	AH,#H'0000
	beq	?L45
?LBB9:
	ld	AL,@$XAP_UXL
	bsr	$_hfpGetLinkFromService
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L49
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0007
	cmp	AH,#(H'0001+H'0005)
	bcc	?L45
?L49:
	ld	AL,@(H'0001,Y)
	bra	(?L42)
?L45:
	ld	AL,@(H'0001,Y)
?LBE9:
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@$_theHfp
	cmp	AL,@(H'000C,X)
	bcs	?L50
?L52:
	ld	AL,#H'0000
?L42:
?LBE8:
?LBE_hfpGetDisconnectedServiceFromProfile:
	leavel	#4
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_hfpGetVisibleServiceFromProfile:
	enterl	#3
?LBB_hfpGetVisibleServiceFromProfile:
	st	AL,@H'fff8
?LBB10:
	ld	AL,@$_theHfp
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'000C,X)
	bcc	?L63
	st	AL,@(0,Y)
?L61:
	ld	X,@(-1,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	and	AH,#H'0007
	and	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L58
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L65
	cmp	AL,#H'0000
	beq	?L58
?L65:
	ld	AL,@(-1,Y)
	bra	(?L55)
?L58:
	ld	AH,#H'0003
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(0,Y)
	cmp	AH,@(H'000C,X)
	bcs	?L61
?L63:
	ld	AL,#H'0000
?L55:
?LBE10:
?LBE_hfpGetVisibleServiceFromProfile:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
	ENDMOD

;# Function pattern *movqi2 used[0] = 47 used[1] = 18 total = 65
;# Function pattern *movqi3 used[0] = 38 total = 38
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 2 used[3] = 1 total = 3
;# Function pattern *addqi2 used[0] = 1 used[2] = 5 total = 6
;# Function pattern *andqi3 used[0] = 14 total = 14
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 5 total = 5
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 2 total = 8
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 11 total = 11
;# Function pattern movstrqi+6 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[1] = 1 total = 1
	MODULE	hfp_slc_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_hfpSlcConnectTidy:
	enterl	#3
?LBB_hfpSlcConnectTidy:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@(H'0005,X)
	bsr	$_hfpUnregisterServiceRecord
?L2:
	ld	AL,@(0,Y)
	ld	AH,#H'0006
	bsr	$_hfpSetLinkSlcState
	ld	AL,#H'0013
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
?LBE_hfpSlcConnectTidy:
	leavel	#3
$_hfpSendSlcConnectCfmToApp:
	enterl	#14
?LBB_hfpSendSlcConnectCfmToApp:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L4
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0000
	beq	?L4
	tst	@(H'000E,Y)
	bne	?L5
	ld	AL,@$XAP_UXL
	bsr	_hfpSlcConnectTidy
?L5:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000E,Y)
	bsr	$_hfpHandleRfcommLinkLossComplete
	bra	(?L3)
?L4:
?LBB3:
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpGetLinkSink
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpLinkGetProfile
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_hfpGetLinkBdaddr
	cmp	AL,#H'0000
	bne	?L7
	tst	@(H'000B,Y)
	beq	?L7
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0006,Y)
?L7:
	tst	@(H'000A,Y)
	beq	?L8
	tst	@(H'000E,Y)
	bne	?L9
	ld	AL,@(H'000A,Y)
	bsr	_hfpSlcConnectTidy
	bra	(?L8)
?L9:
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0003
	beq	?L8
	ld	AL,@(H'000A,Y)
	ld	AH,#H'0001
	bsr	$_hfpLinkReset
?L8:
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A01
	bsr	$_MessageSend
?L3:
?LBE3:
?LBE2:
?LBE_hfpSendSlcConnectCfmToApp:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpSendSlcDisconnectIndToApp:
	enterl	#12
?LBB_hfpSendSlcDisconnectIndToApp:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB4:
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_hfpGetLinkBdaddr
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0002
	beq	?L14
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0001
	bsr	$_hfpLinkReset
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0007
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_MessageCancelAll
?L14:
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A04
	bsr	$_MessageSend
?LBE4:
?LBE_hfpSendSlcDisconnectIndToApp:
	leavel	#12
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_hfpHandleBrsfRequest:
	enterl	#20
?LBB_hfpHandleBrsfRequest:
	st	AL,@(H'0011,Y)
?LBB5:
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0011,Y)
	bsr	$_hfpSendAtCmd
?LBE5:
?LBE_hfpHandleBrsfRequest:
	leavel	#20
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'52
	dc	H'53
	dc	H'46
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpHandleBacRequest:
	enterl	#28
?LBB_hfpHandleBacRequest:
	st	AL,@(H'0016,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0008,X)
	and	AL,#H'0200
	cmp	AL,#H'0000
	beq	?L17
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L17
?LBB7:
	ld	AH,@(H'0008,X)
	lsr	#H'000B
	and	AH,#H'0003
	st	AH,@(H'0018,Y)
	ld	AL,#(?LC1)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	st	AL,@(H'0019,Y)
	ld	AL,#H'0001
	st	AL,@(H'0017,Y)
	tst	@(H'0018,Y)
	beq	?L26
?L24:
	ld	AL,@(H'0018,Y)
	and	AL,@(H'0017,Y)
	cmp	AL,#H'0000
	beq	?L23
	bsr	$_hfpWbsCodecMaskToCodecId
	ld	X,@(H'0019,Y)
	add	X,@$XAP_UY
	add	X,#H'0002
	ld	AH,#(?LC2)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	$_sprintf
	ld	AH,@(H'0019,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0019,Y)
?L23:
	ld	AL,@(H'0017,Y)
	xor	AL,#-H'0001
	and	AL,@(H'0018,Y)
	st	AL,@(H'0018,Y)
	ld	AL,@(H'0017,Y)
	asl	#H'0001
	st	AL,@(H'0017,Y)
	tst	@(H'0018,Y)
	bne	?L24
?L26:
	ld	AL,@(H'0019,Y)
	add	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#-H'0001
	ld	AH,#(?LC3)
	st	AH,@(0,Y)
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'002A
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0016,Y)
	ld	AH,@(H'0019,Y)
	bsr	$_hfpSendAtCmd
?L17:
?LBE7:
?LBE6:
?LBE_hfpHandleBacRequest:
	leavel	#28
	.SEG	CONST
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'41
	dc	H'43
	dc	H'3D
	dc	H'00
?LC2:
	dc	H'25
	dc	H'64
	dc	H'2C
	dc	H'00
?LC3:
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_hfpHandleCindTestRequest:
	enterl	#16
?LBB_hfpHandleCindTestRequest:
	st	AL,@(H'000D,Y)
?LBB8:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC4)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'000A
	bsr	$_hfpSendAtCmd
?LBE8:
?LBE_hfpHandleCindTestRequest:
	leavel	#16
	.SEG	CONST
?LC4:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'49
	dc	H'4E
	dc	H'44
	dc	H'3D
	dc	H'3F
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_hfpHandleCindReadRequest:
	enterl	#15
?LBB_hfpHandleCindReadRequest:
	st	AL,@(H'000C,Y)
?LBB9:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC5)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,#H'0009
	bsr	$_hfpSendAtCmd
?LBE9:
?LBE_hfpHandleCindReadRequest:
	leavel	#15
	.SEG	CONST
?LC5:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'49
	dc	H'4E
	dc	H'44
	dc	H'3F
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_hfpHandleCmerRequest:
	enterl	#5
?LBB_hfpHandleCmerRequest:
	st	AL,@(H'0002,Y)
?LBB10:
	ld	AL,#(?LC6)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,#(?LC6)
	st	AL,@(0,Y)
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpSendAtCmd
?LBE10:
?LBE_hfpHandleCmerRequest:
	leavel	#5
	.SEG	CONST
?LC6:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4D
	dc	H'45
	dc	H'52
	dc	H'3D
	dc	H'33
	dc	H'2C
	dc	H'20
	dc	H'30
	dc	H'2C
	dc	H'20
	dc	H'30
	dc	H'2C
	dc	H'20
	dc	H'31
	dc	H'0D
	dc	H'00
	.CODE
_hfpHandleChldStatusRequest:
	enterl	#5
?LBB_hfpHandleChldStatusRequest:
	st	AL,@(H'0002,Y)
?LBB11:
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L30
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L30
	ld	AL,#(?LC7)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,#(?LC7)
	st	AL,@(0,Y)
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpSendAtCmd
?L30:
?LBE11:
?LBE_hfpHandleChldStatusRequest:
	leavel	#5
	.SEG	CONST
?LC7:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'48
	dc	H'4C
	dc	H'44
	dc	H'3D
	dc	H'3F
	dc	H'0D
	dc	H'00
	.CODE
$_hfpSlcCheckAtAck:
	enterl	#3
?LBB_hfpSlcCheckAtAck:
	st	AL,@(0,Y)
	cmp	AH,#H'0000
	beq	?L33
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1400
	bne	?L34
	ld	AL,@$XAP_UXL
	bsr	$_hfpGetLinkSink
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,#H'0005
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
?L34:
	ld	AL,#H'0000
	bra	(?L32)
?L33:
	ld	AL,#H'0001
?L32:
?LBE_hfpSlcCheckAtAck:
	leavel	#3
$_hfpHandleSupportedFeaturesNotification:
	enterl	#2
?LBB_hfpHandleSupportedFeaturesNotification:
	ld	X,@$XAP_AL
	st	AH,@(H'0008,X)
?LBE_hfpHandleSupportedFeaturesNotification:
	leavel	#2
$_hfpHandleSupportedFeaturesInd:
	enterl	#3
?LBB_hfpHandleSupportedFeaturesInd:
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
?LBB12:
	ld	AH,@(0,X)
	bsr	$_hfpHandleSupportedFeaturesNotification
	ld	AL,@(0,Y)
	bsr	$_hfpHandleBacRequest
?LBE12:
?LBE_hfpHandleSupportedFeaturesInd:
	leavel	#3
$_hfpHandleBrsfAtAck:
	enterl	#3
?LBB_hfpHandleBrsfAtAck:
	st	AL,@(0,Y)
	cmp	AH,#H'0000
	beq	?L39
	bsr	$_hfpGetAgSupportedFeatures
?L39:
	ld	AL,@(0,Y)
	bsr	_hfpHandleCindTestRequest
	ld	AL,@(0,Y)
	bsr	_hfpHandleCindReadRequest
?LBE_hfpHandleBrsfAtAck:
	leavel	#3
$_hfpHandleBacAtAck:
	enterl	#2
?LBB_hfpHandleBacAtAck:
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1400
	bne	?L40
	cmp	AH,#H'0000
	beq	?L40
	ld	AL,@(H'0008,X)
	and	AL,#-H'0201
	st	AL,@(H'0008,X)
?L40:
?LBE_hfpHandleBacAtAck:
	leavel	#2
$_hfpHandleCindTestAtAck:
	enterl	#3
?LBB_hfpHandleCindTestAtAck:
	st	AL,@(0,Y)
	bsr	$_hfpSlcCheckAtAck
	cmp	AL,#H'0000
	beq	?L43
	ld	AL,@(0,Y)
	bsr	_hfpHandleCmerRequest
?L43:
?LBE_hfpHandleCindTestAtAck:
	leavel	#3
$_hfpHandleCindReadAtAck:
	enterl	#3
?LBB_hfpHandleCindReadAtAck:
	st	AL,@(0,Y)
	bsr	$_hfpSlcCheckAtAck
	cmp	AL,#H'0000
	beq	?L45
	ld	AL,@(0,Y)
	bsr	_hfpHandleChldStatusRequest
?L45:
?LBE_hfpHandleCindReadAtAck:
	leavel	#3
$_hfpHandleCmerAtAck:
	enterl	#4
?LBB_hfpHandleCmerAtAck:
	st	AL,@(H'0001,Y)
	bsr	$_hfpSlcCheckAtAck
	cmp	AL,#H'0000
	beq	?L47
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L50
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L47
?L50:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
?L47:
?LBE_hfpHandleCmerAtAck:
	leavel	#4
_hfpHandleCallHoldSupportInd:
	enterl	#3
?LBB_hfpHandleCallHoldSupportInd:
?LBB13:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	bsr	$_hfpSendSlcConnectCfmToApp
?LBE13:
?LBE_hfpHandleCallHoldSupportInd:
	leavel	#3
$_hfpHandleCallHoldInfo:
	enterl	#2
?LBB_hfpHandleCallHoldInfo:
	bsr	_hfpHandleCallHoldSupportInd
?LBE_hfpHandleCallHoldInfo:
	leavel	#2
$_hfpHandleCallHoldInfoCommon:
	enterl	#2
?LBB_hfpHandleCallHoldInfoCommon:
	bsr	_hfpHandleCallHoldSupportInd
?LBE_hfpHandleCallHoldInfoCommon:
	leavel	#2
$_hfpHandleCallHoldInfoRange:
	enterl	#2
?LBB_hfpHandleCallHoldInfoRange:
	bsr	_hfpHandleCallHoldSupportInd
?LBE_hfpHandleCallHoldInfoRange:
	leavel	#2
$_hfpHandleDisconnectRequest:
	enterl	#10
?LBB_hfpHandleDisconnectRequest:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB14:
	tst	@(H'0014,X)
	beq	?L56
?LBB15:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	st	X,@(H'0003,Y)
	ld	AL,@$XAP_UXL
	bsr	$_hfpHandleAudioDisconnectReq
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	add	AL,#H'0014
	st	AL,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'0005
	bsr	$_MessageSendConditionally
?LBE15:
	bra	(?L55)
?L56:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0010
	beq	?L59
	cmp	AL,#H'0020
	bne	?L58
?L59:
?LBB16:
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0003
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0001
	bsr	$_hfpHandleRfcommLinkLossAbort
?LBE16:
	bra	(?L55)
?L58:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'0800
	bne	?L61
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
	bra	(?L55)
?L61:
	ld	AL,@(H'0007,Y)
	bsr	$_hfpGetLinkSink
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_ConnectionRfcommDisconnectRequest
?L55:
?LBE14:
?LBE_hfpHandleDisconnectRequest:
	leavel	#10
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
	ENDMOD

;# Function pattern *movqi2 used[0] = 86 used[1] = 34 total = 120
;# Function pattern *movqi3 used[0] = 84 total = 84
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi4 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 15 total = 15
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 34 total = 34
;# Function pattern *call_value1 used[0] = 26 total = 26
;# Function pattern movstrqi+3 used[0] = 18 used[1] = 7 total = 25
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	hfp_volume_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleVgsRequest:
	enterl	#5
?LBB_hfpHandleVgsRequest:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'001C,X)
	and	AL,#H'000F
	cmp	AL,@$XAP_AH
	beq	?L1
	cmp	AH,#H'000F
	bcz	?L3
	ld	AH,#H'000F
?L3:
	and	AH,#H'000F
	ld	X,@(H'0002,Y)
	ld	AL,@(H'001C,X)
	and	AL,#-H'0010
	or	AH,@$XAP_AL
	st	AH,@H'fff8
	st	AH,@(H'001C,X)
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L1
	ld	AL,@H'fff8
?LBB3:
	or	AL,#H'0010
	st	AL,@(H'001C,X)
	ld	AL,#(?LC0)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	AL,#H'002C
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpSendAtCmd
?L1:
?LBE3:
?LBE2:
?LBE_hfpHandleVgsRequest:
	leavel	#5
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'56
	dc	H'47
	dc	H'53
	dc	H'3D
	dc	H'30
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
_sendSpeakerVolumeIndToApp:
	enterl	#9
?LBB_sendSpeakerVolumeIndToApp:
	st	AH,@(H'0006,Y)
?LBB4:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A15
	bsr	$_MessageSend
?LBE4:
?LBE_sendSpeakerVolumeIndToApp:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_hfpHandleSpeakerGain:
	enterl	#4
?LBB_hfpHandleSpeakerGain:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	X,@$XAP_AH
?LBB5:
	ld	AL,@(0,X)
	cmp	AL,#(H'0001+H'000F)
	bcc	?L8
?LBB6:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,@H'fff8
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	bne	?L11
?L12:
	ld	AL,@(H'0001,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L8
?L11:
	tst	@(H'0001,Y)
	beq	?L8
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1800
	bne	?L8
	ld	AH,@(H'001C,X)
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L8
	ld	AL,@$XAP_UXL
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	bsr	_sendSpeakerVolumeIndToApp
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	and	AH,#H'000F
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001C,X)
	and	AL,#-H'0010
	or	AL,@$XAP_AH
	st	AL,@(H'001C,X)
?L8:
?LBE6:
?LBE5:
?LBE_hfpHandleSpeakerGain:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_hfpHandleVgmRequest:
	enterl	#17
?LBB_hfpHandleVgmRequest:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB7:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC1)
	bsr	$_memcpy
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'000F
	bcz	?L17
	ld	AL,#H'000F
	st	AL,@(H'000E,Y)
?L17:
	ld	AH,#H'0000
	ld	AL,@(H'000E,Y)
	udiv	#H'000A
	add	AL,#H'0030
	st	AL,@(H'0009,Y)
	ld	AH,#H'0000
	ld	AL,@(H'000E,Y)
	udiv	#H'000A
	add	AH,#H'0030
	st	AH,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_hfpSendAtCmd
?LBE7:
?LBE_hfpHandleVgmRequest:
	leavel	#17
	.SEG	CONST
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'56
	dc	H'47
	dc	H'4D
	dc	H'3D
	dc	H'30
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_sendMicVolumeIndToApp:
	enterl	#9
?LBB_sendMicVolumeIndToApp:
	st	AH,@(H'0006,Y)
?LBB8:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A16
	bsr	$_MessageSend
?LBE8:
?LBE_sendMicVolumeIndToApp:
	leavel	#9
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_hfpHandleMicrophoneGain:
	enterl	#2
?LBB_hfpHandleMicrophoneGain:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB9:
	ld	AL,@(0,X)
	cmp	AL,#(H'0001+H'000F)
	bcc	?L20
?LBB10:
	tst	@H'fff8
	beq	?L20
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'1C00
	cmp	AL,#H'1800
	bne	?L20
	ld	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	bsr	_sendMicVolumeIndToApp
?L20:
?LBE10:
?LBE9:
?LBE_hfpHandleMicrophoneGain:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 35 used[1] = 8 used[3] = 1 total = 44
;# Function pattern *movqi3 used[0] = 36 total = 36
;# Function pattern *addqi0 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *andqi3 used[0] = 10 total = 10
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *udivqi3_const used[0] = 1 total = 1
;# Function pattern *umodqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2_1 used[1] = 2 total = 2
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 2 total = 7
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	hfp_wbs_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpWbsEnable:
	enterl	#2
?LBB_hfpWbsEnable:
	ld	X,@$_theHfp
	ld	AL,#H'1800
	ld	AH,@(H'0008,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'0008,X)
?LBE_hfpWbsEnable:
	leavel	#2
$_hfpWbsStartCodecNegotiation:
	enterl	#13
?LBB_hfpWbsStartCodecNegotiation:
	st	AL,@(H'000A,Y)
?LBB2:
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L3
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0200
	cmp	AL,#H'0000
	beq	?L3
?LBB3:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	X,@(H'000A,Y)
	ld	AL,@(H'001D,X)
	or	AL,#H'2000
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'002B
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L2)
?L3:
?LBE3:
	ld	AL,#H'0000
?L2:
?LBE2:
?LBE_hfpWbsStartCodecNegotiation:
	leavel	#13
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'43
	dc	H'43
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleBccAtAck:
	enterl	#2
?LBB_hfpHandleBccAtAck:
	ld	X,@$XAP_AL
	cmp	AH,#H'0000
	beq	?L4
	ld	AH,@(H'001D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L4
	ld	AL,@(H'001D,X)
	and	AL,#-H'2001
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0006
	bsr	$_sendAudioConnectCfmFailToApp
?L4:
?LBE_hfpHandleBccAtAck:
	leavel	#2
$_hfpHandleResponseWbsCodec:
	enterl	#22
?LBB_hfpHandleResponseWbsCodec:
?LBB4:
	st	AL,@(H'0011,Y)
	ld	X,@$XAP_AH
	ld	X,@(0,X)
	st	X,@(H'0012,Y)
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L7
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0200
	cmp	AL,#H'0000
	beq	?L7
	ld	X,@$XAP_AH
?LBB5:
	ld	AL,@(0,X)
	bsr	$_hfpWbsCodecIdToCodecMask
	st	AL,@(H'0013,Y)
	ld	X,@$_theHfp
	ld	AH,@(H'0008,X)
	lsr	#H'000B
	and	AH,#H'0003
	and	AH,@(H'0013,Y)
	cmp	AH,#H'0000
	beq	?L9
?LBB6:
	ld	AL,#(?LC1)
	st	AL,@(0,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,#H'0003
	and	AL,@(H'0013,Y)
	asl	#H'000B
	ld	X,@(H'0011,Y)
	ld	AH,@(H'001D,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'001D,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0024
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0011,Y)
	bsr	$_hfpSendAtCmd
?LBE6:
	bra	(?L7)
?L9:
	ld	AL,#H'002A
	ld	AH,@(H'0011,Y)
	bsr	$_hfpSendCommonInternalMessage
?L7:
?LBE5:
?LBE4:
?LBE_hfpHandleResponseWbsCodec:
	leavel	#22
	.SEG	CONST
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'43
	dc	H'53
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_hfpHandleBcsAtAck:
	enterl	#3
?LBB_hfpHandleBcsAtAck:
	st	AL,@(0,Y)
	cmp	AH,#H'0000
	beq	?L14
	ld	X,@$XAP_AL
	ld	AH,@(H'001D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L14
	ld	AL,@$XAP_UXL
	ld	AH,#H'0007
	bsr	$_sendAudioConnectCfmFailToApp
?L14:
	ld	X,@(0,Y)
	ld	AL,@(H'001D,X)
	and	AL,#-H'2001
	st	AL,@(H'001D,X)
?LBE_hfpHandleBcsAtAck:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 25 used[1] = 3 total = 28
;# Function pattern *movqi3 used[0] = 36 total = 36
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 9 total = 9
	MODULE	hfp_call_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleCallRingIndication:
	enterl	#7
?LBB_hfpHandleCallRingIndication:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB2:
	tst	@(H'000B,X)
	bne	?L1
	ld	AH,#H'0001
	bsr	$_hfpSetLinkCallState
	ld	AL,@(H'0003,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'002B
	bsr	$_hfpGetLinkTimeoutMessage
	st	AL,@(H'0004,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0004,Y)
	bsr	$_MessageCancelAll
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0004,Y)
	bsr	$_MessageSendLater
?L1:
?LBE3:
?LBE2:
?LBE_hfpHandleCallRingIndication:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleCallDialComplete:
	enterl	#4
?LBB_hfpHandleCallDialComplete:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
	tst	@(H'000B,X)
	bne	?L4
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L4
	tst	@(H'0001,Y)
	bne	?L4
	ld	AL,@(0,Y)
	ld	AH,#H'0003
	bsr	$_hfpSetLinkCallState
?L4:
?LBE_hfpHandleCallDialComplete:
	leavel	#4
$_hfpHandleCallVoiceRecDisabled:
	enterl	#3
?LBB_hfpHandleCallVoiceRecDisabled:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	tst	@(H'000B,X)
	bne	?L7
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L7
	ld	X,@(0,Y)
	tst	@(H'0014,X)
	bne	?L7
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_hfpSetLinkCallState
?L7:
?LBE_hfpHandleCallVoiceRecDisabled:
	leavel	#3
$_hfpHandleCallAudio:
	enterl	#8
?LBB_hfpHandleCallAudio:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB4:
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L10
?LBB5:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'002B
	bsr	$_hfpGetLinkTimeoutMessage
	st	AL,@(H'0005,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0005,Y)
	bsr	$_MessageCancelAll
	tst	@(H'0004,Y)
	beq	?L12
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'0005,Y)
	bsr	$_MessageSendLater
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0000
	bne	?L10
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bra	(?L15)
?L12:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
?L15:
	bsr	$_hfpSetLinkCallState
?L10:
?LBE5:
?LBE4:
?LBE_hfpHandleCallAudio:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpHandleCallIncomingTimeout:
	enterl	#3
?LBB_hfpHandleCallIncomingTimeout:
	st	AL,@(0,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L16
	ld	X,@(0,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0040
	bne	?L16
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#-H'6000
	bne	?L18
	ld	AL,@$XAP_UXL
	ld	AH,#H'0004
	bra	(?L20)
?L18:
	ld	AL,@(0,Y)
	ld	AH,#H'0000
?L20:
	bsr	$_hfpSetLinkCallState
?L16:
?LBE_hfpHandleCallIncomingTimeout:
	leavel	#3
$_hfpHandleCallIndication:
	enterl	#2
?LBB_hfpHandleCallIndication:
	ld	X,@$XAP_AL
	cmp	AH,#H'0000
	beq	?L24
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0001
	bcz	?L28
	cmp	AH,#H'0003
	bne	?L23
?L28:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0004
	bra	(?L39)
?L24:
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0005
	beq	?L34
	cmp	AH,#(H'0001+H'0005)
	bcc	?L38
	cmp	AH,#H'0000
	beq	?L23
	bra	(?L36)
?L38:
	cmp	AH,#H'0006
	beq	?L35
	bra	(?L36)
?L34:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bra	(?L39)
?L35:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0003
	bra	(?L39)
?L36:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
?L39:
	bsr	$_hfpSetLinkCallState
?L23:
?LBE_hfpHandleCallIndication:
	leavel	#2
$_hfpHandleCallSetupIndication:
	enterl	#3
?LBB_hfpHandleCallSetupIndication:
	st	AL,@(0,Y)
	cmp	AH,#H'0001
	beq	?L55
	cmp	AH,#H'0001
	bcs	?L46
	cmp	AH,#(H'0001+H'0003)
	bcc	?L44
	bra	(?L66)
?L46:
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0003
	beq	?L49
	cmp	AH,#(H'0001+H'0003)
	bcc	?L54
	cmp	AH,#H'0001
	beq	?L49
	bra	(?L44)
?L54:
	cmp	AH,#H'0005
	beq	?L50
	cmp	AH,#H'0006
	beq	?L51
	bra	(?L44)
?L49:
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bra	(?L77)
?L50:
	ld	AL,#H'001A
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
	ld	AL,@(0,Y)
	ld	AH,#H'0004
	bra	(?L77)
?L51:
	ld	AL,@(0,Y)
	ld	AH,#H'0007
	bra	(?L77)
?L55:
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0004
	beq	?L61
	cmp	AH,#(H'0001+H'0004)
	bcc	?L64
	cmp	AH,#H'0000
	beq	?L57
	bra	(?L44)
?L64:
	ld	AL,#-H'0007
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0002)
	bcc	?L44
	bra	(?L61)
?L57:
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bra	(?L77)
?L61:
	ld	AL,@(0,Y)
	ld	AH,#H'0005
	bra	(?L77)
?L66:
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0004
	beq	?L71
	cmp	AH,#(H'0001+H'0004)
	bcc	?L74
	cmp	AH,#H'0000
	beq	?L68
	bra	(?L44)
?L74:
	ld	AL,#-H'0007
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0001)
	bcc	?L44
	bra	(?L71)
?L68:
	ld	AL,@(0,Y)
	ld	AH,#H'0003
	bra	(?L77)
?L71:
	ld	AL,@(0,Y)
	ld	AH,#H'0006
?L77:
	bsr	$_hfpSetLinkCallState
?L44:
?LBE_hfpHandleCallSetupIndication:
	leavel	#3
$_hfpHandleCallHeldIndication:
	enterl	#3
?LBB_hfpHandleCallHeldIndication:
	st	AL,@(0,Y)
	cmp	AH,#H'0001
	beq	?L96
	cmp	AH,#H'0001
	bcs	?L88
	cmp	AH,#H'0002
	beq	?L104
	bra	(?L86)
?L88:
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0007
	beq	?L92
	cmp	AH,#(H'0001+H'0007)
	bcc	?L95
	cmp	AH,#H'0006
	beq	?L90
	bra	(?L86)
?L95:
	cmp	AH,#H'0008
	beq	?L116
	bra	(?L86)
?L90:
	ld	AL,@(0,Y)
	ld	AH,#H'0003
	bra	(?L115)
?L92:
	ld	AL,#H'001A
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
?L116:
	ld	AL,@(0,Y)
	ld	AH,#H'0004
	bra	(?L115)
?L96:
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0004
	bcs	?L86
	cmp	AH,#H'0005
	bcz	?L101
	ld	AL,#-H'0008
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0001)
	bcc	?L86
?L101:
	ld	AL,@(0,Y)
	ld	AH,#H'0007
	bra	(?L115)
?L104:
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#(H'0001+H'0007)
	bcc	?L112
	cmp	AH,#H'0006
	bcc	?L109
	cmp	AH,#H'0004
	beq	?L109
	bra	(?L86)
?L112:
	cmp	AH,#H'0009
	bne	?L86
?L109:
	ld	AL,@(0,Y)
	ld	AH,#H'0008
?L115:
	bsr	$_hfpSetLinkCallState
?L86:
?LBE_hfpHandleCallHeldIndication:
	leavel	#3
$_hfpHandleCallCurrentIndication:
	enterl	#2
?LBB_hfpHandleCallCurrentIndication:
	ld	X,@$XAP_AL
	cmp	AH,#H'0001
	bne	?L128
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0240
	beq	?L128
	ld	AL,@$XAP_UXL
	ld	AH,#H'0009
	bsr	$_hfpSetLinkCallState
?L128:
?LBE_hfpHandleCallCurrentIndication:
	leavel	#2
$_hfpHandleCallResponseHoldIndication:
	enterl	#2
?LBB_hfpHandleCallResponseHoldIndication:
	ld	X,@$XAP_AL
	cmp	AH,#H'0001
	beq	?L136
	cmp	AH,#H'0001
	bcs	?L134
	cmp	AH,#H'0002
	beq	?L138
	bra	(?L132)
?L134:
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0040
	bne	?L132
	ld	AL,@$XAP_UXL
	ld	AH,#H'0002
	bra	(?L142)
?L136:
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0080
	bne	?L132
	ld	AL,@$XAP_UXL
	ld	AH,#H'0004
	bra	(?L142)
?L138:
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0080
	bne	?L132
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
?L142:
	bsr	$_hfpSetLinkCallState
?L132:
?LBE_hfpHandleCallResponseHoldIndication:
	leavel	#2
$_hfpHandleCallMultiparty:
	enterl	#2
?LBB_hfpHandleCallMultiparty:
	ld	AH,@$XAP_AL
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L151
	ld	X,@$XAP_AH
	ld	AL,@(H'0008,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	bne	?L149
?L151:
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_hfpHandleCallCurrentIndication
?L149:
?LBE_hfpHandleCallMultiparty:
	leavel	#2
$_hfpHandleAnswerCall:
	enterl	#6
?LBB_hfpHandleAnswerCall:
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0040
	bne	?L153
?LBB7:
	cmp	AH,#H'0000
	beq	?L154
	ld	AL,#(?LC0)
	st	AL,@(H'0003,Y)
	bra	(?L155)
?L154:
	ld	X,#(?LC1)
	st	X,@(H'0003,Y)
?L155:
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L152)
?L153:
?LBE7:
	ld	AL,#H'0000
?L152:
?LBE6:
?LBE_hfpHandleAnswerCall:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'41
	dc	H'0D
	dc	H'00
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'48
	dc	H'55
	dc	H'50
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_hfpHandleAnswerHspCall:
	enterl	#3
?LBB_hfpHandleAnswerHspCall:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB8:
	ld	X,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0040
	bne	?L158
	ld	X,@$XAP_AH
?LBB9:
	ld	AL,@(0,X)
	ld	AH,#H'002B
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_MessageCancelAll
	ld	AL,@(0,Y)
	ld	AH,#H'0004
	bsr	$_hfpSetLinkCallState
	ld	AL,@(0,Y)
	ld	AH,#H'0008
	bsr	$_hfpSendHsButtonPress
	ld	AL,#H'0001
	bra	(?L157)
?L158:
?LBE9:
	ld	AL,#H'0000
?L157:
?LBE8:
?LBE_hfpHandleAnswerHspCall:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_hfpHandleTerminateCall:
	enterl	#15
?LBB_hfpHandleTerminateCall:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0001
	bcz	?L161
?LBB11:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC1)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L160)
?L161:
?LBE11:
	ld	AL,#H'0000
?L160:
?LBE10:
?LBE_hfpHandleTerminateCall:
	leavel	#15
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_hfpHandleTerminateHspCall:
	enterl	#2
?LBB_hfpHandleTerminateHspCall:
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0001
	bcz	?L164
	ld	AL,@$XAP_UXL
	ld	AH,#H'0009
	bsr	$_hfpSendHsButtonPress
	ld	AL,#H'0001
	bra	(?L163)
?L164:
	ld	AL,#H'0000
?L163:
?LBE_hfpHandleTerminateHspCall:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 58 used[1] = 28 total = 86
;# Function pattern *movqi3 used[0] = 92 total = 92
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[2] = 3 total = 3
;# Function pattern *andqi3 used[0] = 21 total = 21
;# Function pattern *lshrqi3 used[0] = 10 total = 10
;# Function pattern jump used[0] = 35 total = 35
;# Function pattern *call1 used[0] = 20 total = 20
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 13 used[1] = 6 total = 19
;# Function pattern movstrqi+4 used[1] = 10 total = 10
;# Function pattern movstrqi+5 used[0] = 37 total = 37
	MODULE	hfp_caller_id_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendCallerIdMsgToApp:
	enterl	#6
?LBB_sendCallerIdMsgToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	tst	@(H'0008,Y)
	bne	?L3
	tst	@(H'0006,Y)
	beq	?L1
?L3:
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'001F
	bcz	?L4
	ld	AL,#H'001F
	st	AL,@(H'0008,Y)
?L4:
	ld	AL,#H'0020
	sub	AL,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	cmp	AH,@$XAP_AL
	bcs	?L5
	ld	AL,#H'001F
	sub	AL,@(H'0008,Y)
	st	AL,@(H'0006,Y)
?L5:
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@(H'0008,Y)
?LBB3:
	add	AL,@(H'0006,Y)
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpConvertNumberType
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AH,#H'0000
	st	AH,@(H'0002,X)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0005,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	add	AL,@(H'0004,X)
	add	AL,#H'0006
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A0D
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendCallerIdMsgToApp:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleCallerIdEnableReq:
	enterl	#6
?LBB_hfpHandleCallerIdEnableReq:
	st	AL,@(H'0002,Y)
?LBB4:
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L10
	ld	X,@(H'0002,Y)
?LBB5:
	tst	@(H'0001,X)
	beq	?L11
	ld	AL,#(?LC0)
	st	AL,@(H'0003,Y)
	bra	(?L12)
?L11:
	ld	X,#(?LC1)
	st	X,@(H'0003,Y)
?L12:
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,#H'000C
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L9)
?L10:
?LBE5:
	ld	AL,#H'0000
?L9:
?LBE4:
?LBE_hfpHandleCallerIdEnableReq:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4C
	dc	H'49
	dc	H'50
	dc	H'3D
	dc	H'31
	dc	H'0D
	dc	H'00
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4C
	dc	H'49
	dc	H'50
	dc	H'3D
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpHandleCallerId:
	enterl	#6
?LBB_hfpHandleCallerId:
	ld	X,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	bsr	_sendCallerIdMsgToApp
?LBE_hfpHandleCallerId:
	leavel	#6
$_hfpHandleCallerIdIllegal:
	enterl	#6
?LBB_hfpHandleCallerIdIllegal:
	ld	X,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	_sendCallerIdMsgToApp
?LBE_hfpHandleCallerIdIllegal:
	leavel	#6
$_hfpHandleCallerIdWithName:
	enterl	#6
?LBB_hfpHandleCallerIdWithName:
	ld	X,@$XAP_AH
	ld	AH,@(H'0003,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'000A,X)
	bsr	_sendCallerIdMsgToApp
?LBE_hfpHandleCallerIdWithName:
	leavel	#6
	ENDMOD

;# Function pattern *movqi2 used[0] = 41 used[1] = 5 total = 46
;# Function pattern *movqi3 used[0] = 51 total = 51
;# Function pattern *addqi2 used[0] = 8 used[2] = 2 total = 10
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 3 total = 5
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	hfp_current_calls_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleCurrentCallsGetReq:
	enterl	#14
?LBB_hfpHandleCurrentCallsGetReq:
	st	AL,@(H'000B,Y)
?LBB2:
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0023
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_hfpHandleCurrentCallsGetReq:
	leavel	#14
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4C
	dc	H'43
	dc	H'43
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_hfpHandleCurrentCallsInd:
	enterl	#6
?LBB_hfpHandleCurrentCallsInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
?LBB4:
	cmp	AH,#(H'0001+H'0001)
	bcc	?L3
	ld	AL,@(H'0007,Y)
	cmp	AL,#(H'0001+H'0005)
	bcc	?L3
	ld	X,@(H'0008,Y)
	cmp	X,#(H'0001+H'0002)
	bcc	?L3
	ld	AH,@(H'0009,Y)
	cmp	AH,#(H'0001+H'0001)
	bcc	?L3
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'001F
	bcz	?L7
	ld	AH,#H'001F
	st	AH,@(H'000B,Y)
?L7:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001C,X)
	and	AL,#H'1FE0
	cmp	AL,#H'0460
	bne	?L8
	ld	AL,@(H'000B,Y)
?LBB5:
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0003,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0005,X)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpConvertNumberType
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0007,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	add	X,@(H'000B,Y)
	ld	AL,#H'0000
	st	AL,@(H'0008,X)
	ld	X,@$_theHfp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A1C
	bsr	$_MessageSend
?L8:
?LBE5:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_hfpHandleCallCurrentIndication
?L3:
?LBE4:
?LBE_hfpHandleCurrentCallsInd:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpHandleCurrentCalls:
	enterl	#9
?LBB_hfpHandleCurrentCalls:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(H'0003,Y)
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	bsr	_hfpHandleCurrentCallsInd
?LBE_hfpHandleCurrentCalls:
	leavel	#9
$_hfpHandleCurrentCallsWithNumber:
	enterl	#9
?LBB_hfpHandleCurrentCallsWithNumber:
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0009,X)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0007,X)
	st	AH,@(H'0005,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	bsr	_hfpHandleCurrentCallsInd
?LBE_hfpHandleCurrentCallsWithNumber:
	leavel	#9
	ENDMOD

;# Function pattern *movqi2 used[0] = 37 used[1] = 6 total = 43
;# Function pattern *movqi3 used[0] = 48 total = 48
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 3 total = 3
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	hfp_dial_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_prefix:
	dc	H'0041
	dc	H'0054
	dc	H'0044
	dc	H'003E
_suffix:
	dc	H'003B
	dc	H'000D
	.CODE
_createDialCmd:
	enterl	#11
?LBB_createDialCmd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	cmp	AH,#H'0000
	bne	?L2
	ld	AL,#H'0003
	bra	(?L6)
?L2:
	ld	AL,#H'0004
?L6:
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,Y)
	add	AL,@(H'000B,Y)
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	add	AL,@(H'0004,Y)
	st	AL,@(H'0007,Y)
	add	AL,@(H'000B,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#(_prefix)
	bsr	$_memmove
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_memmove
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#(_suffix)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	tst	@(H'0003,Y)
	beq	?L4
	ld	AL,#H'000E
	bra	(?L5)
?L4:
	ld	AL,#H'000D
?L5:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,@(H'0006,Y)
	bsr	$_free
?LBE2:
?LBE_createDialCmd:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpHandleLastNumberRedial:
	enterl	#14
?LBB_hfpHandleLastNumberRedial:
	st	AL,@(H'000B,Y)
?LBB3:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'000A
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_hfpSendAtCmd
?LBE3:
?LBE_hfpHandleLastNumberRedial:
	leavel	#14
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'4C
	dc	H'44
	dc	H'4E
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleDialNumberRequest:
	enterl	#4
?LBB_hfpHandleDialNumberRequest:
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0002
	add	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	_createDialCmd
?LBE_hfpHandleDialNumberRequest:
	leavel	#4
$_hfpHandleDialMemoryRequest:
	enterl	#4
?LBB_hfpHandleDialMemoryRequest:
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0002
	add	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	_createDialCmd
?LBE_hfpHandleDialMemoryRequest:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 23 used[1] = 8 total = 31
;# Function pattern *movqi3 used[0] = 20 total = 20
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 4 used[2] = 2 total = 6
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	hfp_dtmf_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleDtmfRequest:
	enterl	#25
?LBB_hfpHandleDtmfRequest:
	st	AL,@(H'0016,Y)
?LBB2:
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	X,@(H'0016,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0011
	st	AL,@(H'0001,Y)
	ld	X,@(H'0016,Y)
	ld	AL,@(0,X)
	bsr	$_hfpSendAtCmd
?LBE2:
?LBE_hfpHandleDtmfRequest:
	leavel	#25
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'56
	dc	H'54
	dc	H'53
	dc	H'3D
	dc	H'25
	dc	H'63
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	hfp_extended_error_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleExtendedErrorReq:
	enterl	#16
?LBB_hfpHandleExtendedErrorReq:
	st	AL,@(H'000D,Y)
?LBB2:
	ld	X,@$_theHfp
	ld	AH,@(H'0008,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L2
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0100
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0021
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_hfpSendAtCmd
?LBE3:
	bra	(?L1)
?L2:
	ld	AL,#H'0023
	ld	AH,@(H'000D,Y)
	bsr	$_hfpSendCommonInternalMessage
?L1:
?LBE2:
?LBE_hfpHandleExtendedErrorReq:
	leavel	#16
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4D
	dc	H'45
	dc	H'45
	dc	H'3D
	dc	H'31
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleCmeeAtAck:
	enterl	#2
?LBB_hfpHandleCmeeAtAck:
	ld	AH,@$XAP_AL
	ld	AL,#H'0023
	bsr	$_hfpSendCommonInternalMessage
?LBE_hfpHandleCmeeAtAck:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 2 total = 8
;# Function pattern *movqi3 used[0] = 9 total = 9
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 total = 2
	MODULE	hfp_hs_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpSendHsButtonPress:
	enterl	#19
?LBB_hfpSendHsButtonPress:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB2:
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_hfpSendAtCmd
?LBE2:
?LBE_hfpSendHsButtonPress:
	leavel	#19
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4B
	dc	H'50
	dc	H'44
	dc	H'3D
	dc	H'32
	dc	H'30
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 1 total = 7
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	hfp_indicators_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_getIndicatorValue:
	enterl	#3
?LBB_getIndicatorValue:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AH,#H'0000
	beq	?L2
	cmp	AH,@(0,X)
	beq	?L3
	bcc	?L2
?L3:
?LBB3:
	add	AH,#-H'0001
	st	Y,@H'fff8
	bsr	$_get_hfpHandleIndicatorStatus_d
	ld	AL,@(0,Y)
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_getIndicatorValue:
	leavel	#3
_sendIndicatorServiceToApp:
	enterl	#9
?LBB_sendIndicatorServiceToApp:
	st	AH,@(H'0006,Y)
?LBB4:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A08
	bsr	$_MessageSend
?LBE4:
?LBE_sendIndicatorServiceToApp:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_sendIndicatorSignalToApp:
	enterl	#9
?LBB_sendIndicatorSignalToApp:
	st	AH,@(H'0006,Y)
?LBB5:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A09
	bsr	$_MessageSend
?LBE5:
?LBE_sendIndicatorSignalToApp:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_sendIndicatorRoamToApp:
	enterl	#9
?LBB_sendIndicatorRoamToApp:
	st	AH,@(H'0006,Y)
?LBB6:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A0A
	bsr	$_MessageSend
?LBE6:
?LBE_sendIndicatorRoamToApp:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_sendIndicatorBattChgToApp:
	enterl	#9
?LBB_sendIndicatorBattChgToApp:
	st	AH,@(H'0006,Y)
?LBB7:
	ld	AH,#H'0002
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A0B
	bsr	$_MessageSend
?LBE7:
?LBE_sendIndicatorBattChgToApp:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_sendUnhandledIndicatorToApp:
	enterl	#9
?LBB_sendUnhandledIndicatorToApp:
	st	AH,@(H'0006,Y)
?LBB8:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A1A
	bsr	$_MessageSend
?LBE8:
?LBE_sendUnhandledIndicatorToApp:
	leavel	#9
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_hfpStoreUnhandledIndicator:
	enterl	#4
?LBB_hfpStoreUnhandledIndicator:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB9:
	ld	AH,@(H'0011,X)
	add	AH,#H'0001
	ld	AL,@(H'0012,X)
	bsr	$_realloc
	cmp	AL,#H'0000
	beq	?L9
	ld	X,@(0,Y)
	st	AL,@(H'0012,X)
	ld	AH,@(H'0011,X)
	add	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(0,Y)
	ld	AL,@(H'0011,X)
	add	AL,#H'0001
	st	AL,@(H'0011,X)
?L9:
?LBE9:
?LBE_hfpStoreUnhandledIndicator:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_hfpSendUnhandledIndicatorListToApp:
	enterl	#11
?LBB_hfpSendUnhandledIndicatorListToApp:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB10:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0006,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A19
	bsr	$_MessageSend
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'000B,Y)
	bsr	_hfpStoreUnhandledIndicator
?LBE10:
?LBE_hfpSendUnhandledIndicatorListToApp:
	leavel	#11
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_hfpHandleNull:
; leaf function with empty stack frame
?LBB_hfpHandleNull:
?LBE_hfpHandleNull:
	rts
_hfpHandleExtraIndicatorsList:
	enterl	#17
?LBB_hfpHandleExtraIndicatorsList:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB11:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	X,@$_theHfp
	st	X,@(H'000B,Y)
	ld	AL,@(H'0005,X)
	bsr	$_strlen
	ld	X,@(H'000B,Y)
	add	AL,@(H'0005,X)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@(H'0013,Y)
	st	X,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,#H'0022
	bsr	$_UtilFind
	sub	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	X,@$_theHfp
	ld	AH,@$XAP_UXL
	ld	AL,@(H'0005,X)
	cmp	AL,@(H'000A,Y)
	bcc	?L42
?L40:
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	st	AL,@(H'000D,Y)
	st	AL,@(H'000E,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0005,X)
	add	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L18
	ld	X,@(H'0012,Y)
	st	X,@(H'000C,Y)
	ld	AL,#H'0028
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_hfpSkipPastChar
	st	AL,@(H'0009,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_hfpSkipSpace
	st	AL,@(H'0009,Y)
	bra	(?L19)
?L23:
	ld	AL,@(H'000D,Y)
	smult	#H'000A
	ld	X,@(H'0009,Y)
	add	AL,@(0,X)
	add	AL,#-H'0030
	st	AL,@(H'000D,Y)
	add	X,#H'0001
	st	X,@(H'0009,Y)
?L19:
	ld	AL,@(H'0009,Y)
	cmp	AL,@(H'0011,Y)
	beq	?L20
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_isdigit
	cmp	AL,#H'0000
	bne	?L23
?L20:
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_hfpSkipSpace
	st	AL,@(H'0009,Y)
	cmp	AL,@(H'0011,Y)
	beq	?L25
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	add	AL,#-H'002C
	cmp	AL,#(H'0001+H'0001)
	bcc	?L25
?L28:
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,@(H'0011,Y)
	beq	?L25
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	add	AL,#-H'002C
	cmp	AL,#H'0001
	bcz	?L28
?L25:
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_hfpSkipSpace
	st	AL,@(H'0009,Y)
	bra	(?L29)
?L33:
	ld	AL,@(H'000E,Y)
	smult	#H'000A
	ld	X,@(H'0009,Y)
	add	AL,@(0,X)
	add	AL,#-H'0030
	st	AL,@(H'000E,Y)
	add	X,#H'0001
	st	X,@(H'0009,Y)
?L29:
	ld	AL,@(H'0009,Y)
	cmp	AL,@(H'0011,Y)
	beq	?L18
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_isdigit
	cmp	AL,#H'0000
	bne	?L33
?L18:
	tst	@(H'000C,Y)
	beq	?L34
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	_hfpSendUnhandledIndicatorListToApp
?L34:
	ld	X,@$_theHfp
	ld	AL,@(H'0007,Y)
	add	AL,@(H'0005,X)
	cmp	AL,@(H'000A,Y)
	beq	?L36
	ld	X,@(H'0005,X)
	add	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	beq	?L36
	ld	AH,@$_theHfp
?L39:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AH
	add	AL,@(H'0005,X)
	cmp	AL,@(H'000A,Y)
	beq	?L36
	ld	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	add	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000D
	bne	?L39
?L36:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@(H'0008,Y)
	add	X,#H'0001
	st	X,@(H'0008,Y)
?LBE12:
	ld	AH,@$_theHfp
	ld	X,@$XAP_AH
	add	AL,@(H'0005,X)
	cmp	AL,@(H'000A,Y)
	bcs	?L40
?L42:
?LBE11:
?LBE_hfpHandleExtraIndicatorsList:
	leavel	#17
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_hfpHandleIndicatorList:
	enterl	#19
?LBB_hfpHandleIndicatorList:
	st	AH,@(H'000B,Y)
?LBB13:
	st	AL,@(H'000C,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#H'0000
	st	AH,@(H'000D,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'000F,Y)
	ld	AL,@(0,X)
	add	AL,@$XAP_AH
	st	AL,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0010,Y)
	bsr	$_hfpSkipSpace
	st	AL,@(H'000E,Y)
	ld	AH,@(H'000D,Y)
	ld	X,@(H'000C,Y)
	st	AH,@(H'0011,X)
	bra	(?L92)
?L90:
	ld	X,@(H'000D,Y)
	add	X,#H'0001
	st	X,@(H'000D,Y)
?LBB14:
	ld	AH,@(H'0010,Y)
	bsr	$_hfpSkipSpace
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L63
	cmp	AL,@(H'0010,Y)
	beq	?L63
	ld	AL,@(0,X)
	cmp	AL,#H'0022
	bne	?L63
	ld	AH,#H'0001
	add	AH,@$XAP_UXL
	bra	(?L65)
?L63:
	ld	AH,#H'0000
?L65:
?LBE14:
	st	AH,@(H'000E,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#(?LC0)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L66
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0003,Y)
	bra	(?L67)
?L66:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC1)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L68
	tst	@(H'0005,Y)
	beq	?L69
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0006,Y)
	bra	(?L67)
?L69:
	ld	X,@(H'000D,Y)
	st	X,@(H'0005,Y)
	bra	(?L67)
?L68:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC2)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L72
	tst	@(H'0005,Y)
	beq	?L73
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0006,Y)
	bra	(?L67)
?L73:
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,Y)
	bra	(?L67)
?L72:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC3)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L76
	ld	X,@(H'000D,Y)
	st	X,@(H'0004,Y)
	bra	(?L67)
?L76:
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC4)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L78
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0007,Y)
	bra	(?L67)
?L78:
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC5)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L80
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0008,Y)
	bra	(?L67)
?L80:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC6)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L82
	ld	X,@(H'000D,Y)
	st	X,@(H'0009,Y)
	bra	(?L67)
?L82:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,#(?LC7)
	bsr	$_UtilCompare
	cmp	AL,#H'0000
	bne	?L67
	ld	AH,@(H'000D,Y)
	st	AH,@(H'000A,Y)
?L67:
	ld	X,@$_theHfp
	tst	@(H'0005,X)
	beq	?L85
	ld	AL,@(H'0010,Y)
	st	AL,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,@(H'000E,Y)
	bsr	_hfpHandleExtraIndicatorsList
?L85:
	ld	AL,#H'0029
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_hfpSkipPastChar
	st	AL,@(H'000E,Y)
	ld	X,#H'0029
	st	X,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_hfpSkipPastChar
	st	AL,@(H'000E,Y)
?LBB15:
	cmp	AL,#H'0000
	beq	?L86
	cmp	AL,@(H'0010,Y)
	beq	?L86
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'002C
	bne	?L86
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	bra	(?L88)
?L86:
	ld	AL,#H'0000
?L88:
?LBE15:
	ld	AH,@(H'0010,Y)
	bsr	$_hfpSkipSpace
	cmp	AL,#H'0000
	beq	?L92
	st	AL,@(H'000E,Y)
?L92:
?LBB16:
	tst	@(H'000E,Y)
	beq	?L60
	ld	AH,@(H'000E,Y)
	cmp	AH,@(H'0010,Y)
	beq	?L60
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,#H'0028
	bne	?L60
	add	AH,#H'0001
	bra	(?L62)
?L60:
	ld	AH,#H'0000
?L62:
?LBE16:
	ld	AL,@$XAP_AH
	cmp	AH,#H'0000
	bne	?L90
	ld	AH,@(H'000D,Y)
	ld	X,@(H'000C,Y)
	st	AH,@(H'0013,X)
	tst	@(H'0003,Y)
	beq	?L56
	tst	@(H'0004,Y)
	beq	?L56
	ld	AL,@$XAP_UXL
	add	AL,#H'0009
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_memcpy
?L56:
?LBE13:
?LBE_hfpHandleIndicatorList:
	leavel	#19
	.SEG	CONST
?LC0:
	dc	H'73
	dc	H'65
	dc	H'72
	dc	H'76
	dc	H'69
	dc	H'63
	dc	H'65
	dc	H'00
?LC1:
	dc	H'63
	dc	H'61
	dc	H'6C
	dc	H'6C
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'75
	dc	H'70
	dc	H'00
?LC2:
	dc	H'63
	dc	H'61
	dc	H'6C
	dc	H'6C
	dc	H'5F
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'75
	dc	H'70
	dc	H'00
?LC3:
	dc	H'63
	dc	H'61
	dc	H'6C
	dc	H'6C
	dc	H'22
	dc	H'00
?LC4:
	dc	H'73
	dc	H'69
	dc	H'67
	dc	H'6E
	dc	H'61
	dc	H'6C
	dc	H'00
?LC5:
	dc	H'72
	dc	H'6F
	dc	H'61
	dc	H'6D
	dc	H'00
?LC6:
	dc	H'62
	dc	H'61
	dc	H'74
	dc	H'74
	dc	H'63
	dc	H'68
	dc	H'67
	dc	H'00
?LC7:
	dc	H'63
	dc	H'61
	dc	H'6C
	dc	H'6C
	dc	H'68
	dc	H'65
	dc	H'6C
	dc	H'64
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_hfpHandleIndicatorStatus:
	enterl	#13
?LBB_hfpHandleIndicatorStatus:
	st	AH,@(H'0008,Y)
?LBB17:
	st	AL,@(H'0009,Y)
	add	AL,#H'0009
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_AH
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0009,X)
	bsr	_getIndicatorValue
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0002,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0003,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0004,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0005,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0006,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0008,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0007,X)
	bsr	_getIndicatorValue
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(0,Y)
	bsr	_sendIndicatorServiceToApp
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_hfpHandleCallIndication
	ld	X,@(H'000A,Y)
	tst	@(H'0002,X)
	beq	?L100
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleCallSetupIndication
?L100:
	ld	X,@(H'000A,Y)
	tst	@(H'0004,X)
	beq	?L101
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0004,Y)
	bsr	_sendIndicatorSignalToApp
?L101:
	ld	X,@(H'000A,Y)
	tst	@(H'0005,X)
	beq	?L102
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0005,Y)
	bsr	_sendIndicatorRoamToApp
?L102:
	ld	X,@(H'000A,Y)
	tst	@(H'0006,X)
	beq	?L103
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	bsr	_sendIndicatorBattChgToApp
?L103:
	ld	X,@(H'000A,Y)
	tst	@(H'0007,X)
	beq	?L99
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_hfpHandleCallHeldIndication
?L99:
?LBE17:
?LBE_hfpHandleIndicatorStatus:
	leavel	#13
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_hfpHandleIndicatorStatusUpdate:
	enterl	#13
?LBB_hfpHandleIndicatorStatusUpdate:
	st	AH,@(H'0009,Y)
?LBB18:
	st	AL,@(H'000A,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0009
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_memcpy
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0001,Y)
	bne	?L106
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	_sendIndicatorServiceToApp
	bra	(?L105)
?L106:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0002,Y)
	bne	?L108
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_hfpHandleCallIndication
	bra	(?L105)
?L108:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0003,Y)
	beq	?L111
	cmp	AL,@(H'0004,Y)
	bne	?L110
?L111:
	ld	AL,@(H'000A,Y)
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0001,X)
	bsr	$_hfpHandleCallSetupIndication
	bra	(?L105)
?L110:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0005,Y)
	bne	?L113
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	_sendIndicatorSignalToApp
	bra	(?L105)
?L113:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0006,Y)
	bne	?L115
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	_sendIndicatorRoamToApp
	bra	(?L105)
?L115:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0007,Y)
	bne	?L117
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	_sendIndicatorBattChgToApp
	bra	(?L105)
?L117:
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0008,Y)
	bne	?L119
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_hfpHandleCallHeldIndication
	bra	(?L105)
?L119:
	ld	X,@(H'000A,Y)
	tst	@(H'0011,X)
	beq	?L105
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(0,X)
	bsr	_sendUnhandledIndicatorToApp
?L105:
?LBE18:
?LBE_hfpHandleIndicatorStatusUpdate:
	leavel	#13
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
_hfpUpdateIndicatorsCommand:
	enterl	#2
?LBB_hfpUpdateIndicatorsCommand:
	ld	X,@$XAP_AL
?LBB19:
	cmp	AH,#H'0000
	beq	?L130
	tst	@(H'0002,Y)
	beq	?L130
?LBB20:
	ld	AL,@$XAP_AH
	add	AL,@$XAP_AH
	add	AL,#-H'0002
	add	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L132
	ld	AL,#H'0031
	bra	(?L133)
?L132:
	ld	AL,#H'0020
?L133:
	st	AL,@(0,X)
?L130:
?LBE20:
?LBE19:
?LBE_hfpUpdateIndicatorsCommand:
	leavel	#2
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
	.SEG	CONST
_atCmd?0?:
	dc	H'0041
	dc	H'0054
	dc	H'002B
	dc	H'0042
	dc	H'0049
	dc	H'0041
	dc	H'003D
_atCmdSeparator?1?:
	dc	H'0030
	dc	H'002C
_atEnd?2?:
	dc	H'0030
	dc	H'000D
	dc	H'0000
	.CODE
$_hfpHandleSetActiveIndicatorsReq:
	enterl	#10
?LBB_hfpHandleSetActiveIndicatorsReq:
	st	AL,@(H'0002,Y)
?LBB21:
	bsr	$_hfpLinkIsHfp106
	cmp	AL,#H'0000
	beq	?L136
	ld	X,@(H'0002,Y)
?LBB22:
	ld	AH,@(H'0013,X)
	add	AH,@$XAP_AH
	add	AH,#H'0008
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	bsr	$_malloc
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L135
?LBB23:
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#(_atCmd?0?)
	bsr	$_memmove
	ld	AL,@(H'0004,Y)
	add	AL,#H'0007
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	add	AL,@(H'0003,Y)
	add	AL,#-H'0003
	ld	X,@(H'0005,Y)
	cmp	X,@$XAP_AL
	bcc	?L151
	ld	AL,@(H'0004,Y)
	add	AL,@(H'0003,Y)
	add	AL,#-H'0003
	st	AL,@(H'0007,Y)
?L142:
	ld	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#(_atCmdSeparator?1?)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	cmp	AL,@(H'0007,Y)
	bcs	?L142
?L151:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#(_atEnd?2?)
	bsr	$_memmove
	ld	X,@(H'0004,Y)
	add	X,#H'0007
	st	X,@(H'0005,Y)
	ld	X,@$_theHfp
	ld	AH,@(H'0006,X)
	lsr	#H'000E
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0009,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	X,@$_theHfp
	ld	AH,@(H'0006,X)
	lsr	#H'000C
	and	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000D,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	X,@$_theHfp
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000E,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	X,@$_theHfp
	ld	AH,@(H'0006,X)
	lsr	#H'0008
	and	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000F,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000A,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000B,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0010,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000C,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	AH,#H'0000
	st	AH,@(H'0006,Y)
	ld	X,@(H'0002,Y)
	cmp	AH,@(H'0011,X)
	bcc	?L153
?L147:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0012,X)
	ld	X,@(H'0006,Y)
	add	X,@$XAP_AL
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(0,X)
	bsr	_hfpUpdateIndicatorsCommand
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	X,@(H'0002,Y)
	cmp	AL,@(H'0011,X)
	bcs	?L147
?L153:
	ld	AL,@(H'0004,Y)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0022
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,@(H'0004,Y)
	bsr	$_free
?LBE23:
	bra	(?L135)
?L136:
?LBE22:
	ld	AL,#H'001C
	ld	AH,@(H'0002,Y)
	bsr	$_hfpSendCommonInternalMessage
?L135:
?LBE21:
?LBE_hfpHandleSetActiveIndicatorsReq:
	leavel	#10
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
$_hfpHandleBiaAtAck:
	enterl	#2
?LBB_hfpHandleBiaAtAck:
	ld	AH,@$XAP_AL
	ld	AL,#H'001C
	bsr	$_hfpSendCommonInternalMessage
?LBE_hfpHandleBiaAtAck:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 173 used[1] = 67 total = 240
;# Function pattern *movqi3 used[0] = 217 total = 217
;# Function pattern *movqi8 used[0] = 28 total = 28
;# Function pattern *addqi0 used[0] = 9 total = 9
;# Function pattern *addqi2 used[0] = 39 used[2] = 6 total = 45
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 25 total = 25
;# Function pattern *call1 used[0] = 38 total = 38
;# Function pattern *call_value1 used[0] = 46 total = 46
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 20 used[1] = 14 total = 34
;# Function pattern movstrqi+4 used[1] = 1 used[2] = 1 total = 2
;# Function pattern movstrqi+5 used[0] = 30 total = 30
	MODULE	hfp_multiple_calls_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_hfpCheckCallActionState:
	enterl	#2
?LBB_hfpCheckCallActionState:
	st	AH,@H'fff9
	ld	AH,@(H'0002,Y)
	st	AH,@H'fff8
	ld	X,@H'fff9
	cmp	X,#(H'0001+H'0004)
	bcc	?L2
	ld	X,@(?JTBASE47,X)
	brxl
	.SEG	CONST
?JTBASE47:
	.CODE
?L47:
	.SEG	CONST
	dc	lwrd(?L3-?L47)
	dc	lwrd(?L11-?L47)
	dc	lwrd(?L22-?L47)
	dc	lwrd(?L34-?L47)
	dc	lwrd(?L40-?L47)
	.CODE
?L3:
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	add	AH,#-H'0005
	cmp	AH,#(H'0001+H'0003)
	bcc	?L2
	ld	AL,#H'0013
	bra	(?L48)
?L11:
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	add	AH,#-H'0005
	cmp	AH,#(H'0001+H'0004)
	bcc	?L2
	tst	@H'fff8
	beq	?L18
	ld	AL,#H'0015
	bra	(?L48)
?L18:
	ld	AL,#H'0014
	bra	(?L48)
?L22:
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	add	AH,#-H'0004
	cmp	AH,#(H'0001+H'0005)
	bcc	?L2
	tst	@H'fff8
	beq	?L30
	ld	AL,#H'0017
	bra	(?L48)
?L30:
	ld	AL,#H'0016
	bra	(?L48)
?L34:
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0005
	beq	?L37
	cmp	AH,#H'0007
	bne	?L2
?L37:
	ld	AL,#H'0018
	bra	(?L48)
?L40:
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0006
	and	AH,#H'000F
	cmp	AH,#H'0007
	beq	?L43
	cmp	AH,#H'0009
	bne	?L2
?L43:
	ld	AL,#H'0019
?L48:
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_hfpCheckCallActionState:
	leavel	#2
$_hfpSendChldCmd:
	enterl	#21
?LBB_hfpSendChldCmd:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(0,X)
	st	AL,@(H'0010,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0011,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0012,Y)
	ld	AL,#H'0001
	st	AL,@(H'000F,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000F
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0011,Y)
	bsr	_hfpCheckCallActionState
	cmp	AL,#H'0000
	beq	?L54
	ld	X,@$_theHfp
	ld	AH,@(H'0003,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L54
	ld	X,@(H'0010,Y)
	ld	X,@(H'0008,X)
	ld	AL,@$XAP_UXL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L54
	tst	@(H'0012,Y)
	beq	?L56
	ld	AL,@$XAP_AH
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L54
	ld	AL,@$XAP_UXL
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L54
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_sprintf
	bra	(?L59)
?L56:
	ld	AL,#(?LC1)
	st	AL,@(0,Y)
	ld	X,@(H'0011,Y)
	st	X,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_sprintf
?L59:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0010,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L53)
?L54:
	ld	AL,#H'0000
?L53:
?LBE2:
?LBE_hfpSendChldCmd:
	leavel	#21
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'48
	dc	H'4C
	dc	H'44
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'48
	dc	H'4C
	dc	H'44
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpHandleChldAtAck:
	enterl	#6
?LBB_hfpHandleChldAtAck:
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
?LBB3:
	cmp	AH,#H'0003
	bne	?L61
	cmp	AL,#H'0000
	bne	?L60
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleCallMultiparty
	bra	(?L60)
?L61:
	cmp	AH,#H'0001
	bne	?L60
?LBB4:
	st	AH,@(H'0002,Y)
	cmp	AL,#H'0001
	bne	?L65
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	_hfpCheckCallActionState
	cmp	AL,#H'0000
	beq	?L65
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001D,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L65
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleTerminateCall
	and	AL,#H'0001
	asl	#H'000E
	ld	X,@(H'0003,Y)
	ld	AH,@(H'001D,X)
	and	AH,#-H'4001
	or	AH,@$XAP_AL
	st	AH,@(H'001D,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L60
?L65:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'001D,X)
	and	AL,#-H'4001
	st	AL,@(H'001D,X)
?L60:
?LBE4:
?LBE3:
?LBE_hfpHandleChldAtAck:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_hfpHandleCallWaitingNotificationEnable:
	enterl	#16
?LBB_hfpHandleCallWaitingNotificationEnable:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB5:
	ld	X,@(0,X)
	st	X,@(H'000D,Y)
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L72
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L72
?LBB6:
	ld	AL,#(?LC2)
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0012
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L71)
?L72:
?LBE6:
	ld	AL,#H'0000
?L71:
?LBE5:
?LBE_hfpHandleCallWaitingNotificationEnable:
	leavel	#16
	.SEG	CONST
?LC2:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'43
	dc	H'57
	dc	H'41
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
_sendCallWaitingNotificationToApp:
	enterl	#6
?LBB_sendCallWaitingNotificationToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
?LBB7:
	cmp	AH,#H'001F
	bcz	?L74
	ld	AL,#H'001F
	st	AL,@(H'0006,Y)
?L74:
	ld	AL,#H'0020
	sub	AL,@(H'0006,Y)
	ld	AH,@(H'0008,Y)
	cmp	AH,@$XAP_AL
	bcs	?L75
	ld	AL,#H'001F
	sub	AL,@(H'0006,Y)
	st	AL,@(H'0008,Y)
?L75:
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L73
	ld	AL,@(H'0006,Y)
?LBB8:
	add	AL,@(H'0008,Y)
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpConvertNumberType
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AH,#H'0000
	st	AH,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0005,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	add	AL,@(H'0004,X)
	add	AL,#H'0006
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	add	AH,@$XAP_AL
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A0F
	bsr	$_MessageSend
?L73:
?LBE8:
?LBE7:
?LBE_sendCallWaitingNotificationToApp:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_hfpHandleCallWaitingNotification:
	enterl	#6
?LBB_hfpHandleCallWaitingNotification:
	ld	X,@$XAP_AH
	ld	AH,@(H'0003,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	bsr	_sendCallWaitingNotificationToApp
?LBE_hfpHandleCallWaitingNotification:
	leavel	#6
$_hfpHandleCallWaitingNotificationWithName:
	enterl	#6
?LBB_hfpHandleCallWaitingNotificationWithName:
	ld	X,@$XAP_AH
	ld	AH,@(H'0006,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0007,X)
	bsr	_sendCallWaitingNotificationToApp
?LBE_hfpHandleCallWaitingNotificationWithName:
	leavel	#6
$_hfpHandleCallWaitingNotificationIllegal:
	enterl	#6
?LBB_hfpHandleCallWaitingNotificationIllegal:
	ld	X,@$XAP_AH
	ld	AH,@(H'0003,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	bsr	_sendCallWaitingNotificationToApp
?LBE_hfpHandleCallWaitingNotificationIllegal:
	leavel	#6
	ENDMOD

;# Function pattern *movqi2 used[0] = 78 used[1] = 10 total = 88
;# Function pattern *movqi3 used[0] = 93 total = 93
;# Function pattern *addqi0 used[0] = 9 total = 9
;# Function pattern *addqi2 used[0] = 11 used[2] = 2 total = 13
;# Function pattern *andqi3 used[0] = 17 total = 17
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 7 total = 7
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 13 total = 13
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 12 used[1] = 3 total = 15
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 9 total = 9
	MODULE	hfp_network_operator_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleNetworkOperator:
	enterl	#6
?LBB_handleNetworkOperator:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
?LBB2:
	cmp	AH,#H'001F
	bcz	?L2
	ld	AL,#H'001F
	st	AL,@(H'0007,Y)
?L2:
	tst	@(H'0006,Y)
	beq	?L3
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
?L3:
	ld	AL,@(H'0001,Y)
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@(H'0007,Y)
?LBB3:
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	add	X,@(H'0007,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	X,@$_theHfp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A1D
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_handleNetworkOperator:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sendNetworkOperatorReportingFormat:
	enterl	#18
?LBB_sendNetworkOperatorReportingFormat:
	st	AL,@(H'000F,Y)
?LBB4:
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'001F
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000F,Y)
	bsr	$_hfpSendAtCmd
?LBE4:
?LBE_sendNetworkOperatorReportingFormat:
	leavel	#18
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4F
	dc	H'50
	dc	H'53
	dc	H'3D
	dc	H'33
	dc	H'2C
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_sendNetworkOperatorRequest:
	enterl	#15
?LBB_sendNetworkOperatorRequest:
	st	AL,@(H'000C,Y)
?LBB5:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC1)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0020
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_hfpSendAtCmd
?LBE5:
?LBE_sendNetworkOperatorRequest:
	leavel	#15
	.SEG	CONST
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4F
	dc	H'50
	dc	H'53
	dc	H'3F
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpHandleNetworkOperatorReq:
	enterl	#2
?LBB_hfpHandleNetworkOperatorReq:
	ld	X,@$XAP_AL
	ld	AH,@(H'001D,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L9
	ld	AL,@$XAP_UXL
	bsr	_sendNetworkOperatorRequest
	bra	(?L8)
?L9:
	ld	AL,@$XAP_UXL
	bsr	_sendNetworkOperatorReportingFormat
?L8:
?LBE_hfpHandleNetworkOperatorReq:
	leavel	#2
$_hfpHandleCopsFormatAtAck:
	enterl	#2
?LBB_hfpHandleCopsFormatAtAck:
	ld	X,@$XAP_AL
	cmp	AH,#H'0000
	bne	?L12
	ld	AL,@(H'001D,X)
	or	AL,#-H'8000
	st	AL,@(H'001D,X)
	ld	AL,@$XAP_UXL
	bsr	_sendNetworkOperatorRequest
?L12:
	ld	AL,#H'0000
?LBE_hfpHandleCopsFormatAtAck:
	leavel	#2
$_hfpHandleNetworkOperatorMode:
	enterl	#5
?LBB_hfpHandleNetworkOperatorMode:
	ld	X,@$XAP_AH
?LBB6:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	bsr	_handleNetworkOperator
?LBE6:
?LBE_hfpHandleNetworkOperatorMode:
	leavel	#5
$_hfpHandleNetworkOperatorModeName:
	enterl	#5
?LBB_hfpHandleNetworkOperatorModeName:
	ld	X,@$XAP_AH
?LBB7:
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	bsr	_handleNetworkOperator
?LBE7:
?LBE_hfpHandleNetworkOperatorModeName:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 36 used[1] = 5 total = 41
;# Function pattern *movqi3 used[0] = 29 total = 29
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 1 total = 4
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	hfp_nrec_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleNrEcDisable:
	enterl	#17
?LBB_hfpHandleNrEcDisable:
	st	AL,@(H'000D,Y)
?LBB2:
	ld	AL,@$_theHfp
	st	AL,@(H'000E,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0008,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L2
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0010
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_hfpSendAtCmd
?LBE3:
	bra	(?L1)
?L2:
	ld	AL,#H'0018
	ld	AH,@(H'000D,Y)
	bsr	$_hfpSendCommonInternalMessage
?L1:
?LBE2:
?LBE_hfpHandleNrEcDisable:
	leavel	#17
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'4E
	dc	H'52
	dc	H'45
	dc	H'43
	dc	H'3D
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleNrecAtAck:
	enterl	#2
?LBB_hfpHandleNrecAtAck:
	ld	AH,@$XAP_AL
	ld	AL,#H'0018
	bsr	$_hfpSendCommonInternalMessage
?LBE_hfpHandleNrecAtAck:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 2 total = 10
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	hfp_ok
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_extendedStatusCode:
	dc	H'0002
	dc	H'0003
	dc	H'0001
	dc	H'0004
	dc	H'0005
	dc	H'0006
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0007
	dc	H'0008
	dc	H'0009
	dc	H'000A
	dc	H'000B
	dc	H'0001
	dc	H'000C
	dc	H'000D
	dc	H'000E
	dc	H'0001
	dc	H'000F
	dc	H'0010
	dc	H'0001
	dc	H'0011
	dc	H'0012
	dc	H'0013
	dc	H'0014
	dc	H'0015
	dc	H'0001
	dc	H'0001
	dc	H'0016
	dc	H'0017
	dc	H'0018
	.CODE
_convertErrorCode:
	enterl	#2
?LBB_convertErrorCode:
	ld	X,@$XAP_AL
	cmp	AL,#(H'0001+H'0020)
	bcc	?L2
	ld	AL,@(_extendedStatusCode,X)
	bra	(?L1)
?L2:
	ld	AL,#H'0001
?L1:
?LBE_convertErrorCode:
	leavel	#2
_atCmdAckReceived:
	enterl	#8
?LBB_atCmdAckReceived:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	bsr	$_hfpGetLinkSink
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0007
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_MessageCancelAll
	ld	X,@(H'0001,Y)
	ld	AH,@(H'001C,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	cmp	AL,#(H'0001+H'002B)
	bcc	?L4
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE28,X)
	brxl
	.SEG	CONST
?JTBASE28:
	.CODE
?L28:
	.SEG	CONST
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L6-?L28)
	dc	lwrd(?L8-?L28)
	dc	lwrd(?L9-?L28)
	dc	lwrd(?L10-?L28)
	dc	lwrd(?L11-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L14-?L28)
	dc	lwrd(?L17-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L15-?L28)
	dc	lwrd(?L16-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L18-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L21-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L22-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L23-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L20-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L19-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L13-?L28)
	dc	lwrd(?L24-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L4-?L28)
	dc	lwrd(?L25-?L28)
	dc	lwrd(?L7-?L28)
	dc	lwrd(?L12-?L28)
	.CODE
?L6:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleBrsfAtAck
	bra	(?L4)
?L7:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleBacAtAck
	bra	(?L4)
?L8:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleCindTestAtAck
	bra	(?L4)
?L9:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleCindReadAtAck
	bra	(?L4)
?L10:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleCmerAtAck
	bra	(?L4)
?L11:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpSlcCheckAtAck
	bra	(?L4)
?L12:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleBccAtAck
	bra	(?L4)
?L13:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleBcsAtAck
	bra	(?L4)
?L14:
	ld	AL,#H'5A10
	bra	(?L31)
?L15:
	ld	AL,#H'5A11
	bra	(?L31)
?L16:
	ld	AL,#H'5A12
	bra	(?L31)
?L17:
	ld	AL,#H'5A13
?L31:
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleCallDialComplete
	bra	(?L4)
?L18:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleNrecAtAck
	bra	(?L4)
?L19:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleBiaAtAck
	bra	(?L4)
?L20:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleCopsFormatAtAck
	st	AL,@(H'0004,Y)
	bra	(?L4)
?L21:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bra	(?L30)
?L22:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0003
?L30:
	bsr	$_hfpHandleChldAtAck
	bra	(?L4)
?L23:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpHandleBtrhStatusAtAck
	bra	(?L4)
?L24:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpCsrFeaturesHandleCsrSfAtAck
	bra	(?L4)
?L25:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_hfpCsrFeaturesHandleGetSmsAtAck
?L4:
	tst	@(H'0004,Y)
	beq	?L29
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_hfpSendCommonCfmMessageToApp
?L29:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'001C,X)
	and	AL,#-H'1FE1
	st	AL,@(H'001C,X)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_SinkClaim
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_SinkMap
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_hfpSendNextAtCmd
?LBE2:
?LBE_atCmdAckReceived:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpHandleOk:
	enterl	#2
?LBB_hfpHandleOk:
	ld	AH,#H'0000
	bsr	_atCmdAckReceived
?LBE_hfpHandleOk:
	leavel	#2
$_hfpHandleError:
	enterl	#2
?LBB_hfpHandleError:
	ld	AH,#H'0001
	bsr	_atCmdAckReceived
?LBE_hfpHandleError:
	leavel	#2
$_hfpHandleExtendedError:
	enterl	#4
?LBB_hfpHandleExtendedError:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB3:
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L34
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	_convertErrorCode
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	_atCmdAckReceived
?L34:
?LBE3:
?LBE_hfpHandleExtendedError:
	leavel	#4
$_hfpHandleWaitAtTimeout:
	enterl	#2
?LBB_hfpHandleWaitAtTimeout:
	ld	AH,#H'001E
	bsr	_atCmdAckReceived
?LBE_hfpHandleWaitAtTimeout:
	leavel	#2
$_hfpHandleNoCarrierInd:
; leaf function with empty stack frame
?LBB_hfpHandleNoCarrierInd:
?LBE_hfpHandleNoCarrierInd:
	rts
$_handleUnrecognised:
	enterl	#6
?LBB_handleUnrecognised:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	cmp	AH,#H'0000
	beq	?L38
	ld	AL,@$XAP_AH
?LBB5:
	add	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L38
	ld	AL,@(H'0006,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_memmove
	ld	X,@$_theHfp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A18
	bsr	$_MessageSend
?L38:
?LBE5:
?LBE4:
?LBE_handleUnrecognised:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 28 used[1] = 42 total = 70
;# Function pattern *movqi3 used[0] = 30 total = 30
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 20 total = 20
;# Function pattern *call1 used[0] = 21 total = 21
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 1 total = 4
;# Function pattern movstrqi+4 used[1] = 2 total = 2
	MODULE	hfp_receive_data
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleReceivedData:
	enterl	#4
?LBB_hfpHandleReceivedData:
	st	AL,@(0,Y)
?LBB2:
	bsr	$_StreamSinkFromSource
	bsr	$_hfpGetLinkFromSink
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(0,Y)
	bsr	$_SourceSize
	bra	(?L3)
?L2:
	ld	AL,#H'0000
?L3:
	cmp	AL,#H'0000
	beq	?L5
?L8:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_parseSource
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@(0,Y)
	bsr	$_SourceSize
	cmp	AL,#H'0000
	bne	?L8
?L5:
?LBE2:
?LBE_hfpHandleReceivedData:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 used[1] = 4 total = 6
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 4 total = 4
	MODULE	hfp_response_hold_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleBtrhStatusReq:
	enterl	#15
?LBB_hfpHandleBtrhStatusReq:
	st	AL,@(H'000C,Y)
?LBB2:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'001B
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_hfpSendAtCmd
?LBE2:
?LBE_hfpHandleBtrhStatusReq:
	leavel	#15
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'54
	dc	H'52
	dc	H'48
	dc	H'3F
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpHandleBtrhStatusAtAck:
	enterl	#3
?LBB_hfpHandleBtrhStatusAtAck:
	st	AL,@(0,Y)
	ld	AL,#H'001A
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
	ld	AL,#H'001D
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
?LBE_hfpHandleBtrhStatusAtAck:
	leavel	#3
$_hfpHandleBtrhReq:
	enterl	#18
?LBB_hfpHandleBtrhReq:
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,@(0,X)
	st	AL,@(H'000D,Y)
	ld	AH,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'000E,Y)
	ld	X,#H'0001
	st	X,@(H'000F,Y)
	cmp	AH,#H'0001
	beq	?L7
	cmp	AH,#H'0001
	bcs	?L5
	cmp	AH,#H'0002
	beq	?L9
	bra	(?L4)
?L5:
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0040
	bne	?L4
	ld	AL,#H'001C
	bra	(?L14)
?L7:
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0080
	bne	?L4
	ld	AL,#H'001D
	bra	(?L14)
?L9:
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0080
	bne	?L4
	ld	AL,#H'001E
?L14:
	st	AL,@(H'000F,Y)
	ld	AL,#H'0001
	st	AL,@(H'000E,Y)
?L4:
	tst	@(H'000E,Y)
	beq	?L13
?LBB4:
	ld	AL,#(?LC1)
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'000F,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_hfpSendAtCmd
?L13:
?LBE4:
?LBE3:
	ld	AL,@(H'000E,Y)
?LBE_hfpHandleBtrhReq:
	leavel	#18
	.SEG	CONST
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'54
	dc	H'52
	dc	H'48
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_hfpHandleResponseHold:
	enterl	#4
?LBB_hfpHandleResponseHold:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB5:
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L21
	ld	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_hfpHandleCallResponseHoldIndication
?L21:
?LBE5:
?LBE_hfpHandleResponseHold:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 6 total = 25
;# Function pattern *movqi3 used[0] = 23 total = 23
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	hfp_rfc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_hfpHandleRfcommAppInd:
	enterl	#9
?LBB_hfpHandleRfcommAppInd:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A02
	bsr	$_MessageSend
?LBE2:
?LBE_hfpHandleRfcommAppInd:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpHandleRfcommConnectInd:
	enterl	#16
?LBB_hfpHandleRfcommConnectInd:
	st	AL,@(H'000A,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpGetLinkFromBdaddr
	st	AL,@(H'000C,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0004,X)
	bsr	$_hfpGetServiceFromChannel
	st	AL,@(H'000D,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0005,X)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L2
	tst	@(H'000D,Y)
	beq	?L4
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L4
	tst	@(H'000C,Y)
	beq	?L5
?LBB4:
	ld	AL,@(H'000C,Y)
	ld	AH,#H'0001
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0010
	bne	?L6
	ld	AL,@$_theHfp
	bsr	$_MessageCancelFirst
	cmp	AL,#H'0000
	bne	?L18
?L6:
	ld	X,@(H'000C,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L10
	cmp	AH,#(H'0001+H'0002)
	bcc	?L14
	cmp	AH,#H'0000
	beq	?L18
	bra	(?L4)
?L14:
	cmp	AH,#H'0003
	beq	?L11
	bra	(?L4)
?L10:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
	bra	(?L18)
?L11:
?LBB5:
	ld	AL,#H'0006
	st	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000A,Y)
	bsr	$_memcpy
	ld	X,@$XAP_UY
	add	X,#H'0004
	st	X,@(0,Y)
	ld	AL,#H'01F4
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@$_theHfp
	ld	AH,#H'5046
	bsr	$_MessageSendLater
	bra	(?L2)
?L5:
?LBE5:
?LBE4:
	bsr	$_hfpGetIdleLink
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L4
?L18:
	ld	AL,#H'0001
	st	AL,@(H'000B,Y)
?L4:
	tst	@(H'000B,Y)
	beq	?L17
	ld	X,@(H'000A,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_hfpLinkSetup
?L17:
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@$_theHfp
	ld	AH,@(H'000B,Y)
	bsr	$_ConnectionRfcommConnectResponse
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	_hfpHandleRfcommAppInd
?L2:
?LBE3:
?LBE_hfpHandleRfcommConnectInd:
	leavel	#16
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
_hfpHandleRfcommConnectCfm:
	enterl	#9
?LBB_hfpHandleRfcommConnectCfm:
	st	AL,@(H'0006,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L22
	ld	AL,@(H'0009,Y)
	cmp	AL,#(H'0001+H'000B)
	bcc	?L38
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE39,X)
	brxl
	.SEG	CONST
?JTBASE39:
	.CODE
?L39:
	.SEG	CONST
	dc	lwrd(?L25-?L39)
	dc	lwrd(?L28-?L39)
	dc	lwrd(?L38-?L39)
	dc	lwrd(?L31-?L39)
	dc	lwrd(?L31-?L39)
	dc	lwrd(?L22-?L39)
	dc	lwrd(?L32-?L39)
	dc	lwrd(?L38-?L39)
	dc	lwrd(?L33-?L39)
	dc	lwrd(?L34-?L39)
	dc	lwrd(?L38-?L39)
	dc	lwrd(?L38-?L39)
	.CODE
?L25:
?LBB7:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,#-H'7FDF
	bsr	$_MessageSend
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0005
	bsr	$_hfpSetLinkSlcState
	ld	AL,@(H'0006,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L26
	ld	AL,#H'0000
	bra	(?L24)
?L26:
	ld	AL,@(H'0006,Y)
	bsr	$_hfpHandleBrsfRequest
	bra	(?L22)
?L28:
?LBE7:
	ld	AL,@(H'0006,Y)
	bsr	$_hfpSetLinkSink
	bra	(?L22)
?L31:
	ld	AL,#H'0005
	bra	(?L24)
?L32:
	ld	AL,#H'0007
	bra	(?L24)
?L33:
	ld	AL,#H'0008
	bra	(?L24)
?L34:
	ld	AL,#H'0006
	bra	(?L24)
?L38:
	ld	AL,#H'0004
?L24:
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
?L22:
?LBE6:
?LBE_hfpHandleRfcommConnectCfm:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_hfpHandleRfcommServerConnectCfm:
	enterl	#4
?LBB_hfpHandleRfcommServerConnectCfm:
	st	AL,@(H'0001,Y)
?LBB8:
	add	AL,#H'0004
	bsr	$_hfpGetLinkFromBdaddr
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,X)
	bsr	_hfpHandleRfcommConnectCfm
?LBE8:
?LBE_hfpHandleRfcommServerConnectCfm:
	leavel	#4
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_hfpHandleRfcommClientConnectCfm:
	enterl	#4
?LBB_hfpHandleRfcommClientConnectCfm:
	st	AL,@(H'0001,Y)
?LBB9:
	add	AL,#H'0004
	bsr	$_hfpGetLinkFromBdaddr
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,X)
	bsr	_hfpHandleRfcommConnectCfm
?LBE9:
?LBE_hfpHandleRfcommClientConnectCfm:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_hfpHandleRfcommPortnegInd:
	enterl	#3
?LBB_hfpHandleRfcommPortnegInd:
	ld	X,@$XAP_AL
	tst	@(H'0001,X)
	bne	?L43
	add	AL,#H'0002
	bra	(?L44)
?L43:
	ld	AL,#H'0000
?L44:
	st	AL,@(0,Y)
	ld	AL,@$_theHfp
	ld	AH,@(0,X)
	bsr	$_ConnectionRfcommPortNegResponse
?LBE_hfpHandleRfcommPortnegInd:
	leavel	#3
_hfpHandleRfcommDisconnect:
	enterl	#5
?LBB_hfpHandleRfcommDisconnect:
	st	AH,@(H'0001,Y)
?LBB10:
	bsr	$_hfpGetLinkFromSink
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	and	AH,#H'0007
	cmp	AH,#(H'0001+H'0005)
	bcc	?L46
	ld	AL,@$XAP_UXL
	ld	AH,#H'0007
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_MessageCancelAll
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_hfpSendSlcConnectCfmToApp
	bra	(?L45)
?L46:
	ld	X,@(H'0002,Y)
	tst	@(H'0014,X)
	beq	?L48
	ld	AL,@$XAP_UXL
	bsr	$_hfpManageSyncDisconnect
?L48:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	beq	?L52
	cmp	AL,#H'0002
	bcs	?L51
	cmp	AL,#H'000C
	beq	?L53
	bra	(?L54)
?L51:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bra	(?L56)
?L52:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0003
	bra	(?L56)
?L53:
	ld	AL,@(H'0002,Y)
	bsr	$_hfpHandleRfcommLinkLoss
	bra	(?L45)
?L54:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0004
?L56:
	bsr	$_hfpSendSlcDisconnectIndToApp
?L45:
?LBE10:
?LBE_hfpHandleRfcommDisconnect:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_hfpHandleRfcommDisconnectInd:
	enterl	#3
?LBB_hfpHandleRfcommDisconnectInd:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	_hfpHandleRfcommDisconnect
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bsr	$_ConnectionRfcommDisconnectResponse
?LBE_hfpHandleRfcommDisconnectInd:
	leavel	#3
$_hfpHandleRfcommDisconnectCfm:
	enterl	#2
?LBB_hfpHandleRfcommDisconnectCfm:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'000B
	beq	?L61
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	_hfpHandleRfcommDisconnect
?L61:
?LBE_hfpHandleRfcommDisconnectCfm:
	leavel	#2
$_hfpHandleRfcommLinkLoss:
	enterl	#6
?LBB_hfpHandleRfcommLinkLoss:
	st	AL,@(H'0003,Y)
?LBB11:
	ld	X,@$_theHfp
	ld	AH,@(H'0007,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L65
?LBB12:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0003
	bsr	$_hfpGetLinkTimeoutMessage
	st	AL,@H'fff8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,@$_theHfp
	st	AH,@(-3,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0007,X)
	lsr	#H'0008
	asr	#H'0010
	st	AH,@(-1,Y)
	st	AL,@(-2,Y)
	ld	AL,@$XAP_AH
	smult	#-H'15A0
	ld	X,@$XAP_AL
	ld	AL,@(-2,Y)
	umult	#-H'15A0
	add	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(-3,Y)
	ld	AH,@H'fff8
	bsr	$_MessageSendLater
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	and	AL,#-H'0031
	or	AL,#H'0010
	st	AL,@(H'0006,X)
?L65:
?LBE12:
	ld	AL,@(H'0003,Y)
	bsr	$_hfpHandleRfcommLinkLossReconnect
?LBE11:
?LBE_hfpHandleRfcommLinkLoss:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_hfpHandleRfcommLinkLossReconnect:
	enterl	#15
?LBB_hfpHandleRfcommLinkLossReconnect:
	st	AL,@(H'000A,Y)
	ld	X,@$XAP_AL
?LBB13:
	ld	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0010
	bne	?L67
	ld	AL,@$XAP_UXL
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_hfpGetLinkBdaddr
	cmp	AL,#H'0000
	beq	?L67
	ld	X,@(H'000A,Y)
?LBB14:
	ld	X,@(H'0005,X)
	st	X,@(H'000B,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,#H'0000
	bsr	$_hfpLinkReset
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0006,X)
	and	AL,#-H'0031
	or	AL,#H'0010
	st	AL,@(H'000C,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	asl	#H'0001
	ld	X,@(H'000C,Y)
	and	X,#-H'000F
	or	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	and	AL,#H'0003
	asl	#H'000D
	ld	AH,@$XAP_UXL
	and	AH,#-H'6001
	or	AH,@$XAP_AL
	ld	X,@(H'000A,Y)
	st	AH,@(H'0006,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'000B,Y)
	bsr	$_hfpGetProfileServerChannel
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A03
	bsr	$_MessageSend
?LBE14:
	bra	(?L66)
?L67:
	ld	AL,@(H'000A,Y)
	ld	AH,#H'0001
	bsr	$_hfpSendSlcDisconnectIndToApp
?L66:
?LBE13:
?LBE_hfpHandleRfcommLinkLossReconnect:
	leavel	#15
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_hfpHandleRfcommLinkLossComplete:
	enterl	#14
?LBB_hfpHandleRfcommLinkLossComplete:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB15:
	cmp	AH,#H'0000
	bne	?L71
?LBB16:
	ld	AL,#H'0002
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0005,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A03
	bsr	$_MessageSend
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	and	AL,#-H'0031
	st	AL,@(H'0006,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0003
	bsr	$_hfpGetLinkTimeoutMessage
	st	AL,@H'fff8
	ld	AL,@$_theHfp
	ld	AH,@H'fff8
	bsr	$_MessageCancelFirst
?LBE16:
	bra	(?L70)
?L71:
?LBB17:
	ld	AL,#H'0000
	st	AL,@(H'000B,Y)
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0001
	bsr	$_hfpGetLinkTimeoutMessage
	st	AL,@H'fff8
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0010
	bne	?L73
	ld	X,@$_theHfp
	ld	AL,@(H'0007,X)
	and	AL,#H'00FF
	smult	#H'03E8
	st	AH,@(H'000A,Y)
	st	AL,@(H'000B,Y)
?L73:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_theHfp
	ld	AH,@H'fff8
	bsr	$_MessageSendLater
?L70:
?LBE17:
?LBE15:
?LBE_hfpHandleRfcommLinkLossComplete:
	leavel	#14
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE15
$_hfpHandleRfcommLinkLossAbort:
	enterl	#4
?LBB_hfpHandleRfcommLinkLossAbort:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB18:
	ld	AL,@(H'0006,X)
	or	AL,#H'0030
	st	AL,@(H'0006,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0001
	bsr	$_hfpGetLinkTimeoutMessage
	ld	AH,@$XAP_AL
	ld	AL,@$_theHfp
	bsr	$_MessageCancelFirst
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(0,Y)
	bsr	$_hfpHandleRfcommLinkLossReconnect
	bra	(?L75)
?L76:
	tst	@(H'0001,Y)
	beq	?L75
	ld	AL,#H'0005
	ld	AH,@(0,Y)
	bsr	$_hfpSendCommonInternalMessage
?L75:
?LBE18:
?LBE_hfpHandleRfcommLinkLossAbort:
	leavel	#4
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_hfpHandleRfcommLinkLossTimeout:
	enterl	#3
?LBB_hfpHandleRfcommLinkLossTimeout:
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_hfpHandleRfcommLinkLossAbort
	ld	X,@(0,Y)
	ld	AL,@(H'0006,X)
	and	AL,#-H'0031
	or	AL,#H'0020
	st	AL,@(H'0006,X)
?LBE_hfpHandleRfcommLinkLossTimeout:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 93 used[1] = 34 total = 127
;# Function pattern *movqi3 used[0] = 122 total = 122
;# Function pattern *movhi used[0] = 1 used[2] = 1 used[3] = 3 total = 5
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 15 total = 15
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *mulqihi3_const used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *extendqihi2 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 20 total = 20
;# Function pattern *call1 used[0] = 32 total = 32
;# Function pattern *call_value1 used[0] = 24 total = 24
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 11 used[1] = 6 total = 17
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 9 total = 9
	MODULE	hfp_ring_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleRing:
	enterl	#9
?LBB_hfpHandleRing:
	st	AL,@(H'0006,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
	bsr	$_hfpHandleCallRingIndication
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0040
	bne	?L1
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UXL
	bsr	$_hfpLinkIsHfp
	cmp	AL,#H'0000
	beq	?L4
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	bne	?L7
?L4:
	ld	AL,@(H'0006,Y)
	bsr	$_hfpLinkIsHsp
	cmp	AL,#H'0000
	beq	?L5
	ld	X,@(H'0006,Y)
	ld	AL,@(H'001C,X)
	and	AL,#-H'2000
	cmp	AL,#-H'6000
	bne	?L5
?L7:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L5:
	ld	AL,@(H'0006,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A0C
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_hfpHandleRing:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_hfpHandleInBandRingTone:
	enterl	#2
?LBB_hfpHandleInBandRingTone:
?LBB4:
	cmp	AL,#H'0000
	beq	?L10
	ld	X,@$XAP_AH
	tst	@(0,X)
	beq	?L12
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	or	AL,#H'0008
	bra	(?L14)
?L12:
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	and	AL,#-H'0009
?L14:
	st	AL,@(H'0008,X)
?L10:
?LBE4:
?LBE_hfpHandleInBandRingTone:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_hfpHandleInBandRingToneDisable:
	enterl	#3
?LBB_hfpHandleInBandRingToneDisable:
?LBB5:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	bsr	$_hfpHandleInBandRingTone
?LBE5:
?LBE_hfpHandleInBandRingToneDisable:
	leavel	#3
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_hfpHandleInBandRingToneEnable:
	enterl	#3
?LBB_hfpHandleInBandRingToneEnable:
?LBB6:
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	bsr	$_hfpHandleInBandRingTone
?LBE6:
?LBE_hfpHandleInBandRingToneEnable:
	leavel	#3
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 15 used[1] = 2 total = 17
;# Function pattern *movqi3 used[0] = 16 total = 16
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 1 total = 6
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	hfp_subscriber_num_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleSubscriberNumberGetReq:
	enterl	#14
?LBB_hfpHandleSubscriberNumberGetReq:
	st	AL,@(H'000B,Y)
?LBB2:
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'001A
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000B,Y)
	bsr	$_hfpSendAtCmd
?LBE2:
?LBE_hfpHandleSubscriberNumberGetReq:
	leavel	#14
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'43
	dc	H'4E
	dc	H'55
	dc	H'4D
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_hfpHandleSubscriberNumber:
	enterl	#7
?LBB_hfpHandleSubscriberNumber:
	st	AH,@(H'0001,Y)
?LBB3:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0003,X)
	st	AH,@(H'0003,Y)
	cmp	AH,#H'001F
	bcz	?L3
	ld	AL,#H'001F
	st	AL,@(H'0003,Y)
?L3:
	ld	AL,@(H'0003,Y)
?LBB4:
	add	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	bsr	$_hfpConvertNumberType
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0003,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0004
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	bsr	$_memmove
	ld	X,@(H'0004,Y)
	add	X,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A1B
	bsr	$_MessageSend
?LBE4:
?LBE3:
?LBE_hfpHandleSubscriberNumber:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 2 total = 21
;# Function pattern *movqi3 used[0] = 22 total = 22
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	hfp_voice_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleVoiceRecognitionEnable:
	enterl	#6
?LBB_hfpHandleVoiceRecognitionEnable:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB2:
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	X,@$_theHfp
	ld	AL,@(H'0003,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AH
?LBB3:
	tst	@(H'0001,X)
	beq	?L3
	ld	AL,#(?LC0)
	st	AL,@(H'0003,Y)
	bra	(?L4)
?L3:
	ld	X,#(?LC1)
	st	X,@(H'0003,Y)
?L4:
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,#H'000B
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_hfpHandleVoiceRecognitionEnable:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'56
	dc	H'52
	dc	H'41
	dc	H'3D
	dc	H'31
	dc	H'0D
	dc	H'00
?LC1:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'56
	dc	H'52
	dc	H'41
	dc	H'3D
	dc	H'30
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_hfpHandleHspVoiceRecognitionEnable:
	enterl	#2
?LBB_hfpHandleHspVoiceRecognitionEnable:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(0,X)
	tst	@(H'0001,X)
	beq	?L6
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'03C0
	cmp	AL,#H'0000
	bne	?L6
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	AH,#H'000B
	bsr	$_hfpSendHsButtonPress
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE4:
?LBE_hfpHandleHspVoiceRecognitionEnable:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_hfpHandleVoiceRecognitionStatus:
	enterl	#10
?LBB_hfpHandleVoiceRecognitionStatus:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB5:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_hfpGetLinkPriority
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	X,@$_theHfp
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A14
	bsr	$_MessageSend
	ld	X,@(H'0007,Y)
	tst	@(0,X)
	bne	?L7
	ld	AL,@(H'0006,Y)
	bsr	$_hfpHandleCallVoiceRecDisabled
?L7:
?LBE5:
?LBE_hfpHandleVoiceRecognitionStatus:
	leavel	#10
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 4 total = 23
;# Function pattern *movqi3 used[0] = 24 total = 24
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 3 total = 6
	MODULE	hfp_voice_tag_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpHandleGetVoiceTagReq:
	enterl	#16
?LBB_hfpHandleGetVoiceTagReq:
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0008,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'000F
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_hfpSendAtCmd
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_hfpHandleGetVoiceTagReq:
	leavel	#16
	.SEG	CONST
?LC0:
	dc	H'41
	dc	H'54
	dc	H'2B
	dc	H'42
	dc	H'49
	dc	H'4E
	dc	H'50
	dc	H'3D
	dc	H'31
	dc	H'0D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_hfpHandleDataResponse:
	enterl	#7
?LBB_hfpHandleDataResponse:
	st	AH,@(H'0001,Y)
?LBB4:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	st	AH,@(H'0003,Y)
	cmp	AH,#H'001F
	bcz	?L4
	ld	AL,#H'001F
	st	AL,@(H'0003,Y)
?L4:
	tst	@(H'0003,Y)
	beq	?L3
	ld	AL,@(H'0003,Y)
?LBB5:
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_hfpGetLinkPriority
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_memmove
	ld	X,@(H'0004,Y)
	add	X,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	X,@$_theHfp
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5A17
	bsr	$_MessageSend
?L3:
?LBE5:
?LBE4:
?LBE_hfpHandleDataResponse:
	leavel	#7
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_hfpHandleDataResponseExtended:
	enterl	#4
?LBB_hfpHandleDataResponseExtended:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(H'0002,X)
	ld	AL,@(H'0003,X)
?LBB6:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UY
	bsr	$_hfpHandleDataResponse
?LBE6:
?LBE_hfpHandleDataResponseExtended:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 21 used[1] = 3 total = 24
;# Function pattern *movqi3 used[0] = 19 total = 19
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	hfp_wbs
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DHFP_MIN_CFM -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_hfpWbsCodecMaskToCodecId:
; leaf function with empty stack frame
?LBB_hfpWbsCodecMaskToCodecId:
	cmp	AL,#H'0001
	beq	?L3
	cmp	AL,#H'0002
	beq	?L4
	bra	(?L5)
?L3:
	ld	AL,#H'0001
	bra	(?L1)
?L4:
	ld	AL,#H'0002
	bra	(?L1)
?L5:
	ld	AL,#H'0000
?L1:
?LBE_hfpWbsCodecMaskToCodecId:
	rts
$_hfpWbsCodecIdToCodecMask:
; leaf function with empty stack frame
?LBB_hfpWbsCodecIdToCodecMask:
	cmp	AL,#H'0001
	beq	?L11
	cmp	AL,#H'0002
	beq	?L12
	bra	(?L13)
?L11:
	ld	AL,#H'0001
	bra	(?L9)
?L12:
	ld	AL,#H'0002
	bra	(?L9)
?L13:
	ld	AL,#H'0000
?L9:
?LBE_hfpWbsCodecIdToCodecMask:
	rts
$_HfpWbsSetSupportedCodecs:
	enterl	#4
?LBB_HfpWbsSetSupportedCodecs:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB2:
	and	AL,#-H'0004
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,@H'fff9
	or	AL,#H'0002
	st	AL,@H'fff9
?L18:
	ld	X,@H'fff9
	or	X,#H'0001
	st	X,@H'fff9
	tst	@$_theHfp
	beq	?L17
	ld	AL,@$_theHfp
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0008,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L17
	ld	AL,@H'fff9
?LBB3:
	and	AL,#H'0003
	asl	#H'000B
	ld	AH,@(H'0008,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'0008,X)
	tst	@H'fff8
	beq	?L17
	ld	X,@$_theHfp
	ld	AL,@(H'000A,X)
	st	AL,@(H'0001,Y)
	cmp	AL,@(H'000B,X)
	bcc	?L17
?L25:
	ld	AL,#H'002A
	ld	AH,@(H'0001,Y)
	bsr	$_hfpSendCommonInternalMessage
	ld	X,@(H'0001,Y)
	add	X,#H'001E
	st	X,@(H'0001,Y)
	ld	X,@$_theHfp
	ld	AL,@(H'0001,Y)
	cmp	AL,@(H'000B,X)
	bcs	?L25
?L17:
?LBE3:
?LBE2:
?LBE_HfpWbsSetSupportedCodecs:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 9 used[1] = 4 total = 13
;# Function pattern *movqi3 used[0] = 14 total = 14
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 2 total = 4
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	region_matches_uuid32
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_uuid_suffix:
	dc	H'0000
	dc	H'0000
	dc	H'0010
	dc	H'0000
	dc	H'0080
	dc	H'0000
	dc	H'0000
	dc	H'0080
	dc	H'005F
	dc	H'009B
	dc	H'0034
	dc	H'00FB
	.CODE
$_RegionMatchesUUID32:
	enterl	#5
?LBB_RegionMatchesUUID32:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_RegionReadUnsigned
	cmp	AH,@(H'0005,Y)
	bne	?L2
	cmp	AL,@(H'0006,Y)
	bne	?L2
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	sub	AL,@(0,X)
	cmp	AL,#H'0010
	bne	?L3
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#(_uuid_suffix)
	ld	AH,@(0,X)
	bsr	$_memcmp
	cmp	AL,#H'0000
	bne	?L2
?L3:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L2:
	ld	AL,@(H'0002,Y)
?LBE_RegionMatchesUUID32:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 2 total = 6
;# Function pattern *movqi3 used[0] = 7 total = 7
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[1] = 1 total = 1
	MODULE	region_read_unsigned
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_RegionReadUnsigned:
	enterl	#4
?LBB_RegionReadUnsigned:
?LBB2:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'0001,X)
	beq	?L8
	ld	AL,@(H'0001,X)
	st	AL,@H'fffa
?L6:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	asl	#H'0008
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	X,@(-1,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,@H'fffa
	bne	?L6
?L8:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
?LBE2:
?LBE_RegionReadUnsigned:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 1 total = 9
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 3 used[3] = 3 total = 6
;# Function pattern *iorhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	service_find_attribute
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ServiceFindAttribute:
	enterl	#7
?LBB_ServiceFindAttribute:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB2:
	bra	(?L2)
?L6:
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0004,Y)
	bne	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_ServiceNextAttribute
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_ServiceFindAttribute:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 1 total = 5
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	service_get_value
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ServiceGetValue:
	enterl	#2
?LBB_ServiceGetValue:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0001,X)
	cmp	AL,@(0,X)
	beq	?L22
	ld	X,@H'fff8
	ld	X,@(0,X)
	ld	AH,@(0,X)
	st	AH,@(-1,Y)
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	ld	X,@H'fff8
	st	AL,@(0,X)
	lsr	#H'0003
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	AL,@(-1,Y)
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0007)
	bcc	?L5
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE19,X)
	brxl
	.SEG	CONST
?JTBASE19:
	.CODE
?L19:
	.SEG	CONST
	dc	lwrd(?L5-?L19)
	dc	lwrd(?L7-?L19)
	dc	lwrd(?L8-?L19)
	dc	lwrd(?L9-?L19)
	dc	lwrd(?L10-?L19)
	dc	lwrd(?L11-?L19)
	dc	lwrd(?L13-?L19)
	dc	lwrd(?L16-?L19)
	.CODE
?L5:
	ld	X,@H'fff9
	ld	AH,@(0,X)
	cmp	AH,#H'0000
	beq	?L3
	ld	AH,#H'0001
	bra	(?L3)
?L7:
	ld	AH,#H'0002
	bra	(?L3)
?L8:
	ld	AH,#H'0004
	bra	(?L3)
?L9:
	ld	AH,#H'0008
	bra	(?L3)
?L10:
	ld	AH,#H'0010
	bra	(?L3)
?L11:
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	cmp	AL,@(0,X)
	beq	?L22
	ld	X,@H'fff8
	ld	X,@(0,X)
	ld	AH,@(0,X)
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	bra	(?L21)
?L13:
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	sub	AL,@(0,X)
	cmp	AL,#H'0001
	bcz	?L22
?Ltext1:
	ld	X,@H'fff8
?LBB3:
	ld	X,@(0,X)
	ld	AL,@(0,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0001,X)
?Ltext2:
?LBE3:
	ld	AL,#H'0002
	add	AL,@$XAP_UXL
	bra	(?L21)
?L16:
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	sub	AL,@(0,X)
	cmp	AL,#H'0003
	bcz	?L22
?Ltext3:
	ld	X,@H'fff8
?LBB4:
	ld	X,@(0,X)
?LBB5:
	ld	AH,#H'0000
	ld	AL,@(0,X)
	asl	#H'0008
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	or	AL,@H'fffa
	or	AH,@H'fff9
	asl	#H'0008
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	or	AL,@H'fffa
	or	AH,@H'fff9
	asl	#H'0008
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	or	AL,@H'fffa
	or	AH,@H'fff9
?LBE5:
?LBE4:
	ld	AH,@$XAP_AL
?Ltext4:
	ld	AL,#H'0004
	add	AL,@$XAP_UXL
?L21:
	ld	X,@H'fff8
	st	AL,@(0,X)
?L3:
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	sub	AL,@(0,X)
	cmp	AL,@$XAP_AH
	bcc	?L20
?L22:
	ld	AL,#H'0000
	bra	(?L1)
?L20:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0001
?L1:
?LBE2:
?LBE_ServiceGetValue:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 13 used[1] = 15 total = 28
;# Function pattern *movqi3 used[0] = 23 total = 23
;# Function pattern *movhi used[3] = 3 total = 3
;# Function pattern *iorhi3 used[0] = 3 total = 3
;# Function pattern *addqi2 used[2] = 5 total = 5
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *ashlhi3 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	service_next_attribute
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_ServiceNextAttribute:
	enterl	#7
?LBB_ServiceNextAttribute:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
?LBB2:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L2
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,@(H'0001,X)
	sub	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	bne	?L2
?Ltext1:
?LBB3:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	asl	#H'0008
	or	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
?LBE3:
	st	AL,@(0,X)
?Ltext2:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_ServiceGetValue
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_ServiceNextAttribute:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 used[1] = 4 total = 9
;# Function pattern *movqi3 used[0] = 8 total = 8
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	codec_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_CodecInitCsrInternal:
	enterl	#3
?LBB_CodecInitCsrInternal:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,#hwrd($_csrInternalMessageHandler)
	ld	AL,#lwrd($_csrInternalMessageHandler)
	st	AH,@(0,X)
	st	AL,@(1,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,X)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_MessageSend
?LBE_CodecInitCsrInternal:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[3] = 1 total = 5
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	codec_volume
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_VolumeConvertDACGainToDB:
	enterl	#2
?LBB_VolumeConvertDACGainToDB:
?LBB2:
	smult	#H'002D
	ld	AH,#H'0000
	udiv	#H'000F
	ld	AH,#H'0000
	add	AL,#H'FFD3
	nop
	addc	AH,#H'FFFF
	st	AH,@(-1,Y)
	st	AL,@(-2,Y)
	ld	AL,@(-2,Y)
	umult	#H'003C
?LBE2:
?LBE_VolumeConvertDACGainToDB:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_VolumeConvertStepsToDB:
	enterl	#5
?LBB_VolumeConvertStepsToDB:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB3:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0001
	ld	X,@H'fff9
	st	AL,@(0,X)
	ld	AH,#H'0001
	st	AH,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff9
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@H'fff9
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	X,@H'fff9
	st	AL,@(H'0005,X)
	ld	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	cmp	AL,@(H'0001,X)
	bge	?L3
	ld	X,@H'fff9
	st	AH,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff9
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	ld	X,@H'fff9
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff9
	st	AL,@(H'0005,X)
?L3:
	ld	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	cmp	AL,@(H'0002,X)
	ble	?L4
	ld	AL,@(H'0002,X)
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
	ld	AL,@(0,X)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	X,@H'fff9
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	ld	X,@H'fff9
	st	AL,@(H'0005,X)
?L4:
	ld	X,@H'fff9
	ld	AL,@(H'0004,X)
	sub	AL,@(H'0002,X)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0005,X)
	sub	AL,@(H'0003,X)
	st	AL,@(H'0007,X)
	ld	AL,@(0,Y)
	sub	AL,@(H'0002,X)
	smult	@(H'0007,X)
	st	AL,@(H'0008,X)
	add	AL,@$XAP_AL
	asl	#H'0010
	asr	#H'0010
	sdiv	@(H'0006,X)
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	cmp	AH,#H'0000
	bpl	?L5
	ld	AH,#H'0002
	add	AH,@$XAP_AL
?L5:
	asr	#H'0001
	ld	AL,@$XAP_AH
	ld	X,@H'fff9
	st	AH,@(H'0009,X)
	smult	@(H'0006,X)
	ld	AH,@(H'0008,X)
	sub	AH,@$XAP_AL
	st	AH,@(H'0008,X)
	ld	AL,@(H'0003,X)
	add	AL,@(H'0009,X)
	smult	@(H'0005,Y)
	st	AL,@H'fff8
	ld	AL,@(H'0005,Y)
	smult	@(H'0008,X)
	add	AL,@$XAP_AL
	asl	#H'0010
	asr	#H'0010
	sdiv	@(H'0006,X)
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	cmp	AH,#H'0000
	bpl	?L6
	ld	AH,#H'0002
	add	AH,@$XAP_AL
?L6:
	asr	#H'0001
	add	AH,@H'fff8
	st	AH,@(H'0002,Y)
	ld	X,@H'fff9
	st	AH,@(H'0009,X)
	ld	AL,@H'fff9
	bsr	$_free
?LBE3:
	ld	AL,@(H'0002,Y)
?LBE_VolumeConvertStepsToDB:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_CodecCalcHybridValues:
	enterl	#2
?LBB_CodecCalcHybridValues:
	st	AL,@H'fff8
	st	AH,@H'fff9
	cmp	AH,#H'0000
	bmi	?L10
	beq	?L10
	ld	AL,#H'0000
	st	AL,@H'fff9
?L10:
	ld	X,@H'fff9
	cmp	X,#-H'12C0
	bge	?L11
	ld	AL,#-H'12C0
	st	AL,@H'fff9
?L11:
	ld	X,@H'fff9
	cmp	X,#-H'0A8C
	bge	?L12
	ld	AL,#H'0000
	bra	(?L14)
?L12:
	ld	AH,@H'fff9
	asr	#H'0010
	sdiv	#H'00B4
	add	AL,#H'000F
?L14:
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,#H'000F
	ld	X,@H'fff8
	sub	AL,@(H'0001,X)
	smult	#-H'00B4
	nadd	AL,@H'fff9
	st	AL,@(0,X)
?LBE_CodecCalcHybridValues:
	leavel	#2
$_CodecSetInputGain:
	enterl	#5
?LBB_CodecSetInputGain:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_MessageSend
?LBE4:
?LBE_CodecSetInputGain:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_CodecSetInputGainNow:
	enterl	#6
?LBB_CodecSetInputGainNow:
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
?LBB5:
	cmp	AL,#H'0001
	beq	?L19
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0302
	bsr	$_SourceConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
?L19:
	tst	@(H'0006,Y)
	beq	?L18
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0302
	bsr	$_SourceConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
?L18:
?LBE5:
?LBE_CodecSetInputGainNow:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_CodecSetOutputGain:
	enterl	#5
?LBB_CodecSetOutputGain:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_MessageSend
?LBE6:
?LBE_CodecSetOutputGain:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_CodecSetOutputGainNow:
	enterl	#6
?LBB_CodecSetOutputGainNow:
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
?LBB7:
	cmp	AL,#H'0002
	bne	?L24
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	cmp	AL,#H'0000
	bne	?L24
	ld	AL,@(H'0006,Y)
	bra	(?L28)
?L24:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	beq	?L26
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0003,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0303
	bsr	$_SinkConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SinkClose
?L26:
	tst	@(H'0006,Y)
	beq	?L23
	ld	AL,#H'0001
?L28:
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0003,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0303
	bsr	$_SinkConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SinkClose
?L23:
?LBE7:
?LBE_CodecSetOutputGainNow:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_CodecSetOutputGainLater:
	enterl	#7
?LBB_CodecSetOutputGainLater:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB8:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendLater
?LBE8:
?LBE_CodecSetOutputGainLater:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
	ENDMOD

;# Function pattern *movqi2 used[0] = 61 used[1] = 34 total = 95
;# Function pattern *movqi3 used[0] = 72 total = 72
;# Function pattern *movhi used[0] = 1 used[3] = 5 total = 6
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 5 used[2] = 5 total = 10
;# Function pattern *subqi3 used[0] = 5 used[1] = 1 total = 6
;# Function pattern *udivqi3_const used[0] = 1 total = 1
;# Function pattern *divqi3_const used[0] = 1 total = 1
;# Function pattern *divqi3 used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *mulqi3 used[0] = 4 total = 4
;# Function pattern *extendqihi2 used[0] = 2 used[1] = 1 total = 3
;# Function pattern *ashrqi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2_1 used[0] = 2 used[1] = 5 total = 7
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 17 total = 17
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 2 total = 6
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	codec_csr_internal_message_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_csrInternalMessageHandler:
	enterl	#2
?LBB_csrInternalMessageHandler:
	st	AH,@H'fff8
	ld	AH,@(H'0002,Y)
	ld	X,@H'fff8
?LBB2:
	cmp	X,#(H'0001+H'0006)
	bcc	?L1
	ld	X,@(?JTBASE11,X)
	brxl
	.SEG	CONST
?JTBASE11:
	.CODE
?L11:
	.SEG	CONST
	dc	lwrd(?L3-?L11)
	dc	lwrd(?L4-?L11)
	dc	lwrd(?L5-?L11)
	dc	lwrd(?L6-?L11)
	dc	lwrd(?L1-?L11)
	dc	lwrd(?L1-?L11)
	dc	lwrd(?L1-?L11)
	.CODE
?L3:
	bsr	$_handleCsrInternalCodecInitReq
	bra	(?L1)
?L4:
	bsr	$_handleCsrInternalCodecConfigureReq
	bra	(?L1)
?L5:
	ld	AL,@$XAP_AH
	bsr	$_handleCsrInternalInputGainReq
	bra	(?L1)
?L6:
	ld	AL,@$XAP_AH
	bsr	$_handleCsrInternalOutputGainReq
?L1:
?LBE2:
?LBE_csrInternalMessageHandler:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	codec_csr_internal_config_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_handleCsrInternalCodecConfigureReq:
	enterl	#3
?LBB_handleCsrInternalCodecConfigureReq:
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	bsr	$_free
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0000
	bsr	$_sendCodecConfigureCfm
?LBE_handleCsrInternalCodecConfigureReq:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 2 total = 2
	MODULE	codec_csr_internal_init_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_handleCsrInternalCodecInitReq:
	enterl	#5
?LBB_handleCsrInternalCodecInitReq:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0016
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0002,X)
	bsr	$_sendInitCfmToApp
?LBE_handleCsrInternalCodecInitReq:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	codec_csr_internal_volume_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_handleCsrInternalInputGainReq:
	enterl	#6
?LBB_handleCsrInternalInputGainReq:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0001
	beq	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0302
	bsr	$_SourceConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
?L2:
	ld	X,@(H'0002,Y)
	tst	@(H'0001,X)
	beq	?L1
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0302
	bsr	$_SourceConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
?L1:
?LBE2:
?LBE_handleCsrInternalInputGainReq:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_handleCsrInternalOutputGainReq:
	enterl	#7
?LBB_handleCsrInternalOutputGainReq:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	X,@(H'0001,X)
	st	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L6
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,@(H'0004,Y)
	bra	(?L10)
?L6:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0001
	beq	?L8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0303
	bsr	$_SinkConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SinkClose
?L8:
	ld	X,@(H'0002,Y)
	tst	@(H'0001,X)
	beq	?L5
	ld	AL,#H'0001
?L10:
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0303
	bsr	$_SinkConfigure
	ld	AL,@(H'0003,Y)
	bsr	$_SinkClose
?L5:
?LBE3:
?LBE_handleCsrInternalOutputGainReq:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 14 used[1] = 8 total = 22
;# Function pattern *movqi3 used[0] = 30 total = 30
;# Function pattern *movhi used[3] = 4 total = 4
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 13 total = 13
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 2 total = 3
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	codec_config_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sendCodecConfigureCfm:
	enterl	#5
?LBB_sendCodecConfigureCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7201
	bsr	$_MessageSend
?LBE2:
?LBE_sendCodecConfigureCfm:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 used[1] = 1 total = 6
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	codec_init_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sendInitCfmToApp:
	enterl	#5
?LBB_sendInitCfmToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7200
	bsr	$_MessageSend
?LBE2:
?LBE_sendInitCfmToApp:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 1 total = 9
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	audio
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AudioLibraryInit:
	enterl	#3
?LBB_AudioLibraryInit:
	tst	@_AUDIO
	bne	?L1
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@_AUDIO
	ld	AH,#H'0011
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?L1:
?LBE_AudioLibraryInit:
	leavel	#3
$_AudioConnect:
	enterl	#7
?LBB_AudioConnect:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_PanicNull
	ld	AH,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	ld	X,@(H'0004,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0007,X)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0008,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0006,X)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'000A,X)
	ld	AH,@(H'0011,Y)
	st	AH,@(H'000B,X)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0009,X)
	ld	X,@_AUDIO
	ld	AH,@(H'0002,Y)
	st	AH,@(0,X)
	ld	AL,@_AUDIO
	add	AL,#H'0003
	ld	AH,#H'000C
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7000
	bsr	$_MessageSendConditionally
?LBE2:
	ld	AL,#H'0001
?LBE_AudioConnect:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_AudioDisconnect:
	enterl	#4
?LBB_AudioDisconnect:
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L6
	ld	AL,@(0,X)
	ld	AH,#H'7004
	bsr	$_MessageCancelAll
	ld	X,@_AUDIO
	ld	AL,@(0,X)
	ld	AH,#H'7011
	bsr	$_MessageCancelAll
	ld	X,@_AUDIO
	ld	AL,@(0,X)
	ld	AH,#H'700E
	bsr	$_MessageCancelAll
	ld	X,@_AUDIO
	ld	AL,@(0,X)
	ld	AH,#H'7012
	bsr	$_MessageCancelAll
	ld	X,@_AUDIO
	ld	AL,@(0,X)
	ld	AH,#H'7013
	bsr	$_MessageCancelAll
	ld	X,@_AUDIO
	ld	AL,@(0,X)
	ld	AH,#H'7015
	bsr	$_MessageCancelAll
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7001
	bsr	$_MessageSendConditionally
?L6:
	ld	X,@_AUDIO
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	X,@_AUDIO
	st	AL,@(H'0001,X)
?LBE_AudioDisconnect:
	leavel	#4
$_AudioSetVolume:
	enterl	#7
?LBB_AudioSetVolume:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB3:
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L7
?LBB4:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7004
	bsr	$_MessageSendConditionally
	ld	X,@_AUDIO
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0006,X)
?L7:
?LBE4:
?LBE3:
?LBE_AudioSetVolume:
	leavel	#7
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_AudioSetMode:
	enterl	#7
?LBB_AudioSetMode:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB5:
	ld	AL,#H'0000
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L10
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7002
	bsr	$_MessageSendConditionally
	ld	AL,#H'0001
	ld	X,@_AUDIO
	ld	AH,@(H'0002,Y)
	st	AH,@(H'000A,X)
?L10:
?LBE6:
?LBE5:
?LBE_AudioSetMode:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_AudioConfigureSubWoofer:
	enterl	#7
?LBB_AudioConfigureSubWoofer:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB7:
	ld	AL,#H'0000
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L12
?LBB8:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'700F
	bsr	$_MessageSendConditionally
	ld	AL,#H'0001
?L12:
?LBE8:
?LBE7:
?LBE_AudioConfigureSubWoofer:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_AudioSetSoftMute:
	enterl	#6
?LBB_AudioSetSoftMute:
	st	AL,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0000
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L14
?LBB10:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7013
	bsr	$_MessageSendConditionally
	ld	AL,#H'0001
?L14:
?LBE10:
?LBE9:
?LBE_AudioSetSoftMute:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
$_AudioSetRoute:
	enterl	#7
?LBB_AudioSetRoute:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB11:
	ld	AL,#H'0000
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L16
?LBB12:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7003
	bsr	$_MessageSendConditionally
	ld	AL,#H'0001
	ld	X,@_AUDIO
	ld	AH,@(H'0002,Y)
	st	AH,@(H'000B,X)
?L16:
?LBE12:
?LBE11:
?LBE_AudioSetRoute:
	leavel	#7
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_AudioStartForwarding:
	enterl	#7
?LBB_AudioStartForwarding:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB13:
	ld	AH,#H'0000
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L18
	tst	@(H'0001,X)
	beq	?L19
	ld	AL,@(H'0001,X)
	cmp	AL,@(H'0002,Y)
	bne	?L18
?L19:
?LBB14:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	X,@_AUDIO
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'7005
	bsr	$_MessageSendConditionally
	ld	AH,#H'0001
?L18:
?LBE14:
?LBE13:
	ld	AL,@$XAP_AH
?LBE_AudioStartForwarding:
	leavel	#7
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_IsAudioRelaying:
	enterl	#2
?LBB_IsAudioRelaying:
	ld	X,@_AUDIO
	tst	@(H'0001,X)
	beq	?L22
	ld	AL,#H'0001
	bra	(?L21)
?L22:
	ld	AL,#H'0000
?L21:
?LBE_IsAudioRelaying:
	leavel	#2
$_AudioStopForwarding:
	enterl	#4
?LBB_AudioStopForwarding:
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L24
	tst	@(H'0001,X)
	beq	?L24
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'7006
	bsr	$_MessageSendConditionally
	ld	X,@_AUDIO
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
?L24:
?LBE_AudioStopForwarding:
	leavel	#4
$_AudioPlayTone:
	enterl	#7
?LBB_AudioPlayTone:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB15:
	ld	X,@_AUDIO
	tst	@(H'0002,X)
	beq	?L28
	cmp	AH,#H'0000
	beq	?L26
?L28:
?LBB16:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0004,X)
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L29
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bra	(?L32)
?L29:
	bsr	$_AudioBusyPtr
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#($_csr_voice_prompts_plugin)
?L32:
	ld	AH,#H'7007
	bsr	$_MessageSendConditionally
?L26:
?LBE16:
?LBE15:
?LBE_AudioPlayTone:
	leavel	#7
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_AudioStopTone:
	enterl	#3
?LBB_AudioStopTone:
	ld	X,@_AUDIO
	tst	@(H'0002,X)
	beq	?L33
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'7008
	bsr	$_MessageSend
	ld	X,@_AUDIO
	ld	AL,@(H'0002,X)
	ld	AH,#H'7007
	bsr	$_MessageCancelAll
?L33:
?LBE_AudioStopTone:
	leavel	#3
$_AudioPlayAudioPrompt:
	enterl	#9
?LBB_AudioPlayAudioPrompt:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB17:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0004,X)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0005,X)
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L36
	tst	@(H'000E,Y)
	beq	?L37
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7009
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7000
	bsr	$_MessageCancelAll
?L37:
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L38
	ld	X,@(H'000B,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_CsrVoicePromptsIsMixable
	cmp	AL,#H'0000
	bne	?L43
?L38:
	bsr	$_IsAudioInUse
	cmp	AL,#H'0000
	bne	?L40
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_CsrVoicePromptsIsMixable
	cmp	AL,#H'0000
	beq	?L40
	bsr	$_AudioBusyPtr
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	bra	(?L45)
?L40:
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7001
	bsr	$_MessageSendConditionally
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7009
	bsr	$_MessageSendConditionally
?LBB18:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AH,@_AUDIO
	add	AH,#H'0003
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7000
	bsr	$_MessageSendConditionally
?LBE18:
?LBB19:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000B,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	bsr	$_AudioBusyPtr
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'7305
	bra	(?L44)
?L36:
?LBE19:
	tst	@(H'000E,Y)
	beq	?L43
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7009
	bsr	$_MessageCancelAll
?L43:
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
?L45:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7009
?L44:
	bsr	$_MessageSendConditionally
?LBE17:
?LBE_AudioPlayAudioPrompt:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE17
$_AudioStopAudioPrompt:
	enterl	#3
?LBB_AudioStopAudioPrompt:
	ld	X,@_AUDIO
	tst	@(H'0002,X)
	beq	?L46
	ld	AH,@(H'0002,X)
	cmp	AH,@$XAP_AL
	bne	?L46
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'700A
	bsr	$_MessageSend
?L46:
?LBE_AudioStopAudioPrompt:
	leavel	#3
$_AudioVoicePromptsInit:
	enterl	#5
?LBB_AudioVoicePromptsInit:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB20:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'700B
	bsr	$_MessageSend
?LBE20:
?LBE_AudioVoicePromptsInit:
	leavel	#5
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_AudioSetPower:
	enterl	#4
?LBB_AudioSetPower:
	st	AL,@(H'0001,Y)
?LBB21:
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L50
?LBB22:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@_AUDIO
	st	X,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,#H'700D
	bsr	$_MessageSend
?L50:
?LBE22:
?LBE21:
?LBE_AudioSetPower:
	leavel	#4
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
_sendProductionTestCommand:
	enterl	#5
?LBB_sendProductionTestCommand:
	st	AL,@(H'0002,Y)
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L52
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	bsr	$_MessageSendConditionally
?L52:
?LBE_sendProductionTestCommand:
	leavel	#5
$_AudioMicSwitch:
	enterl	#2
?LBB_AudioMicSwitch:
	ld	AL,#H'700C
	bsr	_sendProductionTestCommand
?LBE_AudioMicSwitch:
	leavel	#2
$_AudioOutputSwitch:
	enterl	#2
?LBB_AudioOutputSwitch:
	ld	AL,#H'7017
	bsr	_sendProductionTestCommand
?LBE_AudioOutputSwitch:
	leavel	#2
$_AudioStartASR:
	enterl	#6
?LBB_AudioStartASR:
	st	AL,@(H'0002,Y)
?LBB23:
	ld	AL,#H'0000
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L57
?LBB24:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7010
	bsr	$_MessageSendConditionally
	ld	AL,#H'0001
?L57:
?LBE24:
?LBE23:
?LBE_AudioStartASR:
	leavel	#6
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
$_IsAudioBusy:
	enterl	#2
?LBB_IsAudioBusy:
	ld	X,@_AUDIO
	ld	AL,@(H'0002,X)
?LBE_IsAudioBusy:
	leavel	#2
$_AudioBusyPtr:
; leaf function with empty stack frame
?LBB_AudioBusyPtr:
	ld	AL,@_AUDIO
	add	AL,#H'0002
?LBE_AudioBusyPtr:
	rts
$_SetAudioBusy:
	enterl	#4
?LBB_SetAudioBusy:
	st	AL,@(0,Y)
?LBB25:
	ld	X,@_AUDIO
	ld	X,@(H'0002,X)
	st	X,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(0,Y)
	bsr	_CallbackCheckRequired
	cmp	AL,#H'0000
	beq	?L61
	ld	AL,@(H'0001,Y)
	bsr	_MakeBusyCallback
?L61:
	ld	X,@_AUDIO
	ld	AL,@(0,Y)
	st	AL,@(H'0002,X)
?LBE25:
?LBE_SetAudioBusy:
	leavel	#4
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
_CallbackCheckRequired:
; leaf function with empty stack frame
?LBB_CallbackCheckRequired:
	cmp	AL,#H'0000
	beq	?L63
	cmp	AH,@$XAP_AL
	beq	?L63
	ld	AL,#H'0001
	bra	(?L64)
?L63:
	ld	AL,#H'0000
?L64:
?LBE_CallbackCheckRequired:
	rts
_MakeBusyCallback:
	enterl	#2
?LBB_MakeBusyCallback:
	cmp	AL,#($_csr_voice_prompts_plugin)
	bne	?L66
	bsr	$_CsrVoicePromptsPluginCleanup
?L66:
?LBE_MakeBusyCallback:
	leavel	#2
$_GetCurrentDspStatus:
	enterl	#2
?LBB_GetCurrentDspStatus:
	ld	X,@_AUDIO
	ld	AL,@(H'000F,X)
?LBE_GetCurrentDspStatus:
	leavel	#2
$_SetCurrentDspStatus:
	enterl	#2
?LBB_SetCurrentDspStatus:
	ld	X,@_AUDIO
	st	AL,@(H'000F,X)
?LBE_SetCurrentDspStatus:
	leavel	#2
$_IsAudioInUse:
	enterl	#2
?LBB_IsAudioInUse:
	ld	X,@_AUDIO
	ld	AH,@(H'0010,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
?LBE_IsAudioInUse:
	leavel	#2
$_SetAudioInUse:
	enterl	#2
?LBB_SetAudioInUse:
	ld	X,@_AUDIO
	asl	#H'000F
	ld	AH,@(H'0010,X)
	and	AH,#H'7FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0010,X)
?LBE_SetAudioInUse:
	leavel	#2
$_IsTonePlaying:
	enterl	#2
?LBB_IsTonePlaying:
	ld	X,@_AUDIO
	ld	AH,@(H'0010,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
?LBE_IsTonePlaying:
	leavel	#2
$_SetTonePlaying:
	enterl	#2
?LBB_SetTonePlaying:
	ld	X,@_AUDIO
	and	AL,#H'0001
	asl	#H'000E
	ld	AH,@(H'0010,X)
	and	AH,#-H'4001
	or	AH,@$XAP_AL
	st	AH,@(H'0010,X)
?LBE_SetTonePlaying:
	leavel	#2
$_IsVpPlaying:
	enterl	#2
?LBB_IsVpPlaying:
	ld	X,@_AUDIO
	ld	AH,@(H'0010,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	and	AL,#H'0001
?LBE_IsVpPlaying:
	leavel	#2
$_SetVpPlaying:
	enterl	#2
?LBB_SetVpPlaying:
	ld	X,@_AUDIO
	and	AL,#H'0001
	asl	#H'000D
	ld	AH,@(H'0010,X)
	and	AH,#-H'2001
	or	AH,@$XAP_AL
	st	AH,@(H'0010,X)
?LBE_SetVpPlaying:
	leavel	#2
$_IsAsrPlaying:
	enterl	#2
?LBB_IsAsrPlaying:
	ld	X,@_AUDIO
	ld	AH,@(H'0010,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0001
?LBE_IsAsrPlaying:
	leavel	#2
$_SetAsrPlaying:
	enterl	#2
?LBB_SetAsrPlaying:
	ld	X,@_AUDIO
	and	AL,#H'0001
	asl	#H'000C
	ld	AH,@(H'0010,X)
	and	AH,#-H'1001
	or	AH,@$XAP_AL
	st	AH,@(H'0010,X)
?LBE_SetAsrPlaying:
	leavel	#2
$_GetAudioPlugin:
	enterl	#2
?LBB_GetAudioPlugin:
	ld	X,@_AUDIO
	ld	AL,@(0,X)
?LBE_GetAudioPlugin:
	leavel	#2
$_AudioSetGroupVolume:
	enterl	#6
?LBB_AudioSetGroupVolume:
	st	AL,@(H'0002,Y)
?LBB26:
	ld	X,@_AUDIO
	tst	@(0,X)
	beq	?L81
?LBB27:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	X,@_AUDIO
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7011
	bsr	$_MessageSendConditionally
	ld	AH,@_AUDIO
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0006,X)
?L81:
?LBE27:
?LBE26:
?LBE_AudioSetGroupVolume:
	leavel	#6
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
	.SEG	VAR
_AUDIO:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 160 used[1] = 21 total = 181
;# Function pattern *movqi3 used[0] = 247 total = 247
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 10 total = 10
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 25 total = 25
;# Function pattern *call_value1 used[0] = 57 total = 57
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 7 used[1] = 23 total = 30
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	csr_cvc_common_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_ALL -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_csr_cvsd_cvc_1mic_headset_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'0010
$_csr_wbs_cvc_1mic_headset_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'1218
$_csr_cvsd_cvc_1mic_headset_bex_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'0818
$_csr_cvsd_cvc_2mic_headset_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'1890
$_csr_wbs_cvc_2mic_headset_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'2A98
$_csr_cvsd_cvc_2mic_headset_bex_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'2098
$_csr_cvsd_cvc_1mic_handsfree_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'3010
$_csr_wbs_cvc_1mic_handsfree_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'4218
$_csr_cvsd_cvc_1mic_handsfree_bex_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'3818
$_csr_cvsd_cvc_2mic_handsfree_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'4890
$_csr_wbs_cvc_2mic_handsfree_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'5A98
$_csr_cvsd_cvc_2mic_handsfree_bex_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'5098
$_csr_cvsd_no_dsp_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'6010
$_csr_cvsd_cvc_1mic_asr_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'6810
$_csr_cvsd_cvc_2mic_asr_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'7090
$_csr_cvsd_cvc_1mic_hf_asr_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'7810
$_csr_cvsd_cvc_2mic_hf_asr_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'8090
	.CODE
_message_handler:
	enterl	#3
?LBB_message_handler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'7000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0018)
	bcc	?L2
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleAudioMessage
	bra	(?L1)
?L2:
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleInternalMessage
?L1:
?LBE_message_handler:
	leavel	#3
_handleAudioMessage:
	enterl	#16
?LBB_handleAudioMessage:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	bsr	$_IsAudioBusy
	ld	AH,@(H'0003,Y)
	add	AH,#-H'7000
	cmp	AH,#(H'0001+H'0017)
	bcc	?L4
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE46,X)
	brxl
	.SEG	CONST
?JTBASE46:
	.CODE
?L46:
	.SEG	CONST
	dc	lwrd(?L6-?L46)
	dc	lwrd(?L11-?L46)
	dc	lwrd(?L14-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L21-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L27-?L46)
	dc	lwrd(?L32-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L34-?L46)
	dc	lwrd(?L40-?L46)
	dc	lwrd(?L24-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L41-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L18-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L4-?L46)
	dc	lwrd(?L37-?L46)
	.CODE
?L6:
	ld	AH,@(H'0010,Y)
?LBB3:
	st	AH,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L7
?LBB4:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0010,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0005,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'000A,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0009,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0009,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'000A,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'000B,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'000B,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7000
	bra	(?L47)
?L7:
	ld	X,@(H'0004,Y)
?LBE4:
?LBB5:
	ld	AL,@(0,X)
	bsr	$_StreamSourceFromSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	ld	X,@(H'000A,X)
	st	X,@H'fff9
	cmp	X,#H'0000
	beq	?L9
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0004
	bne	?L9
	ld	X,@H'fff9
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
?L9:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'0004,Y)
	bsr	$_CsrCvcPluginConnect
?LBE5:
?LBE3:
	bra	(?L4)
?L11:
	cmp	AL,#H'0000
	beq	?L12
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7001
	bra	(?L47)
?L12:
	ld	AL,@(H'0002,Y)
	bsr	$_CsrCvcPluginDisconnect
	bra	(?L4)
?L14:
	ld	AH,@(H'0010,Y)
?LBB6:
	st	AH,@(H'0006,Y)
	cmp	AL,#H'0000
	bne	?L16
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L15
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0003
	beq	?L15
?L16:
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7002
	bra	(?L47)
?L15:
	ld	X,@(H'0006,Y)
?LBE7:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	$_CsrCvcPluginSetMode
?LBE6:
	bra	(?L4)
?L18:
?LBB8:
	ld	AH,@(H'0010,Y)
	cmp	AL,#H'0000
	beq	?L19
?LBB9:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7013
	bra	(?L47)
?L19:
?LBE9:
	ld	AL,@$XAP_AH
	bsr	$_CsrCvcPluginSetSoftMute
?LBE8:
	bra	(?L4)
?L21:
?LBB10:
	ld	X,@(H'0010,Y)
	cmp	AL,#H'0000
	beq	?L22
?LBB11:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0010,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	X,@(H'0010,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7004
	bra	(?L47)
?L22:
?LBE11:
	ld	AL,@(0,X)
	bsr	$_CsrCvcPluginSetVolume
?LBE10:
	bra	(?L4)
?L24:
	cmp	AL,#H'0000
	beq	?L25
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'700E
	bra	(?L47)
?L25:
	bsr	$_CsrCvcPluginResetVolume
	bra	(?L4)
?L27:
	ld	X,@(H'0010,Y)
?LBB12:
	st	X,@(H'000A,Y)
	cmp	AL,#H'0000
	bne	?L29
	bsr	$_IsTonePlaying
	cmp	AL,#H'0000
	bne	?L29
	bsr	$_IsVpPlaying
	cmp	AL,#H'0000
	beq	?L28
?L29:
	ld	X,@(H'000A,Y)
	tst	@(H'0001,X)
	beq	?L4
?LBB13:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000B,Y)
	st	AL,@(0,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0004,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7007
	bra	(?L47)
?L28:
?LBE13:
	ld	AL,@(H'0002,Y)
	bsr	$_SetAudioBusy
	ld	AL,#H'0001
	bsr	$_SetTonePlaying
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	$_CsrCvcPluginPlayTone
?LBE12:
	bra	(?L4)
?L32:
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@(H'0002,Y)
	bsr	$_CsrCvcPluginStopTone
	bra	(?L4)
?L34:
	cmp	AL,#H'0000
	beq	?L35
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'700C
	bra	(?L47)
?L35:
	bsr	$_CsrCvcPluginMicSwitch
	bra	(?L4)
?L37:
	cmp	AL,#H'0000
	beq	?L38
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7017
	bra	(?L47)
?L38:
	bsr	$_CsrCvcPluginOutputSwitch
	bra	(?L4)
?L40:
?LBB14:
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0010,Y)
	ld	AH,@(0,X)
	bsr	$_CsrCvcPluginSetPower
?LBE14:
	bra	(?L4)
?L41:
	ld	AH,@(H'0010,Y)
?LBB15:
	st	AH,@(H'000C,Y)
	cmp	AL,#H'0000
	bne	?L43
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L42
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0003
	beq	?L42
?L43:
?LBB16:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000D,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7010
?L47:
	bsr	$_MessageSendConditionally
?LBE16:
	bra	(?L4)
?L42:
	ld	AL,@(H'0002,Y)
	ld	X,@(H'000C,Y)
	ld	AH,@(0,X)
	bsr	$_CsrCvcPluginSetAsr
?L4:
?LBE15:
?LBE2:
?LBE_handleAudioMessage:
	leavel	#16
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE2
_handleInternalMessage:
	enterl	#3
?LBB_handleInternalMessage:
	ld	X,@(H'0003,Y)
	cmp	AH,#H'0001
	beq	?L54
	cmp	AH,#-H'7FDA
	bne	?L55
	bsr	$_CsrCvcPluginToneComplete
	bra	(?L51)
?L54:
	bsr	$_CsrCvcPluginToneForceCompleteNoDsp
	bra	(?L51)
?L55:
	st	X,@(0,Y)
	bsr	$_CsrCvcPluginInternalMessage
?L51:
?LBE_handleInternalMessage:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 66 used[1] = 26 total = 92
;# Function pattern *movqi3 used[0] = 118 total = 118
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern jump used[0] = 24 total = 24
;# Function pattern *call1 used[0] = 20 total = 20
;# Function pattern *call_value1 used[0] = 25 total = 25
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 16 used[1] = 1 total = 17
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	csr_cvc_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_ALL -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
_CVC?:
	DS	1
	.CODE
_cvcSetupMcParams:
	enterl	#3
?LBB_cvcSetupMcParams:
	st	AL,@H'fff8
	ld	AL,#H'0000
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L2
	ld	AH,#-H'0400
	st	AH,@(H'0002,X)
	ld	AL,@_CVC?
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@H'fff8
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#-H'0400
	or	AL,#H'0040
	st	AL,@(H'0002,X)
	bra	(?L1)
?L2:
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	and	AL,#H'01FF
	or	AL,#-H'0800
	st	AL,@(H'0002,X)
	ld	AH,@_CVC?
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@H'fff8
	st	AH,@(0,X)
	st	AL,@(1,X)
?L1:
?LBE_cvcSetupMcParams:
	leavel	#3
_csrCvcPluginGetKapFile:
	enterl	#2
?LBB_csrCvcPluginGetKapFile:
	cmp	AL,#(H'0001+H'0010)
	bcc	?L23
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE24,X)
	brxl
	.SEG	CONST
?JTBASE24:
	.CODE
?L24:
	.SEG	CONST
	dc	lwrd(?L22-?L24)
	dc	lwrd(?L22-?L24)
	dc	lwrd(?L22-?L24)
	dc	lwrd(?L13-?L24)
	dc	lwrd(?L13-?L24)
	dc	lwrd(?L13-?L24)
	dc	lwrd(?L17-?L24)
	dc	lwrd(?L17-?L24)
	dc	lwrd(?L17-?L24)
	dc	lwrd(?L21-?L24)
	dc	lwrd(?L21-?L24)
	dc	lwrd(?L21-?L24)
	dc	lwrd(?L22-?L24)
	dc	lwrd(?L22-?L24)
	dc	lwrd(?L13-?L24)
	dc	lwrd(?L17-?L24)
	dc	lwrd(?L21-?L24)
	.CODE
?L13:
	ld	AL,#(?LC1)
	bra	(?L4)
?L17:
	ld	AL,#(?LC2)
	bra	(?L4)
?L21:
	ld	AL,#(?LC3)
	bra	(?L4)
?L22:
	ld	AL,#(?LC0)
	bra	(?L4)
?L23:
	bsr	$_Panic
	ld	AL,#H'0000
?L4:
?LBE_csrCvcPluginGetKapFile:
	leavel	#2
	.SEG	CONST
?LC1:
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'65
	dc	H'61
	dc	H'64
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'5F
	dc	H'32
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2F
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'65
	dc	H'61
	dc	H'64
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'5F
	dc	H'32
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC2:
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'73
	dc	H'66
	dc	H'72
	dc	H'65
	dc	H'65
	dc	H'2F
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'73
	dc	H'66
	dc	H'72
	dc	H'65
	dc	H'65
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC3:
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'73
	dc	H'66
	dc	H'72
	dc	H'65
	dc	H'65
	dc	H'5F
	dc	H'32
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2F
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'73
	dc	H'66
	dc	H'72
	dc	H'65
	dc	H'65
	dc	H'5F
	dc	H'32
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC0:
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'65
	dc	H'61
	dc	H'64
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'2F
	dc	H'63
	dc	H'76
	dc	H'63
	dc	H'5F
	dc	H'68
	dc	H'65
	dc	H'61
	dc	H'64
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
	.CODE
_send_volume_to_dsp:
	enterl	#15
?LBB_send_volume_to_dsp:
	st	AL,@(H'000B,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	bsr	$_CsrMultiChanGainGetType
	cmp	AL,#H'0001
	bne	?L26
	ld	AL,@(H'000C,Y)
?LBB3:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_CsrMultiChanGainGetDigital
	ld	AL,@(H'0003,Y)
	and	AL,#H'000F
	or	AL,#H'0010
	st	AL,@(H'000C,Y)
?L26:
	ld	AL,@(H'000C,Y)
?LBE3:
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	X,@_CVC?
	ld	AL,@(H'000B,X)
	and	AL,#H'00FF
	st	AL,@(H'0002,Y)
	ld	AL,#H'1002
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
?LBE2:
?LBE_send_volume_to_dsp:
	leavel	#15
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
_isResamplingRequired:
	enterl	#2
?LBB_isResamplingRequired:
	bsr	$_CsrMultiChanConfigRequiresI2s
	cmp	AL,#H'0000
	bne	?L29
	ld	AL,#H'0000
	bra	(?L28)
?L29:
	ld	AL,#H'0001
?L28:
?LBE_isResamplingRequired:
	leavel	#2
_loadKapFile:
	enterl	#6
?LBB_loadKapFile:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AH,#-H'7FDC
	bsr	$_MessageCancelAll
	ld	AL,@(H'0001,Y)
	bsr	$_MessageKalimbaTask
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	bsr	_csrCvcPluginGetKapFile
	st	AL,@(H'0003,Y)
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0003,Y)
	bsr	$_FileFind
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	tst	@(H'0002,Y)
	beq	?L31
	ld	AL,#H'0001
?L31:
	bsr	$_PanicNull
	ld	AL,@(H'0002,Y)
	bsr	$_KalimbaLoad
	cmp	AL,#H'0000
	bne	?L32
	bsr	$_Panic
?L32:
	ld	AL,#H'0001
	bsr	$_SetCurrentDspStatus
?LBE4:
?LBE_loadKapFile:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_pluginConnectForProductionTest:
	enterl	#5
?LBB_pluginConnectForProductionTest:
	st	AL,@(H'0002,Y)
	ld	X,@_CVC?
	ld	AL,#H'1F40
	st	AL,@(H'0005,X)
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L34
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_SourceConfigure
	ld	AL,@(H'0002,Y)
	bsr	_connectAudio
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	AL,#H'0000
	bsr	$_SetCurrentDspStatus
	bra	(?L33)
?L34:
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	or	AL,#-H'8000
	st	AL,@(H'000D,X)
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	beq	?L35
	tst	@(H'0003,X)
	beq	?L35
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_SourceConfigure
?L35:
	ld	AL,@(H'0002,Y)
	bsr	_loadKapFile
?L33:
?LBE_pluginConnectForProductionTest:
	leavel	#5
_connectAudioForProductionTest:
	enterl	#9
?LBB_connectAudioForProductionTest:
	st	AL,@(H'0003,Y)
?LBB5:
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L37
?LBB6:
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	beq	?L39
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bra	(?L45)
?L39:
	ld	AL,#H'0003
?L45:
	st	AL,@(H'0004,Y)
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(H'0005,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(H'0005,Y)
	bsr	_connectMic
	bsr	_connectOutputNoCvc
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L37
	ld	AL,@(H'000D,X)
	or	AL,#H'4000
	st	AL,@(H'000D,X)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0004
	and	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L42
	ld	AL,#H'0080
	bra	(?L43)
?L42:
	ld	AL,#H'0040
?L43:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'2000
	ld	AH,@(H'0004,Y)
	bsr	$_KalimbaSendMessage
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L44
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	X,@_CVC?
	ld	AL,@(H'0003,X)
	bsr	$_StreamConnect
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@_CVC?
	ld	AH,@(H'0002,X)
	bsr	$_StreamConnect
?L44:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	st	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
	asl	#H'0001
	st	AL,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	AL,@H'fff8
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,#H'0003
	bsr	$_KalimbaSendMessage
?L37:
?LBE6:
?LBE5:
?LBE_connectAudioForProductionTest:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_CsrCvcPluginConnect:
	enterl	#11
?LBB_CsrCvcPluginConnect:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AH
?LBB7:
	ld	X,@(H'000A,X)
	st	X,@(H'0004,Y)
	bsr	$_SetAudioBusy
	ld	AL,@_CVC?
	bsr	$_PanicNotNull
	ld	AL,#H'000F
	bsr	$_PanicUnlessMalloc
	st	AL,@_CVC?
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'000F
	bcz	?L48
	ld	AL,#H'000F
	st	AL,@(H'0003,X)
?L48:
	ld	AH,@_CVC?
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000B,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#-H'4001
	st	AL,@(H'000D,X)
	ld	AH,@_CVC?
	tst	@(H'0004,Y)
	beq	?L49
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	bra	(?L50)
?L49:
	ld	AL,#H'0000
?L50:
	ld	X,@$XAP_AH
	st	AL,@(H'000A,X)
	ld	AH,@_CVC?
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AH,@_CVC?
	st	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'000F
	ld	X,@(H'0008,Y)
	ld	AL,@(H'000C,X)
	and	AL,#-H'0010
	or	AL,@$XAP_AH
	st	AL,@(H'000C,X)
	ld	AH,@_CVC?
	st	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	asl	#H'0008
	ld	X,@(H'0008,Y)
	ld	AH,@(H'000B,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'000B,X)
	ld	AH,@_CVC?
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@_CVC?
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0003,X)
	ld	AL,@_CVC?
	st	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@(H'0008,Y)
	ld	AH,@(H'000C,X)
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	st	AH,@(H'000C,X)
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#H'7FFF
	st	AL,@(H'000D,X)
	ld	AH,@_CVC?
	st	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0003,X)
	and	AH,#H'00FF
	ld	X,@(H'0008,Y)
	ld	AL,@(H'000B,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'000B,X)
	ld	AH,@_CVC?
	st	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0008,Y)
	st	AH,@(H'0006,X)
	st	AL,@(H'0007,X)
	ld	AH,@_CVC?
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0006,X)
	ld	X,@$XAP_AH
	st	AL,@(H'000E,X)
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'1FFF
	st	AL,@(H'000C,X)
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#-H'1C01
	st	AL,@(H'000C,X)
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#-H'0401
	st	AL,@(H'000D,X)
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#-H'0201
	st	AL,@(H'000D,X)
	ld	AH,@_CVC?
	st	AH,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	cmp	AH,#H'000C
	bne	?L51
	ld	AH,#H'0001
	st	AH,@H'fff8
?L51:
	ld	AL,@H'fff8
	and	AL,#H'0001
	asl	#H'000C
	ld	X,@(H'0008,Y)
	ld	AH,@(H'000D,X)
	and	AH,#-H'1001
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#-H'2001
	st	AL,@(H'000D,X)
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L52
	st	X,@(H'0005,Y)
	ld	AH,#H'0000
	st	AH,@(H'0006,Y)
	bsr	_isResamplingRequired
	cmp	AL,#H'0000
	bne	?L53
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
?L53:
	ld	AL,@(H'0006,Y)
	and	AL,#H'0001
	asl	#H'000D
	ld	X,@(H'0005,Y)
	ld	AH,@(H'000D,X)
	and	AH,#-H'2001
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
	ld	AL,@(H'0002,Y)
	bsr	_pluginConnectForProductionTest
	bra	(?L47)
?L52:
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_AudioPluginSetMicPio
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L54
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0001
	bsr	$_AudioPluginSetMicPio
?L54:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L55
?LBB8:
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#H'0002
	beq	?L56
	ld	X,@_CVC?
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_SourceConfigure
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L56:
	tst	@(H'0007,Y)
	beq	?L57
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	beq	?L57
	ld	AL,@(H'000D,X)
	or	AL,#H'2000
	bra	(?L66)
?L57:
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	or	AL,#-H'8000
?L66:
	st	AL,@(H'000D,X)
?L55:
?LBE8:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L59
	ld	AL,#H'1F40
	st	AL,@(H'0005,X)
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
	bra	(?L60)
?L59:
	ld	X,@_CVC?
	st	X,@(H'0008,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L61
	ld	AL,#H'3E80
	bra	(?L67)
?L61:
	ld	AL,#H'1F40
?L67:
	ld	AH,#H'0000
	ld	X,@(H'0008,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
?L60:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0700
	cmp	AL,#H'0200
	bne	?L63
	ld	X,@_CVC?
	ld	AL,#H'003C
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0009
	bsr	$_SinkConfigure
?L63:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L64
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_SourceConfigure
	ld	AL,@(H'0002,Y)
	bsr	_connectAudio
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_CsrCvcPluginSetVolume
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	AL,#H'0000
	bsr	$_SetCurrentDspStatus
	bra	(?L47)
?L64:
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	beq	?L65
	tst	@(H'0003,X)
	beq	?L65
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	AH,#H'0003
	bsr	$_SourceConfigure
?L65:
	ld	AL,@(H'0002,Y)
	bsr	_loadKapFile
?L47:
?LBE7:
?LBE_CsrCvcPluginConnect:
	leavel	#11
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_CsrCvcPluginDisconnect:
	enterl	#8
?LBB_CsrCvcPluginDisconnect:
	st	AL,@(H'0001,Y)
?LBB9:
	ld	AL,@_CVC?
	bsr	$_PanicNull
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L75
	bsr	_disconnectOutputNoCvc
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(H'0002,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	bsr	_disconnectMic
	bra	(?L76)
?L75:
?LBB10:
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	bne	?L77
	ld	AL,#H'0003
	bra	(?L78)
?L77:
	ld	AL,#H'0000
?L78:
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0005,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	bsr	$_PanicNull
	bsr	$_CsrMultiChanDisconnect
	bsr	$_PanicNull
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	bsr	$_StreamDisconnect
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L79
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	bsr	$_StreamDisconnect
	ld	AL,@(H'0004,Y)
	bsr	$_SourceClose
?L79:
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	X,@_CVC?
	ld	AL,@(H'0003,X)
	bsr	$_StreamDisconnect
	ld	X,@_CVC?
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	bsr	$_StreamDisconnect
?L76:
?LBE10:
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#-H'4001
	st	AL,@(H'000D,X)
	ld	X,@_CVC?
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#-H'0010
	st	AL,@(H'000C,X)
	ld	AL,@(H'0001,Y)
	ld	AH,#-H'7FDC
	bsr	$_MessageCancelAll
	ld	AL,@(H'0001,Y)
	ld	AH,#-H'7FDA
	bsr	$_MessageCancelAll
	ld	X,@_CVC?
	ld	AL,@(0,X)
	ld	AH,#H'7905
	bsr	$_MessageCancelAll
	ld	X,@_CVC?
	ld	AL,@(0,X)
	ld	AH,#H'7901
	bsr	$_MessageCancelAll
	ld	X,@_CVC?
	ld	AL,@(0,X)
	ld	AH,#H'7902
	bsr	$_MessageCancelAll
	ld	X,@_CVC?
	ld	AL,@(0,X)
	ld	AH,#H'7903
	bsr	$_MessageCancelAll
	ld	X,@_CVC?
	ld	AL,@(0,X)
	ld	AH,#H'7904
	bsr	$_MessageCancelAll
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L80
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
?L80:
	ld	AL,@_CVC?
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@_CVC?
	bsr	$_KalimbaPowerOff
	ld	AL,#H'0000
	bsr	$_SetCurrentDspStatus
	ld	AL,#H'0000
	bsr	$_SetAudioInUse
	ld	AL,#H'0000
	bsr	$_SetAsrPlaying
?LBE9:
?LBE_CsrCvcPluginDisconnect:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_CsrCvcPluginSetVolume:
	enterl	#4
?LBB_CsrCvcPluginSetVolume:
	st	AL,@(0,Y)
?LBB11:
	ld	AL,@_CVC?
	bsr	$_PanicNull
	ld	AL,@(0,Y)
	cmp	AL,#H'000F
	bcz	?L83
	ld	AL,#H'000F
	st	AL,@(0,Y)
?L83:
	ld	X,@_CVC?
	ld	AL,@(0,Y)
	asl	#H'0008
	ld	AH,@(H'000B,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'000B,X)
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L84
?LBB12:
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_VolumeConvertDACGainToDB
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	bsr	$_CsrMultiChanGainSetHardwareOnly
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L82
	ld	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_CsrMultiChanGainSetHardwareOnly
	bra	(?L82)
?L84:
?LBE12:
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#H'4200
	cmp	AL,#H'4000
	bne	?L82
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_send_volume_to_dsp
?L82:
?LBE11:
?LBE_CsrCvcPluginSetVolume:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_CsrCvcPluginResetVolume:
	enterl	#2
?LBB_CsrCvcPluginResetVolume:
	tst	@_CVC?
	beq	?L89
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#H'4200
	cmp	AL,#H'4000
	bne	?L89
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_send_volume_to_dsp
?L89:
?LBE_CsrCvcPluginResetVolume:
	leavel	#2
$_CsrCvcPluginSetModeNoDsp:
	enterl	#3
?LBB_CsrCvcPluginSetModeNoDsp:
	cmp	AL,#H'0004
	beq	?L94
	cmp	AL,#H'0004
	bcs	?L99
	bra	(?L92)
?L94:
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(0,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	_connectMic
	bsr	_connectOutputNoCvc
	bra	(?L92)
?L99:
	bsr	$_Panic
?L92:
?LBE_CsrCvcPluginSetModeNoDsp:
	leavel	#3
$_CsrCvcPluginSetSoftMuteNoDsp:
	enterl	#6
?LBB_CsrCvcPluginSetSoftMuteNoDsp:
	ld	X,@$XAP_AL
?LBB13:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L105
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L105:
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0004
	cmp	AH,#H'0000
	beq	?L106
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L106:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,@(H'0001,Y)
	beq	?L107
	tst	@(H'0001,Y)
	beq	?L108
	bsr	_disconnectOutputNoCvc
	bra	(?L109)
?L108:
	bsr	_connectOutputNoCvc
?L109:
	ld	X,@_CVC?
	ld	AL,@(H'0001,Y)
	and	AL,#H'0001
	asl	#H'0009
	ld	AH,@(H'000D,X)
	and	AH,#-H'0201
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
?L107:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,@(0,Y)
	beq	?L104
	tst	@(0,Y)
	beq	?L111
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(H'0002,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	bsr	_disconnectMic
	bra	(?L112)
?L111:
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(H'0003,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	bsr	_connectMic
?L112:
	ld	X,@_CVC?
	ld	AL,@(0,Y)
	and	AL,#H'0001
	asl	#H'000A
	ld	AH,@(H'000D,X)
	and	AH,#-H'0401
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
?L104:
?LBE13:
?LBE_CsrCvcPluginSetSoftMuteNoDsp:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_CsrCvcPluginSetMode:
	enterl	#10
?LBB_CsrCvcPluginSetMode:
	st	AL,@(H'0003,Y)
	st	AH,@H'fff8
?LBB14:
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	tst	@_CVC?
	beq	?L115
	ld	X,@_CVC?
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'0004
	ld	AH,@(H'000C,X)
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	st	AH,@(H'000C,X)
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L117
	ld	AL,@H'fff8
	bsr	$_CsrCvcPluginSetModeNoDsp
	bra	(?L115)
?L117:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	bsr	$_PanicNull
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	st	AH,@(H'0005,Y)
	ld	AL,@(H'000D,X)
	and	AL,#-H'8000
	cmp	AL,#H'0000
	bne	?L118
	ld	X,#H'0001
	st	X,@(-1,Y)
	bra	(?L119)
?L118:
	ld	AL,#H'0003
	st	AL,@(-1,Y)
?L119:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	add	AH,#-H'000D
	cmp	AH,#(H'0001+H'0003)
	bcc	?L120
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	st	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
	asl	#H'0001
	st	AL,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	AL,@H'fff8
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,#H'0002
	bra	(?L131)
?L120:
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0004
	beq	?L122
	cmp	AH,#H'0004
	bcs	?L128
	cmp	AH,#H'0008
	bne	?L115
	ld	AL,#H'0006
	st	AL,@(-1,Y)
	ld	X,#H'0000
	st	X,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	bra	(?L122)
?L128:
	bsr	$_Panic
	bra	(?L115)
?L122:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@(H'0001,Y)
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	st	X,@(H'0007,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
	asl	#H'0001
	st	AL,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	AL,@H'fff8
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,@(-1,Y)
?L131:
	bsr	$_KalimbaSendMessage
	ld	AL,@(H'0005,Y)
	bsr	_send_volume_to_dsp
?L115:
?LBE14:
?LBE_CsrCvcPluginSetMode:
	leavel	#10
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_CsrCvcPluginSetSoftMute:
	enterl	#11
?LBB_CsrCvcPluginSetSoftMute:
	st	AL,@(H'0003,Y)
?LBB15:
	tst	@_CVC?
	beq	?L135
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L137
	ld	AL,@(H'0003,Y)
	bsr	$_CsrCvcPluginSetSoftMuteNoDsp
	bra	(?L135)
?L137:
?LBB16:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#-H'8000
	cmp	AL,#H'0000
	bne	?L139
	ld	X,#H'0001
	st	X,@(H'0007,Y)
	bra	(?L140)
?L139:
	ld	AL,#H'0003
	st	AL,@(H'0007,Y)
?L140:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	bsr	$_PanicNull
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L141
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L141:
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0004
	cmp	AH,#H'0000
	beq	?L142
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
?L142:
	tst	@(H'0004,Y)
	beq	?L143
	tst	@(H'0005,Y)
	beq	?L143
	ld	X,#H'0006
	st	X,@(H'0007,Y)
?L143:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000A
	and	AH,#H'0001
	cmp	AH,@(H'0004,Y)
	beq	?L144
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,Y)
	and	AL,#H'0001
	asl	#H'000A
	ld	AH,@(H'000D,X)
	and	AH,#-H'0401
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
?L144:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,@(H'0005,Y)
	beq	?L145
	tst	@(H'0005,Y)
	bne	?L146
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	bra	(?L147)
?L146:
	ld	AH,#H'0000
?L147:
	ld	AL,@$XAP_AH
	bsr	_send_volume_to_dsp
	tst	@(H'0004,Y)
	beq	?L148
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
?L148:
	ld	X,@_CVC?
	ld	AL,@(H'0005,Y)
	and	AL,#H'0001
	asl	#H'0009
	ld	AH,@(H'000D,X)
	and	AH,#-H'0201
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
?L145:
	tst	@(H'0006,Y)
	beq	?L135
	ld	AL,#H'0000
	st	AL,@(0,Y)
	tst	@(H'0004,Y)
	beq	?L150
	ld	AL,#H'0003
	bra	(?L151)
?L150:
	ld	AL,#H'0001
?L151:
	st	AL,@(H'0001,Y)
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	st	X,@(H'0008,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
	asl	#H'0001
	st	AL,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	AL,@H'fff8
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,@(H'0007,Y)
	bsr	$_KalimbaSendMessage
?L135:
?LBE16:
?LBE15:
?LBE_CsrCvcPluginSetSoftMute:
	leavel	#11
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_CsrCvcPluginPlayTone:
	enterl	#13
?LBB_CsrCvcPluginPlayTone:
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_AH
?LBB17:
	bsr	$_StreamRingtoneSource
	st	AL,@(H'0008,Y)
	ld	AL,@_CVC?
	bsr	$_PanicNull
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L155
	ld	AH,@(H'000D,Y)
?LBB18:
	st	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	bne	?L156
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	st	AH,@(H'0009,Y)
?L156:
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L157
	bsr	_disconnectOutputNoCvc
?L157:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0001
	bsr	_cvcSetupMcParams
	ld	AL,@(H'0005,Y)
	and	AL,#-H'0181
	or	AL,#H'0100
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0000
	bsr	$_CsrMultiChanConnectStereoSource
	bsr	$_PanicNull
	bsr	$_CsrMultiChanGetAudioSink
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSinkTask
	ld	AL,@(H'0009,Y)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainSetHardwareOnly
	bra	(?L154)
?L155:
?LBE18:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	bsr	$_PanicNull
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	add	AH,#-H'000D
	cmp	AH,#(H'0001+H'0003)
	bcc	?L158
?LBB19:
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	_setMicGain
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L158
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	_setMicGain
?L158:
	ld	AH,@(H'000D,Y)
?LBE19:
	cmp	AH,#H'000F
	bcz	?L160
	ld	AL,#H'000F
	st	AL,@(H'000D,Y)
?L160:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1072
	ld	AH,#H'1F40
	bsr	$_KalimbaSendMessage
	ld	X,@_CVC?
	st	X,@(H'000A,Y)
	ld	AH,@(H'000B,X)
	st	AH,@H'fff8
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	ld	AH,@(H'000D,Y)
	cmp	AH,@$XAP_AL
	beq	?L161
	and	AH,#H'00FF
	ld	AL,@H'fff8
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'000B,X)
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	_send_volume_to_dsp
?L161:
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSinkTask
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_StreamConnectAndDispose
	bsr	$_PanicNull
?L154:
?LBE17:
?LBE_CsrCvcPluginPlayTone:
	leavel	#13
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_CsrCvcPluginStopTone:
	enterl	#3
?LBB_CsrCvcPluginStopTone:
	st	AL,@(0,Y)
	ld	AL,@_CVC?
	bsr	$_PanicNull
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L165
	bsr	_disconnectOutputNoCvc
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_CsrCvcPluginSetModeNoDsp
	bra	(?L166)
?L165:
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_StreamDisconnect
	ld	X,@(0,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	add	AH,#-H'000D
	cmp	AH,#(H'0001+H'0003)
	bcc	?L166
	bsr	$_CsrCvcPluginResetVolume
?L166:
	ld	AL,#H'0000
	bsr	$_SetTonePlaying
?LBE_CsrCvcPluginStopTone:
	leavel	#3
_setMicGain:
	enterl	#4
?LBB_setMicGain:
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
?LBB20:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_AudioPluginGetMic
	ld	X,@$XAP_AL
	tst	@(H'0004,Y)
	beq	?L169
	ld	AH,@(H'0005,Y)
	lsr	#H'0005
	and	AH,#H'000F
	bra	(?L170)
?L169:
	ld	AH,@(H'0005,Y)
	and	AH,#H'001F
?L170:
	st	AH,@(0,Y)
	ld	AH,@(H'0005,Y)
	lsr	#H'000F
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	bsr	$_AudioPluginSetMicGain
?LBE20:
?LBE_setMicGain:
	leavel	#4
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
_getVoiceOutputSampleRate:
	enterl	#2
?LBB_getVoiceOutputSampleRate:
?LBB21:
	bsr	$_CsrMultiChanConfigRequiresI2s
	cmp	AL,#H'0000
	beq	?L172
?LBB22:
	bsr	$_CsrI2SVoiceResamplingFrequency
	ld	AH,#H'0000
	cmp	AH,#H'0000
	bne	?L171
	cmp	AL,#H'0000
	bne	?L171
?L172:
?LBE22:
	ld	X,@_CVC?
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
?L171:
?LBE21:
?LBE_getVoiceOutputSampleRate:
	leavel	#2
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
_connectAudio:
	enterl	#22
?LBB_connectAudio:
	st	AL,@(H'0006,Y)
?LBB23:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L176
	ld	AL,@(H'0006,Y)
	bsr	_connectAudioForProductionTest
	bra	(?L175)
?L176:
	ld	X,@_CVC?
	tst	@(H'0002,X)
	bne	?L179
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	add	AH,#-H'000D
	cmp	AH,#(H'0001+H'0003)
	bcc	?L178
?L179:
?LBB24:
	ld	AH,#H'0001
	st	AH,@(H'000A,Y)
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	beq	?L180
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	and	AH,#H'0007
	st	AH,@(H'000B,Y)
	bra	(?L181)
?L180:
	ld	AL,#H'0003
	st	AL,@(H'000B,Y)
?L181:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	_cvcSetupMcParams
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	cmp	AH,#H'0004
	beq	?L183
	cmp	AH,#H'000A
	bne	?L182
?L183:
	ld	AL,#H'1F40
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?L182:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_CsrMultiChannelGetSampleRate
	st	AL,@(H'0007,Y)
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
	ld	X,@_CVC?
	ld	AH,@(H'000E,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L190
	cmp	AH,#H'0001
	bcc	?L184
	ld	X,@(H'000A,X)
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0008,Y)
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,Y)
	ld	AH,#H'0000
	st	AH,@(H'000C,Y)
	st	AL,@(H'000D,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	bsr	$_AudioPluginSetMicRate
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L186
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0009,Y)
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	X,@$XAP_AH
	ld	AH,@(H'000C,Y)
	ld	AL,@(H'000D,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@$XAP_UXL
	bsr	$_AudioPluginSetMicRate
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_SourceSynchronise
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L184
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0009,Y)
	bra	(?L209)
?L186:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L184
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
?L209:
	bsr	$_StreamConnect
	bsr	$_PanicNull
	bra	(?L184)
?L190:
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L191
	bsr	$_CsrI2SVoiceResamplingFrequency
	ld	AH,#H'0000
	st	AH,@(H'000E,Y)
	st	AL,@(H'000F,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	st	AL,@(H'0010,Y)
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
	bra	(?L208)
?L191:
	bsr	$_CsrI2SVoiceResamplingFrequency
	ld	AH,#H'0000
	st	AH,@(H'0011,Y)
	st	AL,@(H'0012,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0011,Y)
	ld	AL,@(H'0012,Y)
?L208:
	bsr	$_CsrI2SAudioInputConnect
?L184:
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L197
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L197
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	$_CsrCvcPluginSetModeNoDsp
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainSetHardwareOnly
	bra	(?L175)
?L197:
	bsr	_getVoiceOutputSampleRate
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_CsrMultiChanConnectDsp
	bsr	$_PanicNull
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	or	AL,#H'4000
	st	AL,@(H'000D,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0004
	and	AH,#H'0007
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L198
	ld	AL,#H'0080
	bra	(?L199)
?L198:
	ld	AL,#H'0040
?L199:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'2000
	ld	AH,@(H'000B,Y)
	bsr	$_KalimbaSendMessage
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L200
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	X,@_CVC?
	ld	AL,@(H'0003,X)
	bsr	$_StreamConnect
	ld	X,@_CVC?
	ld	AL,@(H'000C,X)
	and	AL,#H'000F
	cmp	AL,#H'0004
	bne	?L201
	ld	AL,#H'0003
	bra	(?L210)
?L201:
	ld	AL,#H'0000
?L210:
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@_CVC?
	ld	AH,@(H'0002,X)
	bsr	$_StreamConnect
?L200:
	bsr	$_CsrMultiChanI2sActive
	cmp	AL,#H'0000
	beq	?L203
	ld	AH,#H'0002
	st	AH,@(H'000A,Y)
?L203:
	ld	AL,#H'0000
	st	AL,@(H'0013,Y)
	bsr	$_CsrMultiChanI2sActive
	cmp	AL,#H'0000
	beq	?L205
	ld	X,#H'0001
	st	X,@(H'0013,Y)
?L205:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	X,#H'000A
	st	X,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	bsr	$___udivhi3
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0013,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@H'fff9
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L204
	bsr	$_Panic
?L204:
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	and	AH,#H'000F
	bsr	$_CsrCvcPluginSetMode
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	add	AH,#-H'000D
	cmp	AH,#(H'0001+H'0003)
	bcc	?L175
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'1020
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0001
	bsr	$_SetAsrPlaying
?LBE24:
	bra	(?L175)
?L178:
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	or	AL,#H'4000
	st	AL,@(H'000D,X)
	ld	AL,@(H'0006,Y)
	bsr	$_CsrCvcPluginDisconnect
?L175:
?LBE23:
?LBE_connectAudio:
	leavel	#22
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
_codecMessage:
	enterl	#6
?LBB_codecMessage:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	tst	@_CVC?
	beq	?L217
	ld	AL,@(H'0007,Y)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainSetHardwareOnly
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000C
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L219
	ld	AL,@(H'0007,Y)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	bsr	$_CsrMultiChanGainSetHardwareOnly
?L219:
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	_setMicGain
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L217
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	X,@(H'000A,X)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	_setMicGain
?L217:
?LBE_codecMessage:
	leavel	#6
$_CsrCvcPluginInternalMessage:
	enterl	#7
?LBB_CsrCvcPluginInternalMessage:
	st	AL,@(H'0003,Y)
	ld	X,@(H'0007,Y)
?LBB25:
	cmp	AH,#-H'7FDC
	beq	?L223
	cmp	AH,#-H'7FD6
	beq	?L267
	bra	(?L221)
?L223:
?LBB26:
	ld	AL,@(0,X)
	cmp	AL,#H'1006
	beq	?L245
	cmp	AL,#(H'0001+H'1006)
	bcc	?L264
	cmp	AL,#H'0003
	beq	?L254
	cmp	AL,#(H'0001+H'0003)
	bcc	?L265
	cmp	AL,#H'0001
	beq	?L250
	cmp	AL,#H'0002
	beq	?L252
	bra	(?L221)
?L265:
	cmp	AL,#H'0005
	beq	?L258
	cmp	AL,#H'0005
	bcs	?L256
	cmp	AL,#H'1000
	beq	?L225
	bra	(?L221)
?L264:
	cmp	AL,#H'1014
	beq	?L247
	cmp	AL,#(H'0001+H'1014)
	bcc	?L266
	cmp	AL,#H'100C
	beq	?L249
	cmp	AL,#H'1013
	beq	?L249
	bra	(?L221)
?L266:
	cmp	AL,#H'1080
	beq	?L246
	bra	(?L221)
?L225:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	cmp	AH,#(H'0001+H'000E)
	bcc	?L239
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE244,X)
	brxl
	.SEG	CONST
?JTBASE244:
	.CODE
?L244:
	.SEG	CONST
	dc	lwrd(?L228-?L244)
	dc	lwrd(?L233-?L244)
	dc	lwrd(?L228-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L236-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L236-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L236-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L239-?L244)
	dc	lwrd(?L237-?L244)
	dc	lwrd(?L238-?L244)
	.CODE
?L228:
	ld	X,@_CVC?
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	cmp	AH,#H'0000
	bne	?L229
	cmp	AL,#H'1F40
	bne	?L229
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bra	(?L277)
?L229:
	ld	X,@_CVC?
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	cmp	AH,#H'0000
	bne	?L242
	cmp	AL,#H'3E80
	bne	?L242
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2267
	bra	(?L274)
?L233:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0000
?L277:
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2263
	bra	(?L274)
?L236:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bra	(?L278)
?L237:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2263
	bra	(?L275)
?L238:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2280
?L275:
	bsr	$_KalimbaSendMessage
	ld	AL,@(H'0003,Y)
	bsr	$_CvcConfigureASR
	bra	(?L226)
?L239:
	ld	X,@_CVC?
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	cmp	AH,#H'0000
	bne	?L240
	cmp	AL,#H'1F40
	bne	?L240
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L278:
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2280
	bra	(?L274)
?L240:
	ld	X,@_CVC?
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	cmp	AH,#H'0000
	bne	?L242
	cmp	AL,#H'3E80
	bne	?L242
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2284
?L274:
	bsr	$_KalimbaSendMessage
	bra	(?L226)
?L242:
	bsr	$_Panic
?L226:
	ld	AL,#H'0002
	bsr	$_SetCurrentDspStatus
	ld	AL,@(H'0003,Y)
	bsr	_connectAudio
	bra	(?L221)
?L245:
?LBB27:
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	ld	X,@(H'0003,X)
	st	X,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	bsr	_codecMessage
	ld	AL,#H'0003
	bsr	$_SetCurrentDspStatus
?LBE27:
	bra	(?L221)
?L246:
	ld	AL,@(H'0003,Y)
	bsr	_csrCvcPluginMessageToneComplete
	bra	(?L221)
?L247:
?LBB28:
	ld	AL,@(H'0001,X)
	bsr	$_PblockGet
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	and	AH,#H'00FF
	add	X,#H'0001
	st	X,@(0,Y)
	ld	AL,#H'1015
	bsr	$_KalimbaSendLongMessage
?LBE28:
	bra	(?L221)
?L249:
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	bra	(?L221)
?L250:
	ld	X,@_CVC?
	tst	@(0,X)
	beq	?L221
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7901
	bra	(?L276)
?L252:
	ld	X,@_CVC?
	tst	@(0,X)
	beq	?L221
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7902
	bra	(?L276)
?L254:
	ld	X,@_CVC?
	tst	@(0,X)
	beq	?L221
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7903
	bra	(?L276)
?L256:
	ld	X,@_CVC?
	tst	@(0,X)
	beq	?L221
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7904
	bra	(?L276)
?L258:
	ld	X,@_CVC?
	tst	@(0,X)
	beq	?L221
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7905
?L276:
	bsr	$_MessageSend
	bra	(?L221)
?L267:
?LBE26:
?LBB29:
	ld	AL,@(0,X)
	cmp	AL,#H'1016
	bne	?L221
	ld	AH,@(H'0001,X)
	add	AH,#-H'0001
	ld	AL,#H'0003
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	bsr	$_PblockSet
?L221:
?LBE29:
?LBE25:
?LBE_CsrCvcPluginInternalMessage:
	leavel	#7
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;.stabn	224,0,0,?LBE26
_toneCompleteNoDsp:
	enterl	#6
?LBB_toneCompleteNoDsp:
	st	AL,@(H'0003,Y)
	bsr	_disconnectOutputNoCvc
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L298
	bsr	_connectOutputNoCvc
	ld	X,@_CVC?
	ld	AL,@(H'0002,X)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	bne	?L298
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'05DC
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendLater
	bra	(?L297)
?L298:
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_CsrCvcPluginSetVolume
?L297:
?LBE_toneCompleteNoDsp:
	leavel	#6
$_CsrCvcPluginToneComplete:
	enterl	#3
?LBB_CsrCvcPluginToneComplete:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L303
	ld	AL,@(0,Y)
	bsr	_toneCompleteNoDsp
	bra	(?L304)
?L303:
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	and	AL,#H'4200
	cmp	AL,#H'4200
	bne	?L305
	ld	AL,#H'0000
	bsr	_send_volume_to_dsp
?L305:
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
?L304:
	ld	AL,#H'0000
	bsr	$_SetTonePlaying
?LBE_CsrCvcPluginToneComplete:
	leavel	#3
_csrCvcPluginMessageToneComplete:
	enterl	#2
?LBB_csrCvcPluginMessageToneComplete:
	bsr	$_CsrCvcPluginToneComplete
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_StreamDisconnect
?LBE_csrCvcPluginMessageToneComplete:
	leavel	#2
$_CsrCvcPluginToneForceCompleteNoDsp:
	enterl	#3
?LBB_CsrCvcPluginToneForceCompleteNoDsp:
	tst	@_CVC?
	beq	?L308
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L310
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	bsr	_disconnectOutputNoCvc
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(0,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	_disconnectMic
?L310:
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_CsrCvcPluginSetVolume
	ld	AL,#H'0000
	bsr	$_SetTonePlaying
?L308:
?LBE_CsrCvcPluginToneForceCompleteNoDsp:
	leavel	#3
_connectMic:
	enterl	#10
?LBB_connectMic:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB30:
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	and	AH,#H'0001
	bsr	_cvcSetupMcParams
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L312
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
?LBB31:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_AudioPluginMicSetup
	ld	X,@_CVC?
	ld	AH,@(H'0002,X)
	bra	(?L314)
?L312:
?LBE31:
?LBB32:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_CsrMultiChannelGetSampleRate
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	$_AudioPluginMicSetup
	st	AL,@(H'0007,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
?L314:
	bsr	$_StreamConnect
	bsr	$_PanicNull
?LBE32:
?LBE30:
?LBE_connectMic:
	leavel	#10
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE30
_getEnableMaskForChannel:
	enterl	#2
?LBB_getEnableMaskForChannel:
	ld	X,@$XAP_AL
?LBB33:
	ld	AL,#H'0001
	asl	@$XAP_UXL
?LBE33:
	xor	AL,#-H'0001
?LBE_getEnableMaskForChannel:
	leavel	#2
_disconnectMic:
	enterl	#6
?LBB_disconnectMic:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AH
?LBB34:
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'0001,Y)
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0003,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L317
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bra	(?L319)
?L317:
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
?L319:
	bsr	$_StreamDisconnect
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
?LBE34:
?LBE_disconnectMic:
	leavel	#6
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
_connectOutputNoCvc:
	enterl	#10
?LBB_connectOutputNoCvc:
?LBB35:
	ld	X,@_CVC?
	ld	AL,@(H'0002,X)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L320
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	and	AH,#H'0001
	bsr	_cvcSetupMcParams
	ld	AL,@_CVC?
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L322
	ld	AH,@(H'000C,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	_getEnableMaskForChannel
	asl	#H'0009
	ld	AH,@(H'0005,Y)
	and	AH,#H'01FF
	or	AH,@$XAP_AL
	st	AH,@(H'0005,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'000C,X)
	lsr	#H'000A
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	and	AH,#H'0007
	bsr	$_CsrMultiChanConnectSourceToMultiChannelOutput
	bra	(?L323)
?L322:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_CsrMultiChannelGetSampleRate
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	_getEnableMaskForChannel
	asl	#H'0009
	ld	AH,@(H'0005,Y)
	and	AH,#H'01FF
	or	AH,@$XAP_AL
	st	AH,@(H'0005,Y)
	ld	AL,#H'0005
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	st	AL,@H'fff8
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000A
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	and	AH,#H'0007
	bsr	$_CsrMultiChanConnectSourceToMultiChannelOutput
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	bsr	$_CsrMultiChanI2sActive
	cmp	AL,#H'0000
	beq	?L325
	ld	X,#H'0001
	st	X,@(H'0007,Y)
?L325:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	X,#H'000A
	st	X,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	bsr	$___udivhi3
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@H'fff9
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L323
	bsr	$_Panic
?L323:
	ld	X,@_CVC?
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	bsr	$_CsrCvcPluginSetVolume
?L320:
?LBE35:
?LBE_connectOutputNoCvc:
	leavel	#10
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
_getAudioChannelFromMicId:
; leaf function with empty stack frame
?LBB_getAudioChannelFromMicId:
	cmp	AL,#H'0001
	bne	?L327
	ld	AL,#H'0001
	bra	(?L326)
?L327:
	ld	AL,#H'0000
?L326:
?LBE_getAudioChannelFromMicId:
	rts
_getMicParamsFromMicId:
	enterl	#2
?LBB_getMicParamsFromMicId:
	cmp	AL,#H'0001
	bne	?L330
	ld	X,@_CVC?
	ld	AL,@(H'000A,X)
	add	AL,#H'0001
	bra	(?L329)
?L330:
	ld	X,@_CVC?
	ld	AL,@(H'000A,X)
?L329:
?LBE_getMicParamsFromMicId:
	leavel	#2
$_CsrCvcPluginMicSwitch:
	enterl	#6
?LBB_CsrCvcPluginMicSwitch:
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L332
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	st	AH,@(0,Y)
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	_disconnectMic
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	asl	#H'000D
	ld	AH,@(H'000C,X)
	and	AH,#H'1FFF
	or	AH,@$XAP_AL
	st	AH,@(H'000C,X)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	cmp	AH,#H'0001
	bcz	?L334
	ld	AL,@(H'000C,X)
	and	AL,#H'1FFF
	st	AL,@(H'000C,X)
?L334:
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'000D
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_AH
	bsr	_getAudioChannelFromMicId
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	bsr	_getMicParamsFromMicId
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	bsr	_connectMic
?L332:
?LBE_CsrCvcPluginMicSwitch:
	leavel	#6
_getNextValidMultiChannelOutput:
	enterl	#4
?LBB_getNextValidMultiChannelOutput:
	st	AL,@(H'0001,Y)
?LBB36:
	st	AL,@(0,Y)
?L337:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L340
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L340:
	ld	AL,@(H'0001,Y)
	bsr	$_CsrMultiChanGetOutputType
	cmp	AL,#H'0000
	bne	?L338
	ld	AL,@(0,Y)
	cmp	AL,@(H'0001,Y)
	bne	?L337
?L338:
?LBE36:
	ld	AL,@(H'0001,Y)
?LBE_getNextValidMultiChannelOutput:
	leavel	#4
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
$_CsrCvcPluginOutputSwitch:
	enterl	#3
?LBB_CsrCvcPluginOutputSwitch:
	ld	X,@_CVC?
	tst	@(H'0002,X)
	beq	?L345
	bsr	_disconnectOutputNoCvc
	ld	AL,@_CVC?
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'000C,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bsr	_getNextValidMultiChannelOutput
	and	AL,#H'0007
	asl	#H'000A
	ld	X,@(0,Y)
	ld	AH,@(H'000C,X)
	and	AH,#-H'1C01
	or	AH,@$XAP_AL
	st	AH,@(H'000C,X)
	bsr	_connectOutputNoCvc
?L345:
?LBE_CsrCvcPluginOutputSwitch:
	leavel	#3
_disconnectOutputNoCvc:
	enterl	#2
?LBB_disconnectOutputNoCvc:
	bsr	$_CsrMultiChanDisconnect
	bsr	$_CsrMultiChanGetAudioSink
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
?LBE_disconnectOutputNoCvc:
	leavel	#2
$_CsrCvcPluginSetPower:
	enterl	#6
?LBB_CsrCvcPluginSetPower:
	st	AL,@(H'0002,Y)
	st	AH,@H'fff8
?LBB37:
	tst	@_CVC?
	beq	?L348
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	cmp	AH,#H'000C
	beq	?L348
	ld	X,@_CVC?
	ld	AH,@(H'000D,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L348
	ld	AL,@(H'000D,X)
	and	AL,#H'7FFF
	st	AL,@(H'000D,X)
	ld	AH,@H'fff8
	cmp	AH,#(H'0001+H'0002)
	bcc	?L352
	ld	X,@_CVC?
	ld	AL,@(H'000D,X)
	or	AL,#-H'8000
	st	AL,@(H'000D,X)
?L352:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L353
?LBB38:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	and	AH,#H'000F
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7002
	bsr	$_MessageSendConditionally
?LBE38:
	bra	(?L348)
?L353:
	ld	X,@_CVC?
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	and	AH,#H'000F
	bsr	$_CsrCvcPluginSetMode
?L348:
?LBE37:
?LBE_CsrCvcPluginSetPower:
	leavel	#6
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
$_CvcConfigureASR:
	enterl	#9
?LBB_CvcConfigureASR:
?LBB39:
	ld	AL,#H'7FFF
	st	AL,@(0,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,#H'7200
	ld	AH,#H'0001
	bsr	$_KalimbaSendMessage
	bsr	$_PanicNull
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,#H'003C
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L356
	ld	X,@$XAP_UY
	add	X,#H'0003
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1021
	ld	AH,@(H'0003,Y)
	bsr	$_KalimbaSendMessage
	bsr	$_PanicNull
?L356:
?LBE39:
?LBE_CvcConfigureASR:
	leavel	#9
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_CsrCvcPluginSetAsr:
	enterl	#5
?LBB_CsrCvcPluginSetAsr:
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	add	AH,#-H'000D
	cmp	AH,#(H'0001+H'0003)
	bcc	?L358
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1020
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0001
	bsr	$_SetAsrPlaying
?L358:
?LBE_CsrCvcPluginSetAsr:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 403 used[1] = 98 total = 501
;# Function pattern *movqi3 used[0] = 776 total = 776
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[2] = 14 used[3] = 15 total = 29
;# Function pattern *addqi0 used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 11 used[2] = 1 total = 12
;# Function pattern *andqi3 used[0] = 125 total = 125
;# Function pattern *iorqi3 used[0] = 32 total = 32
;# Function pattern *lshrqi3 used[0] = 124 total = 124
;# Function pattern *ashlqi3 used[0] = 19 total = 19
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2_1 used[0] = 4 total = 4
;# Function pattern jump used[0] = 74 total = 74
;# Function pattern *call1 used[0] = 116 total = 116
;# Function pattern *call_value1 used[0] = 170 total = 170
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 57 used[1] = 33 total = 90
;# Function pattern movstrqi+4 used[1] = 13 total = 13
;# Function pattern movstrqi+5 used[0] = 51 total = 51
;# Function pattern movstrqi+6 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[0] = 4 total = 4
	MODULE	csr_voice_prompts
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
_phrase_data:
	DS	1
	.CODE
_sendDspSampleRateMessages:
	enterl	#5
?LBB_sendDspSampleRateMessages:
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0005
	bne	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0300
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@(H'0006,X)
	bsr	$_KalimbaSendMessage
	ld	X,@_phrase_data
	tst	@(H'0009,X)
	beq	?L13
	ld	AL,#H'0003
	bra	(?L12)
?L2:
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0006
	bne	?L6
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0200
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@(H'0006,X)
	bsr	$_KalimbaSendMessage
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L11:
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1072
	ld	AH,@(H'0005,X)
	bsr	$_KalimbaSendMessage
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1071
	ld	AH,@(H'0006,X)
	bra	(?L10)
?L6:
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0001
	bne	?L8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0300
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@(H'0006,X)
	bsr	$_KalimbaSendMessage
	ld	X,@_phrase_data
?L13:
	ld	AL,#H'0002
?L12:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bra	(?L11)
?L8:
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0100
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@(H'0006,X)
	bsr	$_KalimbaSendMessage
	ld	X,@_phrase_data
	ld	AH,#H'0000
	ld	AL,@(H'0005,X)
	udiv	#H'000A
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1071
?L10:
	bsr	$_KalimbaSendMessage
?LBE_sendDspSampleRateMessages:
	leavel	#5
_sendDspMultiChannelMessages:
	enterl	#13
?LBB_sendDspMultiChannelMessages:
?LBB2:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_CsrMultiChanGetDspOutputTypesMsg
	bsr	$_PanicNull
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'10A0
	ld	AH,#H'0007
	bsr	$_KalimbaSendLongMessage
	cmp	AL,#H'0000
	bne	?L18
	bsr	$_Panic
?L18:
	bsr	$_CsrMultiChanI2sActive
	cmp	AL,#H'0000
	beq	?L17
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	bsr	$_CsrI2SMasterIsEnabled
	cmp	AL,#H'0000
	bne	?L21
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
?L21:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'10A1
	ld	AH,@(H'000A,Y)
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L17
	bsr	$_Panic
?L17:
?LBE2:
?LBE_sendDspMultiChannelMessages:
	leavel	#13
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_CsrVoicePromptsIsMixable:
	enterl	#11
?LBB_CsrVoicePromptsIsMixable:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0007,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'000B,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'000C,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	ld	AH,@$XAP_UXL
	bsr	_csrVoicePromptsGetPrompt
	st	AL,@(H'0007,Y)
	bsr	$_SourceClose
	cmp	AL,#H'0000
	bne	?L23
	bsr	$_Panic
?L23:
	ld	AL,@(H'0008,Y)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0001
	beq	?L27
	cmp	AL,#H'0001
	bcs	?L28
	add	AL,#-H'0005
	cmp	AL,#(H'0001+H'0001)
	bcc	?L28
?L27:
	ld	AL,#H'0001
	bra	(?L22)
?L28:
	ld	AL,#H'0000
?L22:
?LBE3:
?LBE_CsrVoicePromptsIsMixable:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_csrVoicePromptsGetPrompt:
	enterl	#25
?LBB_csrVoicePromptsGetPrompt:
	st	AL,@(H'0013,Y)
	st	AH,@(H'0014,Y)
?LBB4:
	cmp	AH,#H'0000
	beq	?L40
	ld	X,@(H'0014,Y)
	tst	@(H'000C,X)
	beq	?L34
	ld	AL,#H'0001
	bsr	$_SetTonePlaying
	ld	AL,#H'0000
	ld	X,@(H'0013,Y)
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	ld	AL,#H'0006
	st	AL,@(H'0002,X)
	ld	AL,#H'1F40
	st	AL,@(H'0003,X)
	ld	X,@(H'0014,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0007
	and	AH,#H'0001
	ld	X,@(H'0013,Y)
	st	AH,@(H'0004,X)
	ld	X,@(H'0014,Y)
	ld	AL,@(H'000C,X)
	bsr	$_StreamRingtoneSource
	bra	(?L32)
?L34:
	ld	X,@(H'0014,Y)
	ld	X,@(H'000B,X)
	st	X,@(H'0016,Y)
	ld	X,@(H'0014,Y)
	ld	AL,@(H'0007,X)
	smult	@_header+H'0001
	ld	AH,@(H'0016,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0016,Y)
	cmp	AH,@_header
	bcc	?L40
	tst	@(H'0013,Y)
	beq	?L40
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_FileFind
	bsr	$_StreamFileSource
	st	AL,@(H'0015,Y)
	bsr	$_SourceSize
	cmp	AL,#(H'0001+H'000B)
	bcc	?L37
	ld	AL,@(H'0015,Y)
	bsr	$_SourceClose
?L40:
	ld	AL,#H'0000
	bra	(?L32)
?L37:
	ld	AL,@(H'0015,Y)
	bsr	$_SourceMap
	st	AL,@H'fffa
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	ld	X,@(H'0013,Y)
	st	AL,@(H'0004,X)
	ld	X,@H'fffa
	ld	AH,#H'0000
	ld	AL,@(H'0005,X)
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0006,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0007,X)
	asl	#H'0008
	ld	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0008,X)
	or	AL,@H'fff9
	or	AH,@H'fff8
	ld	X,@(H'0013,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@H'fffa
	ld	AL,@(H'0009,X)
	ld	X,@(H'0013,Y)
	st	AL,@(H'0002,X)
	ld	X,@H'fffa
	ld	AL,@(H'000A,X)
	asl	#H'0008
	or	AL,@(H'000B,X)
	ld	X,@(H'0013,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0013,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#hwrd(H'0001+H'FFFF)
	bcs	?L38
	bne	?L42
	cmp	AL,#lwrd(H'0001+H'FFFF)
	bcs	?L38
?L42:
	ld	AL,#-H'0001
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
?L38:
	ld	AL,#(?LC1)
	st	AL,@(0,Y)
	ld	AH,@(H'0016,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_sprintf
	ld	AL,@(H'0015,Y)
	bsr	$_SourceClose
	cmp	AL,#H'0000
	bne	?L39
	bsr	$_Panic
?L39:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_FileFind
	bsr	$_StreamFileSource
?L32:
?LBE4:
?LBE_csrVoicePromptsGetPrompt:
	leavel	#25
	.SEG	CONST
?LC0:
	dc	H'68
	dc	H'65
	dc	H'61
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'73
	dc	H'2F
	dc	H'25
	dc	H'64
	dc	H'2E
	dc	H'69
	dc	H'64
	dc	H'78
	dc	H'00
?LC1:
	dc	H'70
	dc	H'72
	dc	H'6F
	dc	H'6D
	dc	H'70
	dc	H'74
	dc	H'73
	dc	H'2F
	dc	H'25
	dc	H'64
	dc	H'2E
	dc	H'70
	dc	H'72
	dc	H'6D
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_csrVoicePromptsGetKapFile:
	enterl	#2
?LBB_csrVoicePromptsGetKapFile:
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#(H'0001+H'0006)
	bcc	?L51
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE52,X)
	brxl
	.SEG	CONST
?JTBASE52:
	.CODE
?L52:
	.SEG	CONST
	dc	lwrd(?L51-?L52)
	dc	lwrd(?L48-?L52)
	dc	lwrd(?L48-?L52)
	dc	lwrd(?L49-?L52)
	dc	lwrd(?L50-?L52)
	dc	lwrd(?L48-?L52)
	dc	lwrd(?L48-?L52)
	.CODE
?L48:
	ld	AL,#(?LC2)
	bra	(?L43)
?L49:
	ld	AL,#(?LC3)
	bra	(?L43)
?L50:
	ld	AL,#(?LC4)
	bra	(?L43)
?L51:
	bsr	$_Panic
	ld	AL,#H'0000
?L43:
?LBE_csrVoicePromptsGetKapFile:
	leavel	#2
	.SEG	CONST
?LC2:
	dc	H'73
	dc	H'62
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'73
	dc	H'62
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC3:
	dc	H'6D
	dc	H'70
	dc	H'33
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'6D
	dc	H'70
	dc	H'33
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC4:
	dc	H'61
	dc	H'61
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'61
	dc	H'61
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
	.CODE
_csrVoicePromptsDecompressionToDecoder:
	enterl	#2
?LBB_csrVoicePromptsDecompressionToDecoder:
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#(H'0001+H'0006)
	bcc	?L61
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE62,X)
	brxl
	.SEG	CONST
?JTBASE62:
	.CODE
?L62:
	.SEG	CONST
	dc	lwrd(?L61-?L62)
	dc	lwrd(?L58-?L62)
	dc	lwrd(?L58-?L62)
	dc	lwrd(?L59-?L62)
	dc	lwrd(?L60-?L62)
	dc	lwrd(?L58-?L62)
	dc	lwrd(?L58-?L62)
	.CODE
?L58:
	ld	AL,#H'0001
	bra	(?L53)
?L59:
	ld	AL,#H'0002
	bra	(?L53)
?L60:
	ld	AL,#H'0003
	bra	(?L53)
?L61:
	ld	AL,#H'0000
?L53:
?LBE_csrVoicePromptsDecompressionToDecoder:
	leavel	#2
_CsrVoicePromptsPluginIsDSPRequiredForTonePlayback:
	enterl	#2
?LBB_CsrVoicePromptsPluginIsDSPRequiredForTonePlayback:
	bsr	$_CsrMultiChanConfigRequiresI2s
	cmp	AL,#H'0000
	bne	?L67
	ld	AL,#H'0005
	bsr	$_CsrMultiChanGetOutputType
	cmp	AL,#H'0000
	bne	?L67
	ld	X,@_phrase_data
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L66
?L67:
	ld	AL,#H'0001
	bra	(?L63)
?L66:
	ld	AL,#H'0000
?L63:
?LBE_CsrVoicePromptsPluginIsDSPRequiredForTonePlayback:
	leavel	#2
$_CsrVoicePromptsPluginInit:
	enterl	#2
?LBB_CsrVoicePromptsPluginInit:
	ld	X,@$XAP_AH
	st	AL,@_header
	ld	AH,#H'0000
	udiv	@$XAP_UXL
	st	AL,@_header+H'0001
?LBE_CsrVoicePromptsPluginInit:
	leavel	#2
$_CsrVoicePromptPluginPlayDsp:
	enterl	#13
?LBB_CsrVoicePromptPluginPlayDsp:
	st	AL,@(H'0006,Y)
?LBB5:
	cmp	AL,#H'0000
	bne	?L70
?LBB6:
	bsr	_csrVoicePromptsGetKapFile
	st	AL,@(H'0008,Y)
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0008,Y)
	bsr	$_FileFind
	bsr	$_KalimbaLoad
	cmp	AL,#H'0000
	bne	?L69
	bra	(?L80)
?L70:
?LBE6:
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0005
	beq	?L73
	cmp	AL,#H'0001
	beq	?L73
	cmp	AL,#H'0006
	bne	?L72
?L73:
?LBB7:
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	st	AL,@(H'0009,Y)
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0001
	bne	?L74
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0009,Y)
	bsr	$_TransformAdpcmDecode
	bsr	$_TransformStart
	bra	(?L79)
?L74:
	ld	X,@_phrase_data
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0009,Y)
	bsr	$_StreamConnect
?L79:
	bsr	$_PanicNull
	ld	AL,@(H'0009,Y)
	ld	AH,#($_csr_voice_prompts_plugin)
	bsr	$_MessageSinkTask
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?LBE7:
	bra	(?L76)
?L72:
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	X,@_phrase_data
	ld	AL,@(H'0002,X)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	X,#H'0000
	st	X,@(H'0007,Y)
?L76:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	bne	?L69
	ld	X,#H'0000
?LBB8:
	st	X,@(H'0005,Y)
	ld	AL,#-H'4480
	st	AL,@(H'0004,Y)
	st	X,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_CsrMultiChanConnectDsp
	bsr	$_PanicNull
	ld	AL,@_phrase_data
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	X,#H'000A
	st	X,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	bsr	$___udivhi3
	ld	X,@(H'000A,Y)
	st	AL,@(H'0006,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0008,X)
	ld	AH,@(H'0007,Y)
	bsr	$_CsrVoicePromptsPluginSetVolume
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7050
	ld	AH,@(H'0005,X)
	bsr	$_KalimbaSendMessage
	bsr	_csrVoicePromptsDecompressionToDecoder
	ld	AH,@$XAP_AL
	ld	X,#H'0000
	st	X,@(0,Y)
	st	X,@(H'0001,Y)
	st	X,@(H'0002,Y)
	ld	AL,#H'1020
	bsr	$_KalimbaSendMessage
	bsr	_sendDspSampleRateMessages
	bsr	_sendDspMultiChannelMessages
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7000
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L69
?L80:
	bsr	$_Panic
?L69:
?LBE8:
?LBE5:
?LBE_CsrVoicePromptPluginPlayDsp:
	leavel	#13
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE5
_CsrVoicePromptsPluginPlayDigit:
	enterl	#18
?LBB_CsrVoicePromptsPluginPlayDigit:
?LBB9:
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@_phrase_data
	bsr	_csrVoicePromptsGetPrompt
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	bne	?L87
	bsr	$_Panic
?L87:
	ld	AL,#($_csr_voice_prompts_plugin)
	bsr	$_SetAudioBusy
	ld	X,@_phrase_data
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0002,X)
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0004,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0009,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	bne	?L88
	ld	AL,#H'1F40
?L88:
	st	AL,@(H'0005,X)
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(H'000A,X)
	ld	AL,#H'0001
	bsr	$_SetVpPlaying
	ld	AL,@(H'0005,Y)
	cmp	AL,#(H'0001+H'0006)
	bcc	?L117
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE118,X)
	brxl
	.SEG	CONST
?JTBASE118:
	.CODE
?L118:
	.SEG	CONST
	dc	lwrd(?L91-?L118)
	dc	lwrd(?L90-?L118)
	dc	lwrd(?L114-?L118)
	dc	lwrd(?L114-?L118)
	dc	lwrd(?L114-?L118)
	dc	lwrd(?L105-?L118)
	dc	lwrd(?L92-?L118)
	.CODE
?L90:
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L91:
	ld	X,@_phrase_data
	ld	AL,@(H'0008,X)
	add	AL,@$XAP_AL
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'0003
	st	AL,@(H'0008,X)
?L92:
?LBB10:
	ld	AL,#H'0000
	st	AL,@(H'000D,Y)
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L93
	ld	X,@_phrase_data
	ld	AL,#H'0001
	st	AL,@(H'000A,X)
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0006
	bne	?L94
	ld	X,@_phrase_data
	ld	AL,@(H'000D,Y)
	st	AL,@(0,Y)
	bra	(?L119)
?L94:
	ld	X,@_phrase_data
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0000
?L119:
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1072
	ld	AH,@(H'0005,X)
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	st	AL,@(H'000D,Y)
	ld	X,@_phrase_data
	ld	AH,#H'0000
	ld	AL,@(H'0005,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'0301
	bsr	$_SinkConfigure
	ld	AL,@(H'000D,Y)
	ld	AH,#($_csr_voice_prompts_plugin)
	bsr	$_MessageSinkTask
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0001
	bne	?L96
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_TransformAdpcmDecode
	bsr	$_TransformStart
	bra	(?L121)
?L96:
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000D,Y)
	bra	(?L120)
?L93:
	bsr	_CsrVoicePromptsPluginIsDSPRequiredForTonePlayback
	cmp	AL,#H'0000
	beq	?L99
?LBB11:
	ld	AL,#($_csr_voice_prompts_plugin)
	bsr	$_MessageKalimbaTask
	bra	(?L123)
?L99:
?LBE11:
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'000E,Y)
	st	AL,@(H'0009,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'0040
	st	AL,@(H'000A,Y)
	ld	X,@_phrase_data
	ld	AH,#H'0000
	ld	AL,@(H'0005,X)
	st	AH,@(H'0008,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000C,Y)
	and	AL,#H'0003
	asl	#H'0007
	or	AL,#H'0040
	st	AL,@(H'000A,Y)
	ld	AL,#H'0001
	bsr	$_CsrMultiChanGetOutputType
	cmp	AL,#H'0000
	beq	?L103
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@_phrase_data
	bsr	_csrVoicePromptsGetPrompt
	st	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	bne	?L104
	bsr	$_Panic
?L104:
	ld	X,@_phrase_data
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0003,X)
?L103:
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000E,Y)
	bsr	$_CsrMultiChanConnectStereoSource
	bsr	$_PanicNull
	bsr	$_CsrMultiChanGetAudioSink
	st	AL,@(H'000D,Y)
	ld	AH,#($_csr_voice_prompts_plugin)
	bsr	$_MessageSinkTask
	ld	X,@_phrase_data
	ld	AL,@(H'0008,X)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainSetHardwareOnly
?LBE12:
?LBE10:
	bra	(?L86)
?L105:
?LBB13:
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L106
	ld	X,@_phrase_data
	ld	AL,#H'0001
	st	AL,@(H'000A,X)
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	st	AL,@(H'000F,Y)
	ld	X,@_phrase_data
	ld	AH,#H'0000
	ld	AL,@(H'0005,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'0301
	bsr	$_SinkConfigure
	ld	AL,@(H'000F,Y)
	ld	AH,#($_csr_voice_prompts_plugin)
	bsr	$_MessageSinkTask
	ld	X,@_phrase_data
	tst	@(H'0009,X)
	beq	?L107
	ld	AL,#H'0003
	bra	(?L108)
?L107:
	ld	AL,#H'0002
?L108:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1072
	ld	AH,@(H'0005,X)
	bsr	$_KalimbaSendMessage
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000F,Y)
?L120:
	bsr	$_StreamConnect
?L121:
	bsr	$_PanicNull
	bra	(?L86)
?L106:
?LBB14:
	ld	AL,#($_csr_voice_prompts_plugin)
	bsr	$_MessageKalimbaTask
	st	AL,@H'fff8
	ld	X,@_phrase_data
	ld	AL,@(H'0008,X)
	add	AL,@$XAP_AL
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'0003
	st	AL,@(H'0008,X)
	ld	X,@H'fff8
	cmp	X,#($_csr_voice_prompts_plugin)
	beq	?L122
	bra	(?L115)
?L114:
?LBE14:
?LBE13:
?LBB15:
	ld	AL,#($_csr_voice_prompts_plugin)
	bsr	$_MessageKalimbaTask
	st	AL,@H'fff8
	ld	X,@_phrase_data
	ld	AL,@(H'0008,X)
	add	AL,@$XAP_AL
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'0003
	st	AL,@(H'0008,X)
	ld	AL,@H'fff8
?L123:
	cmp	AL,#($_csr_voice_prompts_plugin)
	bne	?L115
?L122:
	ld	AL,#H'0002
	bra	(?L116)
?L115:
	ld	AL,#H'0000
?L116:
	bsr	$_CsrVoicePromptPluginPlayDsp
?LBE15:
	bra	(?L86)
?L117:
	bsr	$_Panic
?L86:
?LBE9:
?LBE_CsrVoicePromptsPluginPlayDigit:
	leavel	#18
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE9
$_CsrVoicePromptsPluginPlayPhrase:
	enterl	#5
?LBB_CsrVoicePromptsPluginPlayPhrase:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	tst	@_phrase_data
	beq	?L129
	bsr	$_Panic
?L129:
	ld	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@_phrase_data
	ld	AH,#H'000D
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@_phrase_data
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0007,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0005,Y)
	st	AL,@(0,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0008,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0001,Y)
	st	AL,@(H'000B,X)
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(H'000A,X)
	ld	X,@_phrase_data
	st	AL,@(H'000C,X)
	bsr	_CsrVoicePromptsPluginPlayDigit
?LBE_CsrVoicePromptsPluginPlayPhrase:
	leavel	#5
$_CsrVoicePromptsPluginPlayTone:
	enterl	#4
?LBB_CsrVoicePromptsPluginPlayTone:
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	bne	?L131
	bsr	$_Panic
?L131:
	ld	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@_phrase_data
	ld	AH,#H'000D
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@_phrase_data
	ld	AL,#H'0000
	st	AL,@(H'0007,X)
	ld	X,@_phrase_data
	ld	AH,@(H'0004,Y)
	st	AH,@(0,X)
	ld	X,@_phrase_data
	ld	AH,@(H'0005,Y)
	st	AH,@(H'0008,X)
	ld	X,@_phrase_data
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,X)
	ld	X,@_phrase_data
	st	AL,@(H'000B,X)
	ld	X,@_phrase_data
	st	AL,@(H'000A,X)
	ld	X,@_phrase_data
	ld	AL,@(H'0001,Y)
	st	AL,@(H'000C,X)
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#-H'7FDA
	bsr	$_MessageCancelAll
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#-H'7FDC
	bsr	$_MessageCancelAll
	bsr	_CsrVoicePromptsPluginPlayDigit
?LBE_CsrVoicePromptsPluginPlayTone:
	leavel	#4
$_CsrVoicePromptsPluginHandleStreamDisconnect:
	enterl	#2
?LBB_CsrVoicePromptsPluginHandleStreamDisconnect:
	tst	@_phrase_data
	beq	?L132
	ld	X,@_phrase_data
	tst	@(H'000A,X)
	bne	?L132
	bsr	$_CsrVoicePromptsPluginStopPhrase
?L132:
?LBE_CsrVoicePromptsPluginHandleStreamDisconnect:
	leavel	#2
_CsrVoicePromptsPluginStopPhraseMixable:
	enterl	#3
?LBB_CsrVoicePromptsPluginStopPhraseMixable:
?LBB16:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L135
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	st	AL,@(0,Y)
	bra	(?L136)
?L135:
	bsr	$_CsrMultiChanDisconnect
	bsr	$_PanicNull
?L136:
	tst	@(0,Y)
	beq	?L137
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
	ld	AL,@(0,Y)
	bsr	$_SinkClose
?L137:
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#-H'7FDA
	bsr	$_MessageCancelAll
?LBE16:
?LBE_CsrVoicePromptsPluginStopPhraseMixable:
	leavel	#3
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_CsrVoicePromptsPluginStopPhraseDsp:
	enterl	#2
?LBB_CsrVoicePromptsPluginStopPhraseDsp:
	ld	AL,#H'0000
	bsr	$_MessageKalimbaTask
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#-H'7FDC
	bsr	$_MessageCancelAll
	bsr	$_CsrMultiChanDisconnect
	bsr	$_PanicNull
	bsr	$_KalimbaPowerOff
?LBE_CsrVoicePromptsPluginStopPhraseDsp:
	leavel	#2
$_CsrVoicePromptsPluginStopPhrase:
	enterl	#2
?LBB_CsrVoicePromptsPluginStopPhrase:
	bsr	$_IsAudioBusy
	cmp	AL,#($_csr_voice_prompts_plugin)
	bne	?L139
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
?L139:
?LBE_CsrVoicePromptsPluginStopPhrase:
	leavel	#2
$_CsrVoicePromptsPluginCleanup:
	enterl	#3
?LBB_CsrVoicePromptsPluginCleanup:
?LBB17:
	tst	@_phrase_data
	bne	?L143
	bsr	$_Panic
?L143:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@_phrase_data
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0006
	bne	?L144
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L144:
	ld	X,@_phrase_data
	ld	AL,@(H'0002,X)
	bsr	_DisconnectAndCloseSource
	ld	X,@_phrase_data
	ld	AL,@(H'0003,X)
	bsr	_DisconnectAndCloseSource
	ld	X,@_phrase_data
	tst	@(H'000A,X)
	beq	?L145
	bsr	_CsrVoicePromptsPluginStopPhraseMixable
	bra	(?L146)
?L145:
	bsr	_CsrVoicePromptsPluginStopPhraseDsp
?L146:
	ld	AL,@_phrase_data
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@_phrase_data
	bsr	$_SetVpPlaying
	tst	@(0,Y)
	beq	?L147
	ld	AL,#H'0000
	bsr	$_SetTonePlaying
?L147:
	ld	AL,#($_csr_voice_prompts_plugin)
	ld	AH,#H'700A
	bsr	$_MessageCancelAll
?LBE17:
?LBE_CsrVoicePromptsPluginCleanup:
	leavel	#3
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
_DisconnectAndCloseSource:
	enterl	#3
?LBB_DisconnectAndCloseSource:
	st	AL,@(0,Y)
	bsr	$_SourceIsValid
	cmp	AL,#H'0000
	beq	?L149
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	AL,@(0,Y)
	bsr	$_SourceClose
?L149:
?LBE_DisconnectAndCloseSource:
	leavel	#3
$_CsrVoicePromptsPluginSetVolume:
	enterl	#23
?LBB_CsrVoicePromptsPluginSetVolume:
	st	AL,@(H'0012,Y)
	st	AH,@(H'0013,Y)
?LBB18:
	ld	AL,#H'0000
	st	AL,@(H'0014,Y)
	ld	AL,@(H'0012,Y)
	bsr	$_VolumeConvertDACGainToDB
	st	AL,@(H'0012,Y)
	tst	@(H'0013,Y)
	bne	?L152
	add	AL,#-H'0168
	st	AL,@(H'0014,Y)
	st	AL,@(H'0012,Y)
?L152:
	ld	AL,@(H'0012,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0014,Y)
	bsr	$_CsrMultiChanGainGetDigital
	ld	AL,@(H'0012,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0014,Y)
	bsr	$_CsrMultiChanGainGetDigital
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'1002
	ld	AH,#H'0008
	bsr	$_KalimbaSendLongMessage
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,#H'101B
	ld	AH,#H'0005
	bsr	$_KalimbaSendLongMessage
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,@(H'0014,Y)
	bsr	$_CsrMultiChanGainSetHardware
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0014,Y)
	bsr	$_CsrMultiChanGainSetHardware
?LBE18:
?LBE_CsrVoicePromptsPluginSetVolume:
	leavel	#23
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
	.SEG	VAR
_header:
	DS	2
	ENDMOD

;# Function pattern *movqi2 used[0] = 171 used[1] = 36 total = 207
;# Function pattern *movqi3 used[0] = 282 total = 282
;# Function pattern *movhi used[2] = 2 used[3] = 7 total = 9
;# Function pattern *iorhi3 used[0] = 3 total = 3
;# Function pattern *addqi0 used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 6 total = 6
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *udivqi3_const used[0] = 1 total = 1
;# Function pattern *divqi3_const used[0] = 3 total = 3
;# Function pattern *udivqi3 used[0] = 1 total = 1
;# Function pattern *mulqi3 used[0] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *extendqihi2 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2 used[0] = 6 total = 6
;# Function pattern *zero_extendqihi2_1 used[0] = 2 total = 2
;# Function pattern jump used[0] = 28 total = 28
;# Function pattern *call1 used[0] = 38 total = 38
;# Function pattern *call_value1 used[0] = 100 total = 100
;# Function pattern tablejump_1 used[0] = 3 total = 3
;# Function pattern zero_extendqihi2+1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 23 used[1] = 12 total = 35
;# Function pattern movstrqi+4 used[1] = 5 total = 5
;# Function pattern movstrqi+5 used[0] = 17 total = 17
;# Function pattern movstrqi+7 used[0] = 1 total = 1
	MODULE	csr_voice_prompts_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_csr_voice_prompts_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	.CODE
_message_handler:
	enterl	#3
?LBB_message_handler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'7000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0018)
	bcc	?L2
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleAudioMessage
	bra	(?L1)
?L2:
	cmp	AH,#-H'7FDC
	bne	?L4
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_handleKalimbaMessage
	bra	(?L1)
?L4:
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleInternalMessage
?L1:
?LBE_message_handler:
	leavel	#3
_handleAudioMessage:
	enterl	#10
?LBB_handleAudioMessage:
	st	AL,@(H'0003,Y)
?LBB2:
	ld	AL,#-H'7007
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0004)
	bcc	?L7
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE22,X)
	brxl
	.SEG	CONST
?JTBASE22:
	.CODE
?L22:
	.SEG	CONST
	dc	lwrd(?L16-?L22)
	dc	lwrd(?L20-?L22)
	dc	lwrd(?L10-?L22)
	dc	lwrd(?L20-?L22)
	dc	lwrd(?L9-?L22)
	.CODE
?L9:
	ld	X,@(H'000A,Y)
?LBB3:
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_CsrVoicePromptsPluginInit
?LBE3:
	bra	(?L7)
?L10:
	ld	AH,@(H'000A,Y)
?LBB4:
	st	AH,@(H'0004,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	bne	?L12
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0000
	beq	?L11
	bsr	$_GetCurrentDspStatus
	cmp	AL,#H'0003
	beq	?L11
?L12:
	ld	X,@(H'0004,Y)
	tst	@(H'0002,X)
	beq	?L7
?LBB5:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'7009
	bra	(?L23)
?L11:
	ld	X,@(H'0004,Y)
?LBE5:
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_CsrVoicePromptsPluginPlayPhrase
?LBE4:
	bra	(?L7)
?L16:
	ld	AH,@(H'000A,Y)
?LBB6:
	st	AH,@(H'0006,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L17
	ld	X,@(H'0006,Y)
	tst	@(H'0001,X)
	beq	?L7
?LBB7:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0007,Y)
	st	AL,@(H'0004,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'7007
?L23:
	bsr	$_MessageSendConditionally
?LBE7:
	bra	(?L7)
?L17:
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_CsrVoicePromptsPluginPlayTone
?LBE6:
	bra	(?L7)
?L20:
	bsr	$_CsrVoicePromptsPluginStopPhrase
?L7:
?LBE2:
?LBE_handleAudioMessage:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
_handleKalimbaMessage:
	enterl	#2
?LBB_handleKalimbaMessage:
	ld	X,@$XAP_AH
?LBB8:
	ld	AL,@(0,X)
	cmp	AL,#H'1006
	beq	?L25
	cmp	AL,#(H'0001+H'1006)
	bcc	?L32
	cmp	AL,#H'1000
	beq	?L27
	bra	(?L25)
?L32:
	cmp	AL,#H'1080
	beq	?L29
	bra	(?L25)
?L27:
	ld	AL,#H'0001
	bsr	$_CsrVoicePromptPluginPlayDsp
	bra	(?L25)
?L29:
	bsr	$_CsrVoicePromptsPluginStopPhrase
?L25:
?LBE8:
?LBE_handleKalimbaMessage:
	leavel	#2
_handleInternalMessage:
	enterl	#2
?LBB_handleInternalMessage:
	cmp	AH,#-H'7FDE
	beq	?L36
	cmp	AH,#-H'7FDA
	bne	?L40
	bsr	$_CsrVoicePromptsPluginHandleStreamDisconnect
	bra	(?L36)
?L40:
	bsr	$_Panic
?L36:
?LBE_handleInternalMessage:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 27 used[1] = 8 total = 35
;# Function pattern *movqi3 used[0] = 43 total = 43
;# Function pattern *addqi2 used[2] = 2 total = 2
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 12 total = 12
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 2 total = 5
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	csr_a2dp_decoder_common_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_csr_sbc_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'1000
$_csr_mp3_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'2000
$_csr_aac_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'3000
$_csr_faststream_sink_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'4000
$_csr_aptx_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'6000
$_csr_aptx_acl_sprint_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'7000
$_csr_tws_sbc_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'A000
$_csr_tws_mp3_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'B000
$_csr_tws_aac_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'C000
$_csr_tws_aptx_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'D000
$_csr_fm_decoder_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	dc	H'E000
$_sbc_caps_sink:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0006
	dc	H'0000
	dc	H'0000
	dc	H'00FF
	dc	H'00FF
	dc	H'0002
	dc	H'0035
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_mp3_caps_sink:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0006
	dc	H'0000
	dc	H'0001
	dc	H'003F
	dc	H'003F
	dc	H'00FF
	dc	H'00FE
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_aac_caps_sink:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0008
	dc	H'0000
	dc	H'0002
	dc	H'00C0
	dc	H'00FF
	dc	H'008C
	dc	H'0084
	dc	H'00E2
	dc	H'0000
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_faststream_caps_sink:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'000A
	dc	H'0000
	dc	H'00FF
	dc	H'000A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0003
	dc	H'0023
$_aptx_caps_sink:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0009
	dc	H'0000
	dc	H'00FF
	dc	H'004F
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0032
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_aptx_acl_sprint_caps_sink:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0013
	dc	H'0000
	dc	H'00FF
	dc	H'000A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0002
	dc	H'0000
	dc	H'0032
	dc	H'0003
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
$_tws_sbc_caps:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0010
	dc	H'0000
	dc	H'00FF
	dc	H'000A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0003
	dc	H'0001
	dc	H'0007
	dc	H'0006
	dc	H'0000
	dc	H'0000
	dc	H'00FF
	dc	H'00FF
	dc	H'0002
	dc	H'0035
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_tws_mp3_caps:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0010
	dc	H'0000
	dc	H'00FF
	dc	H'000A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0005
	dc	H'0001
	dc	H'0007
	dc	H'0006
	dc	H'0000
	dc	H'0001
	dc	H'003F
	dc	H'0007
	dc	H'00FF
	dc	H'00FE
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_tws_aac_caps:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0012
	dc	H'0000
	dc	H'00FF
	dc	H'000A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0004
	dc	H'0001
	dc	H'0007
	dc	H'0008
	dc	H'0000
	dc	H'0002
	dc	H'00C0
	dc	H'00FF
	dc	H'008C
	dc	H'0084
	dc	H'00E2
	dc	H'0000
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
$_tws_aptx_caps:
	dc	H'0001
	dc	H'0000
	dc	H'0007
	dc	H'0013
	dc	H'0000
	dc	H'00FF
	dc	H'000A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0006
	dc	H'0001
	dc	H'0007
	dc	H'0009
	dc	H'0000
	dc	H'00FF
	dc	H'004F
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0032
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
	dc	H'0008
	dc	H'0000
	.CODE
_message_handler:
	enterl	#3
?LBB_message_handler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'7000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0018)
	bcc	?L2
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleAudioMessage
	bra	(?L1)
?L2:
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleInternalMessage
?L1:
?LBE_message_handler:
	leavel	#3
_handleAudioMessage:
	enterl	#26
?LBB_handleAudioMessage:
	st	AL,@(H'0009,Y)
?LBB2:
	ld	AL,#-H'7000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0016)
	bcc	?L4
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE49,X)
	brxl
	.SEG	CONST
?JTBASE49:
	.CODE
?L49:
	.SEG	CONST
	dc	lwrd(?L6-?L49)
	dc	lwrd(?L9-?L49)
	dc	lwrd(?L13-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L34-?L49)
	dc	lwrd(?L37-?L49)
	dc	lwrd(?L40-?L49)
	dc	lwrd(?L44-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L30-?L49)
	dc	lwrd(?L18-?L49)
	dc	lwrd(?L4-?L49)
	dc	lwrd(?L27-?L49)
	dc	lwrd(?L46-?L49)
	dc	lwrd(?L22-?L49)
	dc	lwrd(?L12-?L49)
	dc	lwrd(?L25-?L49)
	dc	lwrd(?L26-?L49)
	.CODE
?L6:
	ld	AH,@(H'001A,Y)
?LBB3:
	st	AH,@(H'000A,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L7
?LBB4:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	X,@(H'001A,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000B,Y)
	st	AL,@(0,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'001A,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'000B,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0008,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'000A,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'000B,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'000B,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7000
	bra	(?L51)
?L7:
	ld	X,@(H'000A,Y)
?LBE4:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000A,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000B,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(0,X)
	bsr	$_CsrA2dpDecoderPluginConnect
?LBE3:
	bra	(?L4)
?L9:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L10
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7001
	bra	(?L51)
?L10:
	ld	AL,@(H'0009,Y)
	bsr	$_CsrA2dpDecoderPluginStartDisconnect
	bra	(?L4)
?L12:
	ld	AL,@(H'0009,Y)
	bsr	$_CsrA2dpDecoderPluginDisconnect
	bra	(?L4)
?L13:
	ld	AL,@(H'001A,Y)
?LBB5:
	st	AL,@(H'000C,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L14
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000D,Y)
	tst	@(H'001A,Y)
	beq	?L15
	ld	X,@(H'001A,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'000D,Y)
	bra	(?L50)
?L15:
	ld	AL,#H'0004
	ld	X,@(H'000D,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
?L50:
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7002
	bra	(?L51)
?L14:
	ld	X,@(H'000C,Y)
?LBE6:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0009,Y)
	bsr	$_CsrA2dpDecoderPluginSetMode
?LBE5:
	bra	(?L4)
?L18:
	ld	AH,@(H'001A,Y)
?LBB7:
	st	AH,@(H'000E,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	bne	?L20
	bsr	$_IsTonePlaying
	cmp	AL,#H'0000
	beq	?L19
?L20:
?LBB8:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000F,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	ld	X,@(H'000F,Y)
	st	AL,@(0,X)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'000F,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'000F,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'700F
	bra	(?L51)
?L19:
	ld	X,@(H'000E,Y)
?LBE8:
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_CsrA2dpDecoderPluginSetSubWoofer
?LBE7:
	bra	(?L4)
?L22:
	ld	AH,@(H'001A,Y)
?LBB9:
	st	AH,@(H'0010,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L23
?LBB10:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0011,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0011,Y)
	ld	AH,@(H'001A,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0011,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7013
	bra	(?L51)
?L23:
?LBE10:
	ld	AL,@(H'0010,Y)
	bsr	$_CsrA2dpDecoderPluginSetSoftMute
?LBE9:
	bra	(?L4)
?L25:
	bsr	$_CsrA2dpDecoderPluginAllowVolChanges
	bra	(?L4)
?L26:
	bsr	$_CsrA2dpDecoderPluginSubCheckForConnectionFailure
	bra	(?L4)
?L27:
	ld	AL,@(H'001A,Y)
?LBB11:
	st	AL,@(H'0012,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L28
?LBB12:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0013,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	ld	AH,@(H'001A,Y)
	bsr	$_memcpy
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0013,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7011
	bra	(?L51)
?L28:
?LBE12:
	ld	AL,@(H'0012,Y)
	bsr	$_CsrA2dpDecoderPluginSetVolume
?LBE11:
	bra	(?L4)
?L30:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L31
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'700E
	bra	(?L51)
?L31:
	bsr	$_CsrA2dpDecoderPluginResetVolume
	bra	(?L4)
?L34:
	ld	AL,@(H'001A,Y)
?LBB13:
	st	AL,@(H'0014,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L35
?LBB14:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0015,Y)
	ld	X,@(H'001A,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0015,Y)
	st	AL,@(0,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0015,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0015,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7005
	bra	(?L51)
?L35:
	ld	X,@(H'0014,Y)
?LBE14:
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0001
	bra	(?L52)
?L37:
?LBE13:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L38
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7006
	bra	(?L51)
?L38:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0000
?L52:
	bsr	$_CsrA2dpDecoderPluginForwardUndecoded
	bra	(?L4)
?L40:
	ld	AH,@(H'001A,Y)
?LBB15:
	st	AH,@(H'0016,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L41
	ld	X,@(H'001A,Y)
	tst	@(H'0001,X)
	beq	?L4
?LBB16:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0017,Y)
	ld	X,@(H'001A,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0017,Y)
	st	AL,@(0,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0017,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0017,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0017,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'001A,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0017,Y)
	st	AL,@(H'0004,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0017,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'7007
?L51:
	bsr	$_MessageSendConditionally
?LBE16:
	bra	(?L4)
?L41:
	ld	X,@(H'0016,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(0,X)
	bsr	$_CsrA2dpDecoderPluginPlayTone
?LBE15:
	bra	(?L4)
?L44:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L4
	bsr	$_CsrA2dpDecoderPluginStopTone
	bra	(?L4)
?L46:
?LBB17:
	ld	AL,@(H'001A,Y)
	bsr	$_CsrA2dpDecoderPluginSetHardwareLevels
?L4:
?LBE17:
?LBE2:
?LBE_handleAudioMessage:
	leavel	#26
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
_handleInternalMessage:
	enterl	#3
?LBB_handleInternalMessage:
	ld	X,@(H'0003,Y)
	cmp	AH,#-H'7FDA
	beq	?L53
	st	X,@(0,Y)
	bsr	$_CsrA2dpDecoderPluginInternalMessage
?L53:
?LBE_handleInternalMessage:
	leavel	#3
$_AudioGetA2DPSampleRate:
	enterl	#2
?LBB_AudioGetA2DPSampleRate:
	bsr	$_CsrA2DPGetDecoderSampleRate
?LBE_AudioGetA2DPSampleRate:
	leavel	#2
$_AudioGetA2DPSubwooferSampleRate:
	enterl	#2
?LBB_AudioGetA2DPSubwooferSampleRate:
	bsr	$_CsrA2DPGetDecoderSubwooferSampleRate
?LBE_AudioGetA2DPSubwooferSampleRate:
	leavel	#2
$_AudioGetLatency:
	enterl	#3
?LBB_AudioGetLatency:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_CsrA2dpDecoderPluginGetLatency
?LBE_AudioGetLatency:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 78 used[1] = 26 total = 104
;# Function pattern *movqi3 used[0] = 130 total = 130
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi2 used[2] = 2 total = 2
;# Function pattern jump used[0] = 26 total = 26
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 34 total = 34
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 12 used[1] = 2 total = 14
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	csr_a2dp_decoder_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
_DECODER:
	DS	1
_pskey_read:
	DS	1
_val_pskey_max_mismatch:
	DS	1
_val_clock_mismatch:
	DS	1
	.SEG	CONST
_dsp_variant:
	dc	H'0000
	dc	H'0001
	dc	H'0002
	dc	H'0003
	dc	H'0004
	dc	H'0005
	dc	H'0006
	dc	H'0007
	dc	H'0008
	dc	H'0009
	dc	H'0001
	dc	H'0002
	dc	H'0003
	dc	H'0006
	dc	H'0001
	.CODE
_getDspVariant:
	enterl	#2
?LBB_getDspVariant:
	ld	X,@$XAP_AL
	cmp	AL,#(H'0001+H'000E)
	bcc	?L2
	ld	AL,@(_dsp_variant,X)
	bra	(?L1)
?L2:
	ld	AL,#-H'0001
?L1:
?LBE_getDspVariant:
	leavel	#2
_sendLatencyReport:
	enterl	#5
?LBB_sendLatencyReport:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7302
	bsr	$_MessageSend
?LBE2:
?LBE_sendLatencyReport:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_sourceDisconnectFlushClose:
	enterl	#3
?LBB_sourceDisconnectFlushClose:
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	AL,@(0,Y)
	bsr	$_StreamConnectDispose
	ld	AL,@(0,Y)
	bsr	$_SourceClose
?LBE_sourceDisconnectFlushClose:
	leavel	#3
$_CsrA2dpDecoderPluginSetAudioLatency:
	enterl	#4
?LBB_CsrA2dpDecoderPluginSetAudioLatency:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB3:
	tst	@_DECODER
	beq	?L5
?LBB4:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	ld	AL,@$XAP_AH
	asl	#H'0004
	ld	AH,@(H'000C,X)
	and	AH,#H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'000C,X)
	ld	AL,@(H'000D,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L8
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	cmp	AL,#H'0000
	beq	?L5
?L8:
	ld	X,@_DECODER
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0015,X)
	ld	AH,@H'fff9
	bsr	_sendLatencyReport
?L5:
?LBE4:
?LBE3:
?LBE_CsrA2dpDecoderPluginSetAudioLatency:
	leavel	#4
_estimateLatency:
	enterl	#2
?LBB_estimateLatency:
	ld	AH,@$XAP_AL
?LBB5:
	ld	AL,#H'0000
	cmp	AH,#(H'0001+H'000D)
	bcc	?L10
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE22,X)
	brxl
	.SEG	CONST
?JTBASE22:
	.CODE
?L22:
	.SEG	CONST
	dc	lwrd(?L10-?L22)
	dc	lwrd(?L14-?L22)
	dc	lwrd(?L14-?L22)
	dc	lwrd(?L14-?L22)
	dc	lwrd(?L16-?L22)
	dc	lwrd(?L10-?L22)
	dc	lwrd(?L14-?L22)
	dc	lwrd(?L16-?L22)
	dc	lwrd(?L10-?L22)
	dc	lwrd(?L10-?L22)
	dc	lwrd(?L20-?L22)
	dc	lwrd(?L20-?L22)
	dc	lwrd(?L20-?L22)
	dc	lwrd(?L20-?L22)
	.CODE
?L14:
	ld	AL,#H'0096
	bra	(?L10)
?L16:
	ld	AL,#H'002D
	bra	(?L10)
?L20:
	ld	AL,#H'012C
?L10:
?LBE5:
?LBE_estimateLatency:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_enableLatencyReporting:
	enterl	#6
?LBB_enableLatencyReporting:
	st	AL,@H'fff8
?LBB6:
	tst	@_DECODER
	beq	?L23
?LBB7:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	add	X,#H'000C
	st	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L23
	ld	AH,@(0,X)
	lsr	#H'0004
	cmp	AH,#H'0000
	beq	?L26
	st	AH,@H'fff8
	bra	(?L27)
?L26:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L28
	ld	AL,@$XAP_AH
	smult	#H'0005
	bra	(?L30)
?L28:
	ld	X,@H'fff8
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_estimateLatency
?L30:
	st	AL,@H'fff8
?L27:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	smult	#H'0064
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	and	AL,#H'000F
	smult	#H'0005
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#H'1027
	ld	AH,#H'0001
	bsr	$_KalimbaSendMessage
?L23:
?LBE7:
?LBE6:
?LBE_enableLatencyReporting:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_streamRelayModeUpdated:
	enterl	#5
?LBB_streamRelayModeUpdated:
	st	AL,@H'fff8
	tst	@_DECODER
	beq	?L31
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bne	?L33
	ld	AL,@(H'0006,X)
	and	AL,#-H'0101
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	X,@(H'0006,X)
	st	X,@H'fff8
	ld	AL,@$XAP_UXL
	and	AL,#H'0E00
	cmp	AL,#H'0C00
	bne	?L34
	ld	AH,@$XAP_UXL
	lsr	#H'000E
	ld	X,@$XAP_AH
	ld	AH,@H'fff8
	lsr	#H'000C
	and	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7157
	ld	AH,@$XAP_UXL
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'0801
	st	AL,@(H'0006,X)
?L34:
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	cmp	AH,#H'0002
	bne	?L35
	ld	AH,@(H'0007,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L35
	ld	AH,@(H'0007,X)
	lsr	#H'0008
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7021
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	and	AH,#H'00FF
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7020
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0081
	st	AL,@(H'0007,X)
?L35:
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	cmp	AH,#H'0002
	bne	?L31
	ld	AH,@(H'0007,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L31
	ld	AL,@(H'000E,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7158
	ld	AH,@(H'000D,X)
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0021
	st	AL,@(H'0007,X)
	bra	(?L31)
?L33:
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1028
	and	AH,#H'0003
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	or	AL,#H'0100
	st	AL,@(H'0006,X)
?L31:
?LBE_streamRelayModeUpdated:
	leavel	#5
_handleInternalMessage:
	enterl	#11
?LBB_handleInternalMessage:
	st	AL,@(H'0003,Y)
	ld	X,@(H'000B,Y)
?LBB8:
	cmp	AH,#-H'7FDC
	beq	?L44
	cmp	AH,#-H'7FD6
	beq	?L97
	bra	(?L42)
?L44:
?LBB9:
	st	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'1019
	beq	?L73
	cmp	AL,#(H'0001+H'1019)
	bcc	?L90
	cmp	AL,#H'100F
	beq	?L69
	cmp	AL,#(H'0001+H'100F)
	bcc	?L91
	cmp	AL,#H'1006
	beq	?L87
	cmp	AL,#(H'0001+H'1006)
	bcc	?L92
	cmp	AL,#H'1000
	beq	?L46
	bra	(?L42)
?L92:
	cmp	AL,#H'100C
	beq	?L71
	bra	(?L42)
?L91:
	cmp	AL,#H'1014
	beq	?L67
	cmp	AL,#(H'0001+H'1014)
	bcc	?L93
	cmp	AL,#H'1013
	beq	?L72
	bra	(?L42)
?L93:
	cmp	AL,#H'1015
	beq	?L61
	bra	(?L42)
?L90:
	cmp	AL,#H'1080
	beq	?L86
	cmp	AL,#(H'0001+H'1080)
	bcc	?L94
	cmp	AL,#H'1024
	beq	?L79
	cmp	AL,#(H'0001+H'1024)
	bcc	?L42
	cmp	AL,#H'1023
	beq	?L77
	bra	(?L42)
?L94:
	cmp	AL,#H'7070
	beq	?L65
	cmp	AL,#(H'0001+H'7070)
	bcc	?L42
	cmp	AL,#H'329A
	beq	?L85
	bra	(?L42)
?L46:
	tst	@_DECODER
	beq	?L62
?LBB10:
	ld	X,@_DECODER
	ld	AL,@(H'0011,X)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	cmp	AH,#H'0005
	beq	?L51
	cmp	AH,#(H'0001+H'0005)
	bcc	?L55
	cmp	AH,#H'0004
	beq	?L49
	bra	(?L53)
?L55:
	cmp	AH,#H'0006
	beq	?L52
	cmp	AH,#H'0007
	beq	?L51
	bra	(?L53)
?L49:
	ld	AH,#H'0005
	bra	(?L48)
?L51:
	ld	AH,#H'0008
	bra	(?L48)
?L52:
	ld	AH,#H'0009
	bra	(?L48)
?L53:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
?L48:
	ld	AL,@$XAP_AH
	bsr	_getDspVariant
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1020
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L56
	bsr	$_Panic
?L56:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2270
	bsr	$_KalimbaSendMessage
	ld	X,@(H'0004,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L57
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1018
	ld	AH,@(H'0004,X)
	bsr	$_KalimbaSendMessage
?L57:
	ld	AL,#H'0002
	bsr	$_SetCurrentDspStatus
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	add	AH,#-H'0002
	cmp	AH,#H'0001
	bcz	?L58
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000E,X)
	or	AL,#H'2000
	bra	(?L113)
?L58:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'2001
?L113:
	st	AL,@(H'000E,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	or	AL,#H'0FE0
	st	AL,@(H'000E,X)
?LBE10:
	bra	(?L42)
?L61:
	tst	@_DECODER
	beq	?L62
?LBB11:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	bsr	$_IsAudioBusy
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
	bsr	$_GetCurrentDspStatus
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0015,X)
	ld	AH,#H'7301
	bsr	$_MessageSend
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	X,@_DECODER
	ld	AL,#-H'1C20
	st	AL,@(H'000B,X)
	ld	X,@_DECODER
	st	AL,@(H'000F,X)
	ld	AL,@_DECODER
	add	AL,#H'000A
	ld	AH,#H'0001
	bsr	$_CsrA2dpDecoderPluginSetLevels
	ld	AL,@(H'0003,Y)
	bsr	$_MusicConnectAudio
	ld	AL,#H'0003
	bsr	$_SetCurrentDspStatus
	ld	AL,@(H'0003,Y)
	bsr	_enableLatencyReporting
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	add	AH,#-H'0002
	cmp	AH,#H'0001
	bcz	?L42
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0064
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7015
	bsr	$_MessageSendLater
	ld	X,@_DECODER
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7016
	bsr	$_MessageSendLater
?LBE11:
	bra	(?L42)
?L62:
	ld	AL,#H'0004
	bsr	$_SetCurrentDspStatus
	bra	(?L42)
?L65:
	tst	@_DECODER
	beq	?L42
?LBB12:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,#H'7070
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L117)
?L67:
?LBE12:
	tst	@_DECODER
	beq	?L42
?LBB13:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L117:
	st	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
?L118:
	ld	AL,@_DECODER
	st	AH,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0015,X)
	ld	AH,#H'7300
	bra	(?L114)
?L69:
?LBE13:
	tst	@_DECODER
	beq	?L42
?LBB14:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,#H'0002
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	st	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	bra	(?L118)
?L71:
?LBE14:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1017
	ld	AH,#H'0001
	bra	(?L116)
?L72:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1017
	ld	AH,#H'0000
?L116:
	bsr	$_KalimbaSendMessage
	bra	(?L42)
?L73:
	ld	X,@(H'0005,Y)
?LBB15:
	ld	X,@(H'0001,X)
	st	X,@H'fff8
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	st	X,@(H'0004,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L42
	tst	@H'fff8
	beq	?L75
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0006,X)
	ld	AH,#H'0001
	bsr	$_PioCommonSetPin
	ld	AL,#H'0002
	ld	AH,#H'0000
	bra	(?L115)
?L75:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0006,X)
	ld	AH,#H'0001
	bsr	$_PioCommonSetPin
	ld	AL,#H'0002
	ld	AH,#H'0001
?L115:
	bsr	$_csrA2dpDecoderPluginOutputMute
?LBE15:
	bra	(?L42)
?L77:
	tst	@_DECODER
	beq	?L42
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0001,X)
	bsr	$_CsrA2dpDecoderPluginSetAudioLatency
	bra	(?L42)
?L79:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	_streamRelayModeUpdated
	bra	(?L42)
?L85:
?LBB16:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,#H'0002
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	AL,@_DECODER
	st	AH,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0015,X)
	ld	AH,#H'7303
	bra	(?L114)
?L86:
?LBE16:
	bsr	$_CsrA2dpDecoderPluginToneComplete
	bra	(?L42)
?L87:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainSetHardwareOnly
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	bsr	$_CsrMultiChanGainSetHardwareOnly
	bra	(?L42)
?L97:
?LBE9:
?LBB17:
	st	X,@(H'0007,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'329B
	beq	?L99
	cmp	AL,#H'715A
	beq	?L105
	bra	(?L42)
?L99:
	ld	X,@(H'0007,Y)
?LBB18:
	ld	AL,@(H'0001,X)
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(-1,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(-1,Y)
	st	AL,@(H'0001,X)
	ld	AH,#H'0000
	ld	X,@(H'0007,Y)
	cmp	AH,@(H'0001,X)
	bcc	?L112
?L104:
	ld	AL,@$XAP_AH
	add	AL,@(-1,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0007,Y)
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0002,X)
	add	AH,#H'0001
	ld	X,@(H'0007,Y)
	cmp	AH,@(H'0001,X)
	bcs	?L104
?L112:
	ld	X,@_DECODER
	ld	AL,@(-1,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0015,X)
	ld	AH,#H'7304
?L114:
	bsr	$_MessageSend
?LBE18:
	bra	(?L42)
?L105:
	tst	@_DECODER
	beq	?L42
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	add	AH,#-H'0002
	cmp	AH,#(H'0001+H'0001)
	bcc	?L42
	ld	X,@(H'0007,Y)
?LBB19:
	add	X,#H'0001
	st	X,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,X)
	bsr	$_CsrMultiChanGainSetHardware
?L42:
?LBE19:
?LBE17:
?LBE8:
?LBE_handleInternalMessage:
	leavel	#11
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE8
_sendDspSpdifConfigMessages:
	enterl	#7
?LBB_sendDspSpdifConfigMessages:
	st	AL,@(H'0003,Y)
	ld	AL,@_DECODER
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0018,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'00FF
	asl	#H'0008
	or	AL,@H'fff8
	st	AL,@H'fff8
	ld	AL,#H'0015
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0014,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'1073
	ld	AH,@H'fff8
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L145
	bsr	$_Panic
?L145:
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L144
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0017,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1074
	ld	AH,@(0,X)
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L144
	bsr	$_Panic
?L144:
?LBE_sendDspSpdifConfigMessages:
	leavel	#7
_sendDspSampleRateMessages:
	enterl	#6
?LBB_sendDspSampleRateMessages:
	st	AL,@(H'0003,Y)
?LBB20:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	ld	AH,@(H'000E,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L149
	bsr	$_CsrA2dpDecoderPluginIfLowLatencyGetOutputType
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@_val_clock_mismatch
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,#H'12C0
	bra	(?L155)
?L149:
	bsr	$_CsrA2dpDecoderPluginIfLowLatencyGetOutputType
	ld	X,@_DECODER
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@_val_clock_mismatch
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1070
	ld	AH,@(H'0014,X)
?L155:
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L151
	bsr	$_Panic
?L151:
	ld	X,@_DECODER
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	ld	X,#H'000A
	st	X,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	bsr	$___udivhi3
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,#H'0640
	st	AL,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'1071
	ld	AH,@H'fff9
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L148
	bsr	$_Panic
?L148:
?LBE20:
?LBE_sendDspSampleRateMessages:
	leavel	#6
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
_sendDspMultiChannelMessages:
	enterl	#13
?LBB_sendDspMultiChannelMessages:
?LBB21:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_CsrMultiChanGetDspOutputTypesMsg
	bsr	$_PanicNull
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'10A0
	ld	AH,#H'0007
	bsr	$_KalimbaSendLongMessage
	cmp	AL,#H'0000
	bne	?L157
	bsr	$_Panic
?L157:
	bsr	$_CsrMultiChanI2sActive
	cmp	AL,#H'0000
	beq	?L156
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	bsr	$_CsrI2SMasterIsEnabled
	cmp	AL,#H'0000
	bne	?L160
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
?L160:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'10A1
	ld	AH,@(H'000A,Y)
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L156
	bsr	$_Panic
?L156:
?LBE21:
?LBE_sendDspMultiChannelMessages:
	leavel	#13
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_CsrA2dpDecoderPluginGetLatency:
	enterl	#3
?LBB_CsrA2dpDecoderPluginGetLatency:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB22:
	cmp	AL,#H'0000
	beq	?L162
	tst	@_DECODER
	beq	?L163
?LBB23:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	st	X,@(0,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L163
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	cmp	AH,#H'0000
	beq	?L163
	ld	AL,#H'0000
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(0,Y)
	ld	AH,@(H'000C,X)
	lsr	#H'0004
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	bra	(?L165)
?L163:
?LBE23:
	ld	AL,#H'0001
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@H'fff9
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_estimateLatency
	smult	#H'000A
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
?L165:
	ld	AL,#H'0001
	bra	(?L161)
?L162:
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#-H'0001
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
?L161:
?LBE22:
?LBE_CsrA2dpDecoderPluginGetLatency:
	leavel	#3
$_csrA2dpDecoderEnableExternalVolume:
	enterl	#5
?LBB_csrA2dpDecoderEnableExternalVolume:
	st	AL,@H'fff8
	tst	@_DECODER
	beq	?L166
	ld	X,@_DECODER
	and	AL,#H'0001
	asl	#H'0006
	ld	AH,@(H'0007,X)
	and	AH,#-H'0041
	or	AH,@$XAP_AL
	st	AH,@(H'0007,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7159
	ld	AH,@H'fff8
	bsr	$_KalimbaSendMessage
?L166:
?LBE_csrA2dpDecoderEnableExternalVolume:
	leavel	#5
$_csrA2dpDecoderSetTwsRoutingMode:
	enterl	#5
?LBB_csrA2dpDecoderSetTwsRoutingMode:
	st	AL,@H'fff9
	st	AH,@H'fff8
	tst	@_DECODER
	beq	?L168
	ld	X,@_DECODER
	asl	#H'000E
	ld	AH,@(H'0006,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@H'fff8
	and	AL,#H'0003
	asl	#H'000C
	ld	AH,@(H'0006,X)
	and	AH,#-H'3001
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	or	AL,#H'0800
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#H'0700
	cmp	AL,#H'0400
	bne	?L168
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7157
	ld	AH,@H'fff9
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'0801
	st	AL,@(H'0006,X)
?L168:
?LBE_csrA2dpDecoderSetTwsRoutingMode:
	leavel	#5
$_csrA2dpDecoderSetSbcEncoderParams:
	enterl	#6
?LBB_csrA2dpDecoderSetSbcEncoderParams:
	st	AL,@(H'0003,Y)
	st	AH,@H'fff8
	tst	@_DECODER
	beq	?L172
	ld	X,@_DECODER
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	ld	AL,@(H'0006,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@H'fff8
	asl	#H'0008
	ld	AH,@(H'0007,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	or	AL,#H'0080
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#H'0700
	cmp	AL,#H'0400
	bne	?L172
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7021
	ld	AH,@H'fff8
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7020
	ld	AH,@(H'0003,Y)
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0081
	st	AL,@(H'0007,X)
?L172:
?LBE_csrA2dpDecoderSetSbcEncoderParams:
	leavel	#6
$_csrA2dpDecoderSetTWSDeviceTrims:
	enterl	#5
?LBB_csrA2dpDecoderSetTWSDeviceTrims:
	st	AL,@H'fff8
	tst	@_DECODER
	beq	?L176
	ld	X,@_DECODER
	st	AL,@(H'000D,X)
	ld	X,@_DECODER
	st	AH,@(H'000E,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	or	AL,#H'0020
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#H'0700
	cmp	AL,#H'0400
	bne	?L176
	st	AH,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7158
	ld	AH,@H'fff8
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0021
	st	AL,@(H'0007,X)
?L176:
?LBE_csrA2dpDecoderSetTWSDeviceTrims:
	leavel	#5
$_csrA2dpDecoderSetStreamRelayMode:
	enterl	#6
?LBB_csrA2dpDecoderSetStreamRelayMode:
	st	AL,@H'fff8
	tst	@_DECODER
	beq	?L180
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	cmp	AH,@H'fff8
	beq	?L180
	ld	AL,@H'fff8
	and	AL,#H'0003
	asl	#H'0009
	ld	AH,@(H'0006,X)
	and	AH,#-H'0601
	or	AH,@$XAP_AL
	st	AH,@(H'0006,X)
	ld	AL,@_DECODER
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'0008
	and	AH,#H'0001
	st	AH,@H'fff8
	cmp	AH,#H'0000
	bne	?L180
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#H'1028
	and	AH,#H'0003
	bsr	$_KalimbaSendMessage
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	or	AL,#H'0100
	st	AL,@(H'0006,X)
?L180:
?LBE_csrA2dpDecoderSetStreamRelayMode:
	leavel	#6
$_CsrA2dpDecoderGetDecoderData:
; leaf function with empty stack frame
?LBB_CsrA2dpDecoderGetDecoderData:
	ld	AL,@_DECODER
?LBE_CsrA2dpDecoderGetDecoderData:
	rts
_csrA2dpDecoderGetKapFile:
	enterl	#2
?LBB_csrA2dpDecoderGetKapFile:
	st	AL,@H'fff8
	ld	X,@_DECODER
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0600
	bne	?L187
	ld	AL,#(?LC0)
	bra	(?L186)
?L187:
	ld	AL,@H'fff8
	cmp	AL,#(H'0001+H'000E)
	bcc	?L207
	ld	X,@H'fff8
	ld	X,@(?JTBASE208,X)
	brxl
	.SEG	CONST
?JTBASE208:
	.CODE
?L208:
	.SEG	CONST
	dc	lwrd(?L207-?L208)
	dc	lwrd(?L192-?L208)
	dc	lwrd(?L194-?L208)
	dc	lwrd(?L196-?L208)
	dc	lwrd(?L200-?L208)
	dc	lwrd(?L207-?L208)
	dc	lwrd(?L198-?L208)
	dc	lwrd(?L200-?L208)
	dc	lwrd(?L207-?L208)
	dc	lwrd(?L207-?L208)
	dc	lwrd(?L192-?L208)
	dc	lwrd(?L194-?L208)
	dc	lwrd(?L196-?L208)
	dc	lwrd(?L198-?L208)
	dc	lwrd(?L192-?L208)
	.CODE
?L192:
	ld	AL,#(?LC1)
	bra	(?L186)
?L194:
	ld	AL,#(?LC2)
	bra	(?L186)
?L196:
	ld	AL,#(?LC3)
	bra	(?L186)
?L198:
	ld	AL,#(?LC4)
	bra	(?L186)
?L200:
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'0001
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L201
	ld	AL,#(?LC5)
	bra	(?L186)
?L201:
	ld	X,@_DECODER
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L203
	ld	AL,#(?LC6)
	bra	(?L186)
?L203:
	ld	AL,@H'fff8
	cmp	AL,#H'0004
	bne	?L205
	ld	AL,#(?LC7)
	bra	(?L186)
?L205:
	ld	AL,#(?LC8)
	bra	(?L186)
?L207:
	bsr	$_Panic
	ld	AL,#H'0000
?L186:
?LBE_csrA2dpDecoderGetKapFile:
	leavel	#2
	.SEG	CONST
?LC0:
	dc	H'73
	dc	H'70
	dc	H'64
	dc	H'69
	dc	H'66
	dc	H'5F
	dc	H'73
	dc	H'69
	dc	H'6E
	dc	H'6B
	dc	H'2F
	dc	H'73
	dc	H'70
	dc	H'64
	dc	H'69
	dc	H'66
	dc	H'5F
	dc	H'73
	dc	H'69
	dc	H'6E
	dc	H'6B
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC1:
	dc	H'73
	dc	H'62
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'73
	dc	H'62
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC2:
	dc	H'6D
	dc	H'70
	dc	H'33
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'6D
	dc	H'70
	dc	H'33
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC3:
	dc	H'61
	dc	H'61
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'61
	dc	H'61
	dc	H'63
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC4:
	dc	H'61
	dc	H'70
	dc	H'74
	dc	H'78
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'61
	dc	H'70
	dc	H'74
	dc	H'78
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC5:
	dc	H'61
	dc	H'32
	dc	H'64
	dc	H'70
	dc	H'5F
	dc	H'6C
	dc	H'6F
	dc	H'77
	dc	H'5F
	dc	H'6C
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'6E
	dc	H'63
	dc	H'79
	dc	H'5F
	dc	H'31
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2F
	dc	H'61
	dc	H'32
	dc	H'64
	dc	H'70
	dc	H'5F
	dc	H'6C
	dc	H'6F
	dc	H'77
	dc	H'5F
	dc	H'6C
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'6E
	dc	H'63
	dc	H'79
	dc	H'5F
	dc	H'31
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC6:
	dc	H'61
	dc	H'32
	dc	H'64
	dc	H'70
	dc	H'5F
	dc	H'6C
	dc	H'6F
	dc	H'77
	dc	H'5F
	dc	H'6C
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'6E
	dc	H'63
	dc	H'79
	dc	H'5F
	dc	H'32
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2F
	dc	H'61
	dc	H'32
	dc	H'64
	dc	H'70
	dc	H'5F
	dc	H'6C
	dc	H'6F
	dc	H'77
	dc	H'5F
	dc	H'6C
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'6E
	dc	H'63
	dc	H'79
	dc	H'5F
	dc	H'32
	dc	H'6D
	dc	H'69
	dc	H'63
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC7:
	dc	H'66
	dc	H'61
	dc	H'73
	dc	H'74
	dc	H'73
	dc	H'74
	dc	H'72
	dc	H'65
	dc	H'61
	dc	H'6D
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'66
	dc	H'61
	dc	H'73
	dc	H'74
	dc	H'73
	dc	H'74
	dc	H'72
	dc	H'65
	dc	H'61
	dc	H'6D
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
?LC8:
	dc	H'61
	dc	H'70
	dc	H'74
	dc	H'78
	dc	H'5F
	dc	H'61
	dc	H'63
	dc	H'6C
	dc	H'5F
	dc	H'73
	dc	H'70
	dc	H'72
	dc	H'69
	dc	H'6E
	dc	H'74
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2F
	dc	H'61
	dc	H'70
	dc	H'74
	dc	H'78
	dc	H'5F
	dc	H'61
	dc	H'63
	dc	H'6C
	dc	H'5F
	dc	H'73
	dc	H'70
	dc	H'72
	dc	H'69
	dc	H'6E
	dc	H'74
	dc	H'5F
	dc	H'64
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'2E
	dc	H'6B
	dc	H'61
	dc	H'70
	dc	H'00
	.CODE
$_CsrA2dpDecoderPluginConnect:
	enterl	#7
?LBB_CsrA2dpDecoderPluginConnect:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB24:
	ld	AL,#H'0019
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	st	AL,@_DECODER
	ld	AH,@(H'0001,Y)
	st	AH,@(0,X)
	ld	X,@_DECODER
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	X,@_DECODER
	ld	AH,#H'0000
	st	AH,@(H'0002,X)
	ld	X,@_DECODER
	ld	AL,@(H'0008,X)
	and	AL,#H'003F
	st	AL,@(H'0008,X)
	ld	X,@_DECODER
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,X)
	ld	X,@_DECODER
	ld	AL,#H'0002
	st	AL,@(H'000A,X)
	ld	X,@_DECODER
	ld	AL,@(H'0009,Y)
	st	AL,@(H'000C,X)
	ld	X,@_DECODER
	ld	AL,#-H'1C20
	st	AL,@(H'000B,X)
	ld	X,@_DECODER
	st	AH,@(H'000D,X)
	ld	X,@_DECODER
	st	AH,@(H'000E,X)
	ld	X,@_DECODER
	st	X,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0010,X)
	ld	X,@_DECODER
	ld	AL,#-H'1C20
	st	AL,@(H'000F,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0021
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	st	AH,@(H'0016,X)
	ld	X,@_DECODER
	st	AH,@(H'0017,X)
	ld	X,@_DECODER
	st	AH,@(H'0018,X)
	ld	X,@_DECODER
	ld	AL,@(H'000D,Y)
	and	AL,#H'00FF
	st	AL,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	or	AL,@H'fff8
	st	AL,@(H'0005,X)
	ld	X,@_DECODER
	st	AH,@(H'0009,X)
	ld	X,@_DECODER
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0004,X)
	ld	X,@_DECODER
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0011,X)
	ld	X,@_DECODER
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AH,@(H'0012,X)
	st	AL,@(H'0013,X)
	ld	X,@_DECODER
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0015,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,Y)
	asl	#H'0008
	ld	AH,@(H'0005,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0005,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#H'3FFF
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'3001
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'0801
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'0601
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'0101
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0006,X)
	and	AL,#-H'0100
	st	AL,@(H'0006,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#H'00FF
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0081
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0041
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0011
	st	AL,@(H'0007,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_csrA2dpDecoderGetKapFile
	st	AL,@(H'0003,Y)
	tst	@_pskey_read
	bne	?L212
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'2258
	ld	AH,#(_val_pskey_max_mismatch)
	bsr	$_PsFullRetrieve
	cmp	AL,#H'0000
	bne	?L213
	st	AL,@_val_pskey_max_mismatch
?L213:
	ld	AL,#H'0001
	st	AL,@_pskey_read
?L212:
	ld	AL,@(H'0001,Y)
	ld	AH,#-H'7FDC
	bsr	$_MessageCancelAll
	ld	AL,@(H'0001,Y)
	bsr	$_MessageKalimbaTask
	ld	AL,@(H'0001,Y)
	bsr	$_SetAudioBusy
	ld	AL,#H'0001
	bsr	$_SetCurrentDspStatus
	ld	AL,@(H'0003,Y)
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0003,Y)
	bsr	$_FileFind
	bsr	$_PanicNull
	bsr	$_KalimbaLoad
	bsr	$_PanicNull
	ld	AL,#H'0002
	bsr	$_SetCurrentDspStatus
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	and	AL,#-H'1000
	cmp	AL,#H'3000
	beq	?L215
	cmp	AL,#-H'4000
	bne	?L214
?L215:
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	cmp	AH,#hwrd(H'0001+H'7CFF)
	bcs	?L219
	bne	?L214
	cmp	AL,#lwrd(H'0001+H'7CFF)
	bcc	?L214
?L219:
	ld	X,@_DECODER
	asl	#H'0001
	st	AH,@(H'0012,X)
	st	AL,@(H'0013,X)
?L214:
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
?LBE24:
?LBE_CsrA2dpDecoderPluginConnect:
	leavel	#7
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_CsrA2dpDecoderPluginStartDisconnect:
	enterl	#6
?LBB_CsrA2dpDecoderPluginStartDisconnect:
	st	AL,@(H'0003,Y)
	ld	X,@_DECODER
	ld	AL,#H'0000
	st	AL,@(H'0013,X)
	st	AL,@(H'0012,X)
	ld	AL,@(H'0003,Y)
	bsr	$_SetAudioBusy
	ld	X,@_DECODER
	ld	AL,#-H'1C20
	st	AL,@(H'000B,X)
	ld	X,@_DECODER
	st	AL,@(H'000F,X)
	ld	X,@_DECODER
	ld	AL,#H'0000
	st	AL,@(H'000D,X)
	ld	X,@_DECODER
	st	AL,@(H'000E,X)
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	and	AL,#-H'0021
	st	AL,@(H'0007,X)
	ld	AL,@_DECODER
	add	AL,#H'000A
	ld	AH,#H'0001
	bsr	$_CsrA2dpDecoderPluginSetLevels
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	add	AH,#-H'0002
	cmp	AH,#(H'0001+H'0001)
	bcc	?L221
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'7014
	bsr	$_MessageSend
	bra	(?L220)
?L221:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'00FA
	st	AL,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'7014
	bsr	$_MessageSendLater
?L220:
?LBE_CsrA2dpDecoderPluginStartDisconnect:
	leavel	#6
$_CsrA2dpDecoderPluginDisconnect:
	enterl	#11
?LBB_CsrA2dpDecoderPluginDisconnect:
	st	AL,@(H'0002,Y)
?LBB25:
	tst	@_DECODER
	beq	?L223
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	st	X,@(H'0005,Y)
	bsr	$_CsrA2dpDecoderPluginDisconnectSubwoofer
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L225
	ld	AL,@(H'0005,Y)
	bsr	$_CsrA2dpDecoderPluginDisconnectMic
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
?L225:
	bsr	$_CsrMultiChanDisconnect
	bsr	$_PanicNull
	ld	X,@_DECODER
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	ld	AL,#-H'0003
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0004)
	bcc	?L226
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE240,X)
	brxl
	.SEG	CONST
?JTBASE240:
	.CODE
?L240:
	.SEG	CONST
	dc	lwrd(?L228-?L240)
	dc	lwrd(?L228-?L240)
	dc	lwrd(?L229-?L240)
	dc	lwrd(?L237-?L240)
	dc	lwrd(?L238-?L240)
	.CODE
?L228:
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	bra	(?L242)
?L229:
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L234
	cmp	AH,#H'0001
	bcs	?L232
	cmp	AH,#H'0003
	bne	?L226
?L232:
	ld	X,@(H'0005,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0007,Y)
	ld	X,@_DECODER
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0002,X)
	bsr	$_AudioPluginMicSetup
	st	AL,@(H'0003,Y)
	bsr	_sourceDisconnectFlushClose
	ld	AH,@_DECODER
	st	AH,@(H'0006,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L226
	ld	X,@(H'0005,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0008,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0001
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	bsr	$_AudioPluginMicSetup
	st	AL,@(H'0004,Y)
	bra	(?L242)
?L234:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	bra	(?L241)
?L237:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0002
?L241:
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	bsr	_sourceDisconnectFlushClose
	ld	AL,@(H'0004,Y)
?L242:
	bsr	_sourceDisconnectFlushClose
	bra	(?L226)
?L238:
	ld	AL,@(H'0005,Y)
	bsr	$_MusicDisconnectFmSource
?L226:
	bsr	$_CsrA2dpDecoderPluginDisconnectForwardingSink
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7005
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7006
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7015
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7016
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7014
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7012
	bsr	$_MessageCancelAll
	ld	AL,@(H'0002,Y)
	ld	AH,#-H'7FDC
	bsr	$_MessageCancelAll
	ld	AL,#H'0000
	bsr	$_MessageKalimbaTask
	bsr	$_KalimbaPowerOff
	ld	AL,#H'0000
	bsr	$_SetCurrentDspStatus
	ld	AL,#H'0000
	bsr	$_SetAudioInUse
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	AL,@_DECODER
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@_DECODER
?L223:
?LBE25:
?LBE_CsrA2dpDecoderPluginDisconnect:
	leavel	#11
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_CsrA2dpDecoderPluginSetHardwareLevels:
	enterl	#3
?LBB_CsrA2dpDecoderPluginSetHardwareLevels:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	bsr	$_CsrMultiChanGainSetHardware
?LBE_CsrA2dpDecoderPluginSetHardwareLevels:
	leavel	#3
_csrA2dpUpdateStoredVolume:
	enterl	#3
?LBB_csrA2dpUpdateStoredVolume:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L249
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L248
?L249:
	ld	AH,@_DECODER
	st	AH,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'000B,X)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@(0,Y)
	st	AL,@(H'000C,X)
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	ld	X,@(0,Y)
	st	AL,@(H'000D,X)
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	ld	X,@(0,Y)
	st	AL,@(H'000E,X)
?L248:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L247
	ld	AH,@_DECODER
	st	AH,@(0,Y)
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	ld	X,@(0,Y)
	st	AH,@(H'000F,X)
	st	AL,@(H'0010,X)
?L247:
?LBE_csrA2dpUpdateStoredVolume:
	leavel	#3
_csrA2dpDelaySetLevels:
	enterl	#8
?LBB_csrA2dpDelaySetLevels:
	st	AL,@(H'0003,Y)
?LBB26:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	st	X,@(H'0004,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'1FF0
	cmp	AL,#H'1FE0
	bne	?L253
	ld	AL,@(H'0003,Y)
	bsr	_csrA2dpUpdateStoredVolume
	bra	(?L256)
?L253:
	bsr	$_IsTonePlaying
	cmp	AL,#H'0000
	bne	?L255
	ld	X,@(H'0004,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'3000
	cmp	AL,#H'2000
	bne	?L254
?L255:
?LBB27:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_memmove
	ld	X,@_DECODER
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0064
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7011
	bsr	$_MessageSendLater
?L256:
	ld	AL,#H'0001
	bra	(?L252)
?L254:
?LBE27:
	ld	AL,#H'0000
?L252:
?LBE26:
?LBE_csrA2dpDelaySetLevels:
	leavel	#8
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
_csrA2dpSetHardwareGainDelayed:
	enterl	#8
?LBB_csrA2dpSetHardwareGainDelayed:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB28:
	bsr	$_GetAudioPlugin
	bsr	$_PanicNull
	st	AL,@(H'0005,Y)
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'7012
	bsr	$_MessageSendLater
?LBE28:
?LBE_csrA2dpSetHardwareGainDelayed:
	leavel	#8
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
_csrA2dpDecoderSendKalimbaVolume:
	enterl	#3
?LBB_csrA2dpDecoderSendKalimbaVolume:
	cmp	AL,#H'0000
	bne	?L261
	st	AH,@(0,Y)
	ld	AL,#H'1002
	ld	AH,#H'0008
	bra	(?L263)
?L261:
	st	AH,@(0,Y)
	ld	AL,#H'101B
	ld	AH,#H'0005
?L263:
	bsr	$_KalimbaSendLongMessage
?LBE_csrA2dpDecoderSendKalimbaVolume:
	leavel	#3
_csrA2dpDecoderPluginSetGroupLevels:
	enterl	#15
?LBB_csrA2dpDecoderPluginSetGroupLevels:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB29:
	cmp	AL,#H'0000
	bne	?L265
	ld	X,@_DECODER
	ld	AL,@(H'000B,X)
	bra	(?L276)
?L265:
	ld	X,@_DECODER
	ld	AL,@(H'000F,X)
?L276:
	st	AL,@(H'000C,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_CsrMultiChanGainGetDigital
	ld	AL,@(H'000A,Y)
	bsr	$_CsrMultiChanGainGetType
	cmp	AL,#H'0001
	beq	?L274
	cmp	AL,#H'0001
	bcs	?L268
	cmp	AL,#H'0002
	beq	?L270
	bra	(?L274)
?L268:
	tst	@_DECODER
	beq	?L274
	ld	X,@_DECODER
	ld	AH,@(H'0006,X)
	lsr	#H'0009
	and	AH,#H'0003
	add	AH,#-H'0002
	cmp	AH,#(H'0001+H'0001)
	bcc	?L274
	tst	@(H'000A,Y)
	bne	?L274
	ld	AL,@(H'000F,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@(H'000B,Y)
	bsr	$_CsrMultiChanGainGetDigitalOnly
	bra	(?L267)
?L270:
	ld	AL,@(H'000B,Y)
?LBB30:
	cmp	AL,@(H'000C,Y)
	blt	?L271
	ld	AL,#H'002A
	bra	(?L272)
?L271:
	ld	AL,#H'0019
?L272:
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	_csrA2dpSetHardwareGainDelayed
?LBE30:
	bra	(?L267)
?L274:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_CsrMultiChanGainSetHardware
?L267:
	ld	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	_csrA2dpDecoderSendKalimbaVolume
?LBE29:
?LBE_csrA2dpDecoderPluginSetGroupLevels:
	leavel	#15
;.stabn	192,0,0,?LBB29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;.stabn	224,0,0,?LBE29
$_CsrA2dpDecoderPluginSetLevels:
	enterl	#4
?LBB_CsrA2dpDecoderPluginSetLevels:
	st	AL,@(H'0001,Y)
	cmp	AH,#H'0000
	bne	?L282
	bsr	_csrA2dpDelaySetLevels
	cmp	AL,#H'0000
	bne	?L281
?L282:
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L283
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_CsrA2dpDecoderPluginSetLowLatencyGain
	bra	(?L284)
?L283:
	ld	X,@(H'0001,Y)
	tst	@(0,X)
	beq	?L286
	ld	AL,@(0,X)
	cmp	AL,#H'0002
	bne	?L285
?L286:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,X)
	bsr	_csrA2dpDecoderPluginSetGroupLevels
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0004,X)
	bsr	$_csrA2dpDecoderSetTWSDeviceTrims
?L285:
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L284
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0005,X)
	bsr	_csrA2dpDecoderPluginSetGroupLevels
?L284:
	ld	AL,@(H'0001,Y)
	bsr	_csrA2dpUpdateStoredVolume
?L281:
?LBE_CsrA2dpDecoderPluginSetLevels:
	leavel	#4
$_CsrA2dpDecoderPluginSetVolume:
	enterl	#2
?LBB_CsrA2dpDecoderPluginSetVolume:
	tst	@_DECODER
	beq	?L289
	cmp	AL,#H'0000
	beq	?L289
	ld	AH,#H'0000
	bsr	$_CsrA2dpDecoderPluginSetLevels
?L289:
?LBE_CsrA2dpDecoderPluginSetVolume:
	leavel	#2
$_CsrA2dpDecoderPluginResetVolume:
	enterl	#2
?LBB_CsrA2dpDecoderPluginResetVolume:
	ld	AL,@_DECODER
	add	AL,#H'000A
	bsr	$_CsrA2dpDecoderPluginSetVolume
?LBE_CsrA2dpDecoderPluginResetVolume:
	leavel	#2
_muteOutput:
	enterl	#10
?LBB_muteOutput:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB31:
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L293
	ld	X,@_DECODER
	ld	AL,@(H'0017,X)
	cmp	AL,@$XAP_AH
	beq	?L293
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'10A3
	ld	AH,#H'0002
	bsr	$_KalimbaSendLongMessage
	ld	X,@_DECODER
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0017,X)
?L293:
	tst	@(H'0006,Y)
	beq	?L295
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0002
	bne	?L292
?L295:
	ld	X,@_DECODER
	ld	AL,@(H'0016,X)
	cmp	AL,@(H'0007,Y)
	beq	?L292
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'10A2
	ld	AH,#H'0005
	bsr	$_KalimbaSendLongMessage
	ld	X,@_DECODER
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0016,X)
?L292:
?LBE31:
?LBE_muteOutput:
	leavel	#10
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_CsrA2dpDecoderPluginSetSoftMute:
	enterl	#4
?LBB_CsrA2dpDecoderPluginSetSoftMute:
	st	AL,@(0,Y)
?LBB32:
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L300
	ld	AL,@(0,Y)
	bsr	$_csrA2dpDecoderPluginSetLowLatencySoftMute
	bra	(?L299)
?L300:
?LBB33:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L302
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L302:
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0002
	cmp	AH,#H'0000
	beq	?L303
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L303:
	ld	AL,#H'0000
	ld	AH,@(-1,Y)
	bsr	_muteOutput
	ld	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	_muteOutput
?L299:
?LBE33:
?LBE32:
?LBE_CsrA2dpDecoderPluginSetSoftMute:
	leavel	#4
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_csrA2dpDecoderPluginOutputMute:
	enterl	#4
?LBB_csrA2dpDecoderPluginOutputMute:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L305
	ld	AL,@(H'0001,Y)
	bsr	$_csrA2dpDecoderPluginLowLatencyOutputMute
	bra	(?L304)
?L305:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	_muteOutput
?L304:
?LBE_csrA2dpDecoderPluginOutputMute:
	leavel	#4
$_CsrA2dpDecoderPluginSetMode:
	enterl	#9
?LBB_CsrA2dpDecoderPluginSetMode:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB34:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	tst	@_DECODER
	bne	?L308
	bsr	$_Panic
?L308:
	ld	X,@_DECODER
	ld	AH,@(H'0003,Y)
	and	AH,#H'00FF
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'0005,X)
	tst	@(H'0009,Y)
	beq	?L309
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0006,Y)
	ld	X,@_DECODER
	st	AL,@(H'0009,X)
	bra	(?L310)
?L309:
	ld	X,@_DECODER
	tst	@(H'0009,X)
	beq	?L310
	ld	X,@(H'0009,X)
	st	X,@(H'0005,Y)
	ld	X,@(0,X)
	st	X,@(H'0006,Y)
?L310:
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L312
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_csrA2dpDecoderPluginSetLowLatencyMode
	bra	(?L307)
?L312:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0004
	beq	?L316
	cmp	AL,#H'0004
	bcs	?L321
	cmp	AL,#H'0008
	bne	?L307
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0001
	ld	AH,@(H'0002,X)
	and	AH,#H'0001
	add	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
	bra	(?L307)
?L316:
	tst	@(H'0005,Y)
	beq	?L307
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0005
	st	AH,@H'fff8
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	ld	AL,@H'fff8
	and	AL,#H'0003
	and	AH,#H'0003
	bsr	$_csrA2dpDecoderSetTwsRoutingMode
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_CsrA2dpDecoderPluginSetEqMode
	ld	AL,@(H'0005,Y)
	bsr	$_CsrA2dpDecoderPluginUpdateEnhancements
	bra	(?L307)
?L321:
	bsr	$_Panic
?L307:
?LBE34:
?LBE_CsrA2dpDecoderPluginSetMode:
	leavel	#9
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
$_CsrA2dpDecoderPluginPlayTone:
	enterl	#8
?LBB_CsrA2dpDecoderPluginPlayTone:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB35:
	tst	@_DECODER
	beq	?L328
	ld	AL,#H'0001
	bsr	$_SetTonePlaying
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1072
	ld	AH,#H'1F40
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_MessageSinkTask
	ld	AL,@(H'0004,Y)
	bsr	$_StreamRingtoneSource
	ld	AH,@(H'0005,Y)
	bsr	$_StreamConnectAndDispose
	ld	AL,@(H'0003,Y)
	bra	(?L330)
?L328:
	ld	AL,#H'0000
?L330:
	bsr	$_SetAudioBusy
?LBE35:
?LBE_CsrA2dpDecoderPluginPlayTone:
	leavel	#8
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_CsrA2dpDecoderPluginStopTone:
	enterl	#2
?LBB_CsrA2dpDecoderPluginStopTone:
	tst	@_DECODER
	bne	?L332
	bsr	$_Panic
?L332:
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_StreamDisconnect
?LBE_CsrA2dpDecoderPluginStopTone:
	leavel	#2
$_CsrA2dpDecoderPluginToneComplete:
	enterl	#2
?LBB_CsrA2dpDecoderPluginToneComplete:
	tst	@_DECODER
	beq	?L334
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
?L334:
	bsr	$_IsTonePlaying
	cmp	AL,#H'0000
	bne	?L336
	bsr	$_IsVpPlaying
	cmp	AL,#H'0000
	beq	?L333
?L336:
	ld	AL,#H'0000
	bsr	$_SetTonePlaying
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
?L333:
?LBE_CsrA2dpDecoderPluginToneComplete:
	leavel	#2
$_CsrA2dpDecoderPluginInternalMessage:
	enterl	#5
?LBB_CsrA2dpDecoderPluginInternalMessage:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L338
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_CsrA2dpDecoderPluginLowLatencyInternalMessage
	bra	(?L337)
?L338:
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_handleInternalMessage
?L337:
?LBE_CsrA2dpDecoderPluginInternalMessage:
	leavel	#5
$_csrA2dpDecoderStartTransformCheckScms:
	enterl	#4
?LBB_csrA2dpDecoderStartTransformCheckScms:
	st	AL,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0006
	bsr	$_TransformConfigure
	ld	AL,@(H'0001,Y)
	bsr	$_TransformStart
?LBE_csrA2dpDecoderStartTransformCheckScms:
	leavel	#4
$_MusicConnectAudio:
	enterl	#22
?LBB_MusicConnectAudio:
	st	AL,@(H'0003,Y)
?LBB36:
	ld	AH,@_DECODER
	st	AH,@(H'0012,Y)
	ld	X,@$XAP_AH
	ld	X,@(H'0011,X)
	st	X,@(H'0004,Y)
	ld	AH,#H'0000
	st	AH,@(H'0005,Y)
	ld	AL,@_val_pskey_max_mismatch
	st	AL,@(H'0007,Y)
	cmp	X,#H'0000
	beq	?L342
	ld	AL,@(H'0003,X)
	asl	#H'0006
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0008,X)
	and	AH,#H'003F
	or	AH,@$XAP_AL
	st	AH,@(H'0008,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	st	AL,@_val_clock_mismatch
	ld	AH,@(H'000E,X)
	lsr	#H'0002
	and	AH,#H'0001
	st	AH,@(H'0006,Y)
	tst	@(H'0007,X)
	beq	?L344
	ld	AL,@(H'0007,X)
	st	AL,@(H'0005,Y)
	bra	(?L344)
?L342:
	ld	AL,#H'0000
	st	AL,@_val_clock_mismatch
	st	AL,@(H'0006,Y)
?L344:
	ld	X,@_DECODER
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	ld	AL,#-H'0003
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0004)
	bcc	?L390
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE391,X)
	brxl
	.SEG	CONST
?JTBASE391:
	.CODE
?L391:
	.SEG	CONST
	dc	lwrd(?L370-?L391)
	dc	lwrd(?L346-?L391)
	dc	lwrd(?L357-?L391)
	dc	lwrd(?L365-?L391)
	dc	lwrd(?L388-?L391)
	.CODE
?L346:
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#(H'0001+H'0002)
	bcc	?L356
	cmp	AH,#H'0001
	bcc	?L397
	bra	(?L349)
?L356:
	cmp	AH,#H'0003
	bne	?L397
	ld	X,@(H'0004,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	and	X,#H'00FF
	lsr	#H'0008
	ld	AL,@$XAP_UXL
	bsr	$_csrA2dpDecoderSetSbcEncoderParams
?L349:
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'000A,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'000A,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	tst	@(H'0004,Y)
	beq	?L397
	ld	AL,#H'0000
	st	AL,@_val_clock_mismatch
	ld	X,@(H'0004,Y)
	tst	@(H'0009,X)
	beq	?L397
	ld	AH,@(H'0008,X)
	st	AH,@(H'0013,Y)
	ld	X,@_DECODER
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0000
	ld	X,@(H'0013,Y)
	ld	AH,@(0,X)
	bsr	$_AudioPluginMicSetup
	st	AL,@(H'0008,Y)
	ld	AL,#H'0004
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,#H'0003
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0009,X)
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	bra	(?L397)
?L357:
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L362
	cmp	AH,#H'0001
	bcs	?L360
	cmp	AH,#H'0003
	bne	?L358
	ld	X,@(H'0004,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	and	X,#H'00FF
	lsr	#H'0008
	ld	AL,@$XAP_UXL
	bsr	$_csrA2dpDecoderSetSbcEncoderParams
?L360:
	ld	X,@(H'0004,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0013,Y)
	ld	X,@_DECODER
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0000
	ld	X,@(H'0013,Y)
	ld	AH,@(H'0002,X)
	bsr	$_AudioPluginMicSetup
	st	AL,@(H'0008,Y)
	ld	AH,@_DECODER
	st	AH,@(H'000B,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L361
	ld	X,@(H'0004,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0012,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0001
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0003,X)
	bsr	$_AudioPluginMicSetup
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_SourceSynchronise
	bsr	$_PanicNull
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0009,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
?L361:
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	bra	(?L358)
?L362:
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	st	AL,@(H'000C,Y)
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	st	AL,@H'fff8
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	bsr	$_CsrI2SAudioInputConnect
?L358:
	ld	AL,#H'0000
	st	AL,@_val_clock_mismatch
	ld	AL,@(H'0007,Y)
	or	AL,#H'0080
	st	AL,@(H'0007,Y)
	bra	(?L397)
?L365:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0008,Y)
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0003
	bne	?L366
	ld	X,@(H'0004,Y)
	ld	AH,@(H'000F,X)
	ld	X,@$XAP_AH
	and	X,#H'00FF
	lsr	#H'0008
	ld	AL,@$XAP_UXL
	bsr	$_csrA2dpDecoderSetSbcEncoderParams
?L366:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0504
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0501
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0504
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0501
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_SourceSynchronise
	bsr	$_PanicNull
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0009,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	X,#H'0000
	st	X,@_val_clock_mismatch
	ld	AH,@(H'0007,Y)
	or	AH,#H'0080
	st	AH,@(H'0007,Y)
?L397:
	ld	AL,#H'0000
	bsr	$_csrA2dpDecoderSetStreamRelayMode
	bra	(?L345)
?L370:
?LBB37:
	ld	AL,#H'0000
	st	AL,@(H'000D,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	cmp	AH,#(H'0001+H'000D)
	bcc	?L371
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE386,X)
	brxl
	.SEG	CONST
?JTBASE386:
	.CODE
?L386:
	.SEG	CONST
	dc	lwrd(?L371-?L386)
	dc	lwrd(?L372-?L386)
	dc	lwrd(?L373-?L386)
	dc	lwrd(?L374-?L386)
	dc	lwrd(?L375-?L386)
	dc	lwrd(?L371-?L386)
	dc	lwrd(?L377-?L386)
	dc	lwrd(?L379-?L386)
	dc	lwrd(?L371-?L386)
	dc	lwrd(?L371-?L386)
	dc	lwrd(?L384-?L386)
	dc	lwrd(?L384-?L386)
	dc	lwrd(?L384-?L386)
	dc	lwrd(?L384-?L386)
	.CODE
?L372:
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'000E,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'000E,Y)
	bsr	$_TransformRtpSbcDecode
	bra	(?L398)
?L373:
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'000F,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'000F,Y)
	bsr	$_TransformRtpMp3Decode
?L398:
	st	AL,@(H'000D,Y)
?L399:
	ld	AL,#H'0000
	bra	(?L396)
?L374:
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0010,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0010,Y)
	bsr	$_TransformRtpAacDecode
	bra	(?L398)
?L375:
	tst	@(H'0004,Y)
	beq	?L399
	ld	AL,@(H'0004,Y)
	bsr	$_MusicConnectFaststreamSource
	bra	(?L399)
?L377:
	tst	@(H'0004,Y)
	beq	?L399
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_MusicConnectAptxSource
	bra	(?L399)
?L379:
	tst	@(H'0004,Y)
	beq	?L399
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_MusicConnectAptxLowLatencySource
	bra	(?L399)
?L384:
	ld	X,@_DECODER
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0011,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0011,Y)
	bsr	$_StreamConnect
	ld	AL,#H'0003
?L396:
	bsr	$_csrA2dpDecoderSetStreamRelayMode
?L371:
	tst	@(H'000D,Y)
	beq	?L345
	ld	AL,@(H'000D,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_csrA2dpDecoderStartTransformCheckScms
?LBE37:
	bra	(?L345)
?L388:
	tst	@(H'0004,Y)
	beq	?L389
	ld	AL,@(H'0004,Y)
	bsr	$_MusicConnectFmSource
?L389:
	ld	AL,#H'0000
	bsr	$_csrA2dpDecoderSetStreamRelayMode
	ld	AL,#H'0000
	st	AL,@_val_clock_mismatch
	ld	AH,@(H'0007,Y)
	or	AH,#H'0080
	st	AH,@(H'0007,Y)
	bra	(?L345)
?L390:
	bsr	$_Panic
?L345:
	bsr	$_MusicConnectOutputSinks
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L392
	ld	X,@_DECODER
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0004,Y)
	and	AH,#H'0001
	bsr	$_CsrA2dpDecoderConnectBackChannel
?L392:
	ld	AL,@(H'0004,Y)
	bsr	$_CsrA2dpDecoderPluginConnectSubwoofer
	ld	X,@_DECODER
	ld	AL,@(H'0007,X)
	or	AL,#H'0010
	st	AL,@(H'0007,X)
	ld	X,@_DECODER
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_CsrA2dpDecoderPluginSetMode
	ld	X,@_DECODER
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0600
	bne	?L393
	ld	AL,@(H'0004,Y)
	bsr	_sendDspSpdifConfigMessages
	bra	(?L394)
?L393:
	ld	AL,@(H'0007,Y)
	bsr	_sendDspSampleRateMessages
?L394:
	bsr	_sendDspMultiChannelMessages
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'7000
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L395
	bsr	$_Panic
?L395:
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
?LBE36:
?LBE_MusicConnectAudio:
	leavel	#22
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
$_MusicConnectOutputSinks:
	enterl	#8
?LBB_MusicConnectOutputSinks:
?LBB38:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	st	AH,@(H'0002,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L408
	ld	AL,#-H'4480
	st	AL,@(H'0003,Y)
	ld	AL,#H'0040
	st	AL,@(H'0004,Y)
	bra	(?L409)
?L408:
	ld	X,@_DECODER
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?L409:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_CsrMultiChanConnectDsp
	bsr	$_PanicNull
	ld	AL,@_DECODER
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	X,#H'000A
	st	X,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	bsr	$___udivhi3
	ld	X,@(H'0005,Y)
	st	AL,@(H'0014,X)
?LBE38:
?LBE_MusicConnectOutputSinks:
	leavel	#8
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
$_csrA2dpDecoderPluginMicMute:
	enterl	#7
?LBB_csrA2dpDecoderPluginMicMute:
	st	AL,@(H'0002,Y)
?LBB39:
	ld	X,@_DECODER
	ld	AH,@(H'0011,X)
	st	AH,@(H'0003,Y)
	cmp	AH,#H'0000
	beq	?L410
	ld	AL,@(H'0018,X)
	cmp	AL,@(H'0002,Y)
	beq	?L410
?LBB40:
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0500
	beq	?L413
	ld	X,@$XAP_AH
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'000F
	bra	(?L418)
?L413:
	ld	AH,#H'0000
?L418:
	st	AH,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_AudioPluginGetMic
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L415
	ld	AH,#H'0000
	ld	AL,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0700
	bsr	$_SourceConfigure
?L415:
	ld	X,@_DECODER
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L416
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_AudioPluginGetMic
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L416
	ld	AH,#H'0000
	ld	AL,@(H'0002,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0700
	bsr	$_SourceConfigure
?L416:
	ld	X,@_DECODER
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0018,X)
?L410:
?LBE40:
?LBE39:
?LBE_csrA2dpDecoderPluginMicMute:
	leavel	#7
;.stabn	192,0,0,?LBB39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	224,0,0,?LBE39
$_CsrA2DPGetDecoderSampleRate:
	enterl	#2
?LBB_CsrA2DPGetDecoderSampleRate:
	tst	@_DECODER
	beq	?L422
	ld	X,@_DECODER
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	cmp	AH,#H'0000
	bne	?L421
	cmp	AL,#H'0000
	bne	?L421
?L422:
	ld	AL,#H'0000
	ld	AH,#H'0000
?L421:
?LBE_CsrA2DPGetDecoderSampleRate:
	leavel	#2
$_CsrA2DPGetDecoderSubwooferSampleRate:
; leaf function with empty stack frame
?LBB_CsrA2DPGetDecoderSubwooferSampleRate:
	ld	AL,#-H'4480
	ld	AH,#H'0000
?LBE_CsrA2DPGetDecoderSubwooferSampleRate:
	rts
$_CsrA2dpDecoderPluginSetEqMode:
	enterl	#5
?LBB_CsrA2dpDecoderPluginSetEqMode:
	st	AL,@H'fff8
	cmp	AH,#(H'0001+H'0009)
	bcc	?L426
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE439,X)
	brxl
	.SEG	CONST
?JTBASE439:
	.CODE
?L439:
	.SEG	CONST
	dc	lwrd(?L428-?L439)
	dc	lwrd(?L429-?L439)
	dc	lwrd(?L430-?L439)
	dc	lwrd(?L431-?L439)
	dc	lwrd(?L432-?L439)
	dc	lwrd(?L433-?L439)
	dc	lwrd(?L434-?L439)
	dc	lwrd(?L435-?L439)
	dc	lwrd(?L436-?L439)
	dc	lwrd(?L437-?L439)
	.CODE
?L428:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0001
	ld	AH,@(H'0002,X)
	and	AH,#H'0001
	add	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,#H'0001
	bra	(?L441)
?L429:
	ld	AL,#H'0000
	bra	(?L442)
?L430:
	ld	AL,#H'0001
	bra	(?L443)
?L431:
	ld	AL,#H'0002
?L443:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bra	(?L440)
?L432:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0001
	bra	(?L440)
?L433:
	ld	AL,#H'0002
?L442:
	st	AL,@(0,Y)
	bra	(?L440)
?L434:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0003
	bra	(?L440)
?L435:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0004
	bra	(?L440)
?L436:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0005
	bra	(?L440)
?L437:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0006
?L440:
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0001
	ld	AH,@(H'0002,X)
	and	AH,#H'0001
	add	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,@H'fff8
?L441:
	bsr	$_KalimbaSendMessage
?L426:
?LBE_CsrA2dpDecoderPluginSetEqMode:
	leavel	#5
$_CsrA2dpDecoderPluginUpdateEnhancements:
	enterl	#5
?LBB_CsrA2dpDecoderPluginUpdateEnhancements:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L444
	tst	@(H'0001,X)
	bpl	?L444
	ld	AL,#H'09C0
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	xor	AL,#-H'0001
	st	AL,@(H'0002,Y)
	ld	AL,#H'100E
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
?L444:
?LBE_CsrA2dpDecoderPluginUpdateEnhancements:
	leavel	#5
$_CsrA2dpDecoderPluginAllowVolChanges:
	enterl	#3
?LBB_CsrA2dpDecoderPluginAllowVolChanges:
?LBB41:
	ld	X,@_DECODER
	ld	AL,@(H'0011,X)
	st	AL,@(0,Y)
	cmp	X,#H'0000
	beq	?L447
	ld	X,@$XAP_AL
	ld	AH,@(H'000E,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L447
	ld	AL,@$XAP_AH
	and	AL,#-H'2001
	st	AL,@(H'000E,X)
?L447:
?LBE41:
?LBE_CsrA2dpDecoderPluginAllowVolChanges:
	leavel	#3
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_CsrA2dpDecoderPluginSubCheckForConnectionFailure:
	enterl	#2
?LBB_CsrA2dpDecoderPluginSubCheckForConnectionFailure:
?LBB42:
	tst	@_DECODER
	beq	?L449
?LBB43:
	ld	X,@_DECODER
	ld	X,@(H'0011,X)
	ld	AH,@(H'000E,X)
	ld	AL,@$XAP_AH
	and	AL,#H'1FF0
	cmp	AL,#H'1FE0
	bne	?L449
	ld	AL,@$XAP_AH
	or	AL,#H'0FF0
	and	AL,#-H'2001
	st	AL,@(H'000E,X)
	ld	AL,@_DECODER
	add	AL,#H'000A
	ld	AH,#H'0001
	bsr	$_CsrA2dpDecoderPluginSetLevels
?L449:
?LBE43:
?LBE42:
?LBE_CsrA2dpDecoderPluginSubCheckForConnectionFailure:
	leavel	#2
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
	ENDMOD

;# Function pattern *movqi2 used[0] = 502 used[1] = 120 used[3] = 7 total = 629
;# Function pattern *movqi3 used[0] = 796 total = 796
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[2] = 13 used[3] = 13 total = 26
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 20 used[2] = 3 total = 23
;# Function pattern *andqi3 used[0] = 108 total = 108
;# Function pattern *iorqi3 used[0] = 24 total = 24
;# Function pattern *mulqi3_const used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 56 total = 56
;# Function pattern *ashlqi3 used[0] = 12 total = 12
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2_1 used[1] = 3 total = 3
;# Function pattern jump used[0] = 96 total = 96
;# Function pattern *call1 used[0] = 108 total = 108
;# Function pattern *call_value1 used[0] = 171 total = 171
;# Function pattern tablejump_1 used[0] = 6 total = 6
;# Function pattern movstrqi+2 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 56 used[1] = 43 total = 99
;# Function pattern movstrqi+4 used[1] = 22 total = 22
;# Function pattern movstrqi+5 used[0] = 64 total = 64
;# Function pattern movstrqi+6 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[0] = 1 total = 1
	MODULE	csr_a2dp_decoder_common_sharing
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_CsrA2dpDecoderPluginDisconnectForwardingSink:
	enterl	#4
?LBB_CsrA2dpDecoderPluginDisconnectForwardingSink:
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	$_csrA2dpDecoderSetStreamRelayMode
	ld	X,@(0,Y)
	tst	@(H'0002,X)
	beq	?L1
?LBB3:
	ld	AL,@(H'0002,X)
	bsr	$_TransformFromSink
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L3
	bsr	$_TransformStop
	ld	AL,@(H'0001,Y)
	bsr	$_TransformDisconnect
?L3:
	ld	AL,#H'0000
	ld	X,@(0,Y)
	ld	AH,@(H'0002,X)
	bsr	$_StreamDisconnect
	ld	AL,#H'0000
	ld	X,@(0,Y)
	st	AL,@(H'0002,X)
?L1:
?LBE3:
?LBE2:
?LBE_CsrA2dpDecoderPluginDisconnectForwardingSink:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_CsrA2dpDecoderPluginForwardUndecoded:
	enterl	#10
?LBB_CsrA2dpDecoderPluginForwardUndecoded:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L4
	tst	@(H'0002,Y)
	beq	?L6
	tst	@(H'000A,Y)
	beq	?L4
	ld	X,@$XAP_AL
	tst	@(H'0002,X)
	bne	?L4
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0300
	beq	?L8
	cmp	AL,#H'0400
	beq	?L8
	cmp	AL,#H'0500
	beq	?L8
	cmp	AL,#H'0600
	bne	?L4
?L8:
	ld	AL,@(H'000A,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	cmp	AH,#(H'0001+H'000D)
	bcc	?L4
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE23,X)
	brxl
	.SEG	CONST
?JTBASE23:
	.CODE
?L23:
	.SEG	CONST
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L10-?L23)
	dc	lwrd(?L11-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L14-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L21-?L23)
	dc	lwrd(?L21-?L23)
	dc	lwrd(?L21-?L23)
	dc	lwrd(?L21-?L23)
	.CODE
?L10:
?LBB5:
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	$_TransformRtpSbcEncode
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'0006
	st	AH,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0003
	bsr	$_TransformConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0004
	bsr	$_TransformConfigure
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0006
	bsr	$_TransformConfigure
	ld	AL,@(H'0004,Y)
	bra	(?L28)
?L11:
?LBE5:
?LBB6:
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	$_TransformRtpMp3Encode
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'0006
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0008
	bsr	$_TransformConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0009
	bsr	$_TransformConfigure
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0006
	bsr	$_TransformConfigure
	ld	AL,@(H'0005,Y)
?L28:
	bsr	$_TransformStart
	bra	(?L27)
?L14:
?LBE6:
	tst	@(H'000B,Y)
	beq	?L15
?LBB7:
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	$_TransformRtpEncode
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0008,X)
	lsr	#H'0006
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0012
	bsr	$_TransformConfigure
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0013
	bsr	$_TransformConfigure
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0006
	bsr	$_TransformConfigure
	ld	AL,@(H'0006,Y)
	bra	(?L28)
?L15:
?LBE7:
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	$_StreamConnect
?L27:
	ld	AL,#H'0001
	bsr	$_csrA2dpDecoderSetStreamRelayMode
	bra	(?L4)
?L21:
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	$_StreamConnect
	ld	AL,#H'0002
	bsr	$_csrA2dpDecoderSetStreamRelayMode
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000E
	st	AH,@H'fff8
	ld	AH,@(H'0006,X)
	lsr	#H'000C
	ld	AL,@H'fff8
	and	AH,#H'0003
	bsr	$_csrA2dpDecoderSetTwsRoutingMode
	bra	(?L4)
?L6:
	ld	AL,#H'0000
	bsr	$_csrA2dpDecoderSetStreamRelayMode
	ld	X,@(H'0003,Y)
	tst	@(H'0002,X)
	beq	?L4
?LBB8:
	ld	AL,@(H'0002,X)
	bsr	$_TransformFromSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L26
	bsr	$_TransformStop
	ld	AL,@(H'0007,Y)
	bsr	$_TransformDisconnect
?L26:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	$_StreamDisconnect
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
?L4:
?LBE8:
?LBE4:
?LBE_CsrA2dpDecoderPluginForwardUndecoded:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 24 used[1] = 15 total = 39
;# Function pattern *movqi3 used[0] = 62 total = 62
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 31 total = 31
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 6 total = 9
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	csr_a2dp_decoder_common_subwoofer
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_CsrA2dpDecoderPluginConnectSubwoofer:
	enterl	#4
?LBB_CsrA2dpDecoderPluginConnectSubwoofer:
	st	AL,@(0,Y)
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0001,Y)
	tst	@(0,Y)
	beq	?L1
	ld	X,@(0,Y)
	tst	@(H'000A,X)
	beq	?L1
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0001
	beq	?L5
	cmp	AL,#H'0002
	beq	?L7
	bra	(?L1)
?L5:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0300
	beq	?L1
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(0,Y)
	ld	AH,@(H'000B,X)
	bsr	$_StreamConnect
	ld	X,@(0,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	bra	(?L11)
?L7:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0300
	bne	?L1
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(0,Y)
	ld	AH,@(H'000B,X)
	bsr	$_StreamConnect
	ld	X,@(0,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	or	AL,#H'0010
?L11:
	st	AL,@(H'000E,X)
	ld	AL,@(H'0001,Y)
	bsr	$_SubConnectedNowUnmuteVolume
?L1:
?LBE2:
?LBE_CsrA2dpDecoderPluginConnectSubwoofer:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_CsrA2dpDecoderPluginDisconnectSubwoofer:
	enterl	#3
?LBB_CsrA2dpDecoderPluginDisconnectSubwoofer:
?LBB3:
	bsr	$_CsrA2dpDecoderGetDecoderData
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L16
?LBB4:
	ld	X,@(H'0011,X)
	st	X,@(0,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	cmp	AL,#H'00FE
	beq	?L16
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(0,Y)
	ld	AH,@(H'000B,X)
	bsr	$_StreamDisconnect
	ld	X,@(0,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	or	AL,#H'0FE0
	st	AL,@(H'000E,X)
?L16:
?LBE4:
?LBE3:
?LBE_CsrA2dpDecoderPluginDisconnectSubwoofer:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_CsrA2dpDecoderPluginSetSubWoofer:
	enterl	#6
?LBB_CsrA2dpDecoderPluginSetSubWoofer:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB5:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L20
	ld	X,@$XAP_AL
?LBB6:
	ld	X,@(H'0011,X)
	st	X,@(H'0003,Y)
	ld	AL,@(0,Y)
	st	AL,@(H'000A,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'000B,X)
	ld	AL,@(0,Y)
	cmp	AL,#H'0001
	beq	?L27
	cmp	AL,#H'0001
	bcs	?L23
	cmp	AL,#H'0002
	beq	?L36
	bra	(?L20)
?L23:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	and	AH,#H'00FF
	cmp	AH,#H'00FE
	beq	?L20
	ld	AL,@(H'000E,X)
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L25
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	$_csrA2dpDecoderPluginOutputMute
?L25:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	or	AL,#H'0FE0
	st	AL,@(H'000E,X)
	ld	AL,@(H'0002,Y)
	bsr	$_SubConnectedNowUnmuteVolume
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L20
	bra	(?L47)
?L27:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0300
	beq	?L20
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	and	AH,#H'00FF
	cmp	AH,#H'0000
	beq	?L20
	ld	AL,@(H'000E,X)
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L30
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	$_csrA2dpDecoderPluginOutputMute
?L30:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	and	AH,#H'00FF
	cmp	AH,#H'0001
	bne	?L31
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
?L31:
	ld	AL,@(H'0001,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	AH,@(H'0001,Y)
	bsr	$_StreamConnect
	cmp	AL,#H'0000
	beq	?L34
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	st	AL,@(H'000E,X)
	ld	AL,@(H'0002,Y)
	bsr	$_SubConnectedNowUnmuteVolume
?L34:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L20
	bra	(?L47)
?L36:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	cmp	AL,#H'0300
	bne	?L20
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	and	AH,#H'00FF
	cmp	AH,#H'0001
	beq	?L20
	ld	AL,@(H'000E,X)
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L39
	ld	AL,#H'0002
	ld	AH,#H'0001
	bsr	$_csrA2dpDecoderPluginOutputMute
?L39:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0004
	and	AH,#H'00FF
	cmp	AH,#H'0000
	bne	?L40
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
?L40:
	ld	AL,@(H'0001,Y)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L43
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	AH,@(H'0001,Y)
	bsr	$_StreamConnect
	cmp	AL,#H'0000
	beq	?L43
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#-H'0FF1
	or	AL,#H'0010
	st	AL,@(H'000E,X)
	ld	AL,@(H'0002,Y)
	bsr	$_SubConnectedNowUnmuteVolume
?L43:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'1000
	cmp	AL,#H'0000
	bne	?L20
?L47:
	ld	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_csrA2dpDecoderPluginOutputMute
?L20:
?LBE6:
?LBE5:
?LBE_CsrA2dpDecoderPluginSetSubWoofer:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_SubConnectedNowUnmuteVolume:
	enterl	#8
?LBB_SubConnectedNowUnmuteVolume:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB7:
	ld	X,@(H'0011,X)
	st	X,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000B,X)
	cmp	AL,#-H'1C20
	bne	?L58
	ld	AL,@(H'000F,X)
	cmp	AL,#-H'1C20
	beq	?L59
?L58:
?LBB8:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'000A
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0064
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7011
	bsr	$_MessageSendLater
?L59:
	ld	X,@(H'0004,Y)
?LBE8:
	ld	AL,@(H'000E,X)
	and	AL,#-H'2001
	st	AL,@(H'000E,X)
?LBE7:
?LBE_SubConnectedNowUnmuteVolume:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 27 used[1] = 9 total = 36
;# Function pattern *movqi3 used[0] = 84 total = 84
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 24 total = 24
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 7 total = 7
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 27 total = 27
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 14 used[1] = 2 total = 16
;# Function pattern movstrqi+5 used[0] = 15 total = 15
	MODULE	csr_a2dp_decoder_common_aptx
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MusicConnectAptxSource:
	enterl	#10
?LBB_MusicConnectAptxSource:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	cmp	AH,#H'0000
	bne	?L5
	cmp	AL,#H'0000
	beq	?L2
?L5:
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	tst	@(H'0004,Y)
	beq	?L3
	ld	X,@(H'0005,Y)
?LBB3:
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	bsr	$_TransformRtpDecode
	ld	AH,@(H'0004,Y)
	bsr	$_csrA2dpDecoderStartTransformCheckScms
?LBE3:
	bra	(?L4)
?L3:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0007,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
?L4:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	and	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1016
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0013,X)
	bsr	$_KalimbaSendMessage
?L2:
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
?LBE2:
?LBE_MusicConnectAptxSource:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 11 used[1] = 3 total = 14
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern movstrqi+3 used[1] = 1 total = 1
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	csr_a2dp_decoder_common_aptx_ll
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MusicConnectAptxLowLatencySource:
	enterl	#10
?LBB_MusicConnectAptxLowLatencySource:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0005,Y)
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0010,X)
	ld	AL,@(H'0011,X)
	cmp	AH,#H'0000
	bne	?L7
	cmp	AL,#H'0000
	beq	?L2
?L7:
	ld	AL,#H'3120
	st	AL,@(H'000F,X)
?L2:
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	cmp	AH,#H'0000
	bne	?L8
	cmp	AL,#H'0000
	beq	?L4
?L8:
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	tst	@(H'0004,Y)
	beq	?L5
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0006,Y)
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	bsr	$_TransformRtpDecode
	ld	AH,@(H'0004,Y)
	bsr	$_csrA2dpDecoderStartTransformCheckScms
	bra	(?L4)
?L5:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0007,Y)
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0007,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
?L4:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0013,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0014,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0015,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1036
	ld	AH,@(H'0012,X)
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1037
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0016,X)
	bsr	$_KalimbaSendMessage
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
?LBE2:
?LBE_MusicConnectAptxLowLatencySource:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 14 used[1] = 3 total = 17
;# Function pattern *movqi3 used[0] = 21 total = 21
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 2 total = 2
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+6 used[0] = 2 total = 2
	MODULE	csr_a2dp_decoder_common_cvc_back_channel
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_CsrA2dpDecoderPluginDisconnectMic:
	enterl	#7
?LBB_CsrA2dpDecoderPluginDisconnectMic:
	st	AL,@(H'0001,Y)
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	AL,@(H'0003,Y)
	bsr	$_SourceClose
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
?L2:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L1
	ld	X,@(H'0001,Y)
?LBB3:
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L1
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	AL,@(H'0004,Y)
	bsr	$_SourceClose
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
?L1:
?LBE3:
?LBE2:
?LBE_CsrA2dpDecoderPluginDisconnectMic:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
_csrA2dpDecoderPluginSendLlDspGain:
	enterl	#16
?LBB_csrA2dpDecoderPluginSendLlDspGain:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'000D,Y)
	bsr	$_CsrMultiChanGainGetType
	cmp	AL,#H'0001
	bne	?L6
	ld	AL,@(H'000D,Y)
?LBB5:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	$_CsrMultiChanGainGetDigital
	ld	AL,@(H'0003,Y)
	and	AL,#H'000F
	or	AL,#H'0010
	st	AL,@(H'000D,Y)
?L6:
	ld	AL,@(H'000D,Y)
?LBE5:
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1002
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
?LBE4:
?LBE_csrA2dpDecoderPluginSendLlDspGain:
	leavel	#16
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
_csrA2dpDecoderPluginSetLlHwGain:
	enterl	#4
?LBB_csrA2dpDecoderPluginSetLlHwGain:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainGetType
	cmp	AL,#H'0001
	bne	?L9
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_CsrMultiChanGainSetHardware
	bra	(?L8)
?L9:
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	bsr	$_CsrMultiChanGainSetHardwareOnly
?L8:
?LBE_csrA2dpDecoderPluginSetLlHwGain:
	leavel	#4
$_csrA2dpDecoderPluginSetLowLatencyMode:
	enterl	#11
?LBB_csrA2dpDecoderPluginSetLowLatencyMode:
	st	AL,@(H'0003,Y)
?LBB6:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0011,X)
	st	X,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L13
	bsr	$_Panic
?L13:
	ld	AH,@(H'0003,Y)
	and	AH,#H'00FF
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(H'0005,X)
	ld	AL,@(H'000B,X)
	st	AL,@(H'0007,Y)
	ld	X,#H'0003
	st	X,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#(H'0001+H'0008)
	bcc	?L14
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE25,X)
	brxl
	.SEG	CONST
?JTBASE25:
	.CODE
?L25:
	.SEG	CONST
	dc	lwrd(?L23-?L25)
	dc	lwrd(?L23-?L25)
	dc	lwrd(?L23-?L25)
	dc	lwrd(?L23-?L25)
	dc	lwrd(?L19-?L25)
	dc	lwrd(?L16-?L25)
	dc	lwrd(?L17-?L25)
	dc	lwrd(?L18-?L25)
	dc	lwrd(?L15-?L25)
	.CODE
?L15:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0001
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0001
	ld	AH,@(H'0002,X)
	and	AH,#H'0001
	add	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,#H'0000
	bsr	$_KalimbaSendMessage
	bra	(?L14)
?L16:
	ld	AL,#H'0001
	bra	(?L26)
?L17:
	ld	X,#H'0002
	st	X,@(H'0006,Y)
	bra	(?L14)
?L18:
	ld	AL,#H'0004
?L26:
	st	AL,@(H'0006,Y)
	bra	(?L14)
?L19:
	ld	AL,@(H'000C,Y)
	bsr	$_CsrA2dpDecoderLowLatencyPluginSetEqMode
	ld	AL,@(H'000B,Y)
	bsr	$_CsrA2dpDecoderPluginUpdateEnhancements
	bra	(?L14)
?L23:
	bsr	$_Panic
	bra	(?L12)
?L14:
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'000C,X)
	bsr	_csrA2dpDecoderPluginSendLlDspGain
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	X,@(H'0008,X)
	st	X,@(H'0008,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
	asl	#H'0001
	st	AL,@H'fff8
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	AL,@H'fff8
	or	AL,@$XAP_AH
	st	AL,@(H'0002,Y)
	ld	AL,#H'1001
	ld	AH,@(H'0006,Y)
	bsr	$_KalimbaSendMessage
?L12:
?LBE6:
?LBE_csrA2dpDecoderPluginSetLowLatencyMode:
	leavel	#11
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_csrA2dpDecoderPluginLowLatencyOutputMute:
	enterl	#7
?LBB_csrA2dpDecoderPluginLowLatencyOutputMute:
	st	AL,@(H'0003,Y)
?LBB7:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L27
	ld	X,@$XAP_AL
	ld	AL,@(H'0016,X)
	cmp	AL,@(H'0003,Y)
	beq	?L27
	ld	AL,@(H'0003,Y)
?LBB8:
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L30
	ld	AH,#H'0003
	bra	(?L31)
?L30:
	ld	AH,#H'0000
?L31:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'101A
	bsr	$_KalimbaSendMessage
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0016,X)
?L27:
?LBE8:
?LBE7:
?LBE_csrA2dpDecoderPluginLowLatencyOutputMute:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_csrA2dpDecoderPluginSetLowLatencySoftMute:
	enterl	#3
?LBB_csrA2dpDecoderPluginSetLowLatencySoftMute:
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	st	AL,@(0,Y)
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L34
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L34:
	ld	AH,@(0,X)
	lsr	#H'000D
	and	AH,#H'0004
	cmp	AH,#H'0000
	beq	?L35
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L35:
	ld	AL,@(-1,Y)
	bsr	$_csrA2dpDecoderPluginLowLatencyOutputMute
	ld	AL,@(0,Y)
	bsr	$_csrA2dpDecoderPluginMicMute
?LBE9:
?LBE_csrA2dpDecoderPluginSetLowLatencySoftMute:
	leavel	#3
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_CsrA2dpDecoderPluginSetLowLatencyGain:
	enterl	#2
?LBB_CsrA2dpDecoderPluginSetLowLatencyGain:
	ld	X,@$XAP_AH
?LBB10:
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'00B4
	add	AL,#H'000F
	st	AL,@H'fff8
	ld	AH,@$XAP_UXL
	asr	#H'0010
	sdiv	#H'00B4
	ld	X,@$XAP_AL
	add	X,#H'000F
	ld	AH,@H'fff8
	xor	AH,#-H'0001
	asr	#H'000F
	and	AH,@H'fff8
	st	AH,@H'fff8
	ld	AH,@$XAP_UXL
	xor	AH,#-H'0001
	asr	#H'000F
	and	X,@$XAP_AH
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_csrA2dpDecoderPluginSendLlDspGain
?LBE10:
?LBE_CsrA2dpDecoderPluginSetLowLatencyGain:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_CvcMicSetGain:
	enterl	#4
?LBB_CvcMicSetGain:
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
?LBB11:
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_AudioPluginGetMic
	ld	X,@$XAP_AL
	tst	@(H'0004,Y)
	beq	?L40
	ld	AH,@(H'0005,Y)
	lsr	#H'0005
	and	AH,#H'000F
	bra	(?L41)
?L40:
	ld	AH,@(H'0005,Y)
	and	AH,#H'001F
?L41:
	st	AH,@(0,Y)
	ld	AH,@(H'0005,Y)
	lsr	#H'000F
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	bsr	$_AudioPluginSetMicGain
?LBE11:
?LBE_CvcMicSetGain:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_CsrA2dpDecoderConnectBackChannel:
	enterl	#9
?LBB_CsrA2dpDecoderConnectBackChannel:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB12:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'000F
	ld	AL,#H'3E80
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_AudioPluginSetMicRate
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,#H'0001
	bsr	$_AudioPluginSetMicPio
	tst	@(H'0003,Y)
	beq	?L43
	ld	X,@(H'0002,Y)
?LBB13:
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0006,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	ld	AL,#H'3E80
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_AudioPluginSetMicRate
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	ld	AH,#H'0001
	bsr	$_AudioPluginSetMicPio
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_SourceSynchronise
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0005,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	bra	(?L45)
?L43:
?LBE13:
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0005,Y)
?L45:
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,#H'0000
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	bsr	$_StreamDisconnect
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	bsr	$_StreamConnect
	bsr	$_PanicNull
?LBE12:
?LBE_CsrA2dpDecoderConnectBackChannel:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_isCodecLowLatencyBackChannel:
	enterl	#2
?LBB_isCodecLowLatencyBackChannel:
?LBB14:
	bsr	$_CsrA2dpDecoderGetDecoderData
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L47
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	and	AL,#-H'1000
	cmp	AL,#H'4000
	beq	?L48
	cmp	AL,#H'7000
	bne	?L47
?L48:
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L47
	ld	AL,#H'0001
	bra	(?L46)
?L47:
	ld	AL,#H'0000
?L46:
?LBE14:
?LBE_isCodecLowLatencyBackChannel:
	leavel	#2
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_CsrA2dpDecoderPluginLowLatencyInternalMessage:
	enterl	#14
?LBB_CsrA2dpDecoderPluginLowLatencyInternalMessage:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB15:
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	st	AH,@(H'0005,Y)
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,Y)
	cmp	AL,#-H'7FDC
	beq	?L54
	cmp	AL,#-H'7FD6
	beq	?L90
	bra	(?L52)
?L54:
	ld	X,@(H'000E,Y)
?LBB16:
	st	X,@(H'0008,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'1023
	beq	?L82
	cmp	AL,#(H'0001+H'1023)
	bcc	?L86
	cmp	AL,#H'100C
	beq	?L79
	cmp	AL,#(H'0001+H'100C)
	bcc	?L87
	cmp	AL,#H'1000
	beq	?L59
	cmp	AL,#H'1006
	beq	?L64
	bra	(?L52)
?L87:
	cmp	AL,#H'1014
	beq	?L58
	cmp	AL,#(H'0001+H'1014)
	bcc	?L88
	cmp	AL,#H'1013
	beq	?L79
	bra	(?L52)
?L88:
	cmp	AL,#H'1019
	beq	?L74
	bra	(?L52)
?L86:
	cmp	AL,#H'1080
	beq	?L56
	cmp	AL,#(H'0001+H'1080)
	bcc	?L89
	cmp	AL,#H'1028
	beq	?L70
	bra	(?L52)
?L89:
	cmp	AL,#H'7070
	beq	?L68
	bra	(?L52)
?L56:
	bsr	$_IsTonePlaying
	cmp	AL,#H'0000
	beq	?L52
	bsr	$_CsrA2dpDecoderPluginToneComplete
	bra	(?L52)
?L58:
	ld	X,@(H'0008,Y)
?LBB17:
	ld	AL,@(H'0001,X)
	bsr	$_PblockGet
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	and	AH,#H'00FF
	add	X,#H'0001
	st	X,@(0,Y)
	ld	AL,#H'1015
	bsr	$_KalimbaSendLongMessage
?LBE17:
	bra	(?L52)
?L59:
	tst	@(H'0006,Y)
	beq	?L60
	ld	X,@(H'0006,Y)
	ld	X,@(H'0011,X)
	st	X,@(H'0007,Y)
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1012
	ld	AH,#H'2270
	bsr	$_KalimbaSendMessage
	ld	X,@(H'0007,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L61
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1018
	ld	AH,@(H'0004,X)
	bsr	$_KalimbaSendMessage
?L61:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1024
	ld	AH,@(H'0005,Y)
	bsr	$_KalimbaSendMessage
	cmp	AL,#H'0000
	bne	?L62
	bsr	$_Panic
?L62:
?LBB18:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	bsr	$_IsAudioBusy
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	bsr	$_GetCurrentDspStatus
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0015,X)
	ld	AH,#H'7301
	bsr	$_MessageSend
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	ld	AL,@(H'0003,Y)
	bsr	$_MusicConnectAudio
	ld	AL,#H'0003
	bra	(?L99)
?L60:
?LBE18:
	ld	AL,#H'0004
?L99:
	bsr	$_SetCurrentDspStatus
	bra	(?L52)
?L64:
	tst	@(H'0006,Y)
	beq	?L52
	ld	X,@(H'0006,Y)
?LBB19:
	ld	X,@(H'0011,X)
	st	X,@(H'0007,Y)
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L66
	ld	X,@(H'0008,Y)
	ld	X,@(H'0002,X)
	st	X,@(H'000A,Y)
	ld	X,@(H'0008,Y)
	ld	X,@(H'0003,X)
	st	X,@(H'000B,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_CvcMicSetGain
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L66
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0008,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_CvcMicSetGain
?L66:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	bsr	_csrA2dpDecoderPluginSetLlHwGain
?LBE19:
	bra	(?L52)
?L68:
	tst	@(H'0006,Y)
	beq	?L52
?LBB20:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,#H'7070
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L98)
?L70:
?LBE20:
	tst	@(H'0006,Y)
	beq	?L52
?LBB21:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	st	AL,@(0,X)
?L98:
	st	AL,@(H'0001,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	st	AH,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0015,X)
	ld	AH,#H'7300
	bsr	$_MessageSend
?LBE21:
	bra	(?L52)
?L74:
	ld	X,@(H'0008,Y)
?LBB22:
	ld	X,@(H'0001,X)
	st	X,@H'fff8
	ld	X,@(H'0006,Y)
	ld	X,@(H'0011,X)
	st	X,@(H'0007,Y)
	ld	AH,@(H'000E,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L52
	tst	@H'fff8
	beq	?L76
	ld	AL,#H'0001
	st	AL,@(0,Y)
	bra	(?L97)
?L76:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
?L97:
	ld	AL,@(H'0006,X)
	ld	AH,#H'0001
	bsr	$_PioCommonSetPin
?LBE22:
	bra	(?L52)
?L79:
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	bra	(?L52)
?L82:
	tst	@(H'0006,Y)
	beq	?L52
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0001,X)
	bsr	$_CsrA2dpDecoderPluginSetAudioLatency
	bra	(?L52)
?L90:
	ld	X,@(H'000E,Y)
?LBE16:
?LBB23:
	ld	AL,@(0,X)
	cmp	AL,#H'1016
	bne	?L52
	ld	AH,@(H'0001,X)
	add	AH,#-H'0001
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	bsr	$_PblockSet
?L52:
?LBE23:
?LBE15:
?LBE_CsrA2dpDecoderPluginLowLatencyInternalMessage:
	leavel	#14
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
$_CsrA2dpDecoderLowLatencyPluginSetEqMode:
	enterl	#5
?LBB_CsrA2dpDecoderLowLatencyPluginSetEqMode:
	cmp	AL,#(H'0001+H'0009)
	bcc	?L113
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE126,X)
	brxl
	.SEG	CONST
?JTBASE126:
	.CODE
?L126:
	.SEG	CONST
	dc	lwrd(?L117-?L126)
	dc	lwrd(?L116-?L126)
	dc	lwrd(?L117-?L126)
	dc	lwrd(?L124-?L126)
	dc	lwrd(?L124-?L126)
	dc	lwrd(?L124-?L126)
	dc	lwrd(?L124-?L126)
	dc	lwrd(?L124-?L126)
	dc	lwrd(?L124-?L126)
	dc	lwrd(?L124-?L126)
	.CODE
?L116:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1039
	ld	AH,#H'0000
	bra	(?L127)
?L117:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1039
	ld	AH,#H'0001
	bra	(?L127)
?L124:
	add	AL,#-H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'1039
	ld	AH,#H'0002
?L127:
	bsr	$_KalimbaSendMessage
?L113:
?LBE_CsrA2dpDecoderLowLatencyPluginSetEqMode:
	leavel	#5
$_CsrA2dpDecoderPluginIfLowLatencyGetOutputType:
	enterl	#2
?LBB_CsrA2dpDecoderPluginIfLowLatencyGetOutputType:
	bsr	$_isCodecLowLatencyBackChannel
	cmp	AL,#H'0000
	beq	?L129
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGetOutputType
	bra	(?L128)
?L129:
	ld	AL,#H'0000
?L128:
?LBE_CsrA2dpDecoderPluginIfLowLatencyGetOutputType:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 161 used[1] = 30 total = 191
;# Function pattern *movqi3 used[0] = 225 total = 225
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 7 total = 7
;# Function pattern *andqi3 used[0] = 19 total = 19
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *divqi3_const used[0] = 2 total = 2
;# Function pattern *extendqihi2 used[0] = 1 used[1] = 1 total = 2
;# Function pattern *lshrqi3 used[0] = 18 total = 18
;# Function pattern *ashrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern one_cmplqi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 31 total = 31
;# Function pattern *call1 used[0] = 34 total = 34
;# Function pattern *call_value1 used[0] = 53 total = 53
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+2 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 17 used[1] = 8 total = 25
;# Function pattern movstrqi+4 used[1] = 6 total = 6
;# Function pattern movstrqi+5 used[0] = 18 total = 18
	MODULE	csr_a2dp_decoder_common_faststream
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MusicConnectFaststreamSource:
	enterl	#4
?LBB_MusicConnectFaststreamSource:
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	beq	?L3
?L4:
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	ld	AH,#H'0000
	bsr	$_StreamDisconnect
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0001,Y)
	ld	AL,#H'0002
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
?L3:
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
?LBE2:
?LBE_MusicConnectFaststreamSource:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 1 total = 5
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	csr_a2dp_decoder_common_fm
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCVC_BACK_CHANNEL -DENABLE_STEREO -DINCLUDE_MP3 -DINCLUDE_AAC
;# -DINCLUDE_FASTSTREAM -DINCLUDE_APTX -DINCLUDE_APTX_ACL_SPRINT
;# -DINCLUDE_USB -DINCLUDE_WIRED -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MusicConnectFmSource:
	enterl	#7
?LBB_MusicConnectFmSource:
?LBB2:
	bsr	$_CsrA2dpDecoderGetDecoderData
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	cmp	AH,#H'0000
	bne	?L3
	cmp	AL,#H'0000
	beq	?L2
?L3:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'0001
	bsr	$_StreamAudioSource
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0202
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0200
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0004,Y)
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0202
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0012,X)
	ld	AL,@(H'0013,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0200
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
?L2:
	ld	AL,#H'0001
	bsr	$_SetAudioInUse
?LBE2:
?LBE_MusicConnectFmSource:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_MusicDisconnectFmSource:
	enterl	#5
?LBB_MusicDisconnectFmSource:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_StreamDisconnect
	ld	AL,#H'0001
	bsr	$_StreamKalimbaSink
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	bsr	$_StreamDisconnect
?LBE3:
?LBE_MusicDisconnectFmSource:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 17 used[1] = 6 total = 23
;# Function pattern *movqi3 used[0] = 23 total = 23
;# Function pattern *movhi used[2] = 3 used[3] = 2 total = 5
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 21 total = 21
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+6 used[0] = 1 total = 1
	MODULE	a2dp_api
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_A2dpSignallingState:
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0002
	dc	H'0003
_A2dpStreamState:
	dc	H'0000
	dc	H'0001
	dc	H'0002
	dc	H'0002
	dc	H'0002
	dc	H'0003
	dc	H'0004
	dc	H'0004
	dc	H'0005
	dc	H'0007
	dc	H'0006
	dc	H'0006
	dc	H'0007
	dc	H'0009
	dc	H'0009
	dc	H'000A
	dc	H'000A
	dc	H'000B
	dc	H'000B
	.CODE
_findDeviceId:
	enterl	#2
?LBB_findDeviceId:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L2
	ld	AH,@(H'0004,X)
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	bra	(?L1)
?L2:
	ld	AL,#H'00FF
?L1:
?LBE_findDeviceId:
	leavel	#2
_findStreamId:
	enterl	#2
?LBB_findStreamId:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L4
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L4
	ld	AH,@(H'0004,X)
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	bra	(?L3)
?L4:
	ld	AL,#H'00FF
?L3:
?LBE_findStreamId:
	leavel	#2
$_a2dpSignallingConnectInd:
	enterl	#5
?LBB_a2dpSignallingConnectInd:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	tst	@(H'0001,Y)
	beq	?L6
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0004,X)
	bra	(?L7)
?L6:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0002,X)
	st	AL,@(H'0001,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0003,X)
?L7:
	ld	X,@$_a2dp
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D01
	bsr	$_MessageSend
?LBE2:
?LBE_a2dpSignallingConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_a2dpSignallingConnectCfm:
	enterl	#6
?LBB_a2dpSignallingConnectCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0001,Y)
	beq	?L9
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'000D,X)
	lsr	#H'000A
	and	AH,#H'0001
	ld	X,@(H'0003,Y)
	st	AH,@(H'0006,X)
	bra	(?L10)
?L9:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
	ld	AL,#H'0001
	st	AL,@(H'0006,X)
?L10:
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D02
	bsr	$_MessageSend
?LBE3:
?LBE_a2dpSignallingConnectCfm:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_a2dpSignallingDisconnectInd:
	enterl	#6
?LBB_a2dpSignallingDisconnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	tst	@(H'0001,Y)
	beq	?L12
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	bra	(?L13)
?L12:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
?L13:
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D03
	bsr	$_MessageSend
?LBE4:
?LBE_a2dpSignallingDisconnectInd:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_a2dpSignallingLinklossInd:
	enterl	#5
?LBB_a2dpSignallingLinklossInd:
	st	AL,@(H'0001,Y)
?LBB5:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D04
	bsr	$_MessageSend
?LBE5:
?LBE_a2dpSignallingLinklossInd:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_a2dpMediaOpenInd:
	enterl	#6
?LBB_a2dpMediaOpenInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D05
	bsr	$_MessageSend
?LBE6:
?LBE_a2dpMediaOpenInd:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_a2dpMediaOpenCfm:
	enterl	#6
?LBB_a2dpMediaOpenCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	cmp	AL,#H'0000
	bne	?L17
	ld	X,@(H'0001,Y)
?LBB8:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	ld	AL,@(0,X)
	bra	(?L21)
?L17:
?LBE8:
	ld	AL,#H'00FF
?L21:
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	tst	@(H'0002,Y)
	beq	?L19
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L19
	ld	AH,@(H'0004,X)
	lsr	#H'0006
	and	AH,#H'0001
	ld	X,@(H'0003,Y)
	st	AH,@(H'0004,X)
	bra	(?L20)
?L19:
	ld	AL,#H'0001
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
?L20:
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D06
	bsr	$_MessageSend
?LBE7:
?LBE_a2dpMediaOpenCfm:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_a2dpMediaCloseInd:
	enterl	#6
?LBB_a2dpMediaCloseInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D07
	bsr	$_MessageSend
?LBE9:
?LBE_a2dpMediaCloseInd:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_a2dpMediaStartInd:
	enterl	#6
?LBB_a2dpMediaStartInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D09
	bsr	$_MessageSend
?LBE10:
?LBE_a2dpMediaStartInd:
	leavel	#6
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_a2dpMediaStartCfm:
	enterl	#6
?LBB_a2dpMediaStartCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB11:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D0A
	bsr	$_MessageSend
?LBE11:
?LBE_a2dpMediaStartCfm:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_a2dpMediaSuspendInd:
	enterl	#6
?LBB_a2dpMediaSuspendInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D0B
	bsr	$_MessageSend
?LBE12:
?LBE_a2dpMediaSuspendInd:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_a2dpMediaSuspendCfm:
	enterl	#6
?LBB_a2dpMediaSuspendCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB13:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D0C
	bsr	$_MessageSend
?LBE13:
?LBE_a2dpMediaSuspendCfm:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_a2dpCodecConfigureInd:
	enterl	#6
?LBB_a2dpCodecConfigureInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
?LBB14:
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	X,@$_a2dp
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D12
	bsr	$_MessageSend
?LBE14:
?LBE_a2dpCodecConfigureInd:
	leavel	#6
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_a2dpMediaReconfigureInd:
	enterl	#6
?LBB_a2dpMediaReconfigureInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D0D
	bsr	$_MessageSend
?LBE15:
?LBE_a2dpMediaReconfigureInd:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_a2dpMediaReconfigureCfm:
	enterl	#6
?LBB_a2dpMediaReconfigureCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB16:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	bsr	_findStreamId
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D0E
	bsr	$_MessageSend
?LBE16:
?LBE_a2dpMediaReconfigureCfm:
	leavel	#6
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_a2dpMediaAvSyncDelayInd:
	enterl	#6
?LBB_a2dpMediaAvSyncDelayInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB17:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D0F
	bsr	$_MessageSend
?LBE17:
?LBE_a2dpMediaAvSyncDelayInd:
	leavel	#6
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_a2dpMediaAvSyncDelayCfm:
	enterl	#6
?LBB_a2dpMediaAvSyncDelayCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB18:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D10
	bsr	$_MessageSend
?LBE18:
?LBE_a2dpMediaAvSyncDelayCfm:
	leavel	#6
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_a2dpMediaAvSyncDelayUpdatedInd:
	enterl	#6
?LBB_a2dpMediaAvSyncDelayUpdatedInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB19:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_findDeviceId
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D11
	bsr	$_MessageSend
?LBE19:
?LBE_a2dpMediaAvSyncDelayUpdatedInd:
	leavel	#6
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_A2dpConfigureMaxRemoteDevices:
	enterl	#2
?LBB_A2dpConfigureMaxRemoteDevices:
	st	AL,@H'fff8
	tst	@$_a2dp
	beq	?L34
	cmp	AL,#(H'0001+H'0002)
	bcc	?L34
	cmp	AL,#H'0000
	beq	?L34
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	cmp	AH,@H'fff8
	beq	?L41
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	cmp	AH,@H'fff8
	bcz	?L37
	ld	AL,#H'0018
	add	AL,@$XAP_UXL
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L34
	ld	X,@$_a2dp
	ld	AL,@(H'0003,X)
	and	AL,#H'1FFF
	or	AL,#H'2000
	bra	(?L40)
?L37:
	ld	X,@$_a2dp
	ld	AL,@(H'0003,X)
	and	AL,#H'1FFF
	or	AL,#H'4000
?L40:
	st	AL,@(H'0003,X)
?L41:
	ld	AL,#H'0001
	bra	(?L33)
?L34:
	ld	AL,#H'0000
?L33:
?LBE_A2dpConfigureMaxRemoteDevices:
	leavel	#2
$_A2dpSignallingConnectRequest:
	enterl	#4
?LBB_A2dpSignallingConnectRequest:
	st	AL,@(H'0001,Y)
?LBB20:
	tst	@$_a2dp
	beq	?L46
	cmp	AL,#H'0000
	beq	?L46
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L45
?L46:
	ld	AL,#H'0000
	bra	(?L44)
?L45:
?LBB21:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AH,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0007
	bsr	$_MessageSend
	ld	AL,#H'0001
?L44:
?LBE21:
?LBE20:
?LBE_A2dpSignallingConnectRequest:
	leavel	#4
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_A2dpSignallingConnectResponse:
	enterl	#5
?LBB_A2dpSignallingConnectResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB22:
	tst	@$_a2dp
	beq	?L50
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L49
?L50:
	ld	AL,#H'0000
	bra	(?L48)
?L49:
?LBB23:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0008
	bsr	$_MessageSend
	ld	AL,#H'0001
?L48:
?LBE23:
?LBE22:
?LBE_A2dpSignallingConnectResponse:
	leavel	#5
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
$_A2dpSignallingDisconnectRequest:
	enterl	#4
?LBB_A2dpSignallingDisconnectRequest:
	st	AL,@(H'0001,Y)
?LBB24:
	tst	@$_a2dp
	beq	?L55
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L54
?L55:
	ld	AL,#H'0000
	bra	(?L53)
?L54:
?LBB25:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0009
	bsr	$_MessageSend
	ld	AL,#H'0001
?L53:
?LBE25:
?LBE24:
?LBE_A2dpSignallingDisconnectRequest:
	leavel	#4
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_A2dpSignallingGetSink:
	enterl	#2
?LBB_A2dpSignallingGetSink:
	st	AL,@H'fff8
	tst	@$_a2dp
	beq	?L61
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcc	?L61
	ld	AL,@H'fff8
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	lsr	#H'0005
	and	AH,#H'0007
	cmp	AH,#H'0004
	bne	?L61
	ld	AL,@(H'000E,X)
	bra	(?L58)
?L61:
	ld	AL,#H'0000
?L58:
?LBE_A2dpSignallingGetSink:
	leavel	#2
$_A2dpSignallingGetState:
	enterl	#2
?LBB_A2dpSignallingGetState:
	st	AL,@H'fff8
	tst	@$_a2dp
	beq	?L67
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcs	?L66
?L67:
	ld	AL,#H'0000
	bra	(?L65)
?L66:
	ld	AL,@H'fff8
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	lsr	#H'0005
	ld	X,@$XAP_AH
	and	X,#H'0007
	ld	AL,@(_A2dpSignallingState,X)
?L65:
?LBE_A2dpSignallingGetState:
	leavel	#2
$_A2dpDeviceGetBdaddr:
	enterl	#2
?LBB_A2dpDeviceGetBdaddr:
	st	AL,@H'fff9
	st	AH,@H'fff8
	tst	@$_a2dp
	beq	?L71
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcs	?L70
?L71:
	ld	AL,#H'0000
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	st	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	bra	(?L69)
?L70:
	ld	AL,@H'fff9
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	lsr	#H'0005
	and	AH,#H'0007
	cmp	AH,#H'0000
	bne	?L72
	ld	X,@H'fff8
	st	AH,@(H'0001,X)
	st	AH,@(0,X)
	st	AH,@(H'0003,X)
	st	AH,@(H'0002,X)
	ld	AL,#H'0000
	bra	(?L69)
?L72:
	ld	AL,@H'fff9
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AH,#H'0005
	add	AH,@$XAP_UXL
	ld	AL,@(H'0005,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
?L69:
?LBE_A2dpDeviceGetBdaddr:
	leavel	#2
$_A2dpDeviceManageLinkloss:
	enterl	#2
?LBB_A2dpDeviceManageLinkloss:
	st	AL,@H'fff8
	st	AH,@H'fff9
	tst	@$_a2dp
	beq	?L80
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcc	?L80
	ld	AL,@H'fff8
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	lsr	#H'0005
	and	AH,#H'0007
	cmp	AH,#H'0004
	beq	?L78
?L80:
	ld	AL,#H'0000
	bra	(?L75)
?L78:
	ld	AL,@H'fff8
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AL,@H'fff9
	and	AL,#H'0001
	asl	#H'0006
	ld	AH,@(H'0009,X)
	and	AH,#-H'0041
	or	AH,@$XAP_AL
	st	AH,@(H'0009,X)
	ld	AL,#H'0001
?L75:
?LBE_A2dpDeviceManageLinkloss:
	leavel	#2
$_A2dpMediaOpenRequest:
	enterl	#6
?LBB_A2dpMediaOpenRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB26:
	tst	@$_a2dp
	beq	?L85
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L84
?L85:
	ld	AL,#H'0000
	bra	(?L83)
?L84:
	ld	AL,@(H'0002,Y)
?LBB27:
	add	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	tst	@(H'0002,Y)
	beq	?L87
	tst	@(H'0006,Y)
	beq	?L87
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	bra	(?L88)
?L87:
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
?L88:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'000B
	bsr	$_MessageSend
	ld	AL,#H'0001
?L83:
?LBE27:
?LBE26:
?LBE_A2dpMediaOpenRequest:
	leavel	#6
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_A2dpMediaOpenResponse:
	enterl	#5
?LBB_A2dpMediaOpenResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB28:
	tst	@$_a2dp
	beq	?L92
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L91
?L92:
	ld	AL,#H'0000
	bra	(?L90)
?L91:
?LBB29:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'000C
	bsr	$_MessageSend
	ld	AL,#H'0001
?L90:
?LBE29:
?LBE28:
?LBE_A2dpMediaOpenResponse:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_A2dpMediaCloseRequest:
	enterl	#5
?LBB_A2dpMediaCloseRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB30:
	tst	@$_a2dp
	beq	?L97
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L97
	tst	@(H'0002,Y)
	beq	?L96
?L97:
	ld	AL,#H'0000
	bra	(?L95)
?L96:
?LBB31:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	add	AL,@(0,X)
	add	AL,#H'000E
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0010
	bsr	$_MessageSend
	ld	AL,#H'0001
?L95:
?LBE31:
?LBE30:
?LBE_A2dpMediaCloseRequest:
	leavel	#5
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_A2dpMediaStartRequest:
	enterl	#5
?LBB_A2dpMediaStartRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB32:
	tst	@$_a2dp
	beq	?L102
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L102
	tst	@(H'0002,Y)
	beq	?L101
?L102:
	ld	AL,#H'0000
	bra	(?L100)
?L101:
?LBB33:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	add	AL,@(0,X)
	add	AL,#H'000E
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'000D
	bsr	$_MessageSend
	ld	AL,#H'0001
?L100:
?LBE33:
?LBE32:
?LBE_A2dpMediaStartRequest:
	leavel	#5
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_A2dpMediaStartResponse:
	enterl	#5
?LBB_A2dpMediaStartResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB34:
	tst	@$_a2dp
	beq	?L107
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L107
	tst	@(H'0002,Y)
	beq	?L106
?L107:
	ld	AL,#H'0000
	bra	(?L105)
?L106:
?LBB35:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	add	AL,@(0,X)
	add	AL,#H'000E
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'000E
	bsr	$_MessageSend
	ld	AL,#H'0001
?L105:
?LBE35:
?LBE34:
?LBE_A2dpMediaStartResponse:
	leavel	#5
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
$_A2dpMediaSuspendRequest:
	enterl	#5
?LBB_A2dpMediaSuspendRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB36:
	tst	@$_a2dp
	beq	?L112
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L112
	tst	@(H'0002,Y)
	beq	?L111
?L112:
	ld	AL,#H'0000
	bra	(?L110)
?L111:
?LBB37:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	add	AL,@(0,X)
	add	AL,#H'000E
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'000F
	bsr	$_MessageSend
	ld	AL,#H'0001
?L110:
?LBE37:
?LBE36:
?LBE_A2dpMediaSuspendRequest:
	leavel	#5
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_A2dpMediaReconfigureRequest:
	enterl	#5
?LBB_A2dpMediaReconfigureRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB38:
	tst	@$_a2dp
	beq	?L117
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L117
	tst	@(H'0002,Y)
	beq	?L116
?L117:
	ld	AL,#H'0000
	bra	(?L115)
?L116:
?LBB39:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	add	AL,@(0,X)
	add	AL,#H'000E
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0011
	bsr	$_MessageSend
	ld	AL,#H'0001
?L115:
?LBE39:
?LBE38:
?LBE_A2dpMediaReconfigureRequest:
	leavel	#5
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_A2dpMediaAvSyncDelayRequest:
	enterl	#5
?LBB_A2dpMediaAvSyncDelayRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB40:
	tst	@$_a2dp
	beq	?L122
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L121
?L122:
	ld	AL,#H'0000
	bra	(?L120)
?L121:
?LBB41:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0012
	bsr	$_MessageSend
	ld	AL,#H'0001
?L120:
?LBE41:
?LBE40:
?LBE_A2dpMediaAvSyncDelayRequest:
	leavel	#5
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_A2dpMediaAvSyncDelayResponse:
	enterl	#5
?LBB_A2dpMediaAvSyncDelayResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB42:
	tst	@$_a2dp
	beq	?L127
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L126
?L127:
	ld	AL,#H'0000
	bra	(?L125)
?L126:
?LBB43:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0013
	bsr	$_MessageSend
	ld	AL,#H'0001
?L125:
?LBE43:
?LBE42:
?LBE_A2dpMediaAvSyncDelayResponse:
	leavel	#5
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_A2dpMediaGetSink:
	enterl	#2
?LBB_A2dpMediaGetSink:
	st	AL,@H'fff9
	st	AH,@H'fff8
	tst	@$_a2dp
	beq	?L133
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcc	?L133
	tst	@H'fff8
	bne	?L133
	ld	AL,@H'fff8
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	smult	#H'0013
	add	X,@$XAP_AL
	add	X,@$_a2dp
	ld	AL,@(H'0017,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	bne	?L133
	ld	AL,@(H'0013,X)
	bra	(?L130)
?L133:
	ld	AL,#H'0000
?L130:
?LBE_A2dpMediaGetSink:
	leavel	#2
$_A2dpMediaGetRole:
	enterl	#2
?LBB_A2dpMediaGetRole:
	st	AL,@H'fff9
	st	AH,@H'fff8
	tst	@$_a2dp
	beq	?L140
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcc	?L140
	tst	@H'fff8
	bne	?L140
	ld	AL,@$_a2dp
	st	AL,@H'fffa
	ld	AL,@H'fff8
	smult	#H'0005
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	smult	#H'0013
	ld	AH,@$XAP_AL
	add	X,@$XAP_AL
	add	X,@H'fffa
	ld	AL,@(H'0017,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	bne	?L140
	ld	X,@H'fffa
	add	X,@$XAP_AH
	ld	AH,@(H'000B,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	bra	(?L137)
?L140:
	ld	AL,#H'0002
?L137:
?LBE_A2dpMediaGetRole:
	leavel	#2
$_A2dpMediaGetState:
	enterl	#2
?LBB_A2dpMediaGetState:
	st	AL,@H'fff8
	st	AH,@H'fff9
	tst	@$_a2dp
	beq	?L146
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcc	?L146
	tst	@H'fff9
	beq	?L145
?L146:
	ld	AL,#H'0000
	bra	(?L144)
?L145:
	ld	AL,@H'fff8
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	X,@(H'0012,X)
	and	X,#H'001F
	ld	AL,@(_A2dpStreamState,X)
?L144:
?LBE_A2dpMediaGetState:
	leavel	#2
$_A2dpCodecGetSettings:
	enterl	#2
?LBB_A2dpCodecGetSettings:
	st	AL,@H'fff8
	st	AH,@H'fff9
	tst	@$_a2dp
	beq	?L150
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcc	?L150
	tst	@H'fff9
	beq	?L149
?L150:
	ld	AL,#H'0000
	bra	(?L148)
?L149:
	ld	AL,@H'fff8
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	bsr	$_a2dpGetCodecAudioParams
?L148:
?LBE_A2dpCodecGetSettings:
	leavel	#2
$_A2dpCodecSetAvailable:
	enterl	#3
?LBB_A2dpCodecSetAvailable:
	st	AL,@H'fff8
	st	AH,@H'fff9
	tst	@$_a2dp
	beq	?L154
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcs	?L153
?L154:
	ld	AL,#H'0000
	bra	(?L152)
?L153:
	ld	AL,@H'fff8
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@H'fff9
	bsr	$_a2dpSetSepAvailable
?L152:
?LBE_A2dpCodecSetAvailable:
	leavel	#3
$_A2dpCodecGetAvailable:
	enterl	#3
?LBB_A2dpCodecGetAvailable:
	st	AL,@H'fff8
	st	AH,@H'fff9
	tst	@$_a2dp
	beq	?L158
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcs	?L157
?L158:
	ld	AL,#H'0000
	bra	(?L156)
?L157:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	AH,@H'fff9
	bsr	$_a2dpGetSepAvailability
	cmp	AL,#H'0000
	bne	?L159
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L159:
	ld	AL,@(0,Y)
?L156:
?LBE_A2dpCodecGetAvailable:
	leavel	#3
$_A2dpCodecConfigureResponse:
	enterl	#6
?LBB_A2dpCodecConfigureResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB44:
	tst	@$_a2dp
	beq	?L167
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L167
	tst	@(H'0002,Y)
	beq	?L165
	tst	@(H'0008,Y)
	beq	?L167
	tst	@(H'0007,Y)
	bne	?L168
?L167:
	ld	AL,#H'0000
	bra	(?L161)
?L165:
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
?L168:
	ld	AL,@(H'0007,Y)
?LBB45:
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	ld	X,@$XAP_AL
	st	AH,@(H'0003,X)
	cmp	AH,#H'0000
	beq	?L169
	add	AL,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
?L169:
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'000A
	bsr	$_MessageSend
	ld	AL,#H'0001
?L161:
?LBE45:
?LBE44:
?LBE_A2dpCodecConfigureResponse:
	leavel	#6
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
	ENDMOD

;# Function pattern *movqi2 used[0] = 279 used[1] = 78 total = 357
;# Function pattern *movqi3 used[0] = 382 total = 382
;# Function pattern *addqi2 used[0] = 50 used[2] = 10 total = 60
;# Function pattern *andqi3 used[0] = 20 total = 20
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *mulqi3_const used[0] = 31 total = 31
;# Function pattern *lshrqi3 used[0] = 35 total = 35
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 34 total = 34
;# Function pattern *call1 used[0] = 30 total = 30
;# Function pattern *call_value1 used[0] = 65 total = 65
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 13 used[1] = 42 total = 55
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 28 total = 28
	MODULE	a2dp_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
$_a2dp:
	DS	1
	.SEG	CONST
_a2dp_sink_service_record:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000B
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'0010
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0019
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0000
	dc	H'0019
	dc	H'0009
	dc	H'0001
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000D
	dc	H'0009
	dc	H'0001
	dc	H'0003
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'0001
_a2dp_source_service_record:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000A
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'0010
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0019
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0000
	dc	H'0019
	dc	H'0009
	dc	H'0001
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0009
	dc	H'0035
	dc	H'0008
	dc	H'0035
	dc	H'0006
	dc	H'0019
	dc	H'0011
	dc	H'000D
	dc	H'0009
	dc	H'0001
	dc	H'0003
	dc	H'0009
	dc	H'0003
	dc	H'0011
	dc	H'0009
	dc	H'0000
	dc	H'0001
	.CODE
_validateSeps:
	enterl	#2
?LBB_validateSeps:
	st	AL,@H'fff9
	st	AH,@H'fffa
?LBB2:
	ld	AL,#H'0000
	st	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bcc	?L17
?L15:
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@H'fff9
	tst	@(0,X)
	beq	?L20
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@H'fff9
	ld	X,@(0,X)
	ld	AL,@(0,X)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'003D)
	bcc	?L20
	ld	AL,@H'fff8
	add	AL,@H'fff8
	ld	X,@H'fff9
	add	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	beq	?L8
	ld	AL,@(H'0001,X)
	and	AL,#H'3FFF
	or	AL,#H'4000
	st	AL,@(H'0001,X)
?L8:
	ld	AL,#H'0000
	cmp	AL,@H'fff8
	bcc	?L19
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@H'fff9
	ld	X,@(0,X)
	ld	AH,@(0,X)
?L14:
	ld	X,@$XAP_AL
	add	X,@$XAP_AL
	add	X,@H'fff9
	ld	X,@(0,X)
	cmp	AH,@(0,X)
	bne	?L11
?L20:
	ld	AL,#H'0000
	bra	(?L1)
?L11:
	add	AL,#H'0001
	cmp	AL,@H'fff8
	bcs	?L14
?L19:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@H'fffa
	bcs	?L15
?L17:
	ld	AL,#H'0001
?L1:
?LBE2:
?LBE_validateSeps:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_a2dpSendInitCfmToClient:
	enterl	#4
?LBB_a2dpSendInitCfmToClient:
	st	AL,@(H'0001,Y)
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@$_a2dp
	st	X,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D00
	bsr	$_MessageSend
	tst	@(H'0001,Y)
	beq	?L26
	ld	AL,@$_a2dp
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@$_a2dp
?L26:
?LBE3:
?LBE_a2dpSendInitCfmToClient:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_A2dpInit:
	enterl	#8
?LBB_A2dpInit:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB4:
	tst	@$_a2dp
	bne	?L28
?LBB5:
	ld	AL,#H'002D
	bsr	$_PanicUnlessMalloc
	st	AL,@$_a2dp
	ld	AH,#H'002D
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
?L34:
	ld	AL,@(H'0004,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	AH,@(H'0004,Y)
	bsr	$_a2dpInitialiseRemoteDevice
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bcz	?L34
	ld	X,@$_a2dp
	ld	AH,#hwrd($_a2dpProfileHandler)
	ld	AL,#lwrd($_a2dpProfileHandler)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_a2dp
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0004,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,X)
	and	AL,#H'1FFF
	or	AL,#H'4000
	st	AL,@(H'0003,X)
	ld	X,@$_a2dp
	ld	AL,@(H'0003,Y)
	and	AL,#H'0003
	asl	#H'0009
	ld	AH,@(H'0003,X)
	and	AH,#-H'0601
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
	bsr	$_blockInit
	tst	@(H'000A,Y)
	beq	?L35
	tst	@(H'0009,Y)
	beq	?L35
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	bsr	_validateSeps
	cmp	AL,#H'0000
	beq	?L35
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L41
	ld	AH,@(H'0009,Y)
	add	AH,@$XAP_AH
	st	AH,@(H'0005,Y)
?L40:
	ld	AL,@(H'0009,Y)
?LBB6:
	st	AL,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_blockAdd
	bsr	$_PanicNull
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	ld	AH,@(H'0004,Y)
?LBE6:
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0004,Y)
	cmp	AL,@$XAP_AH
	bcs	?L40
	bra	(?L41)
?L35:
	ld	AL,#H'0002
	bsr	$_a2dpSendInitCfmToClient
	bra	(?L28)
?L41:
	ld	X,@$_a2dp
	ld	AL,@(H'0003,X)
	and	AL,#-H'1801
	st	AL,@(H'0003,X)
	tst	@(H'0008,Y)
	beq	?L42
	ld	X,@(H'0008,Y)
	tst	@(0,X)
	beq	?L43
	tst	@(H'0001,X)
	beq	?L43
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,@(0,X)
	bsr	$_ConnectionRegisterServiceRecord
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	add	AL,#H'0001
	and	AL,#H'0003
	asl	#H'000B
	ld	AH,@(H'0003,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
?L43:
	ld	X,@(H'0008,Y)
	tst	@(H'0002,X)
	beq	?L45
	tst	@(H'0003,X)
	beq	?L45
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,@(H'0002,X)
	bra	(?L53)
?L42:
	ld	AL,@(H'0003,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L46
	ld	AL,#(_a2dp_sink_service_record)
	st	AL,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0030
	bsr	$_ConnectionRegisterServiceRecord
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	add	AL,#H'0001
	and	AL,#H'0003
	asl	#H'000B
	ld	AH,@(H'0003,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
?L46:
	ld	AL,@(H'0003,Y)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L45
	ld	AL,#(_a2dp_source_service_record)
	st	AL,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0030
?L53:
	bsr	$_ConnectionRegisterServiceRecord
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	add	AL,#H'0001
	and	AL,#H'0003
	asl	#H'000B
	ld	AH,@(H'0003,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
?L45:
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L28
	bsr	$_a2dpRegisterL2cap
?L28:
?LBE5:
?LBE4:
?LBE_A2dpInit:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_a2dpInitialiseRemoteDevice:
	enterl	#5
?LBB_a2dpInitialiseRemoteDevice:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0013
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,@(H'0002,Y)
	and	AH,#H'0007
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0008
	or	AL,@$XAP_AH
	st	AL,@(H'0004,X)
?LBE_a2dpInitialiseRemoteDevice:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 41 used[1] = 6 total = 47
;# Function pattern *movqi3 used[0] = 70 total = 70
;# Function pattern *movqi8 used[0] = 10 total = 10
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[0] = 14 used[2] = 7 total = 21
;# Function pattern *andqi3 used[0] = 19 total = 19
;# Function pattern *iorqi3 used[0] = 7 total = 7
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 7 total = 7
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 10 total = 15
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 8 total = 8
	MODULE	a2dp_codec_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_isCodecCsrFaststream:
	enterl	#3
?LBB_isCodecCsrFaststream:
	st	AL,@(0,Y)
?LBB2:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L2
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,@H'fffa
	cmp	AL,#H'0100
	bne	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_isCodecCsrFaststream:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_isCodecCsrAptx:
	enterl	#3
?LBB_isCodecCsrAptx:
	st	AL,@(0,Y)
?LBB3:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'4F00
	bne	?L6
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,@H'fffa
	cmp	AL,#H'0100
	bne	?L6
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE3:
?LBE_isCodecCsrAptx:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_isCodecCsrAptxAclSprint:
	enterl	#3
?LBB_isCodecCsrAptxAclSprint:
	st	AL,@(0,Y)
?LBB4:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L10
	cmp	AL,#H'0000
	bne	?L10
	ld	AL,@H'fffa
	cmp	AL,#H'0200
	bne	?L10
	ld	AL,#H'0001
	bra	(?L9)
?L10:
	ld	AL,#H'0000
?L9:
?LBE4:
?LBE_isCodecCsrAptxAclSprint:
	leavel	#3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_isCodecCsrTwsSbc:
	enterl	#3
?LBB_isCodecCsrTwsSbc:
	st	AL,@(0,Y)
?LBB5:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L14
	cmp	AL,#H'0000
	bne	?L14
	ld	AL,@H'fffa
	cmp	AL,#H'0301
	bne	?L14
	ld	AL,#H'0001
	bra	(?L13)
?L14:
	ld	AL,#H'0000
?L13:
?LBE5:
?LBE_isCodecCsrTwsSbc:
	leavel	#3
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_isCodecCsrTwsMp3:
	enterl	#3
?LBB_isCodecCsrTwsMp3:
	st	AL,@(0,Y)
?LBB6:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L18
	cmp	AL,#H'0000
	bne	?L18
	ld	AL,@H'fffa
	cmp	AL,#H'0501
	bne	?L18
	ld	AL,#H'0001
	bra	(?L17)
?L18:
	ld	AL,#H'0000
?L17:
?LBE6:
?LBE_isCodecCsrTwsMp3:
	leavel	#3
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_isCodecCsrTwsAac:
	enterl	#3
?LBB_isCodecCsrTwsAac:
	st	AL,@(0,Y)
?LBB7:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L22
	cmp	AL,#H'0000
	bne	?L22
	ld	AL,@H'fffa
	cmp	AL,#H'0401
	bne	?L22
	ld	AL,#H'0001
	bra	(?L21)
?L22:
	ld	AL,#H'0000
?L21:
?LBE7:
?LBE_isCodecCsrTwsAac:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_isCodecCsrTwsAptx:
	enterl	#3
?LBB_isCodecCsrTwsAptx:
	st	AL,@(0,Y)
?LBB8:
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(0,Y)
	ld	AL,@(H'0008,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0009,X)
	st	AH,@H'fffa
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L26
	cmp	AL,#H'0000
	bne	?L26
	ld	AL,@H'fffa
	cmp	AL,#H'0601
	bne	?L26
	ld	AL,#H'0001
	bra	(?L25)
?L26:
	ld	AL,#H'0000
?L25:
?LBE8:
?LBE_isCodecCsrTwsAptx:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_clampSbcBitpool:
	enterl	#6
?LBB_clampSbcBitpool:
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpSbcFormatFromConfig
	and	AL,#H'00FF
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	st	AL,@(-1,Y)
	and	AH,#H'000C
	cmp	AH,#H'0000
	bne	?L30
	ld	AL,#H'5B60
	st	AL,@(H'0001,Y)
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(-1,Y)
	bra	(?L34)
?L30:
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	AH,#-H'7BE4
	st	AH,@(H'0001,Y)
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(H'0002,Y)
?L34:
	bsr	$_a2dpSbcSelectBitpool
	asl	#H'0008
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0003,Y)
	cmp	AH,@(H'0006,X)
	bcc	?L32
	ld	AL,@(H'0006,X)
	asl	#H'0008
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L32:
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@(H'0003,Y)
	cmp	AH,@(H'0007,X)
	bcz	?L29
	ld	AL,@(H'0007,X)
	asl	#H'0008
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L29:
?LBE_clampSbcBitpool:
	leavel	#6
$_a2dpSelectOptimalCodecSettings:
	enterl	#5
?LBB_a2dpSelectOptimalCodecSettings:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB9:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0000
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L82
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L40
	ld	X,@(0,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L43
	cmp	AL,#H'0001
	bcs	?L42
	cmp	AL,#H'0002
	beq	?L44
	cmp	AL,#H'00FF
	beq	?L45
	bra	(?L62)
?L42:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalSbcCapsSink
	bra	(?L62)
?L43:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalMp3CapsSink
	bra	(?L62)
?L44:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalAacCapsSink
	bra	(?L62)
?L45:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrFaststream
	cmp	AL,#H'0000
	beq	?L46
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrFaststream
	cmp	AL,#H'0000
	beq	?L46
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrFastStreamCapsSink
	bra	(?L62)
?L46:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrAptxAclSprint
	cmp	AL,#H'0000
	beq	?L48
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrAptxAclSprint
	cmp	AL,#H'0000
	beq	?L48
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrAptxAclSprintCapsSink
	bra	(?L62)
?L48:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrAptx
	cmp	AL,#H'0000
	beq	?L50
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrAptx
	cmp	AL,#H'0000
	beq	?L50
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrAptxCapsSink
	bra	(?L62)
?L50:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsSbc
	cmp	AL,#H'0000
	bne	?L84
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsMp3
	cmp	AL,#H'0000
	beq	?L54
?L84:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsSbcCapsSink
	bra	(?L62)
?L54:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsAac
	cmp	AL,#H'0000
	beq	?L56
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsAacCapsSink
	bra	(?L62)
?L56:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsAptx
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsAptxCapsSink
	bra	(?L62)
?L40:
	ld	X,@(0,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L65
	cmp	AL,#H'0001
	bcs	?L64
	cmp	AL,#H'0002
	beq	?L66
	cmp	AL,#H'00FF
	beq	?L67
	bra	(?L82)
?L64:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalSbcCapsSource
	bra	(?L62)
?L65:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalMp3CapsSource
	bra	(?L62)
?L66:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalAacCapsSource
	bra	(?L62)
?L67:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrFaststream
	cmp	AL,#H'0000
	beq	?L68
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrFastStreamCapsSource
	bra	(?L62)
?L68:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrAptxAclSprint
	cmp	AL,#H'0000
	beq	?L70
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrAptxAclSprintCapsSource
	bra	(?L62)
?L70:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrAptx
	cmp	AL,#H'0000
	beq	?L72
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrAptxCapsSource
	bra	(?L62)
?L72:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsSbc
	cmp	AL,#H'0000
	beq	?L74
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsSbcCapsSource
	bra	(?L62)
?L74:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsMp3
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsMp3CapsSource
	bra	(?L62)
?L76:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsAac
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsAacCapsSource
	bra	(?L62)
?L78:
	ld	AL,@(0,Y)
	bsr	_isCodecCsrTwsAptx
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalCsrTwsAptxCapsSource
	bra	(?L62)
?L82:
	ld	AL,#H'0000
	bra	(?L37)
?L62:
	ld	AL,#H'0001
?L37:
?LBE9:
?LBE_a2dpSelectOptimalCodecSettings:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_a2dpGetCodecAudioParams:
	enterl	#9
?LBB_a2dpGetCodecAudioParams:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	st	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L118
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	st	AL,@(H'0002,Y)
	add	AL,#H'0011
	bsr	$_malloc
	bsr	$_PanicNull
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0011
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	st	AL,@(H'000F,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0010
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_a2dpGetContentProtection
	and	AL,#H'0001
	asl	#H'0001
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0005,X)
	and	AH,#-H'0003
	or	AH,@$XAP_AL
	st	AH,@(H'0005,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0008
	ld	AH,@(H'0005,Y)
	bsr	$_a2dpIsServiceSupported
	and	AL,#H'0001
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0005,X)
	and	AH,#-H'0002
	or	AH,@$XAP_AL
	st	AH,@(H'0005,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L116
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L116
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'000F,X)
	and	AL,#H'0FFF
	ld	X,@(H'0006,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L100
	cmp	AL,#H'0001
	bcs	?L99
	cmp	AL,#H'0002
	beq	?L101
	cmp	AL,#H'00FF
	beq	?L102
	bra	(?L116)
?L99:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	bsr	_clampSbcBitpool
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getSbcConfigSettings
	bra	(?L98)
?L100:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getMp3ConfigSettings
	bra	(?L98)
?L101:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getAacConfigSettings
	bra	(?L98)
?L102:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrFaststream
	cmp	AL,#H'0000
	beq	?L103
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	and	AH,#H'0003
	bsr	$_getCsrFastStreamConfigSettings
	bra	(?L98)
?L103:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrAptxAclSprint
	cmp	AL,#H'0000
	beq	?L105
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getCsrAptxAclSprintConfigSettings
	bra	(?L98)
?L105:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrAptx
	cmp	AL,#H'0000
	beq	?L107
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getCsrAptxConfigSettings
	bra	(?L98)
?L107:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrTwsSbc
	cmp	AL,#H'0000
	beq	?L109
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	bsr	_clampSbcBitpool
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getCsrTwsSbcConfigSettings
	bra	(?L98)
?L109:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrTwsMp3
	cmp	AL,#H'0000
	beq	?L111
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getCsrTwsMp3ConfigSettings
	bra	(?L98)
?L111:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrTwsAac
	cmp	AL,#H'0000
	beq	?L113
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getCsrTwsAacConfigSettings
	bra	(?L98)
?L113:
	ld	AL,@(H'0001,Y)
	bsr	_isCodecCsrTwsAptx
	cmp	AL,#H'0000
	beq	?L98
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_getCsrTwsAptxConfigSettings
	bra	(?L98)
?L116:
	ld	AL,@(H'0006,Y)
	bsr	$_free
?L118:
	ld	AH,#H'0000
	bra	(?L94)
?L98:
	ld	AH,@(H'0006,Y)
?L94:
?LBE10:
	ld	AL,@$XAP_AH
?LBE_a2dpGetCodecAudioParams:
	leavel	#9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
	ENDMOD

;# Function pattern *movqi2 used[0] = 64 used[1] = 25 total = 89
;# Function pattern *movqi3 used[0] = 182 total = 182
;# Function pattern *movhi used[2] = 7 used[3] = 7 total = 14
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 12 total = 12
;# Function pattern *andqi3 used[0] = 19 total = 19
;# Function pattern *iorqi3 used[0] = 13 total = 13
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 11 total = 11
;# Function pattern jump used[0] = 42 total = 42
;# Function pattern *call1 used[0] = 32 total = 32
;# Function pattern *call_value1 used[0] = 48 total = 48
;# Function pattern movstrqi+3 used[0] = 30 total = 30
;# Function pattern movstrqi+5 used[0] = 22 total = 22
;# Function pattern movstrqi+7 used[0] = 7 total = 7
	MODULE	a2dp_data_block
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_blockInit:
	enterl	#5
?LBB_blockInit:
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_a2dp
	st	X,@(-1,Y)
?L7:
	ld	X,@(H'0001,Y)
	add	X,@(-1,Y)
	tst	@(H'002B,X)
	beq	?L4
	ld	AL,#H'0000
	bra	(?L1)
?L4:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bcz	?L7
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L12:
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0009
	bsr	$_malloc
	bsr	$_PanicNull
	ld	X,@(H'0002,Y)
	st	AL,@(H'002B,X)
	ld	X,@$_a2dp
	add	X,@(H'0001,Y)
	ld	AL,@(H'002B,X)
	ld	AH,#H'0009
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bcz	?L12
	ld	AL,#H'0001
?L1:
?LBE2:
?LBE_blockInit:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_blockAdd:
	enterl	#8
?LBB_blockAdd:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
?LBB3:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L20
	cmp	AH,#(H'0001+H'0003)
	bcc	?L20
?LBB4:
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	add	AH,@$XAP_AH
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	add	AH,@(H'002B,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	and	AL,#H'03FF
	cmp	AL,#H'0000
	bne	?L20
	tst	@H'fff8
	beq	?L20
	tst	@(H'0009,Y)
	beq	?L20
?LBB5:
	ld	AL,@(H'0009,Y)
	smult	@H'fff8
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	ld	X,@(H'002B,X)
	ld	AL,@(0,X)
	add	AL,#H'0009
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_AL
	add	AH,@(H'0004,Y)
	ld	AL,@$XAP_UXL
	bsr	$_realloc
	cmp	AL,#H'0000
	beq	?L20
	ld	AH,@$_a2dp
	add	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(H'002B,X)
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	add	AL,@(H'0005,Y)
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	add	AH,@(H'002B,X)
	ld	X,#H'0001
	add	X,@$XAP_AH
	st	X,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'002B,X)
	ld	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	add	AL,@(0,X)
	st	AL,@(0,X)
	ld	AL,@(H'0004,Y)
	asl	#H'0007
	ld	AH,@(H'0009,Y)
	and	AH,#H'007F
	and	AL,#-H'0080
	or	AL,@$XAP_AH
	ld	X,@(-1,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0005,Y)
	and	AL,#H'03FF
	st	AL,@(H'0001,X)
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	add	AL,@$XAP_AH
	bra	(?L19)
?L20:
?LBE5:
?LBE4:
	ld	AL,#H'0000
?L19:
?LBE3:
?LBE_blockAdd:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_blockRemove:
	enterl	#10
?LBB_blockRemove:
	st	AL,@(H'0001,Y)
?LBB6:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L23
	cmp	AH,#(H'0001+H'0003)
	bcc	?L23
?LBB7:
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	st	AL,@(H'0007,Y)
	add	AH,@$XAP_AH
	ld	X,@$XAP_AL
	ld	X,@(H'002B,X)
	add	X,@$XAP_AH
	ld	AH,#H'0001
	add	AH,@$XAP_UXL
	st	AH,@(-1,Y)
	ld	X,@$XAP_AH
	ld	X,@(H'0001,X)
	and	X,#H'03FF
	st	X,@H'fff9
	cmp	X,#H'0000
	beq	?L23
	ld	X,@$XAP_AH
?LBB8:
	ld	AH,@(0,X)
	lsr	#H'0007
	st	AH,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	X,@(H'002B,X)
	ld	AH,#H'0001
	add	AH,@$XAP_UXL
	st	AH,@(-2,Y)
?L26:
	ld	X,@(-2,Y)
	ld	X,@(H'0001,X)
	ld	AH,@$XAP_UXL
	and	AH,#H'03FF
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcc	?L28
	sub	AH,@(H'0002,Y)
	and	AH,#H'03FF
	ld	AL,@$XAP_UXL
	and	AL,#-H'0400
	or	AL,@$XAP_AH
	ld	X,@(-2,Y)
	st	AL,@(H'0001,X)
?L28:
	ld	AH,#H'0002
	add	AH,@(-2,Y)
	st	AH,@(-2,Y)
	ld	AL,@$_a2dp
	st	AL,@(H'0003,Y)
	add	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	add	AL,#H'0007
	cmp	AH,@$XAP_AL
	bcz	?L26
	ld	AL,#H'0000
	ld	X,@(-1,Y)
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'002B,X)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	sub	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	add	AL,@H'fff9
	ld	AH,@(H'0002,Y)
	add	AH,@$XAP_AL
	ld	X,@(H'002B,X)
	st	X,@(H'0006,Y)
	ld	X,@(0,X)
	sub	X,@H'fff9
	add	X,#H'0009
	st	X,@(0,Y)
	bsr	$_memmove
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	ld	X,@$XAP_AL
	add	AL,@(0,X)
	add	AL,#H'0009
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'00FF
	bsr	$_memset
	ld	AL,@$_a2dp
	add	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	add	AH,#H'0009
	bsr	$_realloc
	cmp	AL,#H'0000
	beq	?L23
	ld	AH,@$_a2dp
	add	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	st	AL,@(H'002B,X)
?L23:
?LBE8:
?LBE7:
?LBE6:
?LBE_blockRemove:
	leavel	#10
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_blockGetBase:
	enterl	#3
?LBB_blockGetBase:
	ld	X,@$XAP_AL
?LBB9:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L35
	cmp	AH,#(H'0001+H'0003)
	bcc	?L35
?LBB10:
	ld	AL,@$_a2dp
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	add	AH,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	and	AH,#H'03FF
	cmp	AH,#H'0000
	beq	?L35
	ld	X,@(0,Y)
	ld	AL,@(H'002B,X)
	add	AL,@$XAP_AH
	bra	(?L34)
?L35:
?LBE10:
	ld	AL,#H'0000
?L34:
?LBE9:
?LBE_blockGetBase:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_blockGetIndexed:
	enterl	#3
?LBB_blockGetIndexed:
	ld	X,@$XAP_AL
?LBB11:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L39
	cmp	AH,#(H'0001+H'0003)
	bcc	?L39
?LBB12:
	ld	AL,@$_a2dp
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	add	AH,@$XAP_AH
	ld	X,@$XAP_AL
	add	AH,@(H'002B,X)
	ld	AL,#H'0001
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'007F
	smult	@(H'0003,Y)
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,X)
	and	AL,#H'03FF
	add	AH,@$XAP_AL
	cmp	AH,#H'0000
	beq	?L39
	ld	X,@(0,Y)
	ld	AL,@(H'002B,X)
	add	AL,@$XAP_AH
	bra	(?L38)
?L39:
?LBE12:
	ld	AL,#H'0000
?L38:
?LBE11:
?LBE_blockGetIndexed:
	leavel	#3
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_blockGetCurrent:
	enterl	#3
?LBB_blockGetCurrent:
	ld	X,@$XAP_AL
?LBB13:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L43
	cmp	AH,#(H'0001+H'0003)
	bcc	?L43
?LBB14:
	ld	AL,@$_a2dp
	add	AL,@$XAP_UXL
	st	AL,@(0,Y)
	add	AH,@$XAP_AH
	ld	X,@$XAP_AL
	add	AH,@(H'002B,X)
	ld	AL,#H'0001
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@H'fff9
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	st	AH,@H'fff8
	ld	AL,@H'fff9
	and	AL,#H'007F
	smult	@H'fff8
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,X)
	and	AL,#H'03FF
	add	AH,@$XAP_AL
	cmp	AH,#H'0000
	beq	?L43
	ld	X,@(0,Y)
	ld	AL,@(H'002B,X)
	add	AL,@$XAP_AH
	bra	(?L42)
?L43:
?LBE14:
	ld	AL,#H'0000
?L42:
?LBE13:
?LBE_blockGetCurrent:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_blockSetCurrent:
	enterl	#2
?LBB_blockSetCurrent:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB15:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L47
	cmp	AH,#(H'0001+H'0003)
	bcc	?L47
?LBB16:
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	ld	AL,@$XAP_AH
	add	AL,@$XAP_AH
	ld	X,@(H'002B,X)
	add	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(-1,Y)
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'00FF
	bne	?L48
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	bra	(?L52)
?L48:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'00FE
	bne	?L49
	ld	AH,@(H'0001,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	add	AL,#-H'0001
?L52:
	st	AL,@(H'0002,Y)
?L49:
	ld	X,@(-1,Y)
	ld	AL,@(0,X)
	and	AL,#H'007F
	smult	@(H'0002,Y)
	st	AL,@H'fffa
	ld	AH,@(0,X)
	lsr	#H'0007
	ld	AL,@H'fffa
	cmp	AL,@$XAP_AH
	bcc	?L47
	ld	AL,@(H'0002,Y)
	asl	#H'000A
	ld	AH,@(H'0001,X)
	and	AH,#H'03FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	$_blockGetCurrent
	bra	(?L46)
?L47:
?LBE16:
	ld	AL,#H'0000
?L46:
?LBE15:
?LBE_blockSetCurrent:
	leavel	#2
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_blockGetSize:
	enterl	#2
?LBB_blockGetSize:
	cmp	AL,#(H'0001+H'0001)
	bcc	?L57
	cmp	AH,#(H'0001+H'0003)
	bcc	?L57
	ld	X,@$_a2dp
	add	AL,@$XAP_UXL
	add	AH,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AL,@(H'002B,X)
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0007
	bra	(?L56)
?L57:
	ld	AH,#H'0000
?L56:
	ld	AL,@$XAP_AH
?LBE_blockGetSize:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 90 used[1] = 13 total = 103
;# Function pattern *movqi3 used[0] = 75 total = 75
;# Function pattern *movqi8 used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 44 used[2] = 19 total = 63
;# Function pattern *andqi3 used[0] = 15 total = 15
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *mulqi3 used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern movstrqi+3 used[0] = 7 used[1] = 3 total = 10
;# Function pattern movstrqi+4 used[1] = 14 total = 14
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	a2dp_l2cap_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_a2dp_conftab:
	dc	H'8000
	dc	H'0001
	dc	H'037F
	dc	H'0102
	dc	H'0030
	dc	H'0703
	dc	H'0000
	dc	H'0000
	dc	H'FFFF
	dc	H'FFFF
	dc	H'0704
	dc	H'FFFF
	dc	H'FFFF
	dc	H'FFFF
	dc	H'FFFF
	dc	H'FF00
_avdtp_general_search_pattern:
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000D
_avdtp_source_search_pattern:
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000A
_avdtp_sink_search_pattern:
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'000B
_avdtp_attr_list:
	dc	H'0035
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0009
	.CODE
_convertDisconnectStatusCode:
	enterl	#2
?LBB_convertDisconnectStatusCode:
	cmp	AL,#(H'0001+H'0004)
	bcc	?L8
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE9,X)
	brxl
	.SEG	CONST
?JTBASE9:
	.CODE
?L9:
	.SEG	CONST
	dc	lwrd(?L3-?L9)
	dc	lwrd(?L8-?L9)
	dc	lwrd(?L8-?L9)
	dc	lwrd(?L4-?L9)
	dc	lwrd(?L5-?L9)
	.CODE
?L3:
	ld	AL,#H'0000
	bra	(?L1)
?L4:
	ld	AL,#H'0008
	bra	(?L1)
?L5:
	ld	AL,#H'000B
	bra	(?L1)
?L8:
	ld	AL,#H'0005
?L1:
?LBE_convertDisconnectStatusCode:
	leavel	#2
_startLinklossTimer:
	enterl	#6
?LBB_startLinklossTimer:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0014
	ld	AL,@$_a2dp
	bsr	$_MessageCancelAll
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	X,@$XAP_AL
	and	X,#H'0007
	add	X,#H'0014
	st	X,@(-2,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_a2dp
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	umult	#H'03E8
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(-1,Y)
	ld	AH,@(-2,Y)
	bsr	$_MessageSendLater
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	or	AL,#H'0020
	and	AL,#-H'0011
	st	AL,@(H'0004,X)
?LBE_startLinklossTimer:
	leavel	#6
_stopLinklossTimer:
	enterl	#3
?LBB_stopLinklossTimer:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0014
	ld	AL,@$_a2dp
	bsr	$_MessageCancelAll
	ld	X,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0031
	st	AL,@(H'0004,X)
?LBE_stopLinklossTimer:
	leavel	#3
_findDeviceFromSink:
	enterl	#11
?LBB_findDeviceFromSink:
	st	AL,@(H'0006,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L13
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L13
?L20:
	ld	AL,@(H'0007,Y)
	smult	#H'0013
	st	AL,@(H'0008,Y)
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L41
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,@(H'0007,Y)
	cmp	X,@$XAP_AH
	bcs	?L20
	bra	(?L13)
?L41:
	ld	AL,@(H'0008,Y)
	add	AL,@$_a2dp
	add	AL,#H'0005
	bra	(?L12)
?L43:
?LBB3:
?LBB4:
?LBB5:
	ld	AL,@(-1,Y)
	bra	(?L12)
?L14:
?LBE5:
?LBE4:
?LBE3:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L13
?L35:
?LBB6:
	ld	AL,@(H'0007,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#H'0005
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L27
	cmp	AL,#H'00A0
	beq	?L27
	cmp	AL,#H'00C0
	bne	?L26
?L27:
	ld	X,@(-1,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,@(H'0006,Y)
	beq	?L43
?L26:
?LBB7:
	ld	AL,#H'0000
	st	AL,@H'fff8
?L34:
?LBB8:
	ld	AL,@H'fff8
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,@(-1,Y)
	ld	AL,@(H'0012,X)
	and	AL,#H'0007
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'0002)
	bcc	?L31
	ld	AL,@(H'000E,X)
	cmp	AL,@(H'0006,Y)
	beq	?L43
?L31:
?LBE8:
	ld	X,#H'0001
	add	X,@H'fff8
	st	X,@H'fff8
	cmp	X,#H'0000
	beq	?L34
	ld	AL,@(H'0007,Y)
?LBE7:
?LBE6:
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,@(H'0007,Y)
	cmp	X,@$XAP_AH
	bcs	?L35
?L13:
	ld	AL,#H'0000
?L12:
?LBE2:
?LBE_findDeviceFromSink:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE2
_findDeviceFromBdaddr:
	enterl	#5
?LBB_findDeviceFromBdaddr:
	st	AL,@(0,Y)
?LBB9:
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L54
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,#H'0000
	cmp	AL,@$XAP_AH
	bcc	?L54
?L60:
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	st	AL,@(H'0002,Y)
	add	AL,@$_a2dp
	add	AL,#H'0005
	ld	AH,@(0,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L57
	ld	AL,@(H'0002,Y)
	add	AL,@$_a2dp
	add	AL,#H'0005
	bra	(?L53)
?L57:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcs	?L60
?L54:
	ld	AL,#H'0000
?L53:
?LBE9:
?LBE_findDeviceFromBdaddr:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_addDevice:
	enterl	#7
?LBB_addDevice:
	st	AL,@(0,Y)
?LBB10:
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L65
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,#H'0000
	cmp	X,@$XAP_AH
	bcc	?L65
?L71:
	ld	AL,@(H'0001,Y)
	smult	#H'0013
	st	AL,@(H'0002,Y)
	add	AL,@$_a2dp
	add	AL,#H'0005
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L68
	ld	AL,@(H'0002,Y)
?LBB11:
	add	AL,@$_a2dp
	st	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_a2dpInitialiseRemoteDevice
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0005,X)
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	AL,@(H'0004,X)
	or	AL,#H'0008
	st	AL,@(H'0004,X)
	ld	AL,@$XAP_UXL
	bra	(?L64)
?L68:
	ld	AL,@(H'0001,Y)
?LBE11:
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	X,@(H'0001,Y)
	cmp	X,@$XAP_AH
	bcs	?L71
?L65:
	ld	AL,#H'0000
?L64:
?LBE10:
?LBE_addDevice:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
_removeDevice:
	enterl	#2
?LBB_removeDevice:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L76
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	bsr	$_a2dpInitialiseRemoteDevice
	ld	AL,#H'0001
	bra	(?L75)
?L76:
	ld	AL,#H'0000
?L75:
?LBE_removeDevice:
	leavel	#2
_initiateSignalling:
	enterl	#5
?LBB_initiateSignalling:
	st	AH,@(H'0001,Y)
?LBB12:
	cmp	AL,#H'0000
	beq	?L78
?LBB13:
	add	AL,#H'0009
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0000
	bne	?L79
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_memset
	tst	@(H'0001,Y)
	bne	?L80
	ld	AH,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'0020
	bra	(?L84)
?L80:
	ld	AH,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'0040
?L84:
	st	AL,@(H'0004,X)
	ld	AL,@(H'0002,Y)
	bra	(?L77)
?L79:
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00E0
	cmp	AL,#H'0020
	bne	?L78
	tst	@(H'0001,Y)
	beq	?L78
	ld	AL,@$XAP_AH
	and	AL,#-H'00E1
	or	AL,#H'0060
	st	AL,@(H'0004,X)
	ld	AH,@(H'0001,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	bra	(?L77)
?L78:
?LBE13:
	ld	AL,#H'0000
?L77:
?LBE12:
?LBE_initiateSignalling:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_completeSignalling:
	enterl	#2
?LBB_completeSignalling:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L87
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0020
	beq	?L89
	cmp	AL,#H'0040
	beq	?L89
	cmp	AL,#H'0060
	bne	?L88
?L89:
	ld	AL,@H'fff8
	cmp	AL,@(0,X)
	bne	?L90
	ld	AL,@(H'0004,X)
	or	AL,#H'0400
	st	AL,@(H'0004,X)
?L90:
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_AH
	cmp	AH,#H'037F
	bcz	?L91
	ld	AL,#H'037F
?L91:
	asl	#H'0004
	ld	AH,@(H'0001,X)
	and	AH,#H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'0080
	st	AL,@(H'0004,X)
	bra	(?L93)
?L88:
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	bne	?L87
	ld	AL,@$XAP_AH
	asl	#H'0004
	ld	AH,@(H'0001,X)
	and	AH,#H'000F
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L93:
	ld	AL,#H'0001
	bra	(?L86)
?L87:
	ld	AL,#H'0000
?L86:
?LBE_completeSignalling:
	leavel	#2
_requestRemoteA2dpVersion:
	enterl	#8
?LBB_requestRemoteA2dpVersion:
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L100
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0708
	cmp	AL,#H'0008
	bne	?L100
	ld	AL,@$XAP_UXL
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L100
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'0009
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L103
	cmp	AH,#H'0002
	beq	?L104
	bra	(?L105)
?L103:
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AL,#(_avdtp_sink_search_pattern)
	bra	(?L107)
?L104:
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AL,#(_avdtp_source_search_pattern)
	bra	(?L107)
?L105:
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AL,#(_avdtp_general_search_pattern)
?L107:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,#(_avdtp_attr_list)
	st	AL,@(H'0004,Y)
	ld	AL,@$_a2dp
	ld	AH,@(H'0005,Y)
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?L100:
?LBE_requestRemoteA2dpVersion:
	leavel	#8
$_a2dpHandleSdpServiceSearchAttributeCfm:
	enterl	#7
?LBB_a2dpHandleSdpServiceSearchAttributeCfm:
	st	AL,@(H'0003,Y)
?LBB14:
	add	AL,#H'0003
	bsr	_findDeviceFromBdaddr
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L111
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0700
	cmp	AL,#H'0000
	bne	?L111
	ld	AL,@$XAP_AH
	and	AL,#-H'0701
	or	AL,#H'0100
	st	AL,@(H'0004,X)
	ld	X,@(H'0003,Y)
	tst	@(0,X)
	bne	?L113
	tst	@(H'0002,X)
	bne	?L113
	ld	AH,@$XAP_UXL
?LBB15:
	add	AH,#H'0008
	ld	AL,#H'110D
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	bsr	$_SdpParseGetProfileVersion
	cmp	AL,#H'0000
	beq	?L113
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0102
	beq	?L117
	cmp	AL,#(H'0001+H'0102)
	bcc	?L121
	cmp	AL,#H'0100
	beq	?L116
	bra	(?L119)
?L121:
	cmp	AL,#H'0103
	beq	?L118
	bra	(?L119)
?L116:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0701
	or	AL,#H'0300
	bra	(?L123)
?L117:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0701
	or	AL,#H'0400
	bra	(?L123)
?L118:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0701
	or	AL,#H'0500
	bra	(?L123)
?L119:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0701
	or	AL,#H'0200
?L123:
	st	AL,@(H'0004,X)
?L113:
	ld	X,@(H'0004,Y)
?LBE15:
	ld	AL,@(H'000D,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	bne	?L111
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_a2dpSignallingConnectCfm
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpHandleSignalPacket
?L111:
?LBE14:
?LBE_a2dpHandleSdpServiceSearchAttributeCfm:
	leavel	#7
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
_initiateMedia:
	enterl	#6
?LBB_initiateMedia:
	st	AL,@H'fff8
	st	AH,@(H'0001,Y)
?LBB16:
	cmp	AL,#H'0000
	beq	?L129
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L137:
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	ld	X,@H'fff8
	add	X,@$XAP_AL
	ld	AL,@(H'0012,X)
	and	AL,#H'0007
	cmp	AL,#H'0000
	bne	?L132
?LBB17:
	add	X,#H'000E
	st	X,@(H'0003,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0002,Y)
	and	AL,#H'0007
	asl	#H'0003
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#-H'0039
	or	AH,@$XAP_AL
	or	AH,#H'0080
	st	AH,@(H'0004,X)
	tst	@(H'0001,Y)
	bne	?L135
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'0008
	or	AL,#H'0001
	bra	(?L139)
?L135:
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0008
	or	AL,#H'0002
?L139:
	st	AL,@(H'0004,X)
	ld	AL,@(H'0003,Y)
	bra	(?L128)
?L132:
	ld	AL,@(H'0002,Y)
?LBE17:
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L137
?L129:
	ld	AL,#H'0000
?L128:
?LBE16:
?LBE_initiateMedia:
	leavel	#6
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
_completeMedia:
	enterl	#2
?LBB_completeMedia:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	cmp	AL,#H'0000
	beq	?L141
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L142
	ld	AL,@H'fff8
	cmp	AL,@(0,X)
	bne	?L143
	ld	AL,@$XAP_AH
	or	AL,#H'0040
	st	AL,@(H'0004,X)
?L143:
	ld	AH,@(H'0002,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'037F
	bcz	?L144
	ld	AL,#H'037F
?L144:
	and	AL,#H'0FFF
	ld	AH,@(H'0001,X)
	and	AH,#-H'1000
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0008
	or	AL,#H'0004
	st	AL,@(H'0004,X)
	bra	(?L146)
?L142:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	bne	?L141
	ld	AH,@(H'0003,Y)
	and	AH,#H'0FFF
	ld	AL,@(H'0001,X)
	and	AL,#-H'1000
	or	AL,@$XAP_AH
	st	AL,@(H'0001,X)
?L146:
	ld	AL,#H'0001
	bra	(?L140)
?L141:
	ld	AL,#H'0000
?L140:
?LBE_completeMedia:
	leavel	#2
_removeMedia:
	enterl	#3
?LBB_removeMedia:
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L151
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0001
	bra	(?L150)
?L151:
	ld	AL,#H'0000
?L150:
?LBE_removeMedia:
	leavel	#3
_findMediaFromSink:
	enterl	#2
?LBB_findMediaFromSink:
	st	AL,@(-2,Y)
	st	AH,@H'fff9
?LBB18:
	cmp	AL,#H'0000
	beq	?L153
	cmp	AH,#H'0000
	beq	?L153
	ld	X,#H'0000
	st	X,@H'fff8
?L159:
?LBB19:
	ld	AL,@H'fff8
	smult	#H'0005
	add	AL,@(-2,Y)
	st	AL,@(-3,Y)
	add	AL,#H'000E
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'0002)
	bcc	?L156
	ld	X,@(-3,Y)
	ld	AL,@(H'000E,X)
	cmp	AL,@H'fff9
	bne	?L156
	ld	AL,@(-1,Y)
	bra	(?L152)
?L156:
?LBE19:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L159
?L153:
	ld	AL,#H'0000
?L152:
?LBE18:
?LBE_findMediaFromSink:
	leavel	#2
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
_findMediaFromConnectionId:
	enterl	#6
?LBB_findMediaFromConnectionId:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB20:
	cmp	AL,#H'0000
	beq	?L163
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
?L181:
?LBB21:
	ld	AL,@(H'0002,Y)
	smult	#H'0005
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	add	X,#H'000E
	st	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L166
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE179,X)
	brxl
	.SEG	CONST
?JTBASE179:
	.CODE
?L179:
	.SEG	CONST
	dc	lwrd(?L166-?L179)
	dc	lwrd(?L172-?L179)
	dc	lwrd(?L172-?L179)
	dc	lwrd(?L172-?L179)
	dc	lwrd(?L177-?L179)
	dc	lwrd(?L177-?L179)
	dc	lwrd(?L177-?L179)
	.CODE
?L172:
	ld	AH,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	cmp	AH,@(H'0001,X)
	beq	?L183
	cmp	AH,@(0,X)
	beq	?L183
	tst	@(0,X)
	bne	?L166
	bra	(?L183)
?L177:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_SinkGetL2capCid
	ld	AH,@(H'0001,Y)
	cmp	AH,@$XAP_AL
	bne	?L166
?L183:
	ld	AL,@(H'0003,Y)
	bra	(?L162)
?L166:
	ld	AL,@(H'0002,Y)
?LBE21:
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L181
?L163:
	ld	AL,#H'0000
?L162:
?LBE20:
?LBE_findMediaFromConnectionId:
	leavel	#6
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
_isSignallingConnected:
	enterl	#2
?LBB_isSignallingConnected:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L188
	ld	AL,@(H'000D,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L190
	cmp	AL,#H'00A0
	beq	?L190
	cmp	AL,#H'00C0
	bne	?L188
?L190:
	ld	AL,#H'0001
	bra	(?L187)
?L188:
	ld	AL,#H'0000
?L187:
?LBE_isSignallingConnected:
	leavel	#2
_isMediaConnected:
	enterl	#2
?LBB_isMediaConnected:
	st	AL,@(-1,Y)
?LBB22:
	cmp	AL,#H'0000
	beq	?L195
?LBB23:
	ld	AL,#H'0000
	st	AL,@H'fff8
?L201:
?LBB24:
	ld	AL,@H'fff8
	smult	#H'0005
	ld	X,@$XAP_AL
	add	X,@(-1,Y)
	ld	AL,@(H'0012,X)
	and	AL,#H'0007
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'0002)
	bcc	?L198
	ld	AL,#H'0001
	bra	(?L194)
?L198:
?LBE24:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L201
?L195:
?LBE23:
	ld	AL,#H'0000
?L194:
?LBE22:
?LBE_isMediaConnected:
	leavel	#2
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
_l2capConnectRequest:
	enterl	#8
?LBB_l2capConnectRequest:
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
?LBB25:
	cmp	AH,#H'0000
	bne	?L204
	cmp	AL,#H'0000
	bne	?L204
	ld	AL,#H'0019
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$_a2dp
	ld	AH,@(H'0008,Y)
	bsr	$_ConnectionL2capConnectRequest
	bra	(?L203)
?L204:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,#H'FFFF
	bne	?L205
	cmp	AL,#H'FFFF
	bne	?L205
	bsr	$_UtilRandom
	ld	AH,#H'0000
	udiv	#H'0014
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
?L205:
?LBB26:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0008,Y)
	ld	X,@(H'0004,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$_a2dp
	ld	AH,@$XAP_UXL
	and	AH,#H'0007
	bsr	$_MessageSendLater
?L203:
?LBE26:
?LBE25:
?LBE_l2capConnectRequest:
	leavel	#8
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_a2dpSignallingDisconnectPending:
	enterl	#2
?LBB_a2dpSignallingDisconnectPending:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L209
	ld	AH,@(H'000D,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00E0
	cmp	AL,#H'00C0
	bne	?L209
	ld	AL,@$XAP_AH
	and	AL,#-H'00E1
	or	AL,#H'00A0
	st	AL,@(H'000D,X)
	ld	AL,@$_a2dp
	ld	AH,@(H'0009,X)
	bsr	$_ConnectionL2capDisconnectRequest
	ld	AL,#H'0001
	bra	(?L208)
?L209:
	ld	AL,#H'0000
?L208:
?LBE_a2dpSignallingDisconnectPending:
	leavel	#2
$_a2dpDisconnectAllMedia:
	enterl	#4
?LBB_a2dpDisconnectAllMedia:
	st	AL,@(0,Y)
?LBB27:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	tst	@(0,Y)
	beq	?L212
	st	AL,@(H'0001,Y)
?L222:
?LBB28:
?LBB29:
	ld	AL,@(H'0001,Y)
	smult	#H'0005
	ld	X,@(0,Y)
	add	X,@$XAP_AL
	add	X,#H'000E
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L217
	ld	AL,@$XAP_AH
	and	AL,#-H'0008
	or	AL,#H'0006
	st	AL,@(H'0004,X)
	bra	(?L224)
?L217:
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#H'0004
	bne	?L219
	ld	AL,@$XAP_AH
	and	AL,#-H'0008
	or	AL,#H'0005
	st	AL,@(H'0004,X)
	ld	AL,@$_a2dp
	ld	AH,@(0,X)
	bsr	$_ConnectionL2capDisconnectRequest
	bra	(?L224)
?L219:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0005
	bne	?L215
?L224:
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L215:
	ld	AL,@(H'0001,Y)
?LBE29:
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L222
?L212:
?LBE28:
?LBE27:
	ld	AL,@(-1,Y)
?LBE_a2dpDisconnectAllMedia:
	leavel	#4
;.stabn	192,0,0,?LBB27
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
;.stabn	224,0,0,?LBE27
$_a2dpFindDeviceFromSink:
	enterl	#3
?LBB_a2dpFindDeviceFromSink:
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L228
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L228
	ld	AL,@(0,Y)
	bsr	_findDeviceFromSink
	bra	(?L227)
?L228:
	ld	AL,#H'0000
?L227:
?LBE_a2dpFindDeviceFromSink:
	leavel	#3
$_a2dpRegisterL2cap:
	enterl	#3
?LBB_a2dpRegisterL2cap:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0019
	bsr	$_ConnectionL2capRegisterRequest
?LBE_a2dpRegisterL2cap:
	leavel	#3
$_a2dpHandleL2capRegisterCfm:
	enterl	#2
?LBB_a2dpHandleL2capRegisterCfm:
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L231
	ld	AL,#H'0004
	bra	(?L232)
?L231:
	ld	AL,#H'0000
?L232:
	bsr	$_a2dpSendInitCfmToClient
?LBE_a2dpHandleL2capRegisterCfm:
	leavel	#2
$_a2dpHandleL2capLinklossTimeout:
	enterl	#4
?LBB_a2dpHandleL2capLinklossTimeout:
	st	AL,@(0,Y)
?LBB30:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@(0,Y)
	add	X,#-H'0014
	st	X,@(H'0001,Y)
	ld	AL,@$_a2dp
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L234
	ld	X,#H'0001
	st	X,@(-1,Y)
?L234:
	ld	AL,@(-1,Y)
	bsr	$_PanicNull
?LBB31:
	ld	AL,@(0,Y)
	smult	#H'0013
	ld	X,@$_a2dp
	add	X,@$XAP_AL
	add	X,#-H'0177
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0030
	cmp	AL,#H'0020
	bne	?L233
	ld	AL,@$XAP_AH
	or	AL,#H'0010
	st	AL,@(H'0004,X)
?L233:
?LBE31:
?LBE30:
?LBE_a2dpHandleL2capLinklossTimeout:
	leavel	#4
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
$_a2dpHandleSignallingConnectReq:
	enterl	#7
?LBB_a2dpHandleSignallingConnectReq:
	st	AL,@(H'0003,Y)
?LBB32:
	bsr	_findDeviceFromBdaddr
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L239
	ld	X,@$XAP_AL
?LBB33:
	ld	AH,@(H'000D,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L238
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE248,X)
	brxl
	.SEG	CONST
?JTBASE248:
	.CODE
?L248:
	.SEG	CONST
	dc	lwrd(?L244-?L248)
	dc	lwrd(?L244-?L248)
	dc	lwrd(?L244-?L248)
	dc	lwrd(?L244-?L248)
	dc	lwrd(?L245-?L248)
	dc	lwrd(?L247-?L248)
	dc	lwrd(?L247-?L248)
	.CODE
?L244:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0007
	bra	(?L254)
?L245:
	ld	AL,@(H'0004,Y)
	bra	(?L253)
?L247:
?LBB34:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	st	AH,@(0,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0007
	bsr	$_MessageSendConditionally
?LBE34:
	bra	(?L238)
?L239:
?LBE33:
	ld	AL,@(H'0003,Y)
	bsr	_addDevice
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L251
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	_initiateSignalling
	bsr	$_PanicNull
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,#H'0010
	st	AL,@(H'0001,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_l2capConnectRequest
	ld	AL,@(H'0004,Y)
	bsr	_requestRemoteA2dpVersion
	bra	(?L238)
?L251:
	ld	AL,#H'0000
?L253:
	ld	AH,#H'000D
?L254:
	bsr	$_a2dpSignallingConnectCfm
?L238:
?LBE32:
?LBE_a2dpHandleSignallingConnectReq:
	leavel	#7
;.stabn	192,0,0,?LBB32
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	224,0,0,?LBE32
$_a2dpMediaConnectReq:
	enterl	#6
?LBB_a2dpMediaConnectReq:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB35:
	ld	AH,@(H'000D,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L255
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE266,X)
	brxl
	.SEG	CONST
?JTBASE266:
	.CODE
?L266:
	.SEG	CONST
	dc	lwrd(?L265-?L266)
	dc	lwrd(?L265-?L266)
	dc	lwrd(?L265-?L266)
	dc	lwrd(?L265-?L266)
	dc	lwrd(?L261-?L266)
	dc	lwrd(?L265-?L266)
	dc	lwrd(?L265-?L266)
	.CODE
?L261:
?LBB36:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	_initiateMedia
	cmp	AL,#H'0000
	beq	?L262
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0010
	st	AL,@(H'0001,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_l2capConnectRequest
	bra	(?L255)
?L262:
	ld	AL,#H'000D
	bra	(?L268)
?L265:
?LBE36:
	ld	AL,#H'0007
?L268:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L255:
?LBE35:
?LBE_a2dpMediaConnectReq:
	leavel	#6
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
$_a2dpHandleSignallingConnectRes:
	enterl	#9
?LBB_a2dpHandleSignallingConnectRes:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB37:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L269
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L269
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE280,X)
	brxl
	.SEG	CONST
?JTBASE280:
	.CODE
?L280:
	.SEG	CONST
	dc	lwrd(?L269-?L280)
	dc	lwrd(?L269-?L280)
	dc	lwrd(?L278-?L280)
	dc	lwrd(?L276-?L280)
	dc	lwrd(?L269-?L280)
	dc	lwrd(?L269-?L280)
	dc	lwrd(?L269-?L280)
	.CODE
?L276:
	ld	X,@(H'0005,Y)
	tst	@(H'0001,X)
	bne	?L278
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'0020
	st	AL,@(H'0004,X)
?L278:
	ld	AL,#H'0019
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0010
	st	AL,@(H'0003,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0004,Y)
	ld	AL,@$_a2dp
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0001,X)
	bsr	$_ConnectionL2capConnectResponse
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	_requestRemoteA2dpVersion
?L269:
?LBE37:
?LBE_a2dpHandleSignallingConnectRes:
	leavel	#9
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_a2dpHandleSignallingDisconnectReq:
	enterl	#4
?LBB_a2dpHandleSignallingDisconnectReq:
	ld	X,@$XAP_AL
?LBB38:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L282
?LBB39:
	add	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0041
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L282
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE296,X)
	brxl
	.SEG	CONST
?JTBASE296:
	.CODE
?L296:
	.SEG	CONST
	dc	lwrd(?L282-?L296)
	dc	lwrd(?L282-?L296)
	dc	lwrd(?L282-?L296)
	dc	lwrd(?L282-?L296)
	dc	lwrd(?L289-?L296)
	dc	lwrd(?L282-?L296)
	dc	lwrd(?L282-?L296)
	.CODE
?L289:
	ld	AL,@(0,Y)
	bsr	$_a2dpStreamClose
	cmp	AL,#H'0000
	bne	?L298
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0000
	beq	?L292
	ld	AL,@(0,Y)
	bsr	$_a2dpStreamAbort
?L298:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'00C0
	st	AL,@(H'0004,X)
	bra	(?L282)
?L292:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'00A0
	st	AL,@(H'0004,X)
	ld	AL,@$_a2dp
	ld	AH,@(0,X)
	bsr	$_ConnectionL2capDisconnectRequest
?L282:
?LBE39:
?LBE38:
?LBE_a2dpHandleSignallingDisconnectReq:
	leavel	#4
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE38
$_a2dpMediaDisconnectReq:
	enterl	#3
?LBB_a2dpMediaDisconnectReq:
	st	AL,@(0,Y)
?LBB40:
	bsr	_findDeviceFromSink
	cmp	AL,#H'0000
	beq	?L299
?LBB41:
	ld	AH,@(0,Y)
	bsr	_findMediaFromSink
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L299
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L299
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE310,X)
	brxl
	.SEG	CONST
?JTBASE310:
	.CODE
?L310:
	.SEG	CONST
	dc	lwrd(?L299-?L310)
	dc	lwrd(?L299-?L310)
	dc	lwrd(?L299-?L310)
	dc	lwrd(?L299-?L310)
	dc	lwrd(?L307-?L310)
	dc	lwrd(?L299-?L310)
	dc	lwrd(?L299-?L310)
	.CODE
?L307:
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	and	AL,#-H'0008
	or	AL,#H'0005
	st	AL,@(H'0004,X)
	ld	AL,@$_a2dp
	ld	AH,@(0,Y)
	bsr	$_ConnectionL2capDisconnectRequest
?L299:
?LBE41:
?LBE40:
?LBE_a2dpMediaDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	224,0,0,?LBE40
$_a2dpHandleL2capConnectReq:
	enterl	#5
?LBB_a2dpHandleL2capConnectReq:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_l2capConnectRequest
?LBE_a2dpHandleL2capConnectReq:
	leavel	#5
$_a2dpHandleL2capConnectInd:
	enterl	#10
?LBB_a2dpHandleL2capConnectInd:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB42:
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0019
	bne	?L314
?LBB43:
	ld	AL,@$XAP_UXL
	bsr	_findDeviceFromBdaddr
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L315
?LBB44:
	add	AL,#H'0009
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L313
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE328,X)
	brxl
	.SEG	CONST
?JTBASE328:
	.CODE
?L328:
	.SEG	CONST
	dc	lwrd(?L317-?L328)
	dc	lwrd(?L318-?L328)
	dc	lwrd(?L314-?L328)
	dc	lwrd(?L314-?L328)
	dc	lwrd(?L323-?L328)
	dc	lwrd(?L314-?L328)
	dc	lwrd(?L314-?L328)
	.CODE
?L317:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0006,X)
	bsr	_initiateSignalling
	bra	(?L336)
?L318:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0006,X)
	bsr	_initiateSignalling
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L335
?L336:
	ld	AL,#H'0019
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	bra	(?L337)
?L323:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0007
	bne	?L314
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0006,X)
	bsr	_initiateMedia
	cmp	AL,#H'0000
	beq	?L314
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
?L337:
	ld	AL,@(H'0006,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0010
	st	AL,@(H'0003,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0004,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0001
	bra	(?L334)
?L315:
?LBE44:
	ld	AL,@(H'0005,Y)
	bsr	_addDevice
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L314
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0006,X)
	bsr	_initiateSignalling
?L335:
	ld	AL,@(H'0006,Y)
	bsr	$_a2dpSignallingConnectInd
	bra	(?L313)
?L314:
	ld	X,@(H'0005,Y)
?LBE43:
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0010
	st	AL,@(H'0003,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0004,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0000
?L334:
	bsr	$_ConnectionL2capConnectResponse
?L313:
?LBE42:
?LBE_a2dpHandleL2capConnectInd:
	leavel	#10
;.stabn	192,0,0,?LBB43
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	224,0,0,?LBE43
$_a2dpHandleL2capConnectCfm:
	enterl	#11
?LBB_a2dpHandleL2capConnectCfm:
	st	AL,@(H'0005,Y)
?LBB45:
	add	AL,#H'0004
	bsr	_findDeviceFromBdaddr
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L340
?LBB46:
	add	AL,#H'0009
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L340
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE399,X)
	brxl
	.SEG	CONST
?JTBASE399:
	.CODE
?L399:
	.SEG	CONST
	dc	lwrd(?L343-?L399)
	dc	lwrd(?L349-?L399)
	dc	lwrd(?L349-?L399)
	dc	lwrd(?L345-?L399)
	dc	lwrd(?L370-?L399)
	dc	lwrd(?L370-?L399)
	dc	lwrd(?L370-?L399)
	.CODE
?L343:
	ld	X,@(H'0005,Y)
	tst	@(H'0002,X)
	beq	?L340
	bra	(?L410)
?L345:
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	bne	?L349
	ld	AL,@(H'0003,X)
	ld	X,@(H'0007,Y)
	cmp	AL,@(0,X)
	bne	?L349
	tst	@(H'0001,X)
	beq	?L349
	tst	@(H'0002,X)
	beq	?L349
	ld	AL,#H'0019
	st	AL,@(0,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0010
	st	AL,@(H'0003,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0004,Y)
	ld	AL,@$_a2dp
	ld	AH,#H'0000
	bsr	$_ConnectionL2capConnectResponse
?L349:
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	bne	?L350
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	bsr	_completeSignalling
	ld	AL,@(H'0006,Y)
	bsr	_stopLinklossTimer
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@$_a2dp
	and	AH,#H'0007
	bsr	$_MessageCancelAll
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0700
	cmp	AL,#H'0000
	beq	?L340
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_a2dpSignallingConnectCfm
	bra	(?L409)
?L350:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L353
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	cmp	AL,@(H'0003,X)
	beq	?L340
	ld	AL,@(H'0003,X)
	ld	X,@(H'0007,Y)
	bra	(?L408)
?L353:
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00E0
	cmp	AL,#H'0060
	bne	?L356
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	cmp	AL,@(H'0003,X)
	bne	?L357
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	st	AL,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'00E1
	or	AL,#H'0020
	bra	(?L401)
?L357:
	ld	AL,#H'0000
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	or	AL,#H'0040
?L401:
	st	AL,@(H'0004,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0084
	bne	?L359
	ld	AL,@(H'0006,Y)
	ld	AH,#H'000F
	bra	(?L407)
?L359:
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0005
?L407:
	bsr	$_a2dpSignallingConnectCfm
	bra	(?L340)
?L356:
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L362
	ld	AL,@(H'0004,X)
	and	AL,#H'0050
	cmp	AL,#H'0040
	bne	?L363
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	st	AL,@(H'0004,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0000
	bsr	_initiateSignalling
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0010
	st	AL,@(H'0001,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0002,Y)
	ld	AL,#-H'0001
	ld	AH,#-H'0001
	bsr	_l2capConnectRequest
	bra	(?L340)
?L363:
	ld	AL,@(H'0006,Y)
	ld	AH,#H'000B
	bsr	$_a2dpSignallingDisconnectInd
	bra	(?L406)
?L362:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0084
	bne	?L366
	ld	AL,@(H'0006,Y)
	ld	AH,#H'000F
	bra	(?L402)
?L366:
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0005
?L402:
	bsr	$_a2dpSignallingConnectCfm
?L406:
	ld	AL,@(H'0006,Y)
	bsr	_removeDevice
	bra	(?L340)
?L370:
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	bsr	$_SinkGetL2capCid
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0003,X)
	cmp	AH,@$XAP_AL
	bne	?L371
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	bsr	_completeSignalling
	bra	(?L340)
?L371:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0003,X)
	bsr	_findMediaFromConnectionId
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L373
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0006)
	bcc	?L340
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE395,X)
	brxl
	.SEG	CONST
?JTBASE395:
	.CODE
?L395:
	.SEG	CONST
	dc	lwrd(?L376-?L395)
	dc	lwrd(?L379-?L395)
	dc	lwrd(?L379-?L395)
	dc	lwrd(?L376-?L395)
	dc	lwrd(?L388-?L395)
	dc	lwrd(?L388-?L395)
	dc	lwrd(?L389-?L395)
	.CODE
?L376:
	ld	X,@(H'0005,Y)
	tst	@(H'0002,X)
	beq	?L340
	bra	(?L410)
?L379:
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	bne	?L380
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	bsr	_completeMedia
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0011
	beq	?L381
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AL,#H'0000
	bra	(?L403)
?L381:
	ld	AL,#H'000E
?L403:
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_a2dpMediaOpenCfm
?L409:
	ld	AL,@(H'0006,Y)
	bsr	$_a2dpHandleSignalPacket
	bra	(?L340)
?L380:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L384
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	cmp	AL,@(H'0003,X)
	beq	?L340
	bra	(?L405)
?L384:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_a2dpMediaOpenCfm
	ld	AL,@(H'0008,Y)
	bsr	_removeMedia
	ld	AL,@(H'0006,Y)
	bsr	$_a2dpStreamAbort
	bra	(?L340)
?L388:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	bsr	_completeMedia
	bra	(?L340)
?L389:
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	bne	?L390
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	bsr	_completeMedia
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0008
	or	AL,#H'0005
	st	AL,@(H'0004,X)
	ld	AL,@$_a2dp
	ld	AH,@(0,X)
	bra	(?L404)
?L390:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L392
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0005,Y)
	cmp	AL,@(H'0003,X)
	beq	?L340
?L405:
	ld	AL,@(H'0003,X)
	ld	X,@(H'0008,Y)
?L408:
	st	AL,@(0,X)
	bra	(?L340)
?L392:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_a2dpMediaOpenCfm
	ld	AL,@(H'0008,Y)
	bsr	_removeMedia
	ld	AL,@(H'0006,Y)
	bsr	$_a2dpSignallingDisconnectPending
	bra	(?L340)
?L373:
	ld	X,@(H'0005,Y)
	tst	@(H'0002,X)
	beq	?L340
?L410:
	ld	AL,@$_a2dp
	ld	AH,@(H'0002,X)
?L404:
	bsr	$_ConnectionL2capDisconnectRequest
?L340:
?LBE46:
?LBE45:
?LBE_a2dpHandleL2capConnectCfm:
	leavel	#11
;.stabn	192,0,0,?LBB45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE45
$_a2dpHandleL2capDisconnect:
	enterl	#9
?LBB_a2dpHandleL2capDisconnect:
	st	AH,@(H'0003,Y)
?LBB47:
	ld	AL,@$XAP_AH
	bsr	_findDeviceFromSink
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L425
?LBB48:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	add	X,#H'0009
	st	X,@(H'0005,Y)
	cmp	X,#H'0000
	beq	?L427
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,@(H'0003,Y)
	bne	?L427
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	and	AH,#H'0007
	cmp	AH,#H'0003
	bcz	?L425
	cmp	AH,#(H'0001+H'0006)
	bcc	?L425
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0004
	bne	?L436
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L436
	ld	X,@$_a2dp
	tst	@(H'0004,X)
	beq	?L436
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	st	AL,@(H'0004,X)
	ld	AL,@(H'0004,Y)
	bsr	_startLinklossTimer
	ld	AL,@(H'0004,Y)
	bsr	_isMediaConnected
	cmp	AL,#H'0000
	bne	?L425
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpSignallingLinklossInd
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	_initiateSignalling
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	bra	(?L462)
?L436:
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpDisconnectAllMedia
	cmp	AL,#H'0000
	beq	?L439
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'00E1
	st	AL,@(H'0004,X)
	bra	(?L425)
?L439:
	ld	AL,@(H'0009,Y)
	bsr	_convertDisconnectStatusCode
	ld	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpSignallingDisconnectInd
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpStreamReset
	bra	(?L461)
?L427:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	_findMediaFromSink
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L425
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0003
	bcz	?L425
	cmp	AL,#(H'0001+H'0006)
	bcc	?L425
	ld	AL,@(H'0009,Y)
	bsr	_convertDisconnectStatusCode
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_a2dpMediaCloseInd
	ld	AL,@(H'0006,Y)
	bsr	_removeMedia
	ld	AL,@(H'0004,Y)
	bsr	_isMediaConnected
	cmp	AL,#H'0000
	bne	?L425
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpStreamReset
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpSignallingDisconnectPending
	cmp	AL,#H'0000
	bne	?L425
	ld	AL,@(H'0004,Y)
	bsr	_isSignallingConnected
	cmp	AL,#H'0000
	bne	?L455
	ld	AL,@(H'0009,Y)
	bsr	_convertDisconnectStatusCode
	ld	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpSignallingDisconnectInd
?L461:
	ld	AL,@(H'0004,Y)
	bsr	_removeDevice
	bra	(?L425)
?L455:
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0005
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L425
	ld	AL,@$XAP_UXL
	bsr	$_a2dpSignallingLinklossInd
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0000
	bne	?L425
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	_initiateSignalling
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
?L462:
	ld	AL,#H'0010
	st	AL,@(H'0001,Y)
	ld	AL,#(_a2dp_conftab)
	st	AL,@(H'0002,Y)
	ld	AL,#-H'0001
	ld	AH,#-H'0001
	bsr	_l2capConnectRequest
?L425:
?LBE48:
?LBE47:
?LBE_a2dpHandleL2capDisconnect:
	leavel	#9
;.stabn	192,0,0,?LBB47
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
;.stabn	224,0,0,?LBE47
	ENDMOD

;# Function pattern *movqi2 used[0] = 310 used[1] = 97 total = 407
;# Function pattern *movqi3 used[0] = 439 total = 439
;# Function pattern *movqi8 used[0] = 26 total = 26
;# Function pattern *movhi used[2] = 2 used[3] = 4 total = 6
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 46 used[2] = 8 total = 54
;# Function pattern *andqi3 used[0] = 85 total = 85
;# Function pattern *iorqi3 used[0] = 33 total = 33
;# Function pattern *udivqi3_const used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 11 total = 11
;# Function pattern *lshrqi3 used[0] = 21 total = 21
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2_1 used[0] = 2 total = 2
;# Function pattern jump used[0] = 73 total = 73
;# Function pattern *call1 used[0] = 49 total = 49
;# Function pattern *call_value1 used[0] = 70 total = 70
;# Function pattern tablejump_1 used[0] = 10 total = 10
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 63 used[1] = 19 total = 82
;# Function pattern movstrqi+4 used[1] = 18 total = 18
;# Function pattern movstrqi+5 used[0] = 62 total = 62
;# Function pattern movstrqi+6 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[0] = 1 total = 1
	MODULE	a2dp_process_command
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_media_transport_caps:
	dc	H'0001
	dc	H'0000
_content_protection_caps:
	dc	H'0004
	dc	H'0002
	dc	H'0002
	dc	H'0000
_delay_reporting_caps:
	dc	H'0008
	dc	H'0000
	.CODE
_getLocalSeid:
	enterl	#2
?LBB_getLocalSeid:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(0,X)
	ld	AL,@(0,X)
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_getLocalSeid:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_getSepIndexBySeid:
	enterl	#5
?LBB_getSepIndexBySeid:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetSize
	ld	AH,@$XAP_AL
	lsr	#H'0001
	st	AH,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetBase
	bsr	$_PanicNull
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	cmp	AL,@(H'0002,Y)
	bcc	?L11
?L9:
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@(H'0001,Y)
	bne	?L8
	ld	AL,@(-1,Y)
	bra	(?L3)
?L8:
	add	AH,#H'0002
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,@(H'0002,Y)
	bcs	?L9
?L11:
	ld	AL,#H'00FF
?L3:
?LBE3:
?LBE_getSepIndexBySeid:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_updateConfiguredServiceCaps:
	enterl	#15
?LBB_updateConfiguredServiceCaps:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB4:
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	st	AL,@(H'0008,Y)
	ld	AH,#H'0002
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	bne	?L16
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	bne	?L16
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0002,Y)
?L16:
	tst	@(H'0002,Y)
	beq	?L18
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	add	AL,#H'0002
	bra	(?L19)
?L18:
	ld	AL,#H'0000
?L19:
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0004
	ld	AH,@(H'000F,Y)
	bsr	$_a2dpIsServiceSupported
	cmp	AL,#H'0000
	bne	?L20
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0004
	ld	AH,@(H'0006,Y)
	bra	(?L34)
?L20:
	ld	X,@(H'0004,Y)
?LBB5:
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,#H'0004
	ld	AH,@(H'0005,X)
?L34:
	bsr	$_a2dpIsServiceSupported
	cmp	AL,#H'0000
	beq	?L22
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0004
	st	AH,@(H'0007,Y)
?L22:
	ld	AL,@(H'0010,Y)
?LBE5:
	st	AL,@(0,Y)
	ld	AL,#H'0008
	ld	AH,@(H'000F,Y)
	bsr	$_a2dpIsServiceSupported
	cmp	AL,#H'0000
	bne	?L24
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0008
	ld	AH,@(H'0006,Y)
	bra	(?L35)
?L24:
	ld	X,@(H'0004,Y)
?LBB6:
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,#H'0008
	ld	AH,@(H'0005,X)
?L35:
	bsr	$_a2dpIsServiceSupported
	cmp	AL,#H'0000
	beq	?L26
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
?L26:
?LBE6:
	tst	@(H'0007,Y)
	beq	?L15
?LBB7:
	ld	AL,@(H'0007,Y)
	bsr	$_malloc
	bsr	$_PanicNull
	st	AL,@(H'000B,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#(_media_transport_caps)
	bsr	$_memmove
	ld	AL,@(H'000B,Y)
	add	AL,#H'0002
	st	AL,@(H'000C,Y)
	tst	@(H'0002,Y)
	beq	?L29
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	X,@(H'000C,Y)
	add	X,@(H'0003,Y)
	st	X,@(H'000C,Y)
?L29:
	tst	@(H'0009,Y)
	beq	?L30
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,#(_content_protection_caps)
	bsr	$_memmove
	ld	AH,@(H'000C,Y)
	add	AH,#H'0004
	st	AH,@(H'000C,Y)
?L30:
	tst	@(H'000A,Y)
	beq	?L31
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	ld	AH,#(_delay_reporting_caps)
	bsr	$_memmove
?L31:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockRemove
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockAdd
	bsr	$_PanicNull
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	ld	AL,@(H'000B,Y)
	bsr	$_free
?L15:
?LBE7:
?LBE4:
?LBE_updateConfiguredServiceCaps:
	leavel	#15
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE4
_getFilteredServiceCaps:
	enterl	#7
?LBB_getFilteredServiceCaps:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	tst	@(H'0008,Y)
	beq	?L44
?L42:
	ld	X,@(H'0007,Y)
?LBB9:
	ld	AL,@(H'0001,X)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	cmp	AL,@(0,X)
	beq	?L40
	ld	X,@(H'0003,Y)
	add	X,@(H'0004,Y)
	st	X,@(H'0003,Y)
	tst	@(H'0001,Y)
	beq	?L40
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memcpy
	ld	AL,@(H'0001,Y)
	add	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
?L40:
	ld	X,@(H'0007,Y)
	add	X,@(H'0004,Y)
	st	X,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	sub	AL,@(H'0004,Y)
	st	AL,@(H'0008,Y)
?LBE9:
	cmp	AL,#H'0000
	bne	?L42
?L44:
?LBE8:
	ld	AL,@(H'0003,Y)
?LBE_getFilteredServiceCaps:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_a2dpSetSepAvailable:
	enterl	#4
?LBB_a2dpSetSepAvailable:
	st	AL,@(H'0001,Y)
?LBB10:
	bsr	_getSepIndexBySeid
	ld	AH,@$XAP_AL
	cmp	AL,#H'00FF
	beq	?L47
	ld	X,@(H'0001,Y)
?LBB11:
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	tst	@(H'0004,Y)
	bne	?L48
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	or	AL,#H'0001
	bra	(?L50)
?L48:
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#-H'0002
?L50:
	asl	#H'000E
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,#H'0001
	bra	(?L46)
?L47:
?LBE11:
	ld	AL,#H'0000
?L46:
?LBE10:
?LBE_a2dpSetSepAvailable:
	leavel	#4
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
$_a2dpGetSepAvailability:
	enterl	#4
?LBB_a2dpGetSepAvailability:
	st	AL,@(H'0001,Y)
?LBB12:
	bsr	_getSepIndexBySeid
	ld	AH,@$XAP_AL
	cmp	AL,#H'00FF
	beq	?L53
	ld	X,@(H'0001,Y)
?LBB13:
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	bra	(?L52)
?L53:
?LBE13:
	ld	AH,#H'0001
?L52:
?LBE12:
	ld	AL,@$XAP_AH
?LBE_a2dpGetSepAvailability:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_a2dpProcessDiscoverCommand:
	enterl	#8
?LBB_a2dpProcessDiscoverCommand:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB14:
	ld	X,@(H'0009,X)
	st	X,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetBase
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	ld	X,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetSize
	ld	AH,@$XAP_AL
	lsr	#H'0001
	st	AH,@(H'0004,Y)
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	st	AL,@H'fff8
	cmp	AL,@(H'0004,Y)
	bcc	?L73
?L61:
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L58
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	add	AL,#H'0002
	st	AL,@(0,X)
?L58:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@(H'0004,Y)
	bcs	?L61
?L73:
	ld	X,@(H'0001,Y)
	tst	@(0,X)
	beq	?L63
	ld	AL,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	$_a2dpGrabSink
	st	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L62
?L63:
	ld	AL,#H'0031
	bra	(?L55)
?L62:
	ld	AL,@(H'0004,Y)
	add	AL,#-H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	beq	?L75
?L71:
	ld	X,@(H'0003,Y)
?LBB15:
	ld	X,@(0,X)
	st	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0002
	beq	?L67
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L67
	cmp	AH,#H'0000
	beq	?L68
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	asl	#H'0002
	or	AL,#H'0002
	bra	(?L76)
?L68:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	asl	#H'0002
?L76:
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	asl	#H'0004
	st	AL,@H'fffa
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L70
	ld	AL,@H'fffa
	or	AL,#H'0008
	st	AL,@H'fffa
?L70:
	ld	X,@H'fff9
	st	AL,@H'ffff
	ld	AL,@H'fffa
	st	AL,@(0,X)
	ld	AL,@H'ffff
?L67:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
?LBE15:
	add	AL,#-H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	bne	?L71
?L75:
	ld	AL,#H'0000
?L55:
?LBE14:
?LBE_a2dpProcessDiscoverCommand:
	leavel	#8
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
$_a2dpProcessGetCapabilitiesCommand:
	enterl	#9
?LBB_a2dpProcessGetCapabilitiesCommand:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(H'000C,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(H'0002,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	ld	X,@(H'0009,X)
	st	X,@(H'0004,Y)
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	cmp	AH,#H'00FF
	bne	?L84
	ld	AL,#H'0012
	bra	(?L83)
?L84:
	ld	X,@(H'0002,Y)
?LBB17:
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,#H'0008
	bsr	_getFilteredServiceCaps
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_a2dpGrabSink
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L86
	ld	AL,#H'0031
	bra	(?L83)
?L86:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0008
	bsr	_getFilteredServiceCaps
	ld	AL,#H'0000
?L83:
?LBE17:
?LBE16:
?LBE_a2dpProcessGetCapabilitiesCommand:
	leavel	#9
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_a2dpProcessSetConfigurationCommand:
	enterl	#18
?LBB_a2dpProcessSetConfigurationCommand:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB18:
	ld	X,@(H'000C,X)
	st	X,@(H'000A,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(H'0008,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	st	AL,@(H'000B,Y)
	ld	X,@(H'0008,Y)
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	st	X,@(H'000C,Y)
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AH,@(H'000B,Y)
	cmp	AH,#H'00FF
	bne	?L89
	ld	AL,#H'0012
	bra	(?L88)
?L89:
	ld	X,@(H'0008,Y)
?LBB19:
	ld	AL,@(H'0004,X)
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	st	AL,@(H'000D,Y)
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'000E,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L91
	ld	X,@(H'0008,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0004
	bne	?L91
	ld	AL,#H'0031
	bra	(?L88)
?L91:
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	beq	?L93
	ld	AL,#H'0013
	bra	(?L88)
?L93:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	ld	AH,@(H'000C,Y)
	add	AH,#-H'0004
	ld	X,#H'0000
	st	X,@(0,Y)
	st	X,@(H'0001,Y)
	st	X,@(H'0002,Y)
	ld	X,@$XAP_UY
	add	X,#H'0005
	st	X,@(H'0003,Y)
	ld	X,@$XAP_UY
	add	X,#H'0006
	st	X,@(H'0004,Y)
	bsr	$_a2dpValidateServiceCaps
	cmp	AL,#H'0000
	bne	?L95
	ld	AL,@(H'0005,Y)
	asl	#H'0008
	or	AL,@(H'0006,Y)
	bra	(?L88)
?L95:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#-H'0004
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0005,X)
	ld	AH,@(H'0004,X)
	bsr	$_a2dpAreServicesCategoriesCompatible
	cmp	AL,#H'0000
	bne	?L97
	ld	AL,@(H'0007,Y)
	asl	#H'0008
	or	AL,#H'0029
	bra	(?L88)
?L97:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0005,X)
	bsr	$_a2dpFindMatchingCodecSpecificInformation
	st	AL,@(H'000F,Y)
	cmp	AL,#H'0000
	bne	?L99
	ld	AL,#H'0729
	bra	(?L88)
?L99:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockSetCurrent
	ld	X,@(H'000E,Y)
	ld	AL,@(0,X)
	asl	#H'000A
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0006,X)
	and	AH,#H'03FF
	or	AL,@$XAP_AH
	st	AL,@H'fff8
	st	AL,@(H'0006,X)
	ld	X,@(H'000E,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0008
	ld	AH,@H'fff8
	and	AH,#-H'0301
	or	AH,@$XAP_AL
	ld	X,@(H'0008,Y)
	st	AH,@(H'0006,X)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@(H'0008,Y)
	st	AH,@(H'0006,X)
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	or	AL,#H'0002
	asl	#H'000E
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'003F
	asl	#H'000A
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0005,X)
	and	AH,#H'03FF
	or	AH,@$XAP_AL
	st	AH,@(H'0005,X)
	ld	AH,#H'0000
	st	AH,@H'fff8
	ld	X,@(H'000E,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L101
	ld	AH,#H'0001
	st	AH,@H'fff8
?L101:
	ld	AL,@H'fff8
	and	AL,#H'0003
	asl	#H'0008
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0005,X)
	and	AH,#-H'0301
	or	AH,@$XAP_AL
	st	AH,@(H'0005,X)
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@(H'0008,Y)
	st	AH,@(H'0005,X)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#-H'0004
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'000B,Y)
	bsr	_updateConfiguredServiceCaps
	ld	AL,#H'0000
?L88:
?LBE19:
?LBE18:
?LBE_a2dpProcessSetConfigurationCommand:
	leavel	#18
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
$_a2dpProcessGetConfigurationCommand:
	enterl	#8
?LBB_a2dpProcessGetConfigurationCommand:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB20:
	ld	X,@(H'000C,X)
	st	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(H'0001,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	ld	X,@(H'0001,Y)
	ld	X,@(H'0009,X)
	st	X,@(H'0004,Y)
	ld	AH,#H'0000
	ld	X,@(H'0002,Y)
	st	AH,@(0,X)
	cmp	AL,#H'00FF
	bne	?L106
	ld	AL,#H'0012
	bra	(?L105)
?L106:
	ld	AL,@(H'0001,Y)
	bsr	_getLocalSeid
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	and	AH,#H'003F
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bne	?L111
	ld	X,@(H'0001,Y)
?LBB21:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0004,Y)
	bsr	$_a2dpGrabSink
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L110
?L111:
	ld	AL,#H'0031
	bra	(?L105)
?L110:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	bsr	$_PanicNull
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,#H'0000
?L105:
?LBE21:
?LBE20:
?LBE_a2dpProcessGetConfigurationCommand:
	leavel	#8
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
$_a2dpProcessReconfigureCommand:
	enterl	#16
?LBB_a2dpProcessReconfigureCommand:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB22:
	ld	X,@(H'000C,X)
	ld	AH,@$XAP_UXL
	add	X,#H'0003
	st	X,@(H'000A,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	add	X,#-H'0003
	st	X,@(H'000B,Y)
	ld	X,@$XAP_AH
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(H'0008,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	st	AL,@(H'000C,Y)
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AH,@(H'000C,Y)
	cmp	AH,#H'00FF
	bne	?L115
	ld	AL,#H'0012
	bra	(?L114)
?L115:
	ld	X,@(H'0008,Y)
?LBB23:
	ld	AL,@(H'0004,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'000D,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_a2dpValidateServiceCaps
	cmp	AL,#H'0000
	beq	?L127
	ld	AL,@(H'0008,Y)
	bsr	_getLocalSeid
	st	AL,@H'fff8
	ld	X,@(H'0008,Y)
	ld	AL,@(H'000C,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	and	AH,#H'003F
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	beq	?L119
	ld	AL,#H'0014
	bra	(?L114)
?L119:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_a2dpValidateServiceCaps
	cmp	AL,#H'0000
	bne	?L121
?L127:
	ld	AL,@(H'0005,Y)
	asl	#H'0008
	or	AL,@(H'0006,Y)
	bra	(?L114)
?L121:
	ld	X,@(H'000A,Y)
	st	X,@(0,Y)
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0005,X)
	ld	AH,@(H'0004,X)
	bsr	$_a2dpAreServicesCategoriesCompatible
	cmp	AL,#H'0000
	bne	?L123
	ld	AL,@(H'0007,Y)
	asl	#H'0008
	or	AL,#H'0029
	bra	(?L114)
?L123:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@(H'000D,Y)
	ld	AL,@(H'0005,X)
	ld	AH,@(H'000A,Y)
	bsr	$_a2dpFindMatchingCodecSpecificInformation
	cmp	AL,#H'0000
	bne	?L125
	ld	AL,#H'071A
	bra	(?L114)
?L125:
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000C,Y)
	bsr	_updateConfiguredServiceCaps
	ld	AL,#H'0000
?L114:
?LBE23:
?LBE22:
?LBE_a2dpProcessReconfigureCommand:
	leavel	#16
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
$_a2dpProcessGetAllCapabilitiesCommand:
	enterl	#9
?LBB_a2dpProcessGetAllCapabilitiesCommand:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB24:
	ld	AL,@(H'000C,X)
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(H'0002,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	ld	X,@(H'0009,X)
	st	X,@(H'0004,Y)
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	cmp	AH,#H'00FF
	bne	?L131
	ld	AL,#H'0012
	bra	(?L130)
?L131:
	ld	X,@(H'0002,Y)
?LBB25:
	ld	AL,@(H'0004,X)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bsr	_getFilteredServiceCaps
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_a2dpGrabSink
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L133
	ld	AL,#H'0031
	bra	(?L130)
?L133:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	_getFilteredServiceCaps
	ld	AL,#H'0000
?L130:
?LBE25:
?LBE24:
?LBE_a2dpProcessGetAllCapabilitiesCommand:
	leavel	#9
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
$_a2dpProcessDelayReportCommand:
	enterl	#4
?LBB_a2dpProcessDelayReportCommand:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB26:
	ld	X,@(H'000C,X)
	st	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(0,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	cmp	AL,#H'00FF
	bne	?L136
	ld	AL,#H'0012
	bra	(?L135)
?L136:
	ld	AL,@(0,Y)
	bsr	_getLocalSeid
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	and	AH,#H'003F
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	bne	?L142
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0008
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L140
?L142:
	ld	AL,#H'0031
	bra	(?L135)
?L140:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	asl	#H'0008
	or	AL,@(H'0004,X)
	ld	X,@(0,Y)
	st	AL,@(H'0011,X)
	ld	AL,#H'0000
?L135:
?LBE26:
?LBE_a2dpProcessDelayReportCommand:
	leavel	#4
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_a2dpProcessOpenCommand:
	enterl	#4
?LBB_a2dpProcessOpenCommand:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB27:
	ld	X,@(H'000C,X)
	st	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(0,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	cmp	AL,#H'00FF
	bne	?L146
	ld	AL,#H'0012
	bra	(?L145)
?L146:
	ld	AL,@(0,Y)
	bsr	_getLocalSeid
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	and	AH,#H'003F
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	beq	?L148
	ld	AL,#H'0031
	bra	(?L145)
?L148:
	ld	AL,#H'0000
?L145:
?LBE27:
?LBE_a2dpProcessOpenCommand:
	leavel	#4
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_a2dpProcessStartCommand:
	enterl	#6
?LBB_a2dpProcessStartCommand:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB28:
	ld	X,@(H'000C,X)
	add	X,#H'0002
	st	X,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	add	X,#-H'0003
	st	X,@(H'0002,Y)
	cmp	X,#-H'0001
	beq	?L161
?L159:
	ld	X,@(H'0001,Y)
?LBB29:
	ld	AH,@(0,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'003F
	st	AL,@(H'0003,Y)
	add	X,#H'0001
	st	X,@(H'0001,Y)
	ld	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	_getSepIndexBySeid
	cmp	AL,#H'00FF
	bne	?L156
	ld	AL,@(H'0003,Y)
	asl	#H'000A
	or	AL,#H'0012
	bra	(?L152)
?L156:
	ld	AL,@(0,Y)
	bsr	_getLocalSeid
	cmp	AL,@(H'0003,Y)
	beq	?L153
	ld	AL,@(H'0003,Y)
	asl	#H'000A
	or	AL,#H'0031
	bra	(?L152)
?L153:
	ld	X,@(H'0002,Y)
?LBE29:
	add	X,#-H'0001
	st	X,@(H'0002,Y)
	cmp	X,#-H'0001
	bne	?L159
?L161:
	ld	AL,#H'0000
?L152:
?LBE28:
?LBE_a2dpProcessStartCommand:
	leavel	#6
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
$_a2dpProcessCloseCommand:
	enterl	#6
?LBB_a2dpProcessCloseCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB30:
	ld	X,@(H'000C,X)
	st	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	ld	AL,@(H'0001,Y)
	and	AH,#H'003F
	bsr	_getSepIndexBySeid
	st	AL,@(H'0003,Y)
	cmp	AL,#H'00FF
	bne	?L167
	ld	AL,#H'0012
	bra	(?L166)
?L167:
	ld	AL,@(H'0001,Y)
	bsr	_getLocalSeid
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	and	AH,#H'003F
	ld	AL,@H'fff8
	cmp	AL,@$XAP_AH
	beq	?L169
	ld	AL,#H'0031
	bra	(?L166)
?L169:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#-H'0003
	asl	#H'000E
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	and	AL,#H'0007
	bsr	$_blockSetCurrent
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'03FF
	st	AL,@(H'0005,X)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockRemove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockRemove
	ld	AL,#H'0000
?L166:
?LBE30:
?LBE_a2dpProcessCloseCommand:
	leavel	#6
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
$_a2dpProcessSuspendCommand:
	enterl	#6
?LBB_a2dpProcessSuspendCommand:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB31:
	ld	X,@(H'000C,X)
	add	X,#H'0002
	st	X,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	add	X,#-H'0003
	st	X,@(H'0002,Y)
	cmp	X,#-H'0001
	beq	?L182
?L180:
	ld	X,@(H'0001,Y)
?LBB32:
	ld	AH,@(0,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'003F
	st	AL,@(H'0003,Y)
	add	X,#H'0001
	st	X,@(H'0001,Y)
	ld	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	_getSepIndexBySeid
	cmp	AL,#H'00FF
	bne	?L177
	ld	AL,@(H'0003,Y)
	asl	#H'000A
	or	AL,#H'0012
	bra	(?L173)
?L177:
	ld	AL,@(0,Y)
	bsr	_getLocalSeid
	cmp	AL,@(H'0003,Y)
	beq	?L174
	ld	AL,@(H'0003,Y)
	asl	#H'000A
	or	AL,#H'0031
	bra	(?L173)
?L174:
	ld	X,@(H'0002,Y)
?LBE32:
	add	X,#-H'0001
	st	X,@(H'0002,Y)
	cmp	X,#-H'0001
	bne	?L180
?L182:
	ld	AL,#H'0000
?L173:
?LBE31:
?LBE_a2dpProcessSuspendCommand:
	leavel	#6
;.stabn	192,0,0,?LBB31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE31
$_a2dpProcessAbortCommand:
	enterl	#3
?LBB_a2dpProcessAbortCommand:
	ld	X,@$XAP_AL
?LBB33:
	ld	AL,@(H'000C,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L188
	ld	X,@(0,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0002
	and	AH,#H'003F
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	cmp	AH,@(0,X)
	bne	?L188
	ld	AL,#H'0001
	bra	(?L187)
?L188:
	ld	AL,#H'0000
?L187:
?LBE33:
?LBE_a2dpProcessAbortCommand:
	leavel	#3
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_a2dpProcessDiscoverResponse:
	enterl	#12
?LBB_a2dpProcessDiscoverResponse:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB34:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000C,X)
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	st	X,@(H'0005,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockRemove
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	asl	#H'0004
	st	AL,@H'fffb
	ld	AH,#H'0000
	st	AH,@(H'0006,Y)
	st	AH,@(H'0008,Y)
	st	AH,@(H'0007,Y)
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	X,#H'0000
	st	X,@H'fff8
	st	X,@H'fffa
	ld	AL,@(H'0005,Y)
	add	AL,#-H'0002
	cmp	AH,@$XAP_AL
	bcc	?L193
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L211
	cmp	AL,#H'0000
	beq	?L193
?L211:
	ld	AL,@(H'0005,Y)
	add	AL,#-H'0002
	st	AL,@(H'0009,Y)
?L199:
	ld	X,@(H'0004,Y)
	add	X,@H'fffa
	ld	AL,@(0,X)
	and	AL,#H'0002
	ld	X,#H'0001
	add	X,@H'fffa
	st	X,@H'fffa
	cmp	AL,#H'0000
	bne	?L194
	ld	X,@(H'0004,Y)
	add	X,@H'fffa
	ld	AL,@(0,X)
	and	AL,#H'00F0
	ld	AH,@H'fffb
	cmp	AH,@$XAP_AL
	bne	?L198
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
?L198:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	asl	#H'0001
	st	AH,@H'fff8
	st	AL,@H'fff9
?L194:
	ld	AL,#H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,@(H'0009,Y)
	bcc	?L193
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L199
	cmp	AL,#H'0000
	bne	?L199
?L193:
	tst	@(H'0006,Y)
	beq	?L200
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockAdd
	bsr	$_PanicNull
	st	AL,@H'fff8
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	cmp	AH,#H'0000
	bne	?L215
	cmp	AL,#H'0000
	beq	?L209
?L215:
?L205:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	and	AL,#H'0001
	and	AH,#H'0000
	cmp	AL,#H'0000
	beq	?L204
	ld	X,@(H'0004,Y)
	ld	AH,@(0,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	asl	#H'000A
	ld	X,@H'fff8
	ld	AH,@(0,X)
	and	AH,#H'03FF
	or	AL,@$XAP_AH
	st	AL,@H'fff9
	st	AL,@(0,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0003
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	asl	#H'0008
	ld	X,@H'fff9
	and	X,#-H'0301
	or	X,@$XAP_AL
	ld	AL,@$XAP_UXL
	and	AL,#-H'0100
	or	AL,#H'00A5
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AH,#H'0001
	add	AH,@H'fff8
	st	AH,@H'fff8
?L204:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	lsr	#H'0001
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	cmp	AH,#H'0000
	bne	?L205
	cmp	AL,#H'0000
	bne	?L205
?L209:
	ld	AL,#H'0001
	bra	(?L191)
?L200:
	ld	AL,#H'0000
?L191:
?LBE34:
?LBE_a2dpProcessDiscoverResponse:
	leavel	#12
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
$_a2dpProcessGetCapabilitiesResponse:
	enterl	#15
?LBB_a2dpProcessGetCapabilitiesResponse:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB35:
	ld	AL,@(H'000C,X)
	bsr	$_PanicNull
	ld	AH,@$XAP_AL
	add	AH,#H'0002
	st	AH,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	add	X,#-H'0002
	st	X,@(H'000A,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@$XAP_UXL
	bsr	_getSepIndexBySeid
	st	AL,@(H'000B,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'000C,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_a2dpValidateServiceCaps
	cmp	AL,#H'0000
	beq	?L221
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L219
	ld	X,@(H'0008,Y)
?LBB36:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	and	AH,#H'00FF
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
?L219:
?LBE36:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	X,@(H'000C,Y)
	ld	AL,@(H'0005,X)
	ld	AH,@(H'0007,Y)
	bsr	$_a2dpFindMatchingCodecSpecificInformation
	cmp	AL,#H'0000
	bne	?L220
?L221:
	ld	AL,#H'0000
	bra	(?L217)
?L220:
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	_updateConfiguredServiceCaps
	ld	AL,#H'0001
?L217:
?LBE35:
?LBE_a2dpProcessGetCapabilitiesResponse:
	leavel	#15
;.stabn	192,0,0,?LBB35
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;.stabn	224,0,0,?LBE35
$_a2dpSelectConfigurationParameters:
	enterl	#6
?LBB_a2dpSelectConfigurationParameters:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB37:
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@$XAP_UXL
	bsr	_getSepIndexBySeid
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetIndexed
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockSetCurrent
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000B
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L223
	ld	X,@(H'0001,Y)
?LBB38:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	bsr	$_PanicNull
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpSelectOptimalCodecSettings
	cmp	AL,#H'0000
	bne	?L224
	ld	AL,#H'0002
	bra	(?L222)
?L224:
	ld	AL,#H'0001
	bra	(?L222)
?L223:
?LBE38:
	ld	AL,#H'0000
?L222:
?LBE37:
?LBE_a2dpSelectConfigurationParameters:
	leavel	#6
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	224,0,0,?LBE37
$_a2dpProcessCodecConfigureResponse:
	enterl	#6
?LBB_a2dpProcessCodecConfigureResponse:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB39:
	bsr	_getSepIndexBySeid
	st	AL,@H'fff8
	cmp	AL,#H'00FF
	beq	?L229
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@(H'0003,Y)
	cmp	AL,@$XAP_AH
	beq	?L228
?L229:
	ld	AL,#H'0000
	bra	(?L227)
?L228:
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@H'fff8
	bsr	_updateConfiguredServiceCaps
	ld	AL,#H'0001
?L227:
?LBE39:
?LBE_a2dpProcessCodecConfigureResponse:
	leavel	#6
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_a2dpProcessReconfigureResponse:
	enterl	#5
?LBB_a2dpProcessReconfigureResponse:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB40:
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@$XAP_UXL
	bsr	_getSepIndexBySeid
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	_updateConfiguredServiceCaps
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0007,X)
	st	AL,@(H'0008,X)
?LBE40:
?LBE_a2dpProcessReconfigureResponse:
	leavel	#5
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
$_a2dpProcessGetAllCapabilitiesResponse:
	enterl	#2
?LBB_a2dpProcessGetAllCapabilitiesResponse:
	bsr	$_a2dpProcessGetCapabilitiesResponse
?LBE_a2dpProcessGetAllCapabilitiesResponse:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 330 used[1] = 76 used[3] = 1 total = 407
;# Function pattern *movqi3 used[0] = 444 total = 444
;# Function pattern *movqi8 used[0] = 8 total = 8
;# Function pattern *movhi used[2] = 8 used[3] = 3 total = 11
;# Function pattern *andhi3 used[0] = 1 total = 1
;# Function pattern *iorhi3 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 15 total = 15
;# Function pattern *addqi2 used[0] = 44 used[2] = 7 total = 51
;# Function pattern *andqi3 used[0] = 89 total = 89
;# Function pattern *iorqi3 used[0] = 26 total = 26
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 42 total = 42
;# Function pattern *ashlqi3 used[0] = 22 total = 22
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 43 total = 43
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 108 total = 108
;# Function pattern movstrqi+2 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 33 used[1] = 10 total = 43
;# Function pattern movstrqi+5 used[0] = 41 total = 41
;# Function pattern movstrqi+6 used[0] = 4 total = 4
	MODULE	a2dp_profile_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleUnexpected:
; leaf function with empty stack frame
?LBB_handleUnexpected:
?LBE_handleUnexpected:
	rts
_sendEncryptionChangeInd:
	enterl	#4
?LBB_sendEncryptionChangeInd:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,@$_a2dp
	st	AL,@(0,X)
	ld	AL,@$_a2dp
	st	AH,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	ld	AH,#H'5D13
	bsr	$_MessageSend
?LBE2:
?LBE_sendEncryptionChangeInd:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_a2dpProfileHandler:
	enterl	#3
?LBB_a2dpProfileHandler:
	cmp	AH,#(H'0001+H'002F)
	bcc	?L53
	ld	X,@$XAP_AH
	ld	X,@(?JTBASE76,X)
	brxl
	.SEG	CONST
?JTBASE76:
	.CODE
?L76:
	.SEG	CONST
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L11-?L76)
	dc	lwrd(?L12-?L76)
	dc	lwrd(?L13-?L76)
	dc	lwrd(?L14-?L76)
	dc	lwrd(?L15-?L76)
	dc	lwrd(?L16-?L76)
	dc	lwrd(?L17-?L76)
	dc	lwrd(?L18-?L76)
	dc	lwrd(?L19-?L76)
	dc	lwrd(?L20-?L76)
	dc	lwrd(?L21-?L76)
	dc	lwrd(?L22-?L76)
	dc	lwrd(?L24-?L76)
	dc	lwrd(?L24-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L31-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L38-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L45-?L76)
	dc	lwrd(?L52-?L76)
	dc	lwrd(?L52-?L76)
	dc	lwrd(?L52-?L76)
	dc	lwrd(?L52-?L76)
	dc	lwrd(?L52-?L76)
	dc	lwrd(?L52-?L76)
	dc	lwrd(?L52-?L76)
	.CODE
?L11:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleL2capConnectReq
	bra	(?L3)
?L12:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleSignallingConnectReq
	bra	(?L3)
?L13:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleSignallingConnectRes
	bra	(?L3)
?L14:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleSignallingDisconnectReq
	bra	(?L3)
?L15:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleCodecConfigureResponse
	bra	(?L3)
?L16:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamEstablish
	bra	(?L3)
?L17:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamOpenResponse
	bra	(?L3)
?L18:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamStart
	bra	(?L3)
?L19:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamStartResponse
	bra	(?L3)
?L20:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamSuspend
	bra	(?L3)
?L21:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamRelease
	bra	(?L3)
?L22:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpStreamReconfigure
	bra	(?L3)
?L24:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_a2dpStreamDelayReport
	bra	(?L3)
?L31:
	ld	AL,@$XAP_AH
	bsr	$_a2dpHandleL2capLinklossTimeout
	bra	(?L3)
?L38:
	ld	AL,@$XAP_AH
	bsr	$_a2dpHandleInternalClientRspTimeout
	bra	(?L3)
?L45:
	ld	AL,@$XAP_AH
	bsr	$_a2dpHandleInternalRemoteCmdTimeout
	bra	(?L3)
?L52:
	ld	AL,@$XAP_AH
	bsr	$_a2dpHandleInternalWatchdogTimeout
	bra	(?L3)
?L53:
	ld	AL,#-H'5001
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0040)
	bcc	?L66
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE75,X)
	brxl
	.SEG	CONST
?JTBASE75:
	.CODE
?L75:
	.SEG	CONST
	dc	lwrd(?L3-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L3-?L75)
	dc	lwrd(?L61-?L75)
	dc	lwrd(?L55-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L65-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L56-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L58-?L75)
	dc	lwrd(?L57-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L66-?L75)
	dc	lwrd(?L59-?L75)
	dc	lwrd(?L60-?L75)
	dc	lwrd(?L3-?L75)
	.CODE
?L55:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleSdpRegisterCfm
	bra	(?L3)
?L56:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleL2capRegisterCfm
	bra	(?L3)
?L57:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleL2capConnectInd
	bra	(?L3)
?L58:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleL2capConnectCfm
	bra	(?L3)
?L59:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_a2dpHandleL2capDisconnect
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_ConnectionL2capDisconnectResponse
	bra	(?L3)
?L60:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,X)
	bsr	$_a2dpHandleL2capDisconnect
	bra	(?L3)
?L61:
	ld	AL,@(H'0003,Y)
	bsr	_sendEncryptionChangeInd
	bra	(?L3)
?L65:
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpHandleSdpServiceSearchAttributeCfm
	bra	(?L3)
?L66:
	cmp	AH,#-H'7FDE
	beq	?L3
	cmp	AH,#(H'0001-H'7FDE)
	bcc	?L74
	cmp	AH,#-H'7FDF
	beq	?L68
	bra	(?L72)
?L74:
	cmp	AH,#-H'7FDA
	beq	?L3
	cmp	AH,#-H'7FD7
	beq	?L3
	bra	(?L72)
?L68:
	ld	X,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_StreamSinkFromSource
	bsr	$_a2dpFindDeviceFromSink
	bsr	$_a2dpHandleSignalPacket
	bra	(?L3)
?L72:
	ld	AL,@$XAP_AH
	bsr	_handleUnexpected
?L3:
?LBE_a2dpProfileHandler:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 16 used[1] = 18 total = 34
;# Function pattern *movqi3 used[0] = 23 total = 23
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern jump used[0] = 28 total = 28
;# Function pattern *call1 used[0] = 29 total = 29
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	a2dp_caps_parse
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_bitMaskOk:
	enterl	#2
?LBB_bitMaskOk:
	ld	AH,@$XAP_AL
	ld	X,#H'0000
	cmp	AL,#H'0000
	beq	?L2
	add	AL,#-H'0001
	and	AL,@$XAP_AH
	cmp	AL,#H'0000
	bne	?L2
	ld	X,#H'0001
?L2:
	ld	AL,@$XAP_UXL
?LBE_bitMaskOk:
	leavel	#2
$_a2dpFindStdEmbeddedCodecCaps:
	enterl	#2
?LBB_a2dpFindStdEmbeddedCodecCaps:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB2:
	ld	X,@(0,X)
	ld	AL,@(0,X)
	cmp	AL,#H'0007
	bne	?L4
	ld	AL,@(H'0003,X)
	cmp	AL,#H'00FF
	bne	?L5
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0007
	bne	?L4
	ld	AL,@(H'000D,X)
	cmp	AL,@$XAP_AH
	bne	?L4
	ld	AL,#H'000A
	add	AL,@$XAP_UXL
	ld	X,@H'fff8
	st	AL,@(0,X)
	bra	(?L9)
?L5:
	ld	AL,@(H'0003,X)
	cmp	AL,@$XAP_AH
	bne	?L4
?L9:
	ld	AL,#H'0001
	bra	(?L3)
?L4:
	ld	AL,#H'0000
?L3:
?LBE2:
?LBE_a2dpFindStdEmbeddedCodecCaps:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_a2dpFindNonStdEmbeddedCodecCaps:
	enterl	#4
?LBB_a2dpFindNonStdEmbeddedCodecCaps:
	st	AL,@(0,Y)
	ld	X,@(0,Y)
?LBB3:
	ld	X,@(0,X)
	st	X,@(H'0001,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0007
	bne	?L16
	ld	AL,@(H'0003,X)
	cmp	AL,#H'00FF
	bne	?L16
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0007
	bne	?L18
	ld	AL,@(H'000D,X)
	cmp	AL,#H'00FF
	bne	?L18
	ld	AL,@$XAP_UXL
	add	AL,#H'000E
	bsr	$_a2dpConvertUint8ValuesToUint32
	cmp	AH,@(H'0004,Y)
	bne	?L18
	cmp	AL,@(H'0005,Y)
	bne	?L18
	ld	AL,@(H'0001,Y)
	add	AL,#H'0012
	bsr	$_a2dpConvertUint8ValuesToUint16
	cmp	AL,@(H'0006,Y)
	bne	?L18
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	add	AL,#H'000A
	st	AL,@(0,X)
	bra	(?L21)
?L18:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	bsr	$_a2dpConvertUint8ValuesToUint32
	cmp	AH,@(H'0004,Y)
	bne	?L16
	cmp	AL,@(H'0005,Y)
	bne	?L16
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	bsr	$_a2dpConvertUint8ValuesToUint16
	cmp	AL,@(H'0006,Y)
	bne	?L16
?L21:
	ld	AL,#H'0001
	bra	(?L15)
?L16:
	ld	AL,#H'0000
?L15:
?LBE3:
?LBE_a2dpFindNonStdEmbeddedCodecCaps:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_areSBCCodecsCompatible:
	enterl	#4
?LBB_areSBCCodecsCompatible:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	cmp	AL,#H'0005
	bcz	?L49
	cmp	AH,#H'0005
	bcz	?L49
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	st	AH,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L49
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	and	AL,#H'00F0
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L34
	tst	@(H'0006,Y)
	beq	?L49
?L34:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	and	AL,@(0,X)
	and	AL,#H'000F
	cmp	AL,#H'0000
	beq	?L49
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	and	AL,#H'000F
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L36
	tst	@(H'0006,Y)
	beq	?L49
?L36:
	ld	X,@(0,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	st	AH,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	and	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L49
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00F0
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L38
	tst	@(H'0006,Y)
	beq	?L49
?L38:
	ld	X,@(0,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0002
	st	AH,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0002
	ld	AL,@H'fff8
	and	AL,@$XAP_AH
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L49
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'000C
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L40
	tst	@(H'0006,Y)
	beq	?L49
?L40:
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	and	AL,@(H'0001,X)
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L49
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'0003
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L42
	tst	@(H'0006,Y)
	beq	?L49
?L42:
	tst	@(H'0006,Y)
	beq	?L43
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	cmp	AL,@(H'0003,X)
	beq	?L52
	bcc	?L49
?L52:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(0,Y)
	cmp	AL,@(H'0003,X)
	bcz	?L46
	bra	(?L49)
?L43:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(0,Y)
	cmp	AL,@(H'0003,X)
	beq	?L54
	bcc	?L49
?L54:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(0,Y)
	cmp	AL,@(H'0002,X)
	bcc	?L46
?L49:
	ld	AL,#H'0000
	bra	(?L30)
?L46:
	ld	AL,#H'0001
?L30:
?LBE_areSBCCodecsCompatible:
	leavel	#4
_areMPEG12AudioCodecsCompatible:
	enterl	#4
?LBB_areMPEG12AudioCodecsCompatible:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
?LBB4:
	cmp	AL,#H'0005
	bcz	?L66
	cmp	AH,#H'0005
	bcz	?L66
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	lsr	#H'0005
	st	AH,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	lsr	#H'0005
	and	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L66
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	and	AL,#H'00E0
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L60
	tst	@(H'0006,Y)
	beq	?L66
?L60:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	and	AL,@(0,X)
	and	AL,#H'000F
	cmp	AL,#H'0000
	beq	?L66
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	and	AL,#H'000F
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L62
	tst	@(H'0006,Y)
	beq	?L66
?L62:
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	and	AL,@(H'0001,X)
	and	AL,#H'003F
	cmp	AL,#H'0000
	beq	?L66
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'003F
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L64
	tst	@(H'0006,Y)
	beq	?L66
?L64:
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'007F
	asl	#H'0008
	st	AL,@H'fff8
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	or	AL,@H'fff8
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'007F
	asl	#H'0008
	ld	AH,@(H'0003,X)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@H'fff8
	and	X,@$XAP_AL
	cmp	X,#H'0000
	bne	?L65
?L66:
	ld	AL,#H'0000
	bra	(?L56)
?L65:
	ld	AL,#H'0001
?L56:
?LBE4:
?LBE_areMPEG12AudioCodecsCompatible:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_areMPEG24AACCodecsCompatible:
	enterl	#4
?LBB_areMPEG24AACCodecsCompatible:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
?LBB5:
	cmp	AL,#H'0007
	bcz	?L78
	cmp	AH,#H'0007
	bcz	?L78
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	and	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L78
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L73
	tst	@(H'0006,Y)
	beq	?L78
?L73:
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00F0
	asl	#H'0004
	or	AL,@(H'0001,X)
	st	AL,@H'fff8
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'00F0
	asl	#H'0004
	or	AL,@(H'0001,X)
	ld	X,@H'fff8
	and	X,@$XAP_AL
	cmp	X,#H'0000
	beq	?L78
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L75
	tst	@(H'0006,Y)
	beq	?L78
?L75:
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	and	AL,@(H'0002,X)
	and	AL,#H'000C
	cmp	AL,#H'0000
	beq	?L78
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'000C
	bsr	_bitMaskOk
	cmp	AL,#H'0000
	bne	?L77
	tst	@(H'0006,Y)
	bne	?L77
?L78:
	ld	AL,#H'0000
	bra	(?L69)
?L77:
	ld	AL,#H'0001
?L69:
?LBE5:
?LBE_areMPEG24AACCodecsCompatible:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_areCsrFastStreamCodecsCompatible:
	enterl	#2
?LBB_areCsrFastStreamCodecsCompatible:
	st	AL,@H'fffa
	st	AH,@H'fff8
	ld	AL,@(H'0002,Y)
?LBB6:
	ld	AH,#H'0000
	st	AH,@H'fff9
	cmp	AL,#H'0007
	bcz	?L89
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0007
	bcz	?L89
	ld	X,@H'fffa
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	and	AL,@(H'0006,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L84
	ld	X,@H'fffa
	ld	AL,@(H'0007,X)
	ld	X,@H'fff8
	and	AL,@(H'0007,X)
	and	AL,#H'000F
	cmp	AL,#H'0000
	beq	?L89
	ld	AH,#H'0001
	st	AH,@H'fff9
?L84:
	ld	X,@H'fffa
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	and	AL,@(H'0006,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L87
	ld	X,@H'fffa
	ld	AL,@(H'0007,X)
	ld	X,@H'fff8
	and	AL,@(H'0007,X)
	and	AL,#H'00F0
	cmp	AL,#H'0000
	beq	?L89
	bra	(?L91)
?L87:
	tst	@H'fff9
	beq	?L89
?L91:
	ld	AL,#H'0001
	bra	(?L81)
?L89:
	ld	AL,#H'0000
?L81:
?LBE6:
?LBE_areCsrFastStreamCodecsCompatible:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_areAptxCodecsCompatible:
	enterl	#2
?LBB_areAptxCodecsCompatible:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
?LBB7:
	cmp	AL,#H'0006
	bcz	?L105
	cmp	AH,#H'0006
	bcz	?L105
	ld	X,@H'fff9
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	and	AL,@(H'0006,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L105
	ld	X,@H'fff9
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	and	AL,@(H'0006,X)
	and	AL,#H'00F0
	cmp	AL,#H'0000
	bne	?L104
?L105:
	ld	AL,#H'0000
	bra	(?L94)
?L104:
	ld	AL,#H'0001
?L94:
?LBE7:
?LBE_areAptxCodecsCompatible:
	leavel	#2
_areAptxAclSprintCodecsCompatible:
	enterl	#2
?LBB_areAptxAclSprintCodecsCompatible:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
?LBB8:
	cmp	AL,#H'0006
	bcz	?L119
	cmp	AH,#H'0006
	bcz	?L119
	ld	X,@H'fff9
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	and	AL,@(H'0006,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L119
	ld	X,@H'fff9
	ld	AL,@(H'0006,X)
	ld	X,@H'fff8
	and	AL,@(H'0006,X)
	and	AL,#H'0030
	cmp	AL,#H'0000
	bne	?L118
?L119:
	ld	AL,#H'0000
	bra	(?L108)
?L118:
	ld	AL,#H'0001
?L108:
?LBE8:
?LBE_areAptxAclSprintCodecsCompatible:
	leavel	#2
_areVendorCodecsCompatible:
	enterl	#8
?LBB_areVendorCodecsCompatible:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0008,Y)
?LBB9:
	cmp	AH,#H'0005
	bcz	?L126
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0005
	bcz	?L126
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_a2dpConvertUint8ValuesToUint32
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0005,X)
	st	AH,@H'fffa
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	asl	#H'0008
	ld	AH,@$XAP_AL
	or	AH,@(H'0005,X)
	st	AH,@H'fffb
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,@H'fff8
	bne	?L126
	cmp	AL,@H'fff9
	bne	?L126
	ld	AL,@H'fffa
	cmp	AL,@H'fffb
	beq	?L125
?L126:
	ld	AL,#H'0000
	bra	(?L122)
?L125:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0A00
	bne	?L145
	cmp	AL,#H'0000
	beq	?L128
?L145:
	cmp	AH,#H'4F00
	bne	?L146
	cmp	AL,#H'0000
	beq	?L134
?L146:
	bra	(?L127)
?L128:
	ld	AL,@H'fffb
	cmp	AL,#H'0100
	beq	?L130
	cmp	AL,#H'0200
	beq	?L131
	bra	(?L127)
?L130:
	ld	X,@(H'0008,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_areCsrFastStreamCodecsCompatible
	bra	(?L122)
?L131:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_areAptxAclSprintCodecsCompatible
	bra	(?L122)
?L134:
	ld	AH,@H'fffb
	cmp	AH,#H'0100
	bne	?L127
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_areAptxCodecsCompatible
	bra	(?L122)
?L127:
	ld	AL,#H'0001
?L122:
?LBE9:
?LBE_areVendorCodecsCompatible:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_a2dpConvertUint8ValuesToUint32:
	enterl	#2
?LBB_a2dpConvertUint8ValuesToUint32:
	ld	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@(0,X)
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0001,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	asl	#H'0008
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	or	AL,@H'fff9
	or	AH,@H'fff8
?LBE_a2dpConvertUint8ValuesToUint32:
	leavel	#2
$_a2dpConvertUint8ValuesToUint16:
	enterl	#2
?LBB_a2dpConvertUint8ValuesToUint16:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	asl	#H'0008
	or	AL,@(H'0001,X)
?LBE_a2dpConvertUint8ValuesToUint16:
	leavel	#2
$_a2dpFindMatchingCodecSpecificInformation:
	enterl	#8
?LBB_a2dpFindMatchingCodecSpecificInformation:
?LBB10:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,#H'0000
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L155
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	X,@(H'0002,X)
	st	X,@H'fff8
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'0002,X)
	bne	?L155
	ld	X,@(H'0005,Y)
	ld	X,@(H'0003,X)
	st	X,@(H'0005,Y)
	ld	AH,@$XAP_UXL
	ld	X,@$XAP_AL
	cmp	AH,@(H'0003,X)
	bne	?L155
	tst	@H'fff8
	bne	?L156
	cmp	AH,#H'0001
	beq	?L160
	cmp	AH,#H'0001
	bcs	?L158
	cmp	AH,#H'0002
	beq	?L162
	cmp	AH,#H'00FF
	beq	?L164
	bra	(?L156)
?L158:
	ld	X,@(H'0003,Y)
	ld	AL,#H'0004
	add	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	st	AH,@(-1,Y)
	add	AH,#H'0004
	ld	X,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(-1,Y)
	ld	X,@(H'0001,X)
	st	X,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0002,Y)
	bsr	_areSBCCodecsCompatible
	bra	(?L169)
?L160:
	ld	X,@(H'0003,Y)
	ld	AL,#H'0004
	add	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	st	AH,@(-1,Y)
	add	AH,#H'0004
	ld	X,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(-1,Y)
	ld	X,@(H'0001,X)
	st	X,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0002,Y)
	bsr	_areMPEG12AudioCodecsCompatible
	bra	(?L169)
?L162:
	ld	X,@(H'0003,Y)
	ld	AL,#H'0004
	add	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	st	AH,@(-1,Y)
	add	AH,#H'0004
	ld	X,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(-1,Y)
	ld	X,@(H'0001,X)
	st	X,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0002,Y)
	bsr	_areMPEG24AACCodecsCompatible
	bra	(?L169)
?L164:
	ld	X,@(H'0003,Y)
	ld	AL,#H'0004
	add	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	st	AH,@(-1,Y)
	add	AH,#H'0004
	ld	X,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,@(-1,Y)
	ld	X,@(H'0001,X)
	st	X,@(H'0001,Y)
	bsr	_areVendorCodecsCompatible
?L169:
	cmp	AL,#H'0000
	beq	?L155
?L156:
	ld	AL,@(H'0004,Y)
	bra	(?L152)
?L155:
	ld	AL,#H'0000
?L152:
?LBE10:
?LBE_a2dpFindMatchingCodecSpecificInformation:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_a2dpValidateServiceCaps:
	enterl	#4
?LBB_a2dpValidateServiceCaps:
	st	AL,@H'fff8
	ld	AL,@(H'0006,Y)
	st	AL,@H'fffa
?LBB11:
	ld	X,#H'0000
	st	X,@H'fffb
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L177:
?LBB12:
	cmp	AH,#H'0001
	bcz	?L223
	ld	X,@H'fff8
	ld	X,@(0,X)
	st	X,@(H'0001,Y)
	ld	AL,#H'0001
	add	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	add	AH,#-H'0002
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	X,@H'fff9
	cmp	X,@$XAP_AH
	beq	?L225
	bcc	?L223
?L225:
	cmp	AL,#(H'0001+H'0008)
	bcc	?L204
	ld	X,@(H'0001,Y)
	ld	X,@(?JTBASE206,X)
	brxl
	.SEG	CONST
?JTBASE206:
	.CODE
?L206:
	.SEG	CONST
	dc	lwrd(?L204-?L206)
	dc	lwrd(?L183-?L206)
	dc	lwrd(?L202-?L206)
	dc	lwrd(?L187-?L206)
	dc	lwrd(?L193-?L206)
	dc	lwrd(?L195-?L206)
	dc	lwrd(?L197-?L206)
	dc	lwrd(?L199-?L206)
	dc	lwrd(?L202-?L206)
	.CODE
?L183:
	ld	AL,#H'0001
	st	AL,@H'fffb
	tst	@H'fff9
	beq	?L182
	ld	AL,#H'0023
	bra	(?L220)
?L187:
	ld	AL,@H'fff9
	cmp	AL,#H'0003
	bne	?L216
	cmp	AH,#H'0002
	bcz	?L216
	ld	X,@H'fff8
	ld	AL,@(0,X)
	cmp	AL,#H'0001
	bne	?L215
	ld	AL,@(H'0001,X)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0017)
	bcc	?L216
	ld	AL,@(H'0002,X)
	add	AL,#-H'0001
	cmp	AL,#H'0017
	bcz	?L182
	bra	(?L216)
?L193:
	ld	AL,@H'fff9
	cmp	AL,#(H'0001+H'0001)
	bcc	?L182
	ld	AL,#H'0027
	bra	(?L220)
?L195:
	ld	AL,@H'fff9
	cmp	AL,#H'0001
	beq	?L182
	ld	AL,#H'0026
	bra	(?L220)
?L197:
	ld	AL,@H'fff9
	cmp	AL,#(H'0001+H'0001)
	bcc	?L182
	ld	AL,#H'0028
	bra	(?L220)
?L199:
	ld	AL,@H'fff9
	cmp	AL,#H'0001
	bcz	?L223
	tst	@(0,Y)
	bne	?L223
	ld	AL,#H'0001
	st	AL,@(0,Y)
	bra	(?L182)
?L202:
	tst	@H'fff9
	beq	?L182
	bra	(?L223)
?L204:
	tst	@H'fffa
	beq	?L219
?L182:
	ld	AL,@H'fff9
	add	AL,@H'fff8
	st	AL,@H'fff8
	sub	AH,@H'fff9
?LBE12:
	cmp	AH,#H'0000
	bne	?L177
	tst	@(H'0005,Y)
	bne	?L208
	tst	@H'fffb
	bne	?L211
	tst	@(H'0004,Y)
	beq	?L210
?L211:
	tst	@H'fffb
	beq	?L209
	tst	@(H'0004,Y)
	beq	?L209
?L210:
	ld	AL,#H'0001
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,#H'001A
	bra	(?L220)
?L209:
	tst	@(0,Y)
	bne	?L208
	ld	AL,#H'0007
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?L223:
	ld	AL,#H'0018
	bra	(?L220)
?L215:
?LBB13:
	ld	AL,#H'0022
	bra	(?L220)
?L216:
	ld	AL,#H'0025
	bra	(?L220)
?L219:
	ld	AL,#H'0017
?L220:
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	bra	(?L176)
?L208:
?LBE13:
	ld	AL,#H'0001
?L176:
?LBE11:
?LBE_a2dpValidateServiceCaps:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE11
$_a2dpFindCodecSpecificInformation:
	enterl	#2
?LBB_a2dpFindCodecSpecificInformation:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AL
?LBB14:
	tst	@(0,X)
	beq	?L246
	cmp	AH,#H'0000
	beq	?L234
	ld	X,@$XAP_AH
	tst	@(0,X)
	beq	?L246
?L239:
	ld	X,@H'fff8
?LBB15:
	ld	AH,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	cmp	AL,#H'0007
	beq	?L248
	ld	X,@H'fff8
	ld	AL,@(0,X)
	add	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@(0,X)
	ld	X,@H'fff9
	ld	AL,@(0,X)
	sub	AL,@$XAP_AH
	add	AL,#-H'0002
	st	AL,@(0,X)
?LBE15:
	cmp	AL,#H'0000
	bne	?L239
?L246:
	ld	AL,#H'0000
	bra	(?L232)
?L234:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'0007
	beq	?L248
?L244:
	ld	X,@H'fff8
	ld	X,@(0,X)
	ld	AL,@(H'0001,X)
	add	AL,@$XAP_UXL
	st	AL,@(-1,Y)
	add	AL,#H'0002
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(-1,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0007
	bne	?L244
?L248:
	ld	AL,#H'0001
?L232:
?LBE14:
?LBE_a2dpFindCodecSpecificInformation:
	leavel	#2
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_a2dpAreServicesCategoriesCompatible:
	enterl	#2
?LBB_a2dpAreServicesCategoriesCompatible:
	st	AL,@(-1,Y)
	st	AH,@H'fffb
	ld	AL,@(H'0002,Y)
	st	AL,@(-2,Y)
?LBB16:
	ld	X,#H'0000
	st	X,@H'fff9
	cmp	X,@(H'0003,Y)
	bcc	?L268
?L266:
?LBB17:
	ld	X,@H'fff9
	add	X,@(-2,Y)
	ld	X,@(0,X)
	st	X,@H'fffa
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AH,#H'0000
	cmp	AL,@H'fffb
	bcc	?L259
?L264:
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	ld	AL,@(0,X)
	cmp	AL,@H'fffa
	bne	?L260
	ld	X,#H'0001
	st	X,@H'fff8
?L260:
	ld	X,@$XAP_AH
	add	X,@(-1,Y)
	add	AH,@(H'0001,X)
	add	AH,#H'0002
	tst	@H'fff8
	bne	?L259
	cmp	AH,@H'fffb
	bcs	?L264
?L259:
	tst	@H'fff8
	bne	?L256
	ld	X,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,@H'fffa
	st	AL,@(0,X)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bra	(?L253)
?L256:
?LBE17:
	ld	X,@H'fff9
	add	X,@(-2,Y)
	ld	X,@(H'0001,X)
	add	X,@H'fff9
	ld	AL,#H'0002
	add	AL,@$XAP_UXL
	st	AL,@H'fff9
	cmp	AL,@(H'0003,Y)
	bcs	?L266
?L268:
	ld	AL,#H'0001
?L253:
?LBE16:
?LBE_a2dpAreServicesCategoriesCompatible:
	leavel	#2
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
$_a2dpGetContentProtection:
	enterl	#2
?LBB_a2dpGetContentProtection:
?LBB18:
	st	AH,@H'fff8
	st	AL,@H'fff9
	cmp	AH,#H'0000
	beq	?L286
?L283:
	ld	X,@H'fff9
?LBB19:
	ld	AL,@(0,X)
	ld	AH,@(H'0001,X)
	cmp	AL,#H'0004
	bne	?L279
	cmp	AH,#H'0001
	bcz	?L279
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0002
	bne	?L279
	tst	@(H'0003,X)
	bne	?L279
	tst	@(H'0002,Y)
	beq	?L282
	ld	X,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,X)
	ld	AL,@H'ffff
?L282:
	ld	AL,#H'0001
	bra	(?L275)
?L279:
	ld	AL,@$XAP_AH
	add	AL,@H'fff9
	ld	X,#H'0002
	add	X,@$XAP_AL
	st	X,@H'fff9
	nadd	AH,@H'fff8
	ld	AL,#-H'0002
	add	AL,@$XAP_AH
	st	AL,@H'fff8
?LBE19:
	cmp	AL,#H'0000
	bne	?L283
?L286:
	tst	@(H'0002,Y)
	beq	?L284
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?L284:
	ld	AL,#H'0000
?L275:
?LBE18:
?LBE_a2dpGetContentProtection:
	leavel	#2
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
$_a2dpIsServiceSupported:
	enterl	#2
?LBB_a2dpIsServiceSupported:
	ld	X,@$XAP_AH
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L297
?L295:
	cmp	AL,@(0,X)
	bne	?L294
	ld	AL,#H'0001
	bra	(?L290)
?L294:
	sub	AH,@(H'0001,X)
	add	AH,#-H'0002
	add	X,@(H'0001,X)
	add	X,#H'0002
	cmp	AH,#H'0000
	bne	?L295
?L297:
	ld	AL,#H'0000
?L290:
?LBE_a2dpIsServiceSupported:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 104 used[1] = 46 used[3] = 2 total = 152
;# Function pattern *movqi3 used[0] = 213 total = 213
;# Function pattern *movqi8 used[0] = 17 total = 17
;# Function pattern *movhi used[2] = 2 used[3] = 5 total = 7
;# Function pattern *iorhi3 used[0] = 3 total = 3
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 22 used[2] = 18 total = 40
;# Function pattern *andqi3 used[0] = 50 total = 50
;# Function pattern *iorqi3 used[0] = 7 total = 7
;# Function pattern *subqi3 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 8 total = 8
;# Function pattern *ashlqi3 used[0] = 7 total = 7
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 39 total = 39
;# Function pattern *call_value1 used[0] = 26 total = 26
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern zero_extendqihi2+1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 5 total = 5
;# Function pattern movstrqi+3 used[0] = 43 used[1] = 31 total = 74
;# Function pattern movstrqi+4 used[0] = 1 used[1] = 4 used[2] = 2 total = 7
;# Function pattern movstrqi+5 used[0] = 56 total = 56
;# Function pattern movstrqi+7 used[0] = 2 used[1] = 3 total = 5
	MODULE	a2dp_codec_aac
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_selectOptimalAacCaps:
	enterl	#2
?LBB_selectOptimalAacCaps:
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0040
	bra	(?L22)
?L2:
	ld	AL,#H'0080
?L22:
	st	AL,@(H'0004,X)
	ld	AH,@(H'0006,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@$XAP_AH
	and	AL,#H'00F4
	bra	(?L23)
?L4:
	ld	AL,@(H'0006,X)
	and	AL,#H'00F8
?L23:
	st	AL,@(H'0006,X)
	ld	AH,@(H'0006,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,@$XAP_AH
	and	AL,#H'008F
	st	AL,@(H'0006,X)
	ld	AL,#H'0000
	bra	(?L24)
?L6:
	ld	AL,@(H'0006,X)
	and	AL,#H'000F
	st	AL,@(H'0006,X)
	ld	AL,@(H'0005,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L8
	ld	AL,#H'0001
	bra	(?L24)
?L8:
	ld	AL,@(H'0005,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,#H'0002
	bra	(?L24)
?L10:
	ld	AL,@(H'0005,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,#H'0004
	bra	(?L24)
?L12:
	ld	AL,@(H'0005,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,#H'0008
	bra	(?L24)
?L14:
	ld	AL,@(H'0005,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L16
	ld	AL,#H'0010
	bra	(?L24)
?L16:
	ld	AL,@(H'0005,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,#H'0020
	bra	(?L24)
?L18:
	ld	AL,@(H'0005,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L20
	ld	AL,#H'0040
	bra	(?L24)
?L20:
	ld	AL,#H'0080
?L24:
	st	AL,@(H'0005,X)
?LBE_selectOptimalAacCaps:
	leavel	#2
$_selectOptimalAacCapsSink:
	enterl	#2
?LBB_selectOptimalAacCapsSink:
	cmp	AL,#H'0000
	beq	?L25
	cmp	AH,#H'0000
	beq	?L25
	ld	AL,@$XAP_AH
	bsr	_selectOptimalAacCaps
?L25:
?LBE_selectOptimalAacCapsSink:
	leavel	#2
$_selectOptimalAacCapsSource:
	enterl	#2
?LBB_selectOptimalAacCapsSource:
	cmp	AL,#H'0000
	beq	?L28
	cmp	AH,#H'0000
	beq	?L28
	ld	AL,@$XAP_AH
	bsr	_selectOptimalAacCaps
?L28:
?LBE_selectOptimalAacCapsSource:
	leavel	#2
$_getAacConfigSettings:
	enterl	#2
?LBB_getAacConfigSettings:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,#-H'4480
	bra	(?L51)
?L32:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,#-H'53BC
	bra	(?L51)
?L34:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L36
	ld	AL,#H'7D00
	bra	(?L51)
?L36:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L38
	ld	AL,#H'5DC0
	bra	(?L51)
?L38:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L40
	ld	AL,#H'5622
	bra	(?L51)
?L40:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L42
	ld	AL,#H'3E80
	bra	(?L51)
?L42:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L44
	ld	AL,#H'2EE0
	bra	(?L51)
?L44:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L46
	ld	AL,#H'2B11
	bra	(?L51)
?L46:
	ld	AL,#H'1F40
?L51:
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L48
	ld	AL,#H'0000
	bra	(?L52)
?L48:
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L31
	ld	AL,#H'0002
?L52:
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
?L31:
?LBE_getAacConfigSettings:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 9 total = 28
;# Function pattern *movqi3 used[0] = 45 total = 45
;# Function pattern *andqi3 used[0] = 24 total = 24
;# Function pattern jump used[0] = 19 total = 19
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 24 total = 24
	MODULE	a2dp_codec_csr_aptx
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_selectOptimalCsrAptxCapsSink:
	enterl	#2
?LBB_selectOptimalCsrAptxCapsSink:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	ld	X,@H'fff8
	and	AL,@(H'000A,X)
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	st	AL,@(H'000A,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@H'fff8
	and	AL,#H'002F
	bra	(?L4)
?L2:
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	and	AL,#H'001F
?L4:
	st	AL,@(H'000A,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	and	AL,#H'00F2
	st	AL,@(H'000A,X)
?LBE_selectOptimalCsrAptxCapsSink:
	leavel	#2
$_selectOptimalCsrAptxCapsSource:
	enterl	#2
?LBB_selectOptimalCsrAptxCapsSource:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	ld	X,@H'fff8
	and	AL,@(H'000A,X)
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	st	AL,@(H'000A,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,@H'fff8
	and	AL,#H'001F
	bra	(?L8)
?L6:
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	and	AL,#H'002F
?L8:
	st	AL,@(H'000A,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	and	AL,#H'00F2
	st	AL,@(H'000A,X)
?LBE_selectOptimalCsrAptxCapsSource:
	leavel	#2
$_getCsrAptxConfigSettings:
	enterl	#2
?LBB_getCsrAptxConfigSettings:
	st	AL,@H'fff8
	ld	AL,#H'029C
	ld	X,@$XAP_AH
	st	AL,@(H'0007,X)
	tst	@H'fff8
	bne	?L10
	ld	AL,#-H'53BC
	st	AL,@(H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,X)
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bra	(?L14)
?L10:
	ld	X,@H'fff8
	ld	AL,@(H'000A,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,#-H'4480
	bra	(?L13)
?L11:
	ld	AL,#-H'53BC
?L13:
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0002
	ld	X,@$XAP_AH
?L14:
	st	AL,@(H'0002,X)
?LBE_getCsrAptxConfigSettings:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 27 used[1] = 5 used[3] = 1 total = 33
;# Function pattern *movqi3 used[0] = 14 total = 14
;# Function pattern *andqi3 used[0] = 11 total = 11
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 1 total = 4
	MODULE	a2dp_codec_csr_aptx_acl_sprint
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_selectOptimalCsrAptxAclSprintCapsSink:
	enterl	#2
?LBB_selectOptimalCsrAptxAclSprintCapsSink:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	ld	AH,@$XAP_AL
	ld	X,@H'fff8
	and	AH,@(H'000A,X)
	ld	X,@H'fff9
	st	AH,@(H'000A,X)
	ld	AL,@(H'000B,X)
	ld	X,@H'fff8
	and	AL,@(H'000B,X)
	ld	X,@H'fff9
	st	AL,@(H'000B,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@$XAP_AH
	and	AL,#H'002F
	bra	(?L4)
?L2:
	ld	X,@H'fff9
	ld	AL,@(H'000A,X)
	and	AL,#H'001F
?L4:
	st	AL,@(H'000A,X)
	ld	X,@H'fff9
	ld	AL,@(H'000A,X)
	and	AL,#H'00F2
	st	AL,@(H'000A,X)
	ld	AL,@(H'000B,X)
	and	AL,#H'0003
	st	AL,@(H'000B,X)
?LBE_selectOptimalCsrAptxAclSprintCapsSink:
	leavel	#2
$_selectOptimalCsrAptxAclSprintCapsSource:
	enterl	#2
?LBB_selectOptimalCsrAptxAclSprintCapsSource:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	ld	AH,@$XAP_AL
	ld	X,@H'fff8
	and	AH,@(H'000A,X)
	ld	X,@H'fff9
	st	AH,@(H'000A,X)
	ld	AL,@(H'000B,X)
	ld	X,@H'fff8
	and	AL,@(H'000B,X)
	ld	X,@H'fff9
	st	AL,@(H'000B,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	bra	(?L9)
?L6:
	ld	X,@H'fff9
	ld	AL,@(H'000A,X)
	and	AL,#H'002F
?L9:
	st	AL,@(H'000A,X)
	ld	X,@H'fff9
	ld	AL,@(H'000A,X)
	and	AL,#H'00F2
	st	AL,@(H'000A,X)
	ld	AL,@(H'000B,X)
	ld	AH,@$XAP_AL
	and	AH,#H'0003
	st	AH,@(H'000B,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'00B4
	st	AL,@(H'000D,X)
	ld	AL,#H'0000
	st	AL,@(H'000E,X)
	ld	AL,#H'007C
	st	AL,@(H'000F,X)
	ld	AH,#H'0001
	st	AH,@(H'0010,X)
	ld	AL,#H'0032
	st	AL,@(H'0011,X)
	st	AH,@(H'0012,X)
	ld	AL,#H'00B4
	st	AL,@(H'0013,X)
	ld	AL,#H'0000
	st	AL,@(H'0014,X)
?L5:
?LBE_selectOptimalCsrAptxAclSprintCapsSource:
	leavel	#2
$_getCsrAptxAclSprintConfigSettings:
	enterl	#2
?LBB_getCsrAptxAclSprintConfigSettings:
	st	AL,@H'fff8
	st	AH,@H'fff9
	cmp	AL,#H'0000
	bne	?L11
	ld	AL,#-H'53BC
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,X)
	ld	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(H'0002,X)
	ld	AL,#H'0121
	st	AL,@(H'0007,X)
	bra	(?L10)
?L11:
	ld	X,@$XAP_AL
	ld	AL,@(H'000A,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,#-H'4480
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0139
	bra	(?L18)
?L12:
	ld	AL,#-H'53BC
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0121
?L18:
	st	AL,@(H'0007,X)
	ld	AL,#H'0002
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
	ld	X,@H'fff8
	ld	AL,@(H'000B,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,#H'3E80
	ld	X,@H'fff9
	st	AL,@(H'0009,X)
	ld	AL,#H'0000
	bra	(?L19)
?L14:
	ld	AL,#H'0000
	ld	X,@H'fff9
	st	AL,@(H'0009,X)
?L19:
	st	AL,@(H'0008,X)
	ld	X,@H'fff8
	ld	AL,@(H'000B,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L16
	ld	AL,@(H'000E,X)
	asl	#H'0008
	or	AL,@(H'000D,X)
	ld	X,@H'fff9
	st	AL,@(H'000A,X)
	ld	X,@H'fff8
	ld	AL,@(H'0010,X)
	asl	#H'0008
	or	AL,@(H'000F,X)
	ld	X,@H'fff9
	st	AL,@(H'000B,X)
	ld	X,@H'fff8
	ld	AL,@(H'0011,X)
	ld	X,@H'fff9
	st	AL,@(H'000C,X)
	ld	X,@H'fff8
	ld	AL,@(H'0012,X)
	ld	X,@H'fff9
	st	AL,@(H'000D,X)
	ld	X,@H'fff8
	ld	AL,@(H'0014,X)
	asl	#H'0008
	or	AL,@(H'0013,X)
	ld	X,@H'fff9
	st	AL,@(H'000E,X)
	bra	(?L10)
?L16:
	ld	AH,#H'00B4
	ld	X,@H'fff9
	st	AH,@(H'000A,X)
	ld	AL,#H'0168
	st	AL,@(H'000B,X)
	ld	AL,#H'0032
	st	AL,@(H'000C,X)
	ld	AL,#H'0001
	st	AL,@(H'000D,X)
	st	AH,@(H'000E,X)
?L10:
?LBE_getCsrAptxAclSprintConfigSettings:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 59 used[1] = 27 used[3] = 1 total = 87
;# Function pattern *movqi3 used[0] = 42 total = 42
;# Function pattern *andqi3 used[0] = 18 total = 18
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern movstrqi+3 used[0] = 7 total = 7
	MODULE	a2dp_codec_csr_faststream
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_selectOptimalCsrFastStreamCapsSink:
	enterl	#2
?LBB_selectOptimalCsrFastStreamCapsSink:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	ld	X,@H'fff8
	and	AL,@(H'000A,X)
	and	AL,#H'0003
	ld	X,@$XAP_AH
	st	AL,@(H'000A,X)
	ld	AL,@(H'000B,X)
	ld	X,@H'fff8
	and	AL,@(H'000B,X)
	and	AL,#H'0023
	ld	X,@$XAP_AH
	st	AL,@(H'000B,X)
?LBE_selectOptimalCsrFastStreamCapsSink:
	leavel	#2
$_selectOptimalCsrFastStreamCapsSource:
	enterl	#2
?LBB_selectOptimalCsrFastStreamCapsSource:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'000A,X)
	ld	X,@H'fff8
	and	AL,@(H'000A,X)
	and	AL,#H'0003
	ld	X,@$XAP_AH
	st	AL,@(H'000A,X)
	ld	AL,@(H'000B,X)
	ld	X,@H'fff8
	and	AL,@(H'000B,X)
	and	AL,#H'0023
	ld	X,@$XAP_AH
	st	AL,@(H'000B,X)
?LBE_selectOptimalCsrFastStreamCapsSource:
	leavel	#2
$_getCsrFastStreamConfigSettings:
	enterl	#2
?LBB_getCsrFastStreamConfigSettings:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'000A,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L4
	ld	AL,@(H'000B,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#-H'4480
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	cmp	AH,#H'0000
	bne	?L20
	ld	AL,#H'1DFD
	bra	(?L30)
?L5:
	ld	X,@H'fff8
	ld	AL,@(H'000B,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L20
	ld	AL,#-H'53BC
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	cmp	AH,#H'0000
	bne	?L20
	ld	AL,#H'1DBD
?L30:
	st	AL,@(H'0006,X)
	bra	(?L20)
?L4:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
?L20:
	ld	X,@H'fff8
	ld	AL,@(H'000A,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L21
	ld	AL,@(H'000B,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L29
	ld	AL,#H'3E80
	ld	X,@(H'0002,Y)
	st	AL,@(H'0009,X)
	ld	AL,#H'0000
	st	AL,@(H'0008,X)
	cmp	AH,#H'0001
	bne	?L29
	ld	AL,#H'2031
	st	AL,@(H'0006,X)
	bra	(?L29)
?L21:
	ld	AL,#H'0000
	ld	X,@(H'0002,Y)
	st	AL,@(H'0009,X)
	st	AL,@(H'0008,X)
?L29:
	ld	AL,#H'0003
	ld	X,@(H'0002,Y)
	st	AL,@(H'0002,X)
?LBE_getCsrFastStreamConfigSettings:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 27 used[1] = 6 total = 33
;# Function pattern *movqi3 used[0] = 24 total = 24
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 7 total = 7
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	a2dp_codec_csr_tws
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_selectOptimalCsrTwsSbcCapsSink:
	enterl	#4
?LBB_selectOptimalCsrTwsSbcCapsSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0000
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalSbcCapsSink
?L1:
?LBE_selectOptimalCsrTwsSbcCapsSink:
	leavel	#4
$_selectOptimalCsrTwsSbcCapsSource:
	enterl	#4
?LBB_selectOptimalCsrTwsSbcCapsSource:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0000
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalSbcCapsSource
?L3:
?LBE_selectOptimalCsrTwsSbcCapsSource:
	leavel	#4
$_selectOptimalCsrTwsMp3CapsSink:
	enterl	#4
?LBB_selectOptimalCsrTwsMp3CapsSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0001
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalMp3CapsSink
?L5:
?LBE_selectOptimalCsrTwsMp3CapsSink:
	leavel	#4
$_selectOptimalCsrTwsMp3CapsSource:
	enterl	#4
?LBB_selectOptimalCsrTwsMp3CapsSource:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0001
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalMp3CapsSource
?L7:
?LBE_selectOptimalCsrTwsMp3CapsSource:
	leavel	#4
$_selectOptimalCsrTwsAacCapsSink:
	enterl	#4
?LBB_selectOptimalCsrTwsAacCapsSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0002
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L9
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L9
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalAacCapsSink
?L9:
?LBE_selectOptimalCsrTwsAacCapsSink:
	leavel	#4
$_selectOptimalCsrTwsAacCapsSource:
	enterl	#4
?LBB_selectOptimalCsrTwsAacCapsSource:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0002
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,#H'0002
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_selectOptimalAacCapsSource
?L11:
?LBE_selectOptimalCsrTwsAacCapsSource:
	leavel	#4
$_selectOptimalCsrTwsAptxCapsSink:
	enterl	#7
?LBB_selectOptimalCsrTwsAptxCapsSink:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'4F00
	st	AL,@(0,Y)
	ld	AL,#H'0100
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_a2dpFindNonStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L13
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'4F00
	st	AL,@(0,Y)
	ld	AL,#H'0100
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_a2dpFindNonStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L13
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_selectOptimalCsrAptxCapsSink
?L13:
?LBE_selectOptimalCsrTwsAptxCapsSink:
	leavel	#7
$_selectOptimalCsrTwsAptxCapsSource:
	enterl	#7
?LBB_selectOptimalCsrTwsAptxCapsSource:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'4F00
	st	AL,@(0,Y)
	ld	AL,#H'0100
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_a2dpFindNonStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'4F00
	st	AL,@(0,Y)
	ld	AL,#H'0100
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_a2dpFindNonStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_selectOptimalCsrAptxCapsSource
?L15:
?LBE_selectOptimalCsrTwsAptxCapsSource:
	leavel	#7
$_getCsrTwsSbcConfigSettings:
	enterl	#4
?LBB_getCsrTwsSbcConfigSettings:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0000
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L17
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_getSbcConfigSettings
?L17:
?LBE_getCsrTwsSbcConfigSettings:
	leavel	#4
$_getCsrTwsMp3ConfigSettings:
	enterl	#4
?LBB_getCsrTwsMp3ConfigSettings:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0001
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_getMp3ConfigSettings
?L19:
?LBE_getCsrTwsMp3ConfigSettings:
	leavel	#4
$_getCsrTwsAacConfigSettings:
	enterl	#4
?LBB_getCsrTwsAacConfigSettings:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	ld	AH,#H'0002
	bsr	$_a2dpFindStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L21
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_getAacConfigSettings
?L21:
?LBE_getCsrTwsAacConfigSettings:
	leavel	#4
$_getCsrTwsAptxConfigSettings:
	enterl	#7
?LBB_getCsrTwsAptxConfigSettings:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'4F00
	st	AL,@(0,Y)
	ld	AL,#H'0100
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_a2dpFindNonStdEmbeddedCodecCaps
	cmp	AL,#H'0000
	beq	?L23
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_getCsrAptxConfigSettings
?L23:
?LBE_getCsrTwsAptxConfigSettings:
	leavel	#7
	ENDMOD

;# Function pattern *movqi2 used[0] = 48 used[1] = 4 total = 52
;# Function pattern *movqi3 used[0] = 50 total = 50
;# Function pattern *addqi0 used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 12 total = 12
;# Function pattern *call_value1 used[0] = 20 total = 20
;# Function pattern movstrqi+3 used[0] = 20 total = 20
	MODULE	a2dp_codec_mp3
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_mp3CapsChannelMode:
	dc	H'0401
	dc	H'0401
	dc	H'04F1
	dc	H'FFFF
	dc	H'0402
	dc	H'0402
	dc	H'04F2
	dc	H'FFFF
	dc	H'0404
	dc	H'0404
	dc	H'04F4
	dc	H'FFFF
	dc	H'04FF
	dc	H'04FF
	dc	H'04F8
	dc	H'FFFF
	dc	H'FFFF
_mp3CapsSampleRate:
	dc	H'0502
	dc	H'0502
	dc	H'05C2
	dc	H'FFFF
	dc	H'0501
	dc	H'0501
	dc	H'05C1
	dc	H'FFFF
	dc	H'0504
	dc	H'0504
	dc	H'05C4
	dc	H'FFFF
	dc	H'0508
	dc	H'0508
	dc	H'05C8
	dc	H'FFFF
	dc	H'0510
	dc	H'0510
	dc	H'05D0
	dc	H'FFFF
	dc	H'05FF
	dc	H'05FF
	dc	H'05E0
	dc	H'FFFF
	dc	H'FFFF
_mp3CapsBitRate:
	dc	H'0602
	dc	H'0602
	dc	H'0682
	dc	H'0700
	dc	H'0601
	dc	H'0601
	dc	H'0681
	dc	H'0700
	dc	H'0604
	dc	H'0604
	dc	H'0684
	dc	H'0700
	dc	H'0780
	dc	H'0780
	dc	H'0680
	dc	H'0780
	dc	H'0608
	dc	H'0608
	dc	H'0688
	dc	H'0700
	dc	H'0740
	dc	H'0740
	dc	H'0680
	dc	H'0740
	dc	H'0610
	dc	H'0610
	dc	H'0690
	dc	H'0700
	dc	H'0720
	dc	H'0720
	dc	H'0680
	dc	H'0720
	dc	H'0620
	dc	H'0620
	dc	H'06A0
	dc	H'0700
	dc	H'0710
	dc	H'0710
	dc	H'0680
	dc	H'0710
	dc	H'0640
	dc	H'0640
	dc	H'06C0
	dc	H'0700
	dc	H'0708
	dc	H'0708
	dc	H'0680
	dc	H'0708
	dc	H'0704
	dc	H'0704
	dc	H'0680
	dc	H'0704
	dc	H'0702
	dc	H'0702
	dc	H'0680
	dc	H'0702
	dc	H'FFFF
_mp3CapsTable:
	dc	_mp3CapsChannelMode
	dc	_mp3CapsSampleRate
	dc	_mp3CapsBitRate
	dc	H'FFFF
	.CODE
_selectMp3Caps:
	enterl	#2
?LBB_selectMp3Caps:
	st	AL,@(-4,Y)
	st	AH,@(-2,Y)
?LBB2:
	ld	AL,#(_mp3CapsTable)
	st	AL,@(-3,Y)
	ld	AL,@_mp3CapsTable
	cmp	AL,#-H'0001
	beq	?L13
?L11:
	ld	X,@(-3,Y)
?LBB3:
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	AL,@(0,X)
	cmp	AL,#-H'0001
	beq	?L6
?L10:
	ld	X,@(-1,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	ld	X,@$XAP_AH
	add	X,@(-2,Y)
	ld	AL,@(0,X)
	ld	X,@(-1,Y)
	and	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L8
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	ld	X,@$XAP_AH
	add	X,@(-4,Y)
	ld	AL,@(0,X)
	ld	X,@(-1,Y)
	and	AL,@(H'0001,X)
	cmp	AL,#H'0000
	beq	?L8
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	add	AH,@(-2,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(-1,Y)
	and	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(-1,Y)
	ld	AH,@(H'0003,X)
	cmp	AH,#-H'0001
	beq	?L6
	lsr	#H'0008
	add	AH,@(-2,Y)
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@(-1,Y)
	and	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@(-4,Y)
	ld	AL,@(H'0006,X)
	or	AL,#H'007F
	ld	X,@(-2,Y)
	and	AL,@(H'0006,X)
	st	AL,@(H'0006,X)
	bra	(?L6)
?L8:
	ld	AL,#H'0004
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#-H'0001
	bne	?L10
?L6:
	ld	AL,#H'0001
	add	AL,@(-3,Y)
	st	AL,@(-3,Y)
	ld	X,@$XAP_AL
?LBE3:
	ld	AL,@(0,X)
	cmp	AL,#-H'0001
	bne	?L11
?L13:
?LBE2:
?LBE_selectMp3Caps:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_selectOptimalMp3CapsSink:
	enterl	#2
?LBB_selectOptimalMp3CapsSink:
	cmp	AL,#H'0000
	beq	?L20
	cmp	AH,#H'0000
	beq	?L20
	bsr	_selectMp3Caps
?L20:
?LBE_selectOptimalMp3CapsSink:
	leavel	#2
$_selectOptimalMp3CapsSource:
	enterl	#2
?LBB_selectOptimalMp3CapsSource:
	cmp	AL,#H'0000
	beq	?L23
	cmp	AH,#H'0000
	beq	?L23
	bsr	_selectMp3Caps
?L23:
?LBE_selectOptimalMp3CapsSource:
	leavel	#2
$_getMp3ConfigSettings:
	enterl	#2
?LBB_getMp3ConfigSettings:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L27
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	bra	(?L46)
?L27:
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L28
	ld	AL,#-H'4480
	bra	(?L44)
?L28:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L30
	ld	AL,#-H'53BC
	bra	(?L44)
?L30:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,#H'7D00
	bra	(?L44)
?L32:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,#H'5DC0
	bra	(?L44)
?L34:
	ld	X,@H'fff8
	ld	AL,@(H'0005,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L36
	ld	AL,#H'5622
	bra	(?L44)
?L36:
	ld	AL,#H'3E80
?L44:
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L38
	ld	AL,#H'0000
	bra	(?L45)
?L38:
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L40
	ld	AL,#H'0001
	bra	(?L45)
?L40:
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L42
	ld	AL,#H'0002
	bra	(?L45)
?L42:
	ld	AL,#H'0003
?L45:
	ld	X,@$XAP_AH
?L46:
	st	AL,@(H'0002,X)
?LBE_getMp3ConfigSettings:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 25 used[1] = 16 total = 41
;# Function pattern *movqi3 used[0] = 24 total = 24
;# Function pattern *movqi8 used[0] = 10 total = 10
;# Function pattern *addqi2 used[2] = 6 total = 6
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 15 total = 15
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	a2dp_codec_sbc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
?LC0:
	dc	H'3E80
	dc	H'7D00
	dc	H'AC44
	dc	H'BB80
	.CODE
_extractSbcParameters:
	enterl	#6
?LBB_extractSbcParameters:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB2:
	ld	AL,@?LC0
	st	AL,@(0,Y)
	ld	X,@$XAP_UY
	ld	AL,@?LC0+H'0001
	st	AL,@(H'0001,X)
	ld	AL,@?LC0+H'0002
	st	AL,@(H'0002,X)
	ld	AL,@?LC0+H'0003
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0008
	bra	(?L3)
?L2:
	ld	AL,#H'0004
?L3:
	ld	X,@H'fff9
	st	AL,@(0,X)
	ld	AH,@H'fff8
	and	AH,#H'0030
	lsr	#H'0004
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000E
	add	AL,#H'0004
	st	AL,@(H'0001,X)
	ld	AH,@H'fff8
	and	AH,#H'00C0
	lsr	#H'0006
	ld	AL,@$XAP_UY
	ld	X,@$XAP_AL
	add	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff9
	st	AL,@(H'0002,X)
	ld	AH,@H'fff8
	and	AH,#H'000C
	lsr	#H'0002
	st	AH,@(H'0003,X)
?LBE2:
?LBE_extractSbcParameters:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_frameLengthFromRate:
	enterl	#4
?LBB_frameLengthFromRate:
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	st	AH,@(-1,Y)
	st	AL,@(-2,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(-2,Y)
	smult	@H'fff8
	st	AL,@H'fffa
	ld	AL,@(-1,Y)
	smult	@H'fff9
	add	AL,@H'fffa
	st	AL,@H'fffa
	ld	AL,@(-2,Y)
	umult	@H'fff9
	add	AH,@H'fffa
	st	AH,@(-1,Y)
	st	AL,@(-2,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0001,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(-2,Y)
	smult	@H'fff8
	st	AL,@H'fffa
	ld	AL,@(-1,Y)
	smult	@H'fff9
	add	AL,@H'fffa
	st	AL,@H'fffa
	ld	AL,@(-2,Y)
	umult	@H'fff9
	add	AH,@H'fffa
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0002,X)
	asl	#H'0003
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
?LBE_frameLengthFromRate:
	leavel	#4
_bitpoolFromFrameLength:
	enterl	#2
?LBB_bitpoolFromFrameLength:
	st	AL,@H'fff9
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	beq	?L9
	cmp	AL,#H'0001
	bcs	?L8
	cmp	AL,#H'0002
	beq	?L10
	cmp	AL,#H'0003
	beq	?L11
?L8:
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000D
	st	AL,@H'fff8
	ld	X,@H'fff9
	ld	AL,@(0,X)
	lsl	#H'0010
	asr	#H'000E
	bra	(?L15)
?L9:
	ld	X,@H'fff9
	sub	AH,@(0,X)
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000D
	add	AL,#-H'0020
	st	AL,@H'fff8
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AL
	add	X,@$XAP_AL
	ld	AH,#H'0000
	ld	AL,@H'fff8
	udiv	@$XAP_UXL
	bra	(?L14)
?L10:
	ld	X,@H'fff9
	sub	AH,@(0,X)
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000D
	bra	(?L13)
?L11:
	ld	AL,@$XAP_AH
	lsl	#H'0010
	asr	#H'000D
	st	AL,@H'fff8
	ld	X,@H'fff9
	ld	AL,@(0,X)
	smult	#H'0009
?L15:
	nadd	AL,@H'fff8
?L13:
	add	AL,#-H'0020
	ld	AH,#H'0000
	udiv	@(H'0001,X)
?L14:
?LBE3:
?LBE_bitpoolFromFrameLength:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_selectOptimalCommonSbcCaps:
	enterl	#2
?LBB_selectOptimalCommonSbcCaps:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L21
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L21
	ld	AL,@$XAP_AH
	and	AL,#H'00F1
	bra	(?L43)
?L21:
	ld	X,@H'fff9
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L23
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L23
	ld	AL,@$XAP_AH
	and	AL,#H'00F2
?L43:
	ld	X,@H'fff9
	bra	(?L39)
?L23:
	ld	X,@H'fff9
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L25
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L25
	ld	AL,@$XAP_AH
	and	AL,#H'00F4
	bra	(?L43)
?L25:
	ld	X,@H'fff9
	ld	AL,@(H'0004,X)
	and	AL,#H'00F8
?L39:
	st	AL,@(H'0004,X)
	ld	X,@H'fff9
	ld	AH,@(H'0005,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L27
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	bra	(?L40)
?L27:
	ld	X,@H'fff9
	ld	AH,@(H'0005,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L29
	ld	AL,@$XAP_AH
	and	AL,#H'002F
	bra	(?L40)
?L29:
	ld	X,@H'fff9
	ld	AH,@(H'0005,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L31
	ld	AL,@$XAP_AH
	and	AL,#H'004F
	bra	(?L40)
?L31:
	ld	X,@H'fff9
	ld	AL,@(H'0005,X)
	and	AL,#H'008F
?L40:
	st	AL,@(H'0005,X)
	ld	X,@H'fff9
	ld	AH,@(H'0005,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L33
	ld	AL,@$XAP_AH
	and	AL,#H'00F7
	bra	(?L41)
?L33:
	ld	X,@H'fff9
	ld	AL,@(H'0005,X)
	and	AL,#H'00FB
?L41:
	st	AL,@(H'0005,X)
	ld	X,@H'fff9
	ld	AH,@(H'0005,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L35
	ld	AL,@$XAP_AH
	and	AL,#H'00FD
	bra	(?L42)
?L35:
	ld	X,@H'fff9
	ld	AL,@(H'0005,X)
	and	AL,#H'00FE
?L42:
	st	AL,@(H'0005,X)
	ld	X,@H'fff8
	ld	AL,@(H'0006,X)
	ld	X,@H'fff9
	cmp	AL,@(H'0006,X)
	bcz	?L37
	st	AL,@(H'0006,X)
?L37:
	ld	X,@H'fff8
	ld	AL,@(H'0007,X)
	ld	X,@H'fff9
	cmp	AL,@(H'0007,X)
	bcc	?L20
	st	AL,@(H'0007,X)
?L20:
?LBE_selectOptimalCommonSbcCaps:
	leavel	#2
$_selectOptimalSbcCapsSink:
	enterl	#2
?LBB_selectOptimalSbcCapsSink:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L47
	ld	AL,@$XAP_AH
	and	AL,#H'002F
	bra	(?L53)
?L47:
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L49
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	bra	(?L53)
?L49:
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L51
	ld	AL,@$XAP_AH
	and	AL,#H'004F
	bra	(?L53)
?L51:
	ld	AL,@(H'0004,X)
	and	AL,#H'008F
?L53:
	st	AL,@(H'0004,X)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_selectOptimalCommonSbcCaps
?LBE_selectOptimalSbcCapsSink:
	leavel	#2
$_selectOptimalSbcCapsSource:
	enterl	#2
?LBB_selectOptimalSbcCapsSource:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L55
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	bra	(?L62)
?L55:
	ld	X,@H'fff9
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L57
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L57
	ld	AL,@$XAP_AH
	and	AL,#H'002F
?L62:
	ld	X,@H'fff9
	bra	(?L61)
?L57:
	ld	X,@H'fff9
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L59
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L59
	ld	AL,@$XAP_AH
	and	AL,#H'004F
	bra	(?L62)
?L59:
	ld	X,@H'fff9
	ld	AL,@(H'0004,X)
	and	AL,#H'008F
?L61:
	st	AL,@(H'0004,X)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_selectOptimalCommonSbcCaps
?LBE_selectOptimalSbcCapsSource:
	leavel	#2
$_getSbcConfigSettings:
	enterl	#2
?LBB_getSbcConfigSettings:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L64
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	bra	(?L79)
?L64:
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L65
	ld	AL,#-H'4480
	bra	(?L77)
?L65:
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L67
	ld	AL,#-H'53BC
	bra	(?L77)
?L67:
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L69
	ld	AL,#H'7D00
	bra	(?L77)
?L69:
	ld	AL,#H'3E80
?L77:
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L71
	ld	AL,#H'0000
	bra	(?L78)
?L71:
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L73
	ld	AL,#H'0001
	bra	(?L78)
?L73:
	ld	X,@H'fff8
	ld	AL,@(H'0004,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,#H'0002
	bra	(?L78)
?L75:
	ld	AL,#H'0003
?L78:
	ld	X,@$XAP_AH
?L79:
	st	AL,@(H'0002,X)
?LBE_getSbcConfigSettings:
	leavel	#2
$_a2dpSbcFormatFromConfig:
	enterl	#2
?LBB_a2dpSbcFormatFromConfig:
	ld	X,@$XAP_AL
?LBB4:
	ld	AL,@(H'0004,X)
	and	AL,#H'0080
	cmp	AL,#H'0000
	beq	?L81
	ld	AL,#H'0000
	bra	(?L101)
?L81:
	ld	AL,@(H'0004,X)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L83
	ld	AL,#H'0040
	bra	(?L101)
?L83:
	ld	AL,@(H'0004,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L85
	ld	AL,#H'0080
	bra	(?L101)
?L85:
	ld	AL,#H'00C0
?L101:
	st	AL,@(-1,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0008
	cmp	AL,#H'0000
	bne	?L88
	ld	AL,@$XAP_AH
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(-1,Y)
	or	AL,#H'0004
	bra	(?L102)
?L89:
	ld	AL,@(H'0004,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L91
	ld	AL,@(-1,Y)
	or	AL,#H'0008
	bra	(?L102)
?L91:
	ld	AL,@(-1,Y)
	or	AL,#H'000C
?L102:
	st	AL,@(-1,Y)
?L88:
	ld	AH,@(H'0005,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0080
	cmp	AL,#H'0000
	bne	?L94
	ld	AL,@$XAP_AH
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L95
	ld	AL,@(-1,Y)
	or	AL,#H'0010
	bra	(?L103)
?L95:
	ld	AL,@(H'0005,X)
	and	AL,#H'0020
	cmp	AL,#H'0000
	beq	?L97
	ld	AL,@(-1,Y)
	or	AL,#H'0020
	bra	(?L103)
?L97:
	ld	AL,@(-1,Y)
	or	AL,#H'0030
?L103:
	st	AL,@(-1,Y)
?L94:
	ld	AL,@(H'0005,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L99
	ld	AL,@(-1,Y)
	or	AL,#H'0001
	st	AL,@(-1,Y)
?L99:
	ld	AL,@(H'0005,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L100
	ld	AL,@(-1,Y)
	or	AL,#H'0002
	st	AL,@(-1,Y)
?L100:
?LBE4:
	ld	AL,@(-1,Y)
?LBE_a2dpSbcFormatFromConfig:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_a2dpSbcSelectBitpool:
	enterl	#8
?LBB_a2dpSbcSelectBitpool:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	_extractSbcParameters
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	_frameLengthFromRate
	ld	X,@$XAP_AL
	ld	AL,@(H'000A,Y)
	add	AL,#-H'000D
	st	AL,@(H'000A,Y)
	add	AL,@$XAP_UXL
	add	AL,#-H'0001
	ld	AH,#H'0000
	udiv	@$XAP_UXL
	st	AL,@H'fff8
	ld	AH,#H'0000
	ld	AL,@(H'000A,Y)
	udiv	@H'fff8
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	_bitpoolFromFrameLength
?LBE5:
?LBE_a2dpSbcSelectBitpool:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 99 used[1] = 58 total = 157
;# Function pattern *movqi3 used[0] = 67 total = 67
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[0] = 2 used[2] = 3 used[3] = 5 total = 10
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 10 used[2] = 2 total = 12
;# Function pattern *andqi3 used[0] = 61 total = 61
;# Function pattern *iorqi3 used[0] = 8 total = 8
;# Function pattern *subqi3 used[0] = 2 used[1] = 1 total = 3
;# Function pattern *udivqi3 used[0] = 4 total = 4
;# Function pattern *mulqihi3 used[0] = 4 total = 4
;# Function pattern *umulqihi3 used[0] = 2 total = 2
;# Function pattern *mulqi3_const used[0] = 7 total = 7
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2_1 used[0] = 2 used[1] = 2 total = 4
;# Function pattern jump used[0] = 32 total = 32
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 39 total = 39
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	a2dp_command_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_getReceivedMessageType:
	enterl	#2
?LBB_getReceivedMessageType:
	ld	X,@$XAP_AL
	ld	X,@(H'000C,X)
	ld	AL,@(0,X)
	and	AL,#H'0003
?LBE_getReceivedMessageType:
	leavel	#2
_sendSetConfiguration:
	enterl	#6
?LBB_sendSetConfiguration:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0003
	bsr	$_a2dpSendCommand
?LBE2:
?LBE_sendSetConfiguration:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_sendDelayReport:
	enterl	#6
?LBB_sendDelayReport:
	ld	X,@$XAP_AL
?LBB3:
	st	AH,@(H'0011,X)
	st	AH,@(H'0003,Y)
	lsr	#H'0008
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000D
	bsr	$_a2dpSendCommand
?LBE3:
?LBE_sendDelayReport:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_setDelayReportPending:
	enterl	#2
?LBB_setDelayReportPending:
	ld	X,@$XAP_AL
	ld	AL,@$XAP_AH
	asl	#H'000F
	ld	AH,@(H'0012,X)
	and	AH,#H'7FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0012,X)
?LBE_setDelayReportPending:
	leavel	#2
_isDelayReportPending:
	enterl	#2
?LBB_isDelayReportPending:
	ld	X,@$XAP_AL
	ld	AH,@(H'0012,X)
	lsr	#H'000F
	ld	AL,@$XAP_AH
?LBE_isDelayReportPending:
	leavel	#2
$_a2dpSetStreamState:
	enterl	#7
?LBB_a2dpSetStreamState:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	and	AH,#H'001F
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#-H'0020
	or	AL,@$XAP_AH
	st	AL,@(H'000D,X)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'001B
	ld	AL,@$_a2dp
	bsr	$_MessageCancelAll
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0022
	ld	AL,@$_a2dp
	bsr	$_MessageCancelAll
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0029
	ld	AL,@$_a2dp
	bsr	$_MessageCancelAll
	ld	AL,@(H'0004,Y)
	cmp	AL,#(H'0001+H'0012)
	bcc	?L6
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE27,X)
	brxl
	.SEG	CONST
?JTBASE27:
	.CODE
?L27:
	.SEG	CONST
	dc	lwrd(?L6-?L27)
	dc	lwrd(?L26-?L27)
	dc	lwrd(?L26-?L27)
	dc	lwrd(?L26-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L6-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L26-?L27)
	dc	lwrd(?L6-?L27)
	dc	lwrd(?L6-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L26-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L21-?L27)
	.CODE
?L21:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0029
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,#H'1388
	bra	(?L29)
?L26:
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0029
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,#H'7530
?L29:
	st	AL,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AL,@$_a2dp
	bsr	$_MessageSendLater
?L6:
?LBE_a2dpSetStreamState:
	leavel	#7
$_a2dpHandleInternalWatchdogTimeout:
	enterl	#5
?LBB_a2dpHandleInternalWatchdogTimeout:
	st	AL,@(0,Y)
?LBB4:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@(0,Y)
	add	X,#-H'0029
	st	X,@(H'0002,Y)
	ld	AL,@$_a2dp
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bcc	?L31
	ld	X,#H'0001
	st	X,@(-1,Y)
?L31:
	ld	AL,@(-1,Y)
	bsr	$_PanicNull
?LBB5:
	ld	AL,@(0,Y)
	smult	#H'0013
	add	AL,@$_a2dp
	add	AL,#-H'0306
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	add	AL,#-H'0011
	cmp	AL,#(H'0001+H'0001)
	bcc	?L32
	ld	AL,@$XAP_UXL
	bsr	$_a2dpStreamReset
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpDisconnectAllMedia
	cmp	AL,#H'0000
	bne	?L30
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpSignallingDisconnectPending
	bra	(?L30)
?L32:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
?L30:
?LBE5:
?LBE4:
?LBE_a2dpHandleInternalWatchdogTimeout:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_findLocalCodecInfo:
	enterl	#5
?LBB_findLocalCodecInfo:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetBase
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetSize
	ld	AH,@$XAP_AL
	lsr	#H'0001
	add	AH,#-H'0001
	cmp	AH,#-H'0001
	beq	?L43
?L41:
	ld	X,@(H'0002,Y)
?LBB7:
	ld	AL,@(0,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@(H'0001,Y)
	bne	?L40
	ld	AL,@(H'0002,Y)
	bra	(?L36)
?L40:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
?LBE7:
	add	AH,#-H'0001
	cmp	AH,#-H'0001
	bne	?L41
?L43:
	ld	AL,#H'0000
?L36:
?LBE6:
?LBE_findLocalCodecInfo:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
_buildPreferredList:
	enterl	#18
?LBB_buildPreferredList:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB8:
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0001
	bsr	$_blockRemove
	tst	@(H'0012,Y)
	beq	?L49
	tst	@(H'0007,Y)
	bne	?L48
?L49:
	ld	X,@(H'0006,Y)
?LBB9:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetBase
	bsr	$_PanicNull
	st	AL,@(H'000A,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetSize
	ld	AH,@$XAP_AL
	lsr	#H'0001
	st	AH,@(H'000B,Y)
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	cmp	AH,@(H'000B,Y)
	bcc	?L76
?L55:
	ld	X,@(H'0008,Y)
	add	X,@$XAP_UXL
	add	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	bne	?L52
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
?L52:
	ld	AH,@(H'0008,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	cmp	AH,@(H'000B,Y)
	bcs	?L55
?L76:
	tst	@(H'0009,Y)
	beq	?L62
	ld	X,@(H'0006,Y)
?LBB10:
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	and	AL,#H'0007
	bsr	$_blockAdd
	bsr	$_PanicNull
	st	AL,@(H'000C,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#-H'0001
	st	AL,@(H'000B,Y)
	cmp	AL,#-H'0001
	beq	?L82
?L61:
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	bne	?L60
?LBB11:
	ld	AH,@(0,X)
	st	AH,@(H'000D,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0005,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_a2dpFindCodecSpecificInformation
	bsr	$_PanicNull
	ld	X,@(H'000D,Y)
	ld	AL,@(0,X)
	asl	#H'000A
	ld	X,@(H'000C,Y)
	ld	AH,@(0,X)
	and	AH,#H'03FF
	or	AL,@$XAP_AH
	st	AL,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0008
	ld	AH,@H'fff8
	and	AH,#-H'0301
	or	AH,@$XAP_AL
	ld	X,@(H'000C,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@(H'000C,Y)
	st	AH,@(0,X)
	add	X,#H'0001
	st	X,@(H'000C,Y)
?L60:
	ld	AH,@(H'000A,Y)
?LBE11:
	add	AH,#H'0002
	st	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#-H'0001
	st	AL,@(H'000B,Y)
	cmp	AL,#-H'0001
	bne	?L61
	bra	(?L82)
?L48:
?LBE10:
?LBE9:
	ld	AH,#H'0000
	st	AH,@(H'0008,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L80
?L68:
	ld	X,@(H'0007,Y)
?LBB12:
	add	X,@(H'0008,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(0,X)
	bsr	_findLocalCodecInfo
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L65
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	bne	?L65
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
?L65:
	ld	AH,@(H'0008,Y)
?LBE12:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	cmp	AH,@(H'0012,Y)
	bcs	?L68
?L80:
	tst	@(H'0009,Y)
	beq	?L62
	ld	X,@(H'0006,Y)
?LBB13:
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	and	AL,#H'0007
	bsr	$_blockAdd
	bsr	$_PanicNull
	st	AL,@(H'000E,Y)
	ld	AL,@(H'0012,Y)
	add	AL,#-H'0001
	st	AL,@(H'0012,Y)
	cmp	AL,#-H'0001
	beq	?L82
?L74:
?LBB14:
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(0,X)
	bsr	_findLocalCodecInfo
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L73
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	bne	?L73
?LBB15:
	ld	X,@(0,X)
	st	X,@(H'000F,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	bsr	$_a2dpFindCodecSpecificInformation
	bsr	$_PanicNull
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	asl	#H'000A
	ld	X,@(H'000E,Y)
	ld	AH,@(0,X)
	and	AH,#H'03FF
	or	AL,@$XAP_AH
	st	AL,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'000F,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'0008
	ld	AH,@H'fff8
	and	AH,#-H'0301
	or	AH,@$XAP_AL
	ld	X,@(H'000E,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	ld	X,@(H'000E,Y)
	st	AH,@(0,X)
	add	X,#H'0001
	st	X,@(H'000E,Y)
?L73:
	ld	AH,@(H'0007,Y)
?LBE15:
	add	AH,#H'0001
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0012,Y)
?LBE14:
	add	AL,#-H'0001
	st	AL,@(H'0012,Y)
	cmp	AL,#-H'0001
	bne	?L74
?L82:
	ld	AL,#H'0001
	bra	(?L47)
?L62:
?LBE13:
	ld	AL,#H'0000
?L47:
?LBE8:
?LBE_buildPreferredList:
	leavel	#18
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE8
_doesCodecMatch:
	enterl	#3
?LBB_doesCodecMatch:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	ld	X,@H'fff8
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AH,@$XAP_AL
	bne	?L92
	cmp	AH,#H'00A5
	beq	?L92
	ld	X,@H'fff9
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'0003
	st	AH,@(0,Y)
	ld	X,@H'fff8
	ld	AH,@(0,X)
	lsr	#H'0008
	and	AH,#H'0003
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	beq	?L92
	ld	AL,#H'0001
	bra	(?L91)
?L92:
	ld	AL,#H'0000
?L91:
?LBE_doesCodecMatch:
	leavel	#3
_haveCodecType:
	enterl	#2
?LBB_haveCodecType:
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'00A5
	beq	?L97
	ld	AL,#H'0001
	bra	(?L96)
?L97:
	ld	AL,#H'0000
?L96:
?LBE_haveCodecType:
	leavel	#2
_haveCodecCaps:
	enterl	#4
?LBB_haveCodecCaps:
	ld	X,@$XAP_AL
	st	AH,@(H'0001,Y)
?LBB16:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L100
	ld	AL,@$XAP_UY
	ld	AH,#H'0000
	bsr	$_a2dpFindCodecSpecificInformation
	cmp	AL,#H'0000
	beq	?L100
	ld	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	cmp	AL,@(H'0003,X)
	bne	?L100
	ld	AL,#H'0001
	bra	(?L99)
?L100:
	ld	AL,#H'0000
?L99:
?LBE16:
?LBE_haveCodecCaps:
	leavel	#4
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_selectNextSeid:
	enterl	#5
?LBB_selectNextSeid:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB17:
	ld	AL,@(H'0004,X)
	ld	AH,#H'00FF
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockSetCurrent
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L105
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockSetCurrent
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'00FF
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0001
	bsr	$_blockSetCurrent
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L106
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamReset
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
	ld	AL,#H'0000
	bra	(?L104)
?L106:
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0006,X)
?L105:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0005,X)
	ld	AL,#H'0001
?L104:
?LBE17:
?LBE_selectNextSeid:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
_issueDiscover:
	enterl	#5
?LBB_issueDiscover:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	bsr	_buildPreferredList
	cmp	AL,#H'0000
	beq	?L108
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L109
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_a2dpSetStreamState
	bra	(?L107)
?L109:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	bra	(?L112)
?L108:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0002
?L112:
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L107:
?LBE_issueDiscover:
	leavel	#5
_issueGetCapabilities:
	enterl	#5
?LBB_issueGetCapabilities:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB18:
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#(H'0001+H'0004)
	bcc	?L114
	ld	AH,#H'0002
	bra	(?L115)
?L114:
	ld	AH,#H'000C
?L115:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L116
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_a2dpSetStreamState
	bra	(?L113)
?L116:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L113:
?LBE18:
?LBE_issueGetCapabilities:
	leavel	#5
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
_issueSetConfiguration:
	enterl	#7
?LBB_issueSetConfiguration:
	st	AL,@(H'0002,Y)
?LBB19:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpSelectConfigurationParameters
	cmp	AL,#H'0001
	beq	?L121
	cmp	AL,#H'0001
	bcc	?L119
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	$_a2dpCodecConfigureInd
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0003
	bsr	$_a2dpSetStreamState
	ld	X,#H'0001
	st	X,@(H'0004,Y)
	bra	(?L119)
?L121:
	ld	AL,@(H'0002,Y)
	bsr	_sendSetConfiguration
	cmp	AL,#H'0000
	beq	?L122
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0004
	bsr	$_a2dpSetStreamState
	bra	(?L123)
?L122:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L123:
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
?L119:
?LBE19:
	ld	AL,@(H'0004,Y)
?LBE_issueSetConfiguration:
	leavel	#7
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
_issueClientSetConfiguration:
	enterl	#4
?LBB_issueClientSetConfiguration:
	st	AL,@(H'0001,Y)
	bsr	_sendSetConfiguration
	cmp	AL,#H'0000
	beq	?L130
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0004
	bsr	$_a2dpSetStreamState
	bra	(?L129)
?L130:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L129:
?LBE_issueClientSetConfiguration:
	leavel	#4
_requestDelayReport:
	enterl	#6
?LBB_requestDelayReport:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaAvSyncDelayInd
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0005
	bsr	$_a2dpSetStreamState
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'001B
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AL,@$_a2dp
	bsr	$_MessageSendLater
?LBE_requestDelayReport:
	leavel	#6
_waitDelayReport:
	enterl	#6
?LBB_waitDelayReport:
	st	AL,@(H'0003,Y)
	ld	AH,#H'0005
	bsr	$_a2dpSetStreamState
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0022
	ld	X,#H'0000
	st	X,@(0,Y)
	ld	AL,#H'1388
	st	AL,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AL,@$_a2dp
	bsr	$_MessageSendLater
?LBE_waitDelayReport:
	leavel	#6
_issueOpen:
	enterl	#5
?LBB_issueOpen:
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0006
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L135
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0006
	bsr	$_a2dpSetStreamState
	bra	(?L134)
?L135:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L134:
?LBE_issueOpen:
	leavel	#5
_continueStreamConnect:
	enterl	#6
?LBB_continueStreamConnect:
	st	AL,@(H'0001,Y)
?L138:
	ld	X,@(H'0001,Y)
?LBB20:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#(H'0001+H'0005)
	bcc	?L158
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE159,X)
	brxl
	.SEG	CONST
?JTBASE159:
	.CODE
?L159:
	.SEG	CONST
	dc	lwrd(?L152-?L159)
	dc	lwrd(?L163-?L159)
	dc	lwrd(?L143-?L159)
	dc	lwrd(?L158-?L159)
	dc	lwrd(?L146-?L159)
	dc	lwrd(?L151-?L159)
	.CODE
?L143:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0006
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	bsr	_doesCodecMatch
	cmp	AL,#H'0000
	beq	?L144
	ld	AL,@(H'0001,Y)
	bsr	_issueSetConfiguration
	cmp	AL,#H'0000
	bne	?L161
?L144:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetStreamState
	bra	(?L140)
?L146:
	ld	X,@(H'0001,Y)
?LBB21:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	st	AL,@(0,Y)
	ld	AL,#H'0008
	ld	AH,@(H'0002,Y)
	bsr	$_a2dpIsServiceSupported
	cmp	AL,#H'0000
	beq	?L151
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0008
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L148
	ld	AL,@$XAP_UXL
	bsr	_requestDelayReport
	bra	(?L161)
?L148:
	ld	AL,@(H'0001,Y)
	bsr	_waitDelayReport
	bra	(?L161)
?L151:
?LBE21:
	ld	AL,@(H'0001,Y)
	bsr	_issueOpen
	bra	(?L161)
?L152:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	bsr	_haveCodecType
	cmp	AL,#H'0000
	beq	?L163
	ld	AL,@(H'0001,Y)
	add	AL,#H'0006
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@(H'0003,Y)
	bsr	_doesCodecMatch
	cmp	AL,#H'0000
	beq	?L140
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	bsr	_haveCodecCaps
	cmp	AL,#H'0000
	bne	?L155
?L163:
	ld	AL,@(H'0001,Y)
	bsr	_issueGetCapabilities
	bra	(?L161)
?L155:
	ld	AL,@(H'0001,Y)
	bsr	_issueSetConfiguration
	cmp	AL,#H'0000
	beq	?L140
?L161:
	ld	AL,#H'0001
	bra	(?L137)
?L158:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
?L140:
	ld	AL,@(H'0001,Y)
	bsr	_selectNextSeid
	cmp	AL,#H'0000
	bne	?L138
	ld	AL,#H'0000
?L137:
?LBE20:
?LBE_continueStreamConnect:
	leavel	#6
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_a2dpHandleInternalClientRspTimeout:
	enterl	#4
?LBB_a2dpHandleInternalClientRspTimeout:
	st	AL,@(0,Y)
?LBB22:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@(0,Y)
	add	X,#-H'001B
	st	X,@(H'0001,Y)
	ld	AL,@$_a2dp
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L166
	ld	X,#H'0001
	st	X,@(-1,Y)
?L166:
	ld	AL,@(-1,Y)
	bsr	$_PanicNull
?LBB23:
	ld	AL,@(0,Y)
	smult	#H'0013
	ld	AH,@$XAP_AL
	add	AH,@$_a2dp
	add	AH,#-H'01FC
	ld	X,@$XAP_AH
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#(H'0001+H'0012)
	bcc	?L165
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE187,X)
	brxl
	.SEG	CONST
?JTBASE187:
	.CODE
?L187:
	.SEG	CONST
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L173-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	dc	lwrd(?L165-?L187)
	.CODE
?L173:
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	_sendDelayReport
?L165:
?LBE23:
?LBE22:
?LBE_a2dpHandleInternalClientRspTimeout:
	leavel	#4
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
$_a2dpHandleInternalRemoteCmdTimeout:
	enterl	#4
?LBB_a2dpHandleInternalRemoteCmdTimeout:
	st	AL,@(0,Y)
?LBB24:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@(0,Y)
	add	X,#-H'0022
	st	X,@(H'0001,Y)
	ld	AL,@$_a2dp
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	lsr	#H'000D
	ld	AL,@(H'0001,Y)
	cmp	AL,@$XAP_AH
	bcc	?L191
	ld	X,#H'0001
	st	X,@(-1,Y)
?L191:
	ld	AL,@(-1,Y)
	bsr	$_PanicNull
?LBB25:
	ld	AL,@(0,Y)
	smult	#H'0013
	ld	AH,@$XAP_AL
	add	AH,@$_a2dp
	add	AH,#-H'0281
	ld	X,@$XAP_AH
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#(H'0001+H'0012)
	bcc	?L190
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE212,X)
	brxl
	.SEG	CONST
?JTBASE212:
	.CODE
?L212:
	.SEG	CONST
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L198-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	dc	lwrd(?L190-?L212)
	.CODE
?L198:
	ld	AL,@$XAP_AH
	bsr	_continueStreamConnect
?L190:
?LBE25:
?LBE24:
?LBE_a2dpHandleInternalRemoteCmdTimeout:
	leavel	#4
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
$_a2dpHandleDiscoverResponse:
	enterl	#4
?LBB_a2dpHandleDiscoverResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0001
	bne	?L215
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L218
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessDiscoverResponse
	cmp	AL,#H'0000
	bne	?L217
?L218:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamReset
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
	bra	(?L215)
?L217:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0001
	bsr	$_blockSetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0006,X)
	ld	AL,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockSetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0005,X)
	ld	AL,@$XAP_UXL
	bsr	_continueStreamConnect
?L215:
?LBE_a2dpHandleDiscoverResponse:
	leavel	#4
$_a2dpHandleGetCapabilitiesResponse:
	enterl	#3
?LBB_a2dpHandleGetCapabilitiesResponse:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0002
	bne	?L222
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L224
	ld	AL,@(0,Y)
	bsr	$_a2dpProcessGetCapabilitiesResponse
	cmp	AL,#H'0000
	bne	?L227
?L224:
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetStreamState
	ld	AL,@(0,Y)
	bsr	_selectNextSeid
	cmp	AL,#H'0000
	beq	?L222
?L227:
	ld	AL,@(0,Y)
	bsr	_continueStreamConnect
?L222:
?LBE_a2dpHandleGetCapabilitiesResponse:
	leavel	#3
$_a2dpHandleCodecConfigureResponse:
	enterl	#5
?LBB_a2dpHandleCodecConfigureResponse:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
?LBB26:
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0003
	bne	?L230
	ld	X,@$XAP_AH
	tst	@(H'0001,X)
	beq	?L232
	ld	AL,#H'0004
	add	AL,@$XAP_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0002,X)
	bsr	$_a2dpProcessCodecConfigureResponse
	cmp	AL,#H'0000
	beq	?L232
	ld	AL,@(H'0002,Y)
	bsr	_issueClientSetConfiguration
	bra	(?L230)
?L232:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetStreamState
	ld	AL,@(H'0002,Y)
	bsr	_selectNextSeid
	cmp	AL,#H'0000
	beq	?L230
	ld	AL,@(H'0002,Y)
	bsr	_continueStreamConnect
?L230:
?LBE26:
?LBE_a2dpHandleCodecConfigureResponse:
	leavel	#5
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
$_a2dpHandleSetConfigurationResponse:
	enterl	#3
?LBB_a2dpHandleSetConfigurationResponse:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0004
	bne	?L236
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L238
	ld	X,@(0,Y)
	ld	AL,@(H'0004,X)
	or	AL,#H'0080
	st	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	or	AL,#H'0002
	asl	#H'000E
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	bra	(?L241)
?L238:
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetStreamState
	ld	AL,@(0,Y)
	bsr	_selectNextSeid
	cmp	AL,#H'0000
	beq	?L236
?L241:
	ld	AL,@(0,Y)
	bsr	_continueStreamConnect
?L236:
?LBE_a2dpHandleSetConfigurationResponse:
	leavel	#3
$_a2dpHandleReconfigureResponse:
	enterl	#4
?LBB_a2dpHandleReconfigureResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0010
	bne	?L244
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L246
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessReconfigureResponse
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,#H'0000
	bra	(?L248)
?L246:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,#H'000A
?L248:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpMediaReconfigureCfm
?L244:
?LBE_a2dpHandleReconfigureResponse:
	leavel	#4
$_a2dpHandleOpenResponse:
	enterl	#4
?LBB_a2dpHandleOpenResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0006
	bne	?L251
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L253
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpMediaConnectReq
	bra	(?L251)
?L253:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
?L251:
?LBE_a2dpHandleOpenResponse:
	leavel	#4
$_a2dpHandleStartResponse:
	enterl	#4
?LBB_a2dpHandleStartResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L258
	cmp	AL,#H'000A
	beq	?L258
	cmp	AL,#H'0009
	beq	?L258
	ld	AH,@$XAP_UXL
	add	AH,#H'000E
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L263)
?L258:
	ld	AL,@(H'0001,Y)
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	beq	?L260
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0009
	bne	?L259
?L260:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,#H'0000
	bra	(?L262)
?L259:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,#H'000A
?L262:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L263:
	bsr	$_a2dpMediaStartCfm
?LBE_a2dpHandleStartResponse:
	leavel	#4
$_a2dpHandleSuspendResponse:
	enterl	#4
?LBB_a2dpHandleSuspendResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'000C
	beq	?L270
	cmp	AL,#H'0008
	beq	?L270
	ld	AH,@$XAP_UXL
	add	AH,#H'000E
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L275)
?L270:
	ld	AL,@(H'0001,Y)
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	beq	?L272
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	bne	?L271
?L272:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,#H'0000
	bra	(?L274)
?L271:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,#H'000A
?L274:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L275:
	bsr	$_a2dpMediaSuspendCfm
?LBE_a2dpHandleSuspendResponse:
	leavel	#4
$_a2dpHandleCloseResponse:
	enterl	#4
?LBB_a2dpHandleCloseResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB27:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L281
	cmp	AL,#H'000A
	beq	?L281
	cmp	AL,#H'000B
	beq	?L281
	cmp	AL,#H'000C
	beq	?L281
	cmp	AL,#H'0009
	beq	?L281
	cmp	AL,#H'000F
	beq	?L281
	cmp	AL,#H'0010
	beq	?L281
	cmp	AL,#H'000E
	beq	?L281
	cmp	AL,#H'000D
	beq	?L281
	ld	AH,@$XAP_UXL
	add	AH,#H'000E
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaCloseInd
	bra	(?L280)
?L281:
	ld	AL,@(H'0001,Y)
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L282
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#-H'0003
	asl	#H'000E
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	and	AL,#H'0007
	bsr	$_blockSetCurrent
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	or	AL,#H'00A5
	st	AL,@(H'0005,X)
	ld	AL,@(H'0006,X)
	and	AL,#-H'0100
	or	AL,#H'00A5
	st	AL,@(H'0006,X)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockRemove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockRemove
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000D
	bsr	$_a2dpSetStreamState
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000E,X)
	bsr	$_a2dpMediaDisconnectReq
	bra	(?L280)
?L282:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
?L280:
?LBE27:
?LBE_a2dpHandleCloseResponse:
	leavel	#4
$_a2dpHandleAbortResponse:
	enterl	#3
?LBB_a2dpHandleAbortResponse:
	st	AL,@(0,Y)
	bsr	$_a2dpStreamReset
	ld	AL,@(0,Y)
	bsr	$_a2dpDisconnectAllMedia
	cmp	AL,#H'0000
	bne	?L294
	ld	AL,@(0,Y)
	bsr	$_a2dpSignallingDisconnectPending
?L294:
?LBE_a2dpHandleAbortResponse:
	leavel	#3
$_a2dpHandleGetAllCapabilitiesResponse:
	enterl	#3
?LBB_a2dpHandleGetAllCapabilitiesResponse:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0002
	bne	?L296
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L298
	ld	AL,@(0,Y)
	bsr	$_a2dpProcessGetAllCapabilitiesResponse
	cmp	AL,#H'0000
	bne	?L301
?L298:
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_a2dpSetStreamState
	ld	AL,@(0,Y)
	bsr	_selectNextSeid
	cmp	AL,#H'0000
	beq	?L296
?L301:
	ld	AL,@(0,Y)
	bsr	_continueStreamConnect
?L296:
?LBE_a2dpHandleGetAllCapabilitiesResponse:
	leavel	#3
$_a2dpHandleDelayReportResponse:
	enterl	#4
?LBB_a2dpHandleDelayReportResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	ld	AH,@$XAP_AL
	and	AH,#H'001F
	ld	AL,#-H'0005
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0006)
	bcc	?L304
	cmp	AH,#H'0005
	bne	?L306
	ld	AL,@$XAP_UXL
	bsr	_getReceivedMessageType
	cmp	AL,#H'0002
	bne	?L307
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaAvSyncDelayCfm
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L304
	ld	AL,@$XAP_UXL
	bsr	_continueStreamConnect
	bra	(?L304)
?L307:
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaAvSyncDelayCfm
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
	bra	(?L304)
?L306:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0009
	bne	?L304
	ld	AL,@$XAP_UXL
	bsr	_isDelayReportPending
	cmp	AL,#H'0000
	beq	?L304
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	_setDelayReportPending
	ld	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0011,X)
	bsr	$_a2dpStreamDelayReport
?L304:
?LBE_a2dpHandleDelayReportResponse:
	leavel	#4
$_a2dpHandleDiscoverCommand:
	enterl	#5
?LBB_a2dpHandleDiscoverCommand:
	st	AL,@(H'0002,Y)
?LBB28:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessDiscoverCommand
	cmp	AL,#H'0000
	beq	?L317
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_a2dpSendReject
	bra	(?L316)
?L317:
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0001
	bsr	$_a2dpSendAccept
?L316:
?LBE28:
?LBE_a2dpHandleDiscoverCommand:
	leavel	#5
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_a2dpHandleGetCapabilitiesCommand:
	enterl	#5
?LBB_a2dpHandleGetCapabilitiesCommand:
	st	AL,@(H'0002,Y)
?LBB29:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessGetCapabilitiesCommand
	cmp	AL,#H'0000
	beq	?L320
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_a2dpSendReject
	bra	(?L319)
?L320:
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_a2dpSendAccept
?L319:
?LBE29:
?LBE_a2dpHandleGetCapabilitiesCommand:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_a2dpHandleSetConfigurationCommand:
	enterl	#7
?LBB_a2dpHandleSetConfigurationCommand:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB30:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0005
	bcz	?L323
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L328)
?L323:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessSetConfigurationCommand
	cmp	AL,#H'0000
	beq	?L325
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
?L328:
	ld	AH,#H'0003
	bsr	$_a2dpSendReject
	bra	(?L322)
?L325:
	ld	X,@(H'0002,Y)
?LBB31:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetBase
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockGetSize
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0081
	st	AL,@(H'0004,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0005
	bsr	$_a2dpSetStreamState
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0003
	bsr	$_a2dpSendAccept
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0008
	ld	AH,@(H'0003,Y)
	bsr	$_a2dpIsServiceSupported
	cmp	AL,#H'0000
	beq	?L322
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0008
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L322
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaAvSyncDelayInd
?L322:
?LBE31:
?LBE30:
?LBE_a2dpHandleSetConfigurationCommand:
	leavel	#7
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
$_a2dpHandleGetConfigurationCommand:
	enterl	#5
?LBB_a2dpHandleGetConfigurationCommand:
	st	AL,@(H'0002,Y)
?LBB32:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessGetConfigurationCommand
	cmp	AL,#H'0000
	beq	?L332
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0004
	bsr	$_a2dpSendReject
	bra	(?L331)
?L332:
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0004
	bsr	$_a2dpSendAccept
?L331:
?LBE32:
?LBE_a2dpHandleGetConfigurationCommand:
	leavel	#5
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
$_a2dpHandleReconfigureCommand:
	enterl	#5
?LBB_a2dpHandleReconfigureCommand:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB33:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	add	AL,#-H'0006
	cmp	AL,#H'0002
	bcz	?L335
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L339)
?L335:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessReconfigureCommand
	cmp	AL,#H'0000
	beq	?L337
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
?L339:
	ld	AH,#H'0005
	bsr	$_a2dpSendReject
	bra	(?L334)
?L337:
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0005
	bsr	$_a2dpSendAccept
	ld	AH,@(H'0002,Y)
	add	AH,#H'000E
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpMediaReconfigureInd
?L334:
?LBE33:
?LBE_a2dpHandleReconfigureCommand:
	leavel	#5
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
$_a2dpHandleOpenCommand:
	enterl	#5
?LBB_a2dpHandleOpenCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB34:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0005
	beq	?L342
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L346)
?L342:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessOpenCommand
	cmp	AL,#H'0000
	beq	?L344
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L346:
	ld	AH,#H'0006
	bsr	$_a2dpSendReject
	bra	(?L341)
?L344:
	ld	X,@(H'0001,Y)
?LBB35:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0007
	bsr	$_a2dpSetStreamState
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	$_a2dpMediaOpenInd
?L341:
?LBE35:
?LBE34:
?LBE_a2dpHandleOpenCommand:
	leavel	#5
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
$_a2dpHandleCloseCommand:
	enterl	#4
?LBB_a2dpHandleCloseCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB36:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	add	AL,#-H'0006
	cmp	AL,#(H'0001+H'0001)
	bcc	?L349
	ld	AL,#H'0000
	bra	(?L348)
?L349:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L351
	cmp	AL,#H'000A
	beq	?L351
	cmp	AL,#H'000B
	beq	?L351
	cmp	AL,#H'000C
	beq	?L351
	cmp	AL,#H'000F
	beq	?L351
	cmp	AL,#H'0010
	beq	?L351
	cmp	AL,#H'0009
	beq	?L351
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L355)
?L351:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessCloseCommand
	cmp	AL,#H'0000
	beq	?L353
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L355:
	ld	AH,#H'0008
	bsr	$_a2dpSendReject
	bra	(?L350)
?L353:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000E
	bsr	$_a2dpSetStreamState
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSendAccept
?L350:
	ld	AL,#H'0001
?L348:
?LBE36:
?LBE_a2dpHandleCloseCommand:
	leavel	#4
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
$_a2dpHandleStartCommand:
	enterl	#4
?LBB_a2dpHandleStartCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB37:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	add	AL,#-H'0006
	cmp	AL,#(H'0001+H'0001)
	bcc	?L364
	ld	AL,#H'0000
	bra	(?L363)
?L364:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L366
	cmp	AL,#H'000A
	beq	?L366
	cmp	AL,#H'000B
	beq	?L366
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L370)
?L366:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessStartCommand
	cmp	AL,#H'0000
	beq	?L368
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L370:
	ld	AH,#H'0007
	bsr	$_a2dpSendReject
	bra	(?L365)
?L368:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000B
	bsr	$_a2dpSetStreamState
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpMediaStartInd
?L365:
	ld	AL,#H'0001
?L363:
?LBE37:
?LBE_a2dpHandleStartCommand:
	leavel	#4
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
$_a2dpHandleSuspendCommand:
	enterl	#4
?LBB_a2dpHandleSuspendCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB38:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0009
	beq	?L375
	cmp	AL,#H'000C
	beq	?L375
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L379)
?L375:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessSuspendCommand
	cmp	AL,#H'0000
	beq	?L377
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L379:
	ld	AH,#H'0009
	bsr	$_a2dpSendReject
	bra	(?L374)
?L377:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_a2dpSendAccept
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpMediaSuspendInd
?L374:
?LBE38:
?LBE_a2dpHandleSuspendCommand:
	leavel	#4
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
$_a2dpHandleAbortCommand:
	enterl	#4
?LBB_a2dpHandleAbortCommand:
	st	AL,@(H'0001,Y)
	bsr	$_a2dpProcessAbortCommand
	cmp	AL,#H'0000
	beq	?L382
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000A
	bsr	$_a2dpSendAccept
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpDisconnectAllMedia
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamReset
?L382:
?LBE_a2dpHandleAbortCommand:
	leavel	#4
$_a2dpHandleGetAllCapabilitiesCommand:
	enterl	#5
?LBB_a2dpHandleGetAllCapabilitiesCommand:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB39:
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#(H'0001+H'0004)
	bcc	?L385
	ld	AL,@$XAP_UXL
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessGetCapabilitiesCommand
	bra	(?L386)
?L385:
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_a2dpProcessGetAllCapabilitiesCommand
?L386:
	cmp	AL,#H'0000
	beq	?L387
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000C
	bsr	$_a2dpSendReject
	bra	(?L384)
?L387:
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000C
	bsr	$_a2dpSendAccept
?L384:
?LBE39:
?LBE_a2dpHandleGetAllCapabilitiesCommand:
	leavel	#5
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
$_a2dpHandleDelayReportCommand:
	enterl	#4
?LBB_a2dpHandleDelayReportCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB40:
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	add	AL,#-H'0005
	cmp	AL,#H'0006
	bcz	?L390
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L395)
?L390:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpProcessDelayReportCommand
	cmp	AL,#H'0000
	beq	?L392
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L395:
	ld	AH,#H'000D
	bsr	$_a2dpSendReject
	bra	(?L391)
?L392:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'000D
	bsr	$_a2dpSendAccept
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'000A
	ld	AL,@(H'0011,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaAvSyncDelayUpdatedInd
?L391:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0005
	bne	?L389
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L389
	ld	AL,@$XAP_UXL
	bsr	_continueStreamConnect
?L389:
?LBE40:
?LBE_a2dpHandleDelayReportCommand:
	leavel	#4
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
$_a2dpStreamClose:
	enterl	#6
?LBB_a2dpStreamClose:
	st	AL,@(H'0002,Y)
	ld	AH,@$XAP_AL
?LBB41:
	add	AH,#H'0009
	add	AL,#H'000E
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	bne	?L407
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	bne	?L407
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	add	AL,#-H'0008
	cmp	AL,#H'0004
	bcz	?L403
?L407:
	ld	AL,#H'0000
	bra	(?L398)
?L403:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L405
	ld	AL,@(H'0002,Y)
	ld	AH,#H'000D
	bsr	$_a2dpSetStreamState
	bra	(?L406)
?L405:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamAbort
?L406:
	ld	AL,#H'0001
?L398:
?LBE41:
?LBE_a2dpStreamClose:
	leavel	#6
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
$_a2dpStreamEstablish:
	enterl	#4
?LBB_a2dpStreamEstablish:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB42:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	add	X,#H'0009
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L412
	ld	AL,#H'0008
	bra	(?L416)
?L412:
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0000
	beq	?L414
	ld	AL,#H'0007
?L416:
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
	bra	(?L411)
?L414:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	bsr	_issueDiscover
?L411:
?LBE42:
?LBE_a2dpStreamEstablish:
	leavel	#4
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
$_a2dpStreamOpenResponse:
	enterl	#4
?LBB_a2dpStreamOpenResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB43:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	add	X,#H'0009
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L419
	ld	AL,#H'0008
	bra	(?L425)
?L419:
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0007
	beq	?L421
	ld	AL,#H'0007
?L425:
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0000
	bsr	$_a2dpMediaOpenCfm
	bra	(?L418)
?L421:
	ld	X,@(H'0001,Y)
	tst	@(H'0001,X)
	beq	?L423
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0006
	bsr	$_a2dpSendAccept
	bra	(?L418)
?L423:
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0006
	bsr	$_a2dpSendReject
	ld	X,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_a2dpStreamReset
?L418:
?LBE43:
?LBE_a2dpStreamOpenResponse:
	leavel	#4
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
$_a2dpStreamStart:
	enterl	#7
?LBB_a2dpStreamStart:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB44:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	add	AL,#H'0009
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L429
	ld	AL,#H'0008
	bra	(?L437)
?L429:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	beq	?L431
	ld	AL,#H'0009
	bra	(?L437)
?L431:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L433
	ld	AL,#H'0007
	bra	(?L437)
?L433:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0007
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L435
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000A
	bsr	$_a2dpSetStreamState
	bra	(?L428)
?L435:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
?L437:
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	bsr	$_a2dpMediaStartCfm
?L428:
?LBE44:
?LBE_a2dpStreamStart:
	leavel	#7
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
$_a2dpStreamStartResponse:
	enterl	#5
?LBB_a2dpStreamStartResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB45:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L442
	cmp	AL,#H'000B
	beq	?L442
	cmp	AL,#H'0009
	beq	?L442
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0007
	bsr	$_a2dpSendReject
	ld	AH,@(H'0002,Y)
	add	AH,#H'000E
	ld	AL,#H'0007
	bra	(?L447)
?L442:
	ld	X,@(H'0001,Y)
	tst	@(H'0002,X)
	bne	?L444
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'0009
	bne	?L443
?L444:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0009
	bsr	$_a2dpSetStreamState
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0007
	bsr	$_a2dpSendAccept
	ld	AH,@(H'0002,Y)
	add	AH,#H'000E
	ld	X,#H'0000
	st	X,@(0,Y)
	bra	(?L446)
?L443:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	ld	AL,#H'0031
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0007
	bsr	$_a2dpSendReject
	ld	AH,@(H'0002,Y)
	add	AH,#H'000E
	ld	AL,#H'0005
?L447:
	st	AL,@(0,Y)
?L446:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpMediaStartCfm
?LBE45:
?LBE_a2dpStreamStartResponse:
	leavel	#5
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
$_a2dpStreamRelease:
	enterl	#7
?LBB_a2dpStreamRelease:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB46:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	add	AL,#H'0009
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L453
	ld	AL,#H'0008
	bra	(?L461)
?L453:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	beq	?L455
	ld	AL,#H'0009
	bra	(?L461)
?L455:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	AH,@$XAP_AL
	and	AH,#H'001F
	ld	AL,#-H'0008
	add	AL,@$XAP_AH
	cmp	AL,#H'0004
	bcz	?L457
	cmp	AH,#H'000F
	beq	?L457
	cmp	AH,#H'0010
	beq	?L457
	ld	AL,#H'0007
	bra	(?L461)
?L457:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0008
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L459
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000D
	bsr	$_a2dpSetStreamState
	bra	(?L452)
?L459:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
?L461:
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	bsr	$_a2dpMediaCloseInd
?L452:
?LBE46:
?LBE_a2dpStreamRelease:
	leavel	#7
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
$_a2dpStreamSuspend:
	enterl	#7
?LBB_a2dpStreamSuspend:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB47:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	add	AL,#H'0009
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L468
	ld	AL,#H'0008
	bra	(?L476)
?L468:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	beq	?L470
	ld	AL,#H'0009
	bra	(?L476)
?L470:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0009
	beq	?L472
	ld	AL,#H'0007
	bra	(?L476)
?L472:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0009
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L474
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'000C
	bsr	$_a2dpSetStreamState
	bra	(?L467)
?L474:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
?L476:
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	bsr	$_a2dpMediaSuspendCfm
?L467:
?LBE47:
?LBE_a2dpStreamSuspend:
	leavel	#7
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
$_a2dpStreamReconfigure:
	enterl	#7
?LBB_a2dpStreamReconfigure:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB48:
	ld	AL,@(0,X)
	bsr	$_PanicNull
	add	AL,#H'0009
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'00E0
	cmp	AL,#H'0080
	beq	?L481
	ld	AL,#H'0008
	bra	(?L489)
?L481:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	cmp	AL,#H'0004
	beq	?L483
	ld	AL,#H'0009
	bra	(?L489)
?L483:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'001F
	cmp	AL,#H'0008
	beq	?L485
	ld	AL,#H'0007
	bra	(?L489)
?L485:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0005
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L487
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0007,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0008,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0010
	bsr	$_a2dpSetStreamState
	bra	(?L480)
?L487:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_a2dpStreamAbort
	ld	AL,#H'0005
?L489:
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	bsr	$_a2dpMediaReconfigureCfm
?L480:
?LBE48:
?LBE_a2dpStreamReconfigure:
	leavel	#7
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
$_a2dpStreamDelayReport:
	enterl	#3
?LBB_a2dpStreamDelayReport:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'000D,X)
	ld	AL,@$XAP_UXL
	and	AL,#H'001F
	add	AL,#-H'0005
	cmp	AL,#(H'0001+H'0006)
	bcc	?L493
	ld	AL,@$XAP_UXL
	and	AL,#H'00E0
	cmp	AL,#H'0080
	bne	?L493
	ld	AL,@(0,Y)
	bsr	_sendDelayReport
	cmp	AL,#H'0000
	bne	?L493
	ld	AL,@(0,Y)
	ld	AH,#H'0001
	bsr	_setDelayReportPending
?L493:
?LBE_a2dpStreamDelayReport:
	leavel	#3
$_a2dpStreamAbort:
	enterl	#5
?LBB_a2dpStreamAbort:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'000D,X)
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	add	AL,#-H'0011
	cmp	AL,#H'0001
	bcz	?L498
	ld	AL,@$XAP_AH
	and	AL,#H'00E0
	cmp	AL,#H'0080
	bne	?L498
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'000A
	bsr	$_a2dpSendCommand
	cmp	AL,#H'0000
	beq	?L501
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0011
	bsr	$_a2dpSetStreamState
	bra	(?L498)
?L501:
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpDisconnectAllMedia
	ld	AL,@(H'0002,Y)
	bsr	$_a2dpStreamReset
?L498:
?LBE_a2dpStreamAbort:
	leavel	#5
$_a2dpStreamReset:
	enterl	#4
?LBB_a2dpStreamReset:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB49:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L506
	ld	AH,@(H'0001,X)
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#-H'0003
	asl	#H'000E
	ld	AH,@(H'0001,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
?L506:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	and	AL,#H'0007
	bsr	$_blockSetCurrent
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	and	AL,#-H'0100
	or	AL,#H'00A5
	st	AL,@(H'0005,X)
	ld	AL,@(H'0006,X)
	and	AL,#-H'0100
	or	AL,#H'00A5
	st	AL,@(H'0006,X)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0003
	bsr	$_blockRemove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0002
	bsr	$_blockRemove
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	and	AH,#H'0007
	add	AH,#H'0029
	ld	AL,@$_a2dp
	bsr	$_MessageCancelAll
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#-H'0301
	st	AL,@(H'000D,X)
	ld	AL,@(H'000A,X)
	and	AL,#-H'0010
	st	AL,@(H'000A,X)
	ld	AL,@(H'000B,X)
	and	AL,#H'0FFF
	st	AL,@(H'000B,X)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_a2dpSetStreamState
?LBE49:
?LBE_a2dpStreamReset:
	leavel	#4
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
	ENDMOD

;# Function pattern *movqi2 used[0] = 392 used[1] = 155 used[3] = 1 total = 548
;# Function pattern *movqi3 used[0] = 587 total = 587
;# Function pattern *movqi8 used[0] = 18 total = 18
;# Function pattern *addqi0 used[0] = 12 total = 12
;# Function pattern *addqi2 used[0] = 72 used[2] = 3 total = 75
;# Function pattern *andqi3 used[0] = 131 total = 131
;# Function pattern *iorqi3 used[0] = 17 total = 17
;# Function pattern *mulqi3_const used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 30 total = 30
;# Function pattern *ashlqi3 used[0] = 8 total = 8
;# Function pattern jump used[0] = 83 total = 83
;# Function pattern *call1 used[0] = 133 total = 133
;# Function pattern *call_value1 used[0] = 135 total = 135
;# Function pattern tablejump_1 used[0] = 4 total = 4
;# Function pattern movstrqi+2 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 59 used[1] = 7 total = 66
;# Function pattern movstrqi+4 used[1] = 11 total = 11
;# Function pattern movstrqi+5 used[0] = 102 total = 102
	MODULE	a2dp_packet_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_avdtp_min_pdu_length:
	dc	H'0002
	dc	H'0002
	dc	H'0003
	dc	H'0005
	dc	H'0003
	dc	H'0005
	dc	H'0003
	dc	H'0003
	dc	H'0003
	dc	H'0003
	dc	H'0003
	dc	H'0003
	dc	H'0003
	dc	H'0005
	.CODE
_getLocalSeid:
	enterl	#2
?LBB_getLocalSeid:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0004,X)
	and	AL,#H'0007
	ld	AH,#H'0000
	bsr	$_blockGetCurrent
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(0,X)
	ld	AL,@(0,X)
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_getLocalSeid:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_a2dpGrabSink:
	enterl	#5
?LBB_a2dpGrabSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB3:
	bsr	$_SinkMap
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_SinkClaim
	cmp	AL,#-H'0001
	bne	?L4
	ld	AL,#H'0000
	bra	(?L3)
?L4:
	ld	AH,@(H'0002,Y)
	add	AL,@$XAP_AH
?L3:
?LBE3:
?LBE_a2dpGrabSink:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_sinkFlushHeader:
	enterl	#6
?LBB_sinkFlushHeader:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AH,@(H'0007,Y)
	bsr	$_SinkClaim
	cmp	AL,#-H'0001
	beq	?L7
?LBB5:
	ld	AL,@(H'0001,Y)
	bsr	$_SinkMap
	st	AL,@(H'0003,Y)
	add	AL,@(H'0007,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_memmove
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AH,@(H'0002,Y)
	add	AH,@(H'0007,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_SinkFlush
	ld	AL,#H'0001
	bra	(?L6)
?L7:
?LBE5:
	ld	AL,#H'0000
?L6:
?LBE4:
?LBE_sinkFlushHeader:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_sendPacket:
	enterl	#9
?LBB_sendPacket:
	st	AH,@(H'0005,Y)
?LBB6:
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	add	AH,#-H'0001
	ld	AL,@(H'000A,Y)
	cmp	AL,@$XAP_AH
	bcc	?L10
	ld	AL,@(H'0005,Y)
	and	AL,#H'00F3
	st	AL,@(H'0002,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0002
	bra	(?L21)
?L10:
	ld	AL,@(H'0005,Y)
	and	AL,#H'00F3
	or	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	st	AH,@H'fff8
	ld	AL,@(H'000A,Y)
	add	AL,@$XAP_AH
	ld	X,#-H'0001
	add	X,@$XAP_AH
	ld	AH,#H'0000
	udiv	@$XAP_UXL
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	sub	AL,@H'fff8
	add	AL,#H'0003
	st	AL,@(H'000A,Y)
	ld	X,#-H'0003
	add	X,@H'fff8
	st	X,@H'fff8
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,@H'fff8
	bsr	_sinkFlushHeader
	cmp	AL,#H'0000
	bne	?L12
?L20:
	ld	AL,#H'0000
	bra	(?L9)
?L12:
	ld	AL,@(H'0005,Y)
	and	AL,#H'00F3
	or	AL,#H'0008
	st	AL,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	add	AH,#-H'0001
	ld	AL,@(H'000A,Y)
	cmp	AL,@$XAP_AH
	bcz	?L19
?L17:
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	ld	AL,@(H'000A,Y)
	sub	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	add	AH,#-H'0001
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	bsr	_sinkFlushHeader
	cmp	AL,#H'0000
	beq	?L20
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0004
	add	AH,#-H'0001
	ld	AL,@(H'000A,Y)
	cmp	AL,@$XAP_AH
	beq	?L24
	bcc	?L17
?L24:
?L19:
	ld	AL,@(H'0005,Y)
	and	AL,#H'00F3
	or	AL,#H'000C
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0001
?L21:
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'000A,Y)
	bsr	_sinkFlushHeader
?L9:
?LBE6:
?LBE_sendPacket:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_a2dpSendAccept:
	enterl	#4
?LBB_a2dpSendAccept:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
?LBB7:
	ld	AH,@(H'000B,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	asl	#H'0004
	ld	AH,@$XAP_AL
	ld	AL,@(H'000D,X)
	and	AL,#-H'0101
	st	AL,@(H'000D,X)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	or	AH,#H'0002
	bsr	_sendPacket
	bsr	$_PanicNull
?LBE7:
?LBE_a2dpSendAccept:
	leavel	#4
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_a2dpSendReject:
	enterl	#7
?LBB_a2dpSendReject:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB8:
	cmp	AH,#H'0003
	beq	?L28
	cmp	AH,#H'0005
	beq	?L28
	cmp	AH,#H'0007
	beq	?L28
	cmp	AH,#H'0009
	bne	?L27
?L28:
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	bra	(?L29)
?L27:
	ld	X,#H'0001
	st	X,@(H'0004,Y)
?L29:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0009,X)
	ld	AH,@(H'0004,Y)
	bsr	$_a2dpGrabSink
	st	AL,@H'fff9
	cmp	AL,#H'0000
	beq	?L26
	ld	X,@(H'0002,Y)
?LBB9:
	ld	AH,@(H'000B,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	asl	#H'0004
	st	AL,@H'fff8
	ld	AL,@(H'000D,X)
	and	AL,#-H'0101
	st	AL,@(H'000D,X)
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bcz	?L31
	ld	AH,@(H'0007,Y)
	lsr	#H'0008
	ld	X,@H'fff9
	st	AH,@(0,X)
	ld	AL,#H'0001
	add	AL,@H'fff9
	st	AL,@H'fff9
?L31:
	ld	AL,@(H'0007,Y)
	ld	X,@H'fff9
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@H'fff8
	or	AH,#H'0003
	bsr	_sendPacket
	bsr	$_PanicNull
?L26:
?LBE9:
?LBE8:
?LBE_a2dpSendReject:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_a2dpSendGeneralReject:
	enterl	#5
?LBB_a2dpSendGeneralReject:
	st	AL,@H'fff9
	ld	X,@$XAP_AL
?LBB10:
	ld	X,@(H'000C,X)
	st	X,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'000B,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	asl	#H'0004
	st	AL,@H'fff8
	ld	AL,@(H'000D,X)
	and	AL,#-H'0101
	st	AL,@(H'000D,X)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'0007
	add	AH,#-H'0002
	cmp	AH,#(H'0001+H'0002)
	bcc	?L38
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bra	(?L40)
?L38:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	or	AH,#H'0001
?L40:
	bsr	_sendPacket
	bsr	$_PanicNull
?LBE10:
?LBE_a2dpSendGeneralReject:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_a2dpSendCommand:
	enterl	#10
?LBB_a2dpSendCommand:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB11:
	ld	AL,@(H'0009,X)
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L52
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L52
	ld	X,@(H'0002,Y)
	ld	AH,@(H'000D,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L44
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0008
	beq	?L44
	cmp	AL,#H'000A
	bne	?L52
?L44:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	beq	?L45
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0003
	bne	?L45
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
?L45:
	ld	AH,@(H'000B,Y)
	add	AH,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_a2dpGrabSink
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L47
?L52:
	ld	AL,#H'0000
	bra	(?L41)
?L47:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000A,X)
	ld	AH,@$XAP_AL
	and	AH,#H'000F
	add	AH,#H'0001
	and	AH,#H'000F
	and	AL,#-H'0010
	or	AH,@$XAP_AL
	st	AH,@(H'000A,X)
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	cmp	AL,#H'0000
	bne	?L48
	ld	AL,@$XAP_AH
	and	AL,#-H'0010
	or	AL,#H'0001
	st	AL,@(H'000A,X)
?L48:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000D,X)
	or	AL,#H'0200
	st	AL,@(H'000D,X)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	beq	?L49
	ld	AH,@(H'0005,X)
	lsr	#H'000A
	ld	AL,@$XAP_AH
	asl	#H'0002
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	add	X,#H'0001
	st	X,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0003
	bne	?L49
	st	X,@(H'0007,Y)
	add	X,#H'0001
	st	X,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	bsr	_getLocalSeid
	asl	#H'0002
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
?L49:
	tst	@(H'000A,Y)
	beq	?L51
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
?L51:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'000A,X)
	and	AL,#H'000F
	asl	#H'0004
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	add	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	_sendPacket
?L41:
?LBE11:
?LBE_a2dpSendCommand:
	leavel	#10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
_processGeneralRejectResponse:
	enterl	#6
?LBB_processGeneralRejectResponse:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB12:
	ld	X,@(H'000C,X)
	st	X,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'000D,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L60
	ld	AL,@(H'000A,X)
	and	AL,#H'000F
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	ld	AL,@(H'0003,Y)
	cmp	AL,@$XAP_AH
	bne	?L59
?L60:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#H'001F
	cmp	AL,#H'000C
	bne	?L61
	ld	AH,@$XAP_UXL
	add	AH,#H'000E
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_a2dpMediaSuspendCfm
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_a2dpSetStreamState
	bra	(?L59)
?L61:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpStreamAbort
?L59:
?LBE12:
?LBE_processGeneralRejectResponse:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_handleReceiveCommand:
	enterl	#6
?LBB_handleReceiveCommand:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB13:
	ld	X,@(H'000C,X)
	st	X,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'000B,X)
	and	X,#H'0FFF
	st	X,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0000
	beq	?L93
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L93
	ld	X,@(H'0001,Y)
	ld	AH,@(H'000D,X)
	lsr	#H'0008
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L93
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'000C
	ld	X,@(H'0001,Y)
	ld	AH,@(H'000B,X)
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	st	AH,@(H'000B,X)
	ld	AL,@(H'000D,X)
	or	AL,#H'0100
	st	AL,@(H'000D,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#(H'0001+H'000D)
	bcc	?L87
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	ld	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	cmp	AL,@(_avdtp_min_pdu_length,X)
	bcc	?L70
	ld	AL,#H'0011
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	bsr	$_a2dpSendReject
	bra	(?L71)
?L70:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#(H'0001+H'000D)
	bcc	?L90
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE91,X)
	brxl
	.SEG	CONST
?JTBASE91:
	.CODE
?L91:
	.SEG	CONST
	dc	lwrd(?L72-?L91)
	dc	lwrd(?L75-?L91)
	dc	lwrd(?L76-?L91)
	dc	lwrd(?L77-?L91)
	dc	lwrd(?L78-?L91)
	dc	lwrd(?L79-?L91)
	dc	lwrd(?L80-?L91)
	dc	lwrd(?L81-?L91)
	dc	lwrd(?L83-?L91)
	dc	lwrd(?L85-?L91)
	dc	lwrd(?L86-?L91)
	dc	lwrd(?L87-?L91)
	dc	lwrd(?L88-?L91)
	dc	lwrd(?L89-?L91)
	.CODE
?L72:
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#(H'0001+H'0004)
	bcc	?L87
	ld	AL,@$XAP_UXL
	bsr	_processGeneralRejectResponse
	bra	(?L71)
?L75:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleDiscoverCommand
	bra	(?L71)
?L76:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleGetCapabilitiesCommand
	bra	(?L71)
?L77:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleSetConfigurationCommand
	bra	(?L71)
?L78:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleGetConfigurationCommand
	bra	(?L71)
?L79:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleReconfigureCommand
	bra	(?L71)
?L80:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleOpenCommand
	bra	(?L71)
?L81:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleStartCommand
	bra	(?L94)
?L83:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleCloseCommand
?L94:
	cmp	AL,#H'0000
	bne	?L71
	ld	X,@(H'0001,Y)
	ld	AL,@(H'000D,X)
	and	AL,#-H'0101
	st	AL,@(H'000D,X)
?L93:
	ld	AL,#H'0000
	bra	(?L65)
?L85:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleSuspendCommand
	bra	(?L71)
?L86:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleAbortCommand
	bra	(?L71)
?L87:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpSendGeneralReject
	bra	(?L71)
?L88:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleGetAllCapabilitiesCommand
	bra	(?L71)
?L89:
	ld	AL,@(H'0001,Y)
	bsr	$_a2dpHandleDelayReportCommand
	bra	(?L71)
?L90:
	bsr	$_Panic
?L71:
	ld	AL,#H'0001
?L65:
?LBE13:
?LBE_handleReceiveCommand:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_handleReceiveResponse:
	enterl	#6
?LBB_handleReceiveResponse:
	st	AL,@H'fff8
?LBB14:
	add	AL,#H'0009
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0003,X)
	st	X,@(0,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0002,X)
	and	X,#H'0FFF
	st	X,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'0009
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L97
	ld	AL,@(H'0001,X)
	and	AL,#H'000F
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bne	?L96
?L97:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	and	AL,#-H'0201
	st	AL,@(H'0004,X)
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0001
	bcz	?L96
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#(H'0001+H'000D)
	bcc	?L96
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE114,X)
	brxl
	.SEG	CONST
?JTBASE114:
	.CODE
?L114:
	.SEG	CONST
	dc	lwrd(?L96-?L114)
	dc	lwrd(?L100-?L114)
	dc	lwrd(?L101-?L114)
	dc	lwrd(?L102-?L114)
	dc	lwrd(?L96-?L114)
	dc	lwrd(?L104-?L114)
	dc	lwrd(?L105-?L114)
	dc	lwrd(?L106-?L114)
	dc	lwrd(?L107-?L114)
	dc	lwrd(?L108-?L114)
	dc	lwrd(?L109-?L114)
	dc	lwrd(?L96-?L114)
	dc	lwrd(?L111-?L114)
	dc	lwrd(?L112-?L114)
	.CODE
?L100:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleDiscoverResponse
	bra	(?L96)
?L101:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleGetCapabilitiesResponse
	bra	(?L96)
?L102:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleSetConfigurationResponse
	bra	(?L96)
?L104:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleReconfigureResponse
	bra	(?L96)
?L105:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleOpenResponse
	bra	(?L96)
?L106:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleStartResponse
	bra	(?L96)
?L107:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleCloseResponse
	bra	(?L96)
?L108:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleSuspendResponse
	bra	(?L96)
?L109:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleAbortResponse
	bra	(?L96)
?L111:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleGetAllCapabilitiesResponse
	bra	(?L96)
?L112:
	ld	AL,@H'fff8
	bsr	$_a2dpHandleDelayReportResponse
?L96:
?LBE14:
?LBE_handleReceiveResponse:
	leavel	#6
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_handleBadHeader:
	enterl	#6
?LBB_handleBadHeader:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB15:
	add	X,#H'0009
	ld	AL,@(H'0003,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0FFF
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	cmp	AL,#H'0000
	beq	?L117
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L117
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bcz	?L117
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	asl	#H'000C
	ld	X,@(H'0001,Y)
	ld	AH,@(H'000B,X)
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	st	AH,@(H'000B,X)
	ld	AL,@(H'000D,X)
	or	AL,#H'0100
	st	AL,@(H'000D,X)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0001,X)
	bsr	$_a2dpSendReject
?L117:
?LBE15:
?LBE_handleBadHeader:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
_processSignalPacket:
	enterl	#2
?LBB_processSignalPacket:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(H'000C,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'0003
	cmp	AL,#H'0001
	beq	?L126
	cmp	AL,#H'0001
	bcs	?L124
	cmp	AL,#(H'0001+H'0003)
	bcc	?L123
	bra	(?L130)
?L124:
	ld	AL,@H'fff8
	bsr	_handleReceiveCommand
	cmp	AL,#H'0000
	bne	?L123
	ld	AL,#H'0000
	bra	(?L122)
?L126:
	ld	X,@H'fff8
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'0007
	cmp	AH,#(H'0001+H'0004)
	bcc	?L127
	ld	AL,@H'fff8
	bsr	_handleBadHeader
	bra	(?L123)
?L127:
	ld	AL,@H'fff8
	bsr	_processGeneralRejectResponse
	bra	(?L123)
?L130:
	ld	AL,@H'fff8
	bsr	_handleReceiveResponse
?L123:
	ld	AL,#H'0001
?L122:
?LBE16:
?LBE_processSignalPacket:
	leavel	#2
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_a2dpHandleSignalPacket:
	enterl	#10
?LBB_a2dpHandleSignalPacket:
	st	AL,@(H'0001,Y)
?LBB17:
	cmp	AL,#H'0000
	beq	?L135
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'0700
	cmp	AL,#H'0000
	beq	?L135
?LBB18:
	add	X,#H'0009
	st	X,@(H'0003,Y)
	ld	AL,@(0,X)
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L135
	bsr	$_SourceIsValid
	cmp	AL,#H'0000
	beq	?L135
	bra	(?L139)
?L157:
?LBB19:
	ld	AL,@(H'0004,Y)
	bsr	$_SourceMap
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0002
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	beq	?L146
	cmp	AL,#H'0001
	bcs	?L143
	cmp	AL,#(H'0001+H'0003)
	bcc	?L142
	bra	(?L150)
?L143:
	ld	X,@(H'0003,Y)
?LBB20:
	tst	@(H'0003,X)
	beq	?L144
	ld	AL,@(H'0003,X)
	bsr	$_free
?L144:
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0002,Y)
	and	AH,#H'0FFF
	ld	AL,@(H'0002,X)
	and	AL,#-H'1000
	or	AL,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	AL,@(H'0001,Y)
	bsr	_processSignalPacket
	ld	AH,#H'0000
	ld	X,@(H'0003,Y)
	st	AH,@(H'0003,X)
	cmp	AL,#H'0000
	beq	?L135
?LBE20:
	bra	(?L142)
?L146:
	ld	X,@(H'0003,Y)
	tst	@(H'0003,X)
	beq	?L147
	ld	AL,@(H'0003,X)
	bsr	$_free
?L147:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0001
	st	AL,@(H'0007,Y)
	bsr	$_malloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	cmp	AL,#H'0000
	beq	?L142
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,#H'0001
	add	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	ld	X,@(H'0002,Y)
	add	X,#-H'0002
	st	X,@(0,Y)
	bsr	$_memmove
	ld	AH,@(H'0007,Y)
	and	AH,#H'0FFF
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	and	AL,#-H'1000
	or	AL,@$XAP_AH
	st	AL,@(H'0002,X)
	bra	(?L142)
?L150:
	ld	X,@(H'0003,Y)
	tst	@(H'0003,X)
	beq	?L142
	ld	AL,@(H'0003,X)
	st	AL,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AH,@(0,X)
	and	AH,#H'00F0
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	and	AL,#H'00F0
	cmp	AH,@$XAP_AL
	bne	?L142
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	and	AH,#H'0FFF
	add	AH,@(H'0002,Y)
	add	AH,#-H'0001
	ld	AL,@(-1,Y)
	bsr	$_realloc
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	cmp	AL,#H'0000
	beq	?L142
	ld	AL,@(H'0002,X)
	and	AL,#H'0FFF
	add	AL,@(H'0003,X)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	ld	X,@(H'0002,Y)
	add	X,#-H'0001
	st	X,@(0,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0FFF
	add	AL,@(H'0002,Y)
	add	AL,#-H'0001
	and	AL,#H'0FFF
	and	AH,#-H'1000
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0003
	bne	?L142
	ld	AL,@(H'0001,Y)
	bsr	_processSignalPacket
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
?L142:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_SourceDrop
?L139:
?LBE19:
	ld	AL,@(H'0004,Y)
	bsr	$_SourceBoundary
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L157
?L135:
?LBE18:
?LBE17:
?LBE_a2dpHandleSignalPacket:
	leavel	#10
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
	ENDMOD

;# Function pattern *movqi2 used[0] = 155 used[1] = 63 used[3] = 1 total = 219
;# Function pattern *movqi3 used[0] = 183 total = 183
;# Function pattern *movqi8 used[0] = 13 total = 13
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 30 used[2] = 5 total = 35
;# Function pattern *andqi3 used[0] = 47 total = 47
;# Function pattern *iorqi3 used[0] = 16 total = 16
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *udivqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 22 total = 22
;# Function pattern *ashlqi3 used[0] = 8 total = 8
;# Function pattern *zero_extendqihi2_1 used[0] = 1 total = 1
;# Function pattern jump used[0] = 42 total = 42
;# Function pattern *call1 used[0] = 36 total = 36
;# Function pattern *call_value1 used[0] = 38 total = 38
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 26 used[1] = 4 total = 30
;# Function pattern movstrqi+4 used[0] = 1 used[1] = 8 total = 9
;# Function pattern movstrqi+5 used[0] = 27 total = 27
	MODULE	a2dp_sdp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_a2dpHandleSdpRegisterCfm:
	enterl	#2
?LBB_a2dpHandleSdpRegisterCfm:
	st	AL,@H'fff8
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000B
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	add	AL,#-H'0001
	and	AL,#H'0003
	asl	#H'000B
	ld	AH,@(H'0003,X)
	and	AH,#-H'1801
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
	ld	X,@H'fff8
	tst	@(0,X)
	bne	?L2
	ld	X,@$_a2dp
	ld	AH,@(H'0003,X)
	lsr	#H'000B
	and	AH,#H'0003
	cmp	AH,#H'0000
	bne	?L1
	bsr	$_a2dpRegisterL2cap
	bra	(?L1)
?L2:
	ld	AL,#H'0003
	bsr	$_a2dpSendInitCfmToClient
?L1:
?LBE_a2dpHandleSdpRegisterCfm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 4 total = 4
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	sdp_parse_features
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_findSupportedFeatures:
	enterl	#7
?LBB_findSupportedFeatures:
	ld	X,@(H'0007,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	add	AH,@$XAP_AL
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0311
	bsr	$_ServiceFindAttribute
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bne	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_findSupportedFeatures:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_SdpParseGetSupportedFeatures:
	enterl	#5
?LBB_SdpParseGetSupportedFeatures:
	ld	X,@$XAP_UY
	add	X,#H'0001
?LBB3:
	st	X,@(0,Y)
	bsr	_findSupportedFeatures
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_RegionReadUnsigned
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE3:
?LBE_SdpParseGetSupportedFeatures:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_SdpParseInsertSupportedFeatures:
	enterl	#6
?LBB_SdpParseInsertSupportedFeatures:
	ld	X,@$XAP_UY
	add	X,#H'0002
?LBB4:
	st	X,@(0,Y)
	bsr	_findSupportedFeatures
	cmp	AL,#H'0000
	beq	?L8
	ld	X,@$XAP_UY
	add	X,#H'0002
	ld	AL,@(H'0001,X)
	sub	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bne	?L8
	ld	AH,#H'0000
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UXL
	bsr	$_RegionWriteUnsigned
	ld	AL,#H'0001
	bra	(?L7)
?L8:
	ld	AL,#H'0000
?L7:
?LBE4:
?LBE_SdpParseInsertSupportedFeatures:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 total = 8
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *movhi used[3] = 1 total = 1
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2_1 used[1] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	sdp_parse_profile_version
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_findProfileVersion:
	enterl	#11
?LBB_findProfileVersion:
	st	AH,@(H'0002,Y)
?LBB2:
	add	AH,@$XAP_AL
	st	AH,@(H'0003,Y)
	bra	(?L19)
?L17:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0006
	bne	?L19
	bra	(?L18)
?L16:
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L18
	bra	(?L10)
?L14:
	ld	X,@(H'000C,Y)
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L20
?L10:
	ld	AH,#H'0000
	ld	AL,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_RegionMatchesUUID32
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0001
	bne	?L18
	ld	AL,#H'0001
	bra	(?L1)
?L18:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	bne	?L16
?L19:
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0009
	bsr	$_ServiceFindAttribute
	cmp	AL,#H'0000
	bne	?L17
?L20:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_findProfileVersion:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_SdpParseGetProfileVersion:
	enterl	#6
?LBB_SdpParseGetProfileVersion:
	ld	X,@(H'0006,Y)
?LBB3:
	st	X,@(0,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(H'0001,Y)
	bsr	_findProfileVersion
	cmp	AL,#H'0000
	beq	?L24
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_RegionReadUnsigned
	ld	X,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L23)
?L24:
	ld	AL,#H'0000
?L23:
?LBE3:
?LBE_SdpParseGetProfileVersion:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_SdpParseInsertProfileVersion:
	enterl	#6
?LBB_SdpParseInsertProfileVersion:
	ld	X,@(H'0006,Y)
?LBB4:
	st	X,@(0,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(H'0001,Y)
	bsr	_findProfileVersion
	cmp	AL,#H'0000
	beq	?L26
	ld	X,@$XAP_UY
	add	X,#H'0002
	ld	AL,@(H'0001,X)
	sub	AL,@(H'0002,Y)
	cmp	AL,#H'0002
	bne	?L26
	ld	AH,#H'0000
	ld	AL,@(H'0007,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UXL
	bsr	$_RegionWriteUnsigned
	ld	AL,#H'0001
	bra	(?L25)
?L26:
	ld	AL,#H'0000
?L25:
?LBE4:
?LBE_SdpParseInsertProfileVersion:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 14 used[1] = 1 total = 15
;# Function pattern *movqi3 used[0] = 13 total = 13
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[3] = 2 total = 2
;# Function pattern *addqi0 used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2_1 used[1] = 2 total = 2
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern movstrqi+3 used[0] = 8 total = 8
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	region_write_unsigned
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_RegionWriteUnsigned:
	enterl	#2
?LBB_RegionWriteUnsigned:
	st	AL,@H'fffa
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
?LBB2:
	ld	X,@(H'0001,X)
	st	X,@(-1,Y)
	ld	AL,@$XAP_UXL
	ld	X,@H'fffa
	cmp	AL,@(0,X)
	beq	?L7
?L5:
	ld	X,#-H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	ld	AL,@H'fff9
	and	AL,#H'00FF
	st	AL,@(0,X)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	lsr	#H'0008
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@$XAP_UXL
	ld	X,@H'fffa
	cmp	AL,@(0,X)
	bne	?L5
?L7:
?LBE2:
?LBE_RegionWriteUnsigned:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 4 total = 10
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	pblock
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_empty_pblock:
	dc	H'0000
	dc	H'0000
	.CODE
_pblockAddEntry:
	enterl	#5
?LBB_pblockAddEntry:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	X,@_pblock
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	add	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L4
	ld	AL,@_pblock
	st	AL,@(-2,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0001,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	add	AL,@(H'0001,Y)
	st	AL,@(-1,Y)
	ld	X,#H'0001
	add	X,@$XAP_AL
	lsr	#H'0008
	cmp	X,@$XAP_AH
	bcz	?L3
?LBB3:
	ld	AH,#H'0004
	add	AH,@(-1,Y)
	ld	AL,@(-2,Y)
	bsr	$_realloc
	cmp	AL,#H'0000
	beq	?L4
	st	AL,@_pblock
	bra	(?L3)
?L4:
	ld	AL,#H'0000
	bra	(?L1)
?L3:
?LBE3:
	ld	AL,@(0,Y)
	asl	#H'0008
	ld	AH,@(H'0001,Y)
	and	AH,#H'00FF
	or	AL,@$XAP_AH
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@_pblock
	ld	AH,@(H'0001,X)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	add	AL,@(H'0001,Y)
	add	AL,#H'0001
	and	AL,#H'00FF
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(H'0002,Y)
?L1:
?LBE2:
?LBE_pblockAddEntry:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_PblockInit:
	enterl	#8
?LBB_PblockInit:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_PsRetrieve
	st	AL,@(H'0003,Y)
	add	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	st	AL,@_pblock
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	X,@_pblock
	ld	AL,@(H'0004,Y)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	tst	@(H'0003,Y)
	beq	?L8
	ld	X,@_pblock
	st	X,@(H'0005,Y)
	add	X,#H'0002
	st	X,@(-1,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,@(-1,Y)
	bsr	$_PsRetrieve
	and	AL,#H'00FF
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0001,X)
	and	AH,#-H'0100
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	bra	(?L9)
?L8:
	ld	X,@_pblock
	ld	AL,@(H'0001,X)
	and	AL,#-H'0100
	st	AL,@(H'0001,X)
?L9:
	ld	AL,@_pblock
?LBE4:
?LBE_PblockInit:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_PblockStore:
	enterl	#5
?LBB_PblockStore:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	X,@_pblock
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	st	AL,@(H'0002,Y)
	ld	AH,#H'0002
	add	AH,@$XAP_UXL
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	bsr	$_PsStore
	ld	AH,@(H'0002,Y)
	cmp	AH,@$XAP_AL
	bne	?L11
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L11:
	ld	AL,@(H'0001,Y)
	bsr	$_PanicNull
?LBE_PblockStore:
	leavel	#5
$_PblockGet:
	enterl	#2
?LBB_PblockGet:
	st	AL,@H'fff9
?LBB5:
	tst	@_pblock
	beq	?L14
	ld	AH,@_pblock
	ld	X,#H'0002
	add	X,@$XAP_AH
	st	X,@(-1,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	add	AL,@$XAP_AH
	add	AL,#H'0002
	ld	AH,@(-1,Y)
	cmp	AH,@$XAP_AL
	bcc	?L14
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	add	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AL,@H'fff8
?L20:
	ld	X,@(-1,Y)
	ld	AH,@(0,X)
	lsr	#H'0008
	cmp	AH,@H'fff9
	bne	?L17
	ld	AL,@(-1,Y)
	bra	(?L13)
?L17:
	ld	X,@(-1,Y)
	ld	AL,@(0,X)
	and	AL,#H'00FF
	add	AL,@(-1,Y)
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	st	AH,@(-1,Y)
	cmp	AH,@H'fff8
	bcs	?L20
?L14:
	ld	AL,#(_empty_pblock)
?L13:
?LBE5:
?LBE_PblockGet:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_PblockSet:
	enterl	#5
?LBB_PblockSet:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	bsr	$_PblockGet
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	bne	?L26
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_pblockAddEntry
	ld	X,@$XAP_AL
?L26:
	cmp	X,#H'0000
	beq	?L25
	ld	AL,@(0,X)
	ld	AH,@$XAP_AL
	and	AH,#H'00FF
	cmp	AH,@(H'0002,Y)
	bne	?L25
	ld	AL,#H'0001
	add	AL,@$XAP_UXL
	st	AH,@(0,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
?L25:
?LBE6:
?LBE_PblockSet:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	.SEG	VAR
_pblock:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 40 used[1] = 14 total = 54
;# Function pattern *movqi3 used[0] = 35 total = 35
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 12 used[2] = 7 total = 19
;# Function pattern *andqi3 used[0] = 16 total = 16
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 2 total = 6
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	audio_plugin_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_AudioPluginGetInstance:
	enterl	#2
?LBB_AudioPluginGetInstance:
	ld	X,@$XAP_AL
	ld	AH,@$XAP_AL
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L5
	ld	AH,@$XAP_UXL
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L3
	ld	AL,#H'0001
	bra	(?L1)
?L3:
	ld	AH,@$XAP_UXL
	lsr	#H'0005
	and	AH,#H'0003
	cmp	AH,#H'0002
	bne	?L4
	ld	AL,#H'0002
	bra	(?L1)
?L4:
	bsr	$_Panic
?L5:
	ld	AL,#H'0000
?L1:
?LBE_AudioPluginGetInstance:
	leavel	#2
	.SEG	CONST
$_MIC_MUTE:
	dc	H'0100
$_MIC_DEFAULT_GAIN:
	dc	H'802A
	.CODE
$_AudioPluginGetMic:
	enterl	#3
?LBB_AudioPluginGetMic:
	ld	X,@$XAP_AL
	tst	@(H'0003,Y)
	beq	?L9
	ld	AL,#H'0004
	bra	(?L10)
?L9:
	ld	AL,#H'0003
?L10:
	st	AH,@(0,Y)
	ld	AH,@$XAP_UXL
	bsr	$_StreamAudioSource
?LBE_AudioPluginGetMic:
	leavel	#3
$_AudioPluginSetMicRate:
	enterl	#4
?LBB_AudioPluginSetMicRate:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	X,#H'0000
	beq	?L12
	ld	X,#H'0600
	bra	(?L13)
?L12:
	ld	X,#H'0300
?L13:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	$_SourceConfigure
	bsr	$_PanicNull
?LBE_AudioPluginSetMicRate:
	leavel	#4
$_AudioPluginSetMicGain:
	enterl	#5
?LBB_AudioPluginSetMicGain:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,#H'0000
	beq	?L15
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0601
	bra	(?L17)
?L15:
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0302
	bsr	$_SourceConfigure
	ld	AH,#H'0000
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0309
?L17:
	bsr	$_SourceConfigure
?LBE_AudioPluginSetMicGain:
	leavel	#5
$_AudioPluginSetMicPio:
	enterl	#3
?LBB_AudioPluginSetMicPio:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@$XAP_AL
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L18
	ld	AH,@$XAP_UXL
	lsr	#H'0007
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L20
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	and	AH,#H'001F
	tst	@H'fff8
	beq	?L21
	ld	AL,#H'0002
	bra	(?L22)
?L21:
	ld	AL,#H'0000
?L22:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_MicbiasConfigure
	bra	(?L24)
?L20:
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	ld	AL,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	and	AL,#H'001F
	ld	AH,#H'0001
	bsr	$_PioCommonSetPin
?L24:
	bsr	$_PanicNull
?L18:
?LBE_AudioPluginSetMicPio:
	leavel	#3
$_AudioPluginMicSetup:
	enterl	#8
?LBB_AudioPluginMicSetup:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	ld	AL,@(H'0003,Y)
	bsr	$_AudioPluginGetInstance
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,Y)
	lsr	#H'000F
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0002,Y)
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	ld	AL,@(H'0009,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_AudioPluginSetMicRate
	ld	AL,@(H'0003,Y)
	and	AL,#H'001F
	st	AL,@(0,Y)
	ld	AH,@(H'0003,Y)
	lsr	#H'000E
	and	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_AudioPluginSetMicGain
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_AudioPluginSetMicPio
?LBE2:
	ld	AL,@(H'0004,Y)
?LBE_AudioPluginMicSetup:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 29 used[1] = 14 used[3] = 1 total = 44
;# Function pattern *movqi3 used[0] = 17 total = 17
;# Function pattern *movhi used[2] = 2 used[3] = 5 total = 7
;# Function pattern *andqi3 used[0] = 9 total = 9
;# Function pattern *lshrqi3 used[0] = 9 total = 9
;# Function pattern *zero_extendqihi2_1 used[0] = 2 used[1] = 1 total = 3
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 2 total = 7
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	csr_dut_audio_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
$_csr_dut_audio_plugin:
	dc	hwrd(_message_handler)
	dc	lwrd(_message_handler)
	.CODE
_message_handler:
	enterl	#3
?LBB_message_handler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'7000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0018)
	bcc	?L2
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleAudioMessage
	bra	(?L1)
?L2:
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleInternalMessage
?L1:
?LBE_message_handler:
	leavel	#3
_handleAudioMessage:
	enterl	#11
?LBB_handleAudioMessage:
	st	AL,@(H'0002,Y)
?LBB2:
	ld	AL,#-H'7000
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0008)
	bcc	?L4
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE23,X)
	brxl
	.SEG	CONST
?JTBASE23:
	.CODE
?L23:
	.SEG	CONST
	dc	lwrd(?L6-?L23)
	dc	lwrd(?L9-?L23)
	dc	lwrd(?L12-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L15-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L4-?L23)
	dc	lwrd(?L18-?L23)
	dc	lwrd(?L20-?L23)
	.CODE
?L6:
	ld	AH,@(H'000B,Y)
?LBB3:
	st	AH,@(H'0003,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L7
?LBB4:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	st	AH,@(H'0004,X)
	st	AL,@(H'0005,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0007,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0008,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'000A,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'000A,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'000B,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'000B,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7000
	bra	(?L24)
?L7:
?LBE4:
	ld	AL,@(H'0003,Y)
	bsr	$_CsrDutAudioPluginConnect
?LBE3:
	bra	(?L4)
?L9:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L10
	bsr	$_AudioBusyPtr
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7001
	bra	(?L24)
?L10:
	bsr	$_CsrDutAudioPluginDisconnect
	bra	(?L4)
?L12:
	ld	AL,@(H'000B,Y)
?LBB5:
	st	AL,@(H'0005,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L13
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0001,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7002
	bra	(?L24)
?L13:
	ld	X,@(H'0005,Y)
?LBE6:
	ld	AL,@(0,X)
	bsr	$_CsrDutAudioPluginSetMode
?LBE5:
	bra	(?L4)
?L15:
	ld	AH,@(H'000B,Y)
?LBB7:
	st	AH,@(H'0007,Y)
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L16
?LBB8:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7004
?L24:
	bsr	$_MessageSendConditionally
?LBE8:
	bra	(?L4)
?L16:
	ld	X,@(H'0007,Y)
	ld	AL,@(0,X)
	bsr	$_CsrDutAudioPluginSetVolume
?LBE7:
	bra	(?L4)
?L18:
?LBB9:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	bne	?L4
	ld	AL,#($_csr_dut_audio_plugin)
	bsr	$_SetAudioBusy
	ld	AL,@(H'000B,Y)
	bsr	$_CsrDutAudioPluginPlayTone
?LBE9:
	bra	(?L4)
?L20:
	bsr	$_IsAudioBusy
	cmp	AL,#H'0000
	beq	?L4
	bsr	$_CsrDutAudioPluginStopTone
?L4:
?LBE2:
?LBE_handleAudioMessage:
	leavel	#11
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
_handleInternalMessage:
	enterl	#3
?LBB_handleInternalMessage:
	st	AL,@(0,Y)
	cmp	AH,#-H'7FDA
	bne	?L29
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	bsr	$_CsrDutAudioPluginToneComplete
	cmp	AL,#H'0000
	bne	?L25
	ld	AL,@(0,Y)
	bsr	$_CsrDutAudioPluginRepeatTone
	bra	(?L25)
?L29:
	bsr	$_Panic
?L25:
?LBE_handleInternalMessage:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 32 used[1] = 9 total = 41
;# Function pattern *movqi3 used[0] = 59 total = 59
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[2] = 2 total = 2
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 7 total = 7
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	csr_dut_audio
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
_DUT_AUDIO:
	DS	1
	.CODE
_CsrDutAudioPluginDisconnectAudio:
	enterl	#3
?LBB_CsrDutAudioPluginDisconnectAudio:
?LBB2:
	ld	X,@_DUT_AUDIO
	tst	@(0,X)
	beq	?L2
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	X,@_DUT_AUDIO
	tst	@(H'000C,X)
	beq	?L2
?LBB3:
	ld	AL,@(H'000C,X)
	st	AL,@(0,Y)
	ld	AH,@(H'000D,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	beq	?L7
	cmp	AH,#H'0001
	bne	?L7
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	bra	(?L9)
?L7:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
?L9:
	ld	AH,#H'0000
	bsr	$_AudioPluginSetMicPio
?L2:
?LBE3:
	bsr	$_CsrMultiChanDisconnect
	bsr	$_CsrMultiChanGetAudioSink
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
?LBE2:
?LBE_CsrDutAudioPluginDisconnectAudio:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_CsrDutAudioPluginConnectAudio:
	enterl	#9
?LBB_CsrDutAudioPluginConnectAudio:
?LBB4:
	ld	X,@_DUT_AUDIO
	tst	@(H'000C,X)
	beq	?L11
?LBB5:
	ld	X,@(H'000C,X)
	st	X,@(H'0006,Y)
	bsr	_CsrDutAudioPluginDisconnectAudio
	ld	X,@_DUT_AUDIO
	ld	AH,@(H'000D,X)
	lsr	#H'000E
	cmp	AH,#H'0000
	beq	?L16
	cmp	AH,#H'0001
	bne	?L16
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0005,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(H'0001,X)
	lsr	#H'000F
	st	AH,@H'fff8
	ld	X,@_DUT_AUDIO
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@H'fff8
	bsr	$_AudioPluginSetMicRate
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	bra	(?L18)
?L16:
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	bsr	$_AudioPluginGetInstance
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_AudioPluginGetMic
	st	AL,@(H'0005,Y)
	ld	X,@(H'0006,Y)
	ld	AH,@(0,X)
	lsr	#H'000F
	st	AH,@H'fff8
	ld	X,@_DUT_AUDIO
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@H'fff8
	bsr	$_AudioPluginSetMicRate
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
?L18:
	ld	AH,#H'0001
	bsr	$_AudioPluginSetMicPio
	ld	X,@_DUT_AUDIO
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	and	AL,#H'01FF
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_CsrMultiChanConnectStereoSource
	bsr	$_PanicNull
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0003,X)
	bsr	$_CsrDutAudioPluginSetVolume
?L11:
?LBE5:
?LBE4:
?LBE_CsrDutAudioPluginConnectAudio:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
_CsrDutAudioPluginPopulateFromAudioConnectData:
	enterl	#4
?LBB_CsrDutAudioPluginPopulateFromAudioConnectData:
	st	AL,@(0,Y)
	ld	AL,#H'000E
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@_DUT_AUDIO
	ld	X,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	AH,@_DUT_AUDIO
	st	AH,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AL,@(H'0007,X)
	asl	#H'0008
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AH,@_DUT_AUDIO
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	AH,@_DUT_AUDIO
	st	AH,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0007
	and	AH,#H'0001
	ld	X,@(H'0001,Y)
	st	AH,@(H'0004,X)
	ld	X,@_DUT_AUDIO
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	X,@_DUT_AUDIO
	st	AL,@(H'0008,X)
	ld	X,@_DUT_AUDIO
	st	AL,@(H'0009,X)
	ld	X,@_DUT_AUDIO
	st	AL,@(H'000B,X)
	ld	X,@_DUT_AUDIO
	st	AL,@(H'000A,X)
	ld	AH,@_DUT_AUDIO
	st	AH,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AH,@(H'0004,X)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0001,Y)
	st	AH,@(H'0005,X)
	st	AL,@(H'0006,X)
	ld	AH,@_DUT_AUDIO
	ld	X,@(0,Y)
	ld	AL,@(H'000A,X)
	ld	X,@$XAP_AH
	st	AL,@(H'000C,X)
	ld	AH,@_DUT_AUDIO
	st	AH,@(H'0001,Y)
	ld	X,@(0,Y)
	ld	AH,@(H'0006,X)
	lsr	#H'0005
	ld	AL,@$XAP_AH
	and	AL,#H'0003
	asl	#H'000E
	ld	X,@(H'0001,Y)
	ld	AH,@(H'000D,X)
	and	AH,#H'3FFF
	or	AH,@$XAP_AL
	st	AH,@(H'000D,X)
?LBE_CsrDutAudioPluginPopulateFromAudioConnectData:
	leavel	#4
$_CsrDutAudioPluginConnect:
	enterl	#3
?LBB_CsrDutAudioPluginConnect:
	st	AL,@(0,Y)
	tst	@_DUT_AUDIO
	beq	?L22
	bsr	$_CsrDutAudioPluginDisconnect
?L22:
	ld	AL,@(0,Y)
	bsr	_CsrDutAudioPluginPopulateFromAudioConnectData
	ld	X,@(0,Y)
	ld	AL,@(H'0007,X)
	bsr	$_CsrDutAudioPluginSetMode
?LBE_CsrDutAudioPluginConnect:
	leavel	#3
$_CsrDutAudioPluginDisconnect:
	enterl	#2
?LBB_CsrDutAudioPluginDisconnect:
	ld	AL,@_DUT_AUDIO
	bsr	$_PanicNull
	ld	AL,#H'0008
	bsr	$_CsrDutAudioPluginSetMode
	bsr	$_CsrDutAudioPluginStopTone
	ld	AL,@_DUT_AUDIO
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@_DUT_AUDIO
?LBE_CsrDutAudioPluginDisconnect:
	leavel	#2
$_CsrDutAudioPluginSetMode:
	enterl	#3
?LBB_CsrDutAudioPluginSetMode:
	st	AL,@(0,Y)
	ld	AL,@_DUT_AUDIO
	bsr	$_PanicNull
	ld	X,@_DUT_AUDIO
	ld	AL,@(0,Y)
	asl	#H'0008
	ld	AH,@(H'0001,X)
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	st	AH,@(H'0001,X)
	ld	AL,@(0,Y)
	cmp	AL,#H'0004
	bne	?L25
	bsr	_CsrDutAudioPluginConnectAudio
	bra	(?L24)
?L25:
	bsr	_CsrDutAudioPluginDisconnectAudio
?L24:
?LBE_CsrDutAudioPluginSetMode:
	leavel	#3
$_CsrDutAudioPluginSetVolume:
	enterl	#3
?LBB_CsrDutAudioPluginSetVolume:
	st	AL,@(0,Y)
	ld	AL,@_DUT_AUDIO
	bsr	$_PanicNull
	ld	AL,@(0,Y)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	bsr	$_CsrMultiChanGainSetHardwareOnly
	ld	AL,@(0,Y)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	bsr	$_CsrMultiChanGainSetHardwareOnly
?LBE_CsrDutAudioPluginSetVolume:
	leavel	#3
_CsrDutAudioPluginIncrementToneOutputChannel:
	enterl	#4
?LBB_CsrDutAudioPluginIncrementToneOutputChannel:
?LBB6:
	ld	X,@_DUT_AUDIO
	ld	X,@(H'000A,X)
	st	X,@(0,Y)
	st	X,@(H'0001,Y)
?L30:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0007
	bne	?L33
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L33:
	ld	AL,@(H'0001,Y)
	bsr	$_CsrMultiChanGetOutputType
	cmp	AL,#H'0000
	beq	?L32
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0001,Y)
	st	AL,@(H'000A,X)
	bra	(?L31)
?L32:
	ld	AL,@(0,Y)
	cmp	AL,@(H'0001,Y)
	bne	?L30
?L31:
?LBE6:
?LBE_CsrDutAudioPluginIncrementToneOutputChannel:
	leavel	#4
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_CsrDutAudioPluginGetEnableMaskForChannel:
	enterl	#2
?LBB_CsrDutAudioPluginGetEnableMaskForChannel:
	ld	X,@$XAP_AL
?LBB7:
	ld	AL,#H'0001
	asl	@$XAP_UXL
?LBE7:
	xor	AL,#-H'0001
?LBE_CsrDutAudioPluginGetEnableMaskForChannel:
	leavel	#2
$_CsrDutAudioPluginPlayTone:
	enterl	#11
?LBB_CsrDutAudioPluginPlayTone:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB8:
	ld	AL,@(0,X)
	bsr	$_StreamRingtoneSource
	st	AL,@(H'0005,Y)
	tst	@_DUT_AUDIO
	beq	?L41
	ld	X,@_DUT_AUDIO
	tst	@(0,X)
	beq	?L40
?L41:
	ld	AL,#H'0000
	bsr	$_SetAudioBusy
	bra	(?L39)
?L40:
	bsr	_CsrDutAudioPluginDisconnectAudio
	ld	AH,@_DUT_AUDIO
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0008,X)
	ld	AL,@_DUT_AUDIO
	st	AL,@(H'0008,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0007
	and	AH,#H'0001
	ld	X,@(H'0008,Y)
	st	AH,@(H'0009,X)
	ld	AH,@_DUT_AUDIO
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(H'000B,X)
	ld	AL,@(H'0003,Y)
	and	AL,#-H'0181
	or	AL,#H'0100
	st	AL,@(H'0006,Y)
	ld	AL,#-H'4480
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	and	AL,#-H'0041
	st	AL,@(H'0003,Y)
	ld	AL,@_DUT_AUDIO
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'000A,X)
	bsr	_CsrDutAudioPluginGetEnableMaskForChannel
	asl	#H'0009
	ld	AH,@(H'0006,Y)
	and	AH,#H'01BF
	or	AH,@$XAP_AL
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'000A,X)
	bsr	$_CsrMultiChanConnectSourceToMultiChannelOutput
	bsr	$_PanicNull
	bsr	$_CsrMultiChanGetAudioSink
	ld	X,@_DUT_AUDIO
	st	AL,@(H'0007,X)
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0007,X)
	ld	AH,#($_csr_dut_audio_plugin)
	bsr	$_MessageSinkTask
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0008,X)
	bsr	$_CsrDutAudioPluginSetVolume
?L39:
?LBE8:
?LBE_CsrDutAudioPluginPlayTone:
	leavel	#11
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_CsrDutAudioPluginStopTone:
	enterl	#2
?LBB_CsrDutAudioPluginStopTone:
	tst	@_DUT_AUDIO
	beq	?L42
	ld	X,@_DUT_AUDIO
	tst	@(H'0007,X)
	beq	?L42
	bsr	_CsrDutAudioPluginDisconnectAudio
	ld	X,@_DUT_AUDIO
	ld	AL,#H'0000
	st	AL,@(H'0007,X)
?L42:
?LBE_CsrDutAudioPluginStopTone:
	leavel	#2
$_CsrDutAudioPluginToneComplete:
	enterl	#2
?LBB_CsrDutAudioPluginToneComplete:
	bsr	$_CsrDutAudioPluginStopTone
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0007,X)
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
	tst	@_DUT_AUDIO
	beq	?L45
	ld	X,@_DUT_AUDIO
	tst	@(0,X)
	bne	?L45
	ld	AL,#H'0000
	bra	(?L44)
?L45:
	ld	AL,#H'0001
?L44:
?LBE_CsrDutAudioPluginToneComplete:
	leavel	#2
$_CsrDutAudioPluginRepeatTone:
	enterl	#6
?LBB_CsrDutAudioPluginRepeatTone:
	st	AL,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'000B,X)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0008,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@_DUT_AUDIO
	ld	AL,@(H'0009,X)
	and	AL,#H'0001
	asl	#H'0007
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0004,X)
	and	AH,#-H'0081
	or	AH,@$XAP_AL
	st	AH,@(H'0004,X)
	bsr	_CsrDutAudioPluginIncrementToneOutputChannel
	bsr	$_AudioBusyPtr
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'7007
	bsr	$_MessageSendConditionally
?LBE9:
?LBE_CsrDutAudioPluginRepeatTone:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
	ENDMOD

;# Function pattern *movqi2 used[0] = 76 used[1] = 14 total = 90
;# Function pattern *movqi3 used[0] = 146 total = 146
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 4 used[3] = 4 total = 8
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 12 total = 12
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *lshrqi3 used[0] = 9 total = 9
;# Function pattern *ashlqi3 used[0] = 6 total = 6
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 23 total = 23
;# Function pattern *call_value1 used[0] = 25 total = 25
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 10 total = 13
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	pio_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_pioCommonGetMask:
	enterl	#6
?LBB_pioCommonGetMask:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
?LBB2:
	cmp	AL,#(H'0001+H'001F)
	bcc	?L2
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@$XAP_UXL
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	bra	(?L3)
?L2:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
?L3:
	tst	@H'fff8
	beq	?L5
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bra	(?L6)
?L5:
	ld	AL,#H'0000
	ld	AH,#H'0000
?L6:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_PioSetDir32
	cmp	AH,#H'0000
	bne	?L7
	cmp	AL,#H'0000
	beq	?L4
?L7:
	ld	AL,#H'0000
	ld	AH,#H'0000
	bra	(?L1)
?L4:
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
?L1:
?LBE2:
?LBE_pioCommonGetMask:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_PioCommonSetPin:
	enterl	#4
?LBB_PioCommonSetPin:
?LBB3:
	bsr	_pioCommonGetMask
	st	AH,@H'fff8
	st	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L12
	cmp	AL,#H'0000
	beq	?L9
?L12:
	tst	@(H'0004,Y)
	bne	?L11
	ld	AL,#H'0000
	ld	AH,#H'0000
?L11:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$_PioSet32
	cmp	AH,#H'0000
	bne	?L9
	cmp	AL,#H'0000
	bne	?L9
	ld	AL,#H'0001
	bra	(?L8)
?L9:
	ld	AL,#H'0000
?L8:
?LBE3:
?LBE_PioCommonSetPin:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_PioCommonGetPin:
	enterl	#4
?LBB_PioCommonGetPin:
?LBB4:
	ld	AH,#H'0000
	bsr	_pioCommonGetMask
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	bsr	$_PioGet32
	and	AL,@(1,Y)
	and	AH,@(0,Y)
	ld	X,#H'0000
	cmp	AH,#H'0000
	bne	?L16
	cmp	AL,#H'0000
	beq	?L15
?L16:
	ld	X,#H'0001
?L15:
?LBE4:
	ld	AL,@$XAP_UXL
?LBE_PioCommonGetPin:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_PioCommonDebounce:
	enterl	#6
?LBB_PioCommonDebounce:
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?LBB5:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_PioSetDir32
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_PioDebounce32
	cmp	AH,#H'0000
	bne	?L19
	cmp	AL,#H'0000
	beq	?L18
?L19:
	xor	AL,#H'FFFF
	xor	AH,#H'FFFF
	and	AL,@(H'0003,Y)
	and	AH,@(H'0002,Y)
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	bsr	$_PioDebounce32
	ld	AL,#H'0000
	bra	(?L17)
?L18:
	ld	AL,#H'0001
?L17:
?LBE5:
?LBE_PioCommonDebounce:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 10 total = 10
;# Function pattern *movqi3 used[0] = 17 total = 17
;# Function pattern *movhi used[2] = 7 used[3] = 6 total = 13
;# Function pattern *andhi3 used[0] = 2 total = 2
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern one_cmplhi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 2 total = 2
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+6 used[0] = 5 total = 5
	MODULE	csr_i2s_audio_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_CsrI2SInitialisePlugin:
; leaf function with empty stack frame
?LBB_CsrI2SInitialisePlugin:
	st	AL,@$_I2S_config
?LBE_CsrI2SInitialisePlugin:
	rts
$_CsrI2SAudioOutputConnectConfigureSink:
	enterl	#5
?LBB_CsrI2SAudioOutputConnectConfigureSink:
	st	AL,@(H'0002,Y)
	ld	X,@$_I2S_config
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0202
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,#H'0000
	ld	AL,@(H'000A,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0006,Y)
	smult	@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,Y)
	smult	@H'fff9
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0006,Y)
	umult	@H'fff9
	add	AH,@$XAP_UXL
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0201
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0200
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0203
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	; peephole20 here
	and	AH,#H'000F
	asr	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0204
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0205
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'020A
	bsr	$_SinkConfigure
	bsr	$_PanicNull
?LBE_CsrI2SAudioOutputConnectConfigureSink:
	leavel	#5
$_CsrI2SAudioOutputConnect:
	enterl	#8
?LBB_CsrI2SAudioOutputConnect:
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?LBB2:
	bsr	$_CsrInitialiseI2SDevice
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_CsrI2SAudioOutputConnectConfigureSink
	tst	@(H'0008,Y)
	beq	?L4
?LBB3:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_CsrI2SAudioOutputConnectConfigureSink
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_SinkSynchronise
	bsr	$_PanicNull
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0005,Y)
	bra	(?L6)
?L4:
?LBE3:
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0004,Y)
?L6:
	bsr	$_StreamConnect
	bsr	$_PanicNull
?LBE2:
	ld	AL,@(H'0004,Y)
?LBE_CsrI2SAudioOutputConnect:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_CsrI2SAudioOutputDisconnect:
	enterl	#6
?LBB_CsrI2SAudioOutputDisconnect:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_CsrSetVolumeI2SDevice
	bsr	$_CsrShutdownI2SDevice
	tst	@(H'0001,Y)
	beq	?L8
	ld	AL,#H'0000
?LBB5:
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0002,Y)
	bsr	$_StreamDisconnect
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	bsr	$_StreamDisconnect
	ld	AL,@(H'0002,Y)
	bsr	$_SinkClose
	ld	AL,@(H'0003,Y)
	bra	(?L10)
?L8:
?LBE5:
	ld	AL,#H'0000
	ld	AH,@(H'0002,Y)
	bsr	$_StreamDisconnect
	ld	AL,@(H'0002,Y)
?L10:
	bsr	$_SinkClose
?LBE4:
?LBE_CsrI2SAudioOutputDisconnect:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
$_CsrI2SAudioOutputSetVolume:
	enterl	#3
?LBB_CsrI2SAudioOutputSetVolume:
	ld	X,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L12
	st	X,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0003,Y)
	bra	(?L14)
?L12:
	st	X,@(0,Y)
	ld	AL,@$XAP_AH
?L14:
	bsr	$_CsrSetVolumeI2SDevice
?LBE_CsrI2SAudioOutputSetVolume:
	leavel	#3
$_CsrI2SAudioOutputConnectAdpcm:
	enterl	#7
?LBB_CsrI2SAudioOutputConnectAdpcm:
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?LBB6:
	bsr	$_CsrInitialiseI2SDevice
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0000
	bsr	$_StreamAudioSink
	st	AL,@(H'0004,Y)
	ld	X,@$_I2S_config
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0202
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,#H'0000
	ld	AL,@(H'000A,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0003,Y)
	smult	@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	smult	@H'fff9
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	umult	@H'fff9
	add	AH,@$XAP_UXL
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0201
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0200
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0203
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	; peephole20 here
	and	AH,#H'000F
	asr	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0204
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0205
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'020A
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'020B
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_TransformAdpcmDecode
	bsr	$_TransformStart
	bsr	$_PanicNull
?LBE6:
	ld	AL,@(H'0004,Y)
?LBE_CsrI2SAudioOutputConnectAdpcm:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_CsrInitialiseI2SDevice_PsKey:
	enterl	#7
?LBB_CsrInitialiseI2SDevice_PsKey:
?LBB7:
	ld	X,@$_I2S_config
	st	X,@H'fff8
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L16
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L16
?LBB8:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AH,@(H'0003,Y)
	cmp	AH,@$XAP_AL
	bcc	?L16
?L22:
	ld	X,@(H'0004,Y)
	add	X,@H'fff8
	ld	AH,@(H'0004,Y)
	add	AH,@$_I2S_config
	add	AH,#H'000E
	ld	AL,@(H'000B,X)
	add	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000D,X)
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,@$_I2S_config
	st	AL,@(-1,Y)
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	ld	AH,@(H'0004,Y)
	add	AH,@(H'000B,X)
	add	AH,#H'0002
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	X,@(-1,Y)
	st	X,@H'fff8
	ld	AL,@(H'0002,X)
	and	AL,#H'00FF
	ld	AH,@(H'0003,Y)
	cmp	AH,@$XAP_AL
	bcs	?L22
?L16:
?LBE8:
?LBE7:
?LBE_CsrInitialiseI2SDevice_PsKey:
	leavel	#7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_CsrInitialiseI2SDevice:
	enterl	#2
?LBB_CsrInitialiseI2SDevice:
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@$_I2S_config
	ld	AH,@(0,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L28
	cmp	AH,#H'0001
	beq	?L29
	bra	(?L26)
?L28:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	_CsrInitialiseI2SDevice_PsKey
	bra	(?L26)
?L29:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$_CsrInitialiseI2SDevice_SSM2518
?L26:
?LBE_CsrInitialiseI2SDevice:
	leavel	#2
$_CsrShutdownI2SDevice:
	enterl	#7
?LBB_CsrShutdownI2SDevice:
?LBB9:
	ld	X,@$_I2S_config
	st	X,@H'fff8
	ld	AH,@(0,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	bne	?L33
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L33
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L33
?LBB10:
	ld	AL,@(H'0004,X)
	and	AL,#H'00FF
	st	AL,@(H'0004,Y)
	ld	X,#H'0000
	st	X,@(H'0003,Y)
	cmp	X,@$XAP_AH
	bcc	?L33
?L41:
	ld	X,@(H'0004,Y)
	add	X,@H'fff8
	ld	AH,@(H'0004,Y)
	add	AH,@$_I2S_config
	add	AH,#H'000E
	ld	AL,@(H'000B,X)
	add	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000D,X)
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,@$_I2S_config
	st	AL,@(-1,Y)
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
	add	AL,@(H'000B,X)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	add	X,#H'0001
	st	X,@(H'0003,Y)
	ld	AL,@(-1,Y)
	st	AL,@H'fff8
	ld	X,@(-1,Y)
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@(H'0003,Y)
	cmp	AL,@$XAP_AH
	bcs	?L41
?L33:
?LBE10:
?LBE9:
?LBE_CsrShutdownI2SDevice:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_CsrSetVolumeI2SChannel:
	enterl	#12
?LBB_CsrSetVolumeI2SChannel:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB11:
	ld	X,@$_I2S_config
	ld	AH,@(H'0002,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	bmi	?L83
	beq	?L83
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	cmp	AH,@H'fff8
	bcz	?L83
	ld	X,@$_I2S_config
	ld	AL,@(H'0003,X)
	and	AL,#H'00FF
	add	AL,@$XAP_UXL
	add	AL,#H'000B
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	cmp	AL,@H'fff8
	bcc	?L79
?L55:
	ld	X,@(H'0005,Y)
	add	X,@(0,X)
	add	X,#H'0002
	st	X,@(H'0005,Y)
	add	AL,#H'0001
	cmp	AL,@H'fff8
	bcs	?L55
?L79:
	ld	X,@(H'0005,Y)
	tst	@(0,X)
	bne	?L56
?L83:
	ld	AL,#H'0000
	bra	(?L48)
?L56:
	tst	@(H'000C,Y)
	beq	?L57
	tst	@H'fff9
	bmi	?L58
	beq	?L58
	ld	AH,#H'0000
	st	AH,@H'fff9
?L58:
	ld	AL,@H'fff9
	cmp	AL,#-H'1C20
	bge	?L59
	ld	X,#-H'1C20
	st	X,@H'fff9
?L59:
	ld	AH,#H'1C20
	add	AH,@H'fff9
	asr	#H'0010
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,Y)
	lsl	#H'0010
	asr	#H'000F
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	smult	#H'468B
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
	umult	#H'468B
	add	AH,@$XAP_UXL
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,Y)
	and	AL,#H'3FFF
	st	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'000E
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@H'fff8
	cmp	X,#H'1FFF
	bcz	?L61
	bra	(?L80)
?L57:
	ld	AL,@H'fff9
	cmp	AL,#H'000F
	ble	?L62
	ld	X,#H'000F
	st	X,@H'fff9
?L62:
	ld	AH,@H'fff9
	xor	AH,#-H'0001
	asr	#H'000F
	and	AH,@H'fff9
	asr	#H'0010
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,Y)
	asl	#H'0010
	asr	#H'0010
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	smult	#H'1111
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
	umult	#H'1111
	add	AH,@$XAP_UXL
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,Y)
	and	AL,#H'000F
	st	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0004
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@H'fff8
	cmp	X,#H'0007
	bcz	?L61
?L80:
	add	AL,#H'0001
	nop
	addc	AH,#H'0000
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
?L61:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_memcpy
	ld	X,@$_I2S_config
	ld	AL,@(H'0006,X)
	cmp	AL,@(H'0007,X)
	bcc	?L65
	ld	AH,@(H'0007,X)
	sub	AH,@$XAP_AL
	st	AH,@H'fff8
	ld	AL,#H'0001
	bra	(?L81)
?L65:
	ld	X,@$_I2S_config
	ld	AH,@(H'0006,X)
	sub	AH,@(H'0007,X)
	st	AH,@H'fff8
	ld	AL,#H'0000
?L81:
	st	AL,@H'fffa
	ld	AH,#H'0000
	ld	AL,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0004,Y)
	smult	@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	smult	@H'fff9
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,Y)
	umult	@H'fff9
	add	AH,@$XAP_UXL
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0010
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AH,#H'0000
	ld	AL,@H'fff8
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	ld	AL,@H'fffa
	add	AL,#H'8000
	nop
	addc	AH,#H'0000
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	cmp	AH,@H'fff8
	blt	?L67
	bne	?L92
	cmp	AL,@H'fff9
	bcs	?L67
?L92:
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	nop
	addc	AH,#H'0000
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
?L67:
	tst	@H'fffa
	beq	?L68
	ld	X,@$_I2S_config
	ld	AH,#H'0000
	ld	AL,@(H'0007,X)
	sub	AL,@(H'0004,Y)
	nop
	subc	AH,@(H'0003,Y)
	bra	(?L82)
?L68:
	ld	X,@$_I2S_config
	ld	AH,#H'0000
	ld	AL,@(H'0007,X)
	add	AL,@(H'0004,Y)
	nop
	addc	AH,@(H'0003,Y)
?L82:
	st	AH,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	X,@$_I2S_config
	ld	AL,@(H'0005,X)
	cmp	AL,#(H'0001+H'0008)
	bcc	?L70
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	bra	(?L71)
?L70:
	ld	X,@$_I2S_config
	ld	AL,@(H'0005,X)
	cmp	AL,#(H'0001+H'0010)
	bcc	?L72
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0008
	and	AL,#H'00FF
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	bra	(?L71)
?L72:
	ld	X,@$_I2S_config
	ld	AL,@(H'0005,X)
	cmp	AL,#(H'0001+H'0018)
	bcc	?L74
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0010
	and	AL,#H'00FF
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0008
	and	AL,#H'00FF
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	bra	(?L71)
?L74:
	ld	X,@$_I2S_config
	ld	AL,@(H'0005,X)
	cmp	AL,#(H'0001+H'0020)
	bcc	?L76
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0018
	and	AL,#H'00FF
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0010
	and	AL,#H'00FF
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	st	AH,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	lsr	#H'0008
	and	AL,#H'00FF
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	ld	AL,@(H'0004,Y)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	bra	(?L71)
?L76:
	bsr	$_Panic
?L71:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	add	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	ld	AH,@(H'0006,Y)
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,@(H'0006,Y)
	bsr	$_free
	ld	AL,#H'0001
?L48:
?LBE11:
?LBE_CsrSetVolumeI2SChannel:
	leavel	#12
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_CsrSetVolumeI2SDevice:
	enterl	#4
?LBB_CsrSetVolumeI2SDevice:
	st	AL,@H'fff8
	st	AH,@(H'0001,Y)
	ld	X,@$_I2S_config
	ld	AH,@(0,X)
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L95
	cmp	AH,#H'0001
	beq	?L96
	bra	(?L93)
?L95:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@H'fff8
	bsr	$_CsrSetVolumeI2SChannel
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_CsrSetVolumeI2SChannel
	bra	(?L93)
?L96:
	tst	@(H'0004,Y)
	beq	?L97
	ld	AH,@H'fff8
	asr	#H'0010
	sdiv	#H'0006
	st	AL,@H'fff8
	ld	AH,@(H'0001,Y)
	asr	#H'0010
	sdiv	#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	nadd	AL,#H'0000
	smult	#H'0011
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'0014
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	nadd	AL,#H'0000
	smult	#H'0011
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'0014
	st	AL,@(H'0001,Y)
?L97:
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'0001,Y)
	bsr	$_CsrSetVolumeI2SDevice_SSM2518
?L93:
?LBE_CsrSetVolumeI2SDevice:
	leavel	#4
$_CsrI2SMusicResamplingFrequency:
	enterl	#2
?LBB_CsrI2SMusicResamplingFrequency:
	ld	X,@$_I2S_config
	ld	AL,@(H'0008,X)
?LBE_CsrI2SMusicResamplingFrequency:
	leavel	#2
$_CsrI2SGetOutputResamplingFrequencyForI2s:
	enterl	#3
?LBB_CsrI2SGetOutputResamplingFrequencyForI2s:
	st	AL,@(0,Y)
?LBB12:
	bsr	$_CsrI2SMusicResamplingFrequency
	ld	AH,#H'0000
	cmp	AH,#H'0000
	bne	?L103
	cmp	AL,#H'0000
	bne	?L103
	ld	AH,#H'0000
	ld	AL,@(0,Y)
	cmp	AH,#hwrd(H'0001+H'AC43)
	bcs	?L106
	bne	?L103
	cmp	AL,#lwrd(H'0001+H'AC43)
	bcc	?L103
?L106:
	ld	AL,#-H'4480
?L103:
?LBE12:
?LBE_CsrI2SGetOutputResamplingFrequencyForI2s:
	leavel	#3
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_CsrI2SVoiceResamplingFrequency:
	enterl	#2
?LBB_CsrI2SVoiceResamplingFrequency:
	ld	X,@$_I2S_config
	ld	AL,@(H'0009,X)
?LBE_CsrI2SVoiceResamplingFrequency:
	leavel	#2
$_CsrI2SAudioInputConnect:
	enterl	#8
?LBB_CsrI2SAudioInputConnect:
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?LBB13:
	bsr	$_CsrInitialiseI2SDevice
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AH,#H'0000
	bsr	$_StreamAudioSource
	st	AL,@(H'0004,Y)
	ld	X,@$_I2S_config
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0202
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,#H'0000
	ld	AL,@(H'000A,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0003,Y)
	smult	@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	smult	@H'fff9
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	umult	@H'fff9
	add	AH,@$XAP_UXL
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0201
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0200
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0203
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	; peephole20 here
	and	AH,#H'000F
	asr	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0204
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0205
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'020A
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	tst	@(H'0008,Y)
	beq	?L109
	ld	AH,#H'0000
?LBB14:
	st	AH,@(0,Y)
	ld	AL,#H'0001
	bsr	$_StreamAudioSource
	st	AL,@(H'0005,Y)
	ld	X,@$_I2S_config
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0202
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,#H'0000
	ld	AL,@(H'000A,X)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0003,Y)
	smult	@H'fff8
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	smult	@H'fff9
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	umult	@H'fff9
	add	AH,@$XAP_UXL
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0201
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0200
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'000C
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0203
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AH,@(H'0001,X)
	lsr	#H'0008
	; peephole20 here
	and	AH,#H'000F
	asr	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0204
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0205
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	X,@$_I2S_config
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'020A
	bsr	$_SourceConfigure
	bsr	$_PanicNull
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_SourceSynchronise
	bsr	$_PanicNull
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_StreamConnect
	bsr	$_PanicNull
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'000A,Y)
	bra	(?L111)
?L109:
?LBE14:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0009,Y)
?L111:
	bsr	$_StreamConnect
	bsr	$_PanicNull
?LBE13:
?LBE_CsrI2SAudioInputConnect:
	leavel	#8
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_CsrI2SMasterIsEnabled:
	enterl	#2
?LBB_CsrI2SMasterIsEnabled:
	ld	X,@$_I2S_config
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AL,#H'0000
	beq	?L113
	ld	AL,#H'0001
	bra	(?L112)
?L113:
	ld	AL,#H'0000
?L112:
?LBE_CsrI2SMasterIsEnabled:
	leavel	#2
	.SEG	VAR
$_I2S_config:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 114 used[1] = 99 total = 213
;# Function pattern *movqi3 used[0] = 202 total = 202
;# Function pattern *movqi8 used[0] = 8 total = 8
;# Function pattern *movhi used[2] = 19 used[3] = 48 total = 67
;# Function pattern *addhi3 used[0] = 4 total = 4
;# Function pattern *subhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 45 used[2] = 5 total = 50
;# Function pattern *andqi3 used[0] = 26 total = 26
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *divqi3_const used[0] = 4 total = 4
;# Function pattern *mulqihi3_const used[0] = 3 total = 3
;# Function pattern *umulqihi3_const used[0] = 2 total = 2
;# Function pattern *mulqihi3 used[0] = 10 total = 10
;# Function pattern *umulqihi3 used[0] = 5 total = 5
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *extendqihi2 used[0] = 5 used[1] = 2 total = 7
;# Function pattern *lshrqi3 used[0] = 17 total = 17
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern *lshrhi3 used[0] = 9 total = 9
;# Function pattern negqi2 used[0] = 2 total = 2
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 6 total = 6
;# Function pattern *zero_extendqihi2_1 used[0] = 13 used[1] = 4 total = 17
;# Function pattern jump used[0] = 17 total = 17
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 93 total = 93
;# Function pattern movstrqi+3 used[0] = 10 used[1] = 8 total = 18
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 14 total = 14
;# Function pattern movstrqi+6 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+19 used[0] = 4 total = 4
	MODULE	csr_i2s_SSM2518_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_CsrInitialiseI2SDevice_SSM2518:
	enterl	#9
?LBB_CsrInitialiseI2SDevice_SSM2518:
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,#H'0081
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,#hwrd(H'0001+H'3E80)
	bcs	?L16
	bne	?L2
	cmp	AL,#lwrd(H'0001+H'3E80)
	bcc	?L2
?L16:
	ld	AL,#H'0000
	bra	(?L14)
?L2:
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,#hwrd(H'0001+H'7D00)
	bcs	?L17
	bne	?L4
	cmp	AL,#lwrd(H'0001+H'7D00)
	bcc	?L4
?L17:
	ld	AL,#H'0002
	bra	(?L14)
?L4:
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,#hwrd(H'0001+H'BB80)
	bcs	?L18
	bne	?L6
	cmp	AL,#lwrd(H'0001+H'BB80)
	bcc	?L6
?L18:
	ld	AL,#H'0004
	bra	(?L14)
?L6:
	ld	AL,#H'0008
?L14:
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0002
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,#hwrd(H'0001+H'2EE0)
	bcs	?L19
	bne	?L8
	cmp	AL,#lwrd(H'0001+H'2EE0)
	bcc	?L8
?L19:
	ld	AL,#H'0000
	bra	(?L15)
?L8:
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,#hwrd(H'0001+H'5DC0)
	bcs	?L20
	bne	?L10
	cmp	AL,#lwrd(H'0001+H'5DC0)
	bcc	?L10
?L20:
	ld	AL,#H'0001
	bra	(?L15)
?L10:
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	cmp	AH,#hwrd(H'0001+H'BB80)
	bcs	?L21
	bne	?L12
	cmp	AL,#lwrd(H'0001+H'BB80)
	bcc	?L12
?L21:
	ld	AL,#H'0002
	bra	(?L15)
?L12:
	ld	AL,#H'0003
?L15:
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AH,#H'0002
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
?LBE2:
?LBE_CsrInitialiseI2SDevice_SSM2518:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_CsrSetVolumeI2SDevice_SSM2518:
	enterl	#9
?LBB_CsrSetVolumeI2SDevice_SSM2518:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB3:
	ld	AL,#H'0005
	st	AL,@(H'0003,Y)
	tst	@(H'0009,Y)
	beq	?L23
	ld	AH,@(H'0005,Y)
	cmp	AH,#H'0000
	bpl	?L24
	add	AH,#H'0003
?L24:
	asr	#H'0002
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	AH,@(H'0001,X)
	bra	(?L25)
?L23:
	ld	AL,@(H'0005,Y)
	and	AL,#H'000F
	smult	#H'0011
	ld	AH,#H'00FF
	sub	AH,@$XAP_AL
	st	AH,@(H'0004,Y)
?L25:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0006
	st	AL,@(H'0003,Y)
	tst	@(H'0009,Y)
	beq	?L26
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0000
	bpl	?L27
	add	AH,#H'0003
?L27:
	asr	#H'0002
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	AH,@(H'0001,X)
	bra	(?L28)
?L26:
	ld	AL,@(H'0006,Y)
	and	AL,#H'000F
	smult	#H'0011
	ld	AH,#H'00FF
	sub	AH,@$XAP_AL
	st	AH,@(H'0004,Y)
?L28:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
	ld	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0005,Y)
	cmp	AH,#H'0000
	bpl	?L30
	add	AH,#H'0003
?L30:
	asr	#H'0002
	cmp	AH,#H'00FF
	bne	?L29
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0000
	bpl	?L31
	add	AH,#H'0003
?L31:
	asr	#H'0002
	cmp	AH,#H'00FF
	bne	?L29
	ld	AL,#H'0001
	bra	(?L33)
?L29:
	ld	AL,#H'0000
?L33:
	st	AL,@(H'0004,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0068
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	bsr	$_I2cTransfer
	bsr	$_PanicNull
?LBE3:
?LBE_CsrSetVolumeI2SDevice_SSM2518:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 49 used[1] = 5 total = 54
;# Function pattern *movqi3 used[0] = 50 total = 50
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 6 used[3] = 1 total = 7
;# Function pattern *addqi0 used[0] = 11 total = 11
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *subqi3 used[0] = 2 total = 2
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *ashrqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 18 total = 18
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 2 total = 6
;# Function pattern movstrqi+5 used[0] = 2 total = 2
;# Function pattern movstrqi+7 used[0] = 6 total = 6
	MODULE	gatt_access
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattHandleAttAccessInd:
	enterl	#6
?LBB_gattHandleAttAccessInd:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	tst	@(H'0006,X)
	beq	?L2
	ld	AL,@(H'0007,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0002,Y)
?L2:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L3
	ld	X,@(H'0001,Y)
?LBB3:
	tst	@(H'0006,X)
	beq	?L4
	ld	AL,@(H'0006,X)
	add	AL,#H'0005
	bra	(?L5)
?L4:
	ld	AL,#H'0006
?L5:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	add	AL,#H'0005
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0006,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattGetCidMappedTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'5804
	bsr	$_MessageSend
?L3:
?LBE3:
	ld	AL,@(H'0002,Y)
	bsr	$_free
?LBE2:
?LBE_gattHandleAttAccessInd:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_GattAccessResponse:
	enterl	#6
?LBB_GattAccessResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	tst	@(H'0007,Y)
	beq	?L7
	ld	AL,@(H'0007,Y)
	add	AL,#H'0004
	bra	(?L8)
?L7:
	ld	AL,#H'0005
?L8:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	add	AL,#H'0004
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
	ld	AH,@(H'0007,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0003,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	bsr	$_gattGetTask
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AH,#H'0010
	bsr	$_MessageSend
?LBE4:
?LBE_GattAccessResponse:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattHandleInternalAccessRes:
	enterl	#13
?LBB_gattHandleInternalAccessRes:
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(0,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L9
?LBB6:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	ld	AL,#H'0915
	st	AL,@(H'0002,Y)
	ld	X,@(H'0009,Y)
	tst	@(H'0003,X)
	beq	?L11
?LBB7:
	ld	AL,@(H'0003,X)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0004
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	bsr	$_memmove
	ld	AL,@(H'000A,Y)
	bsr	$_VmGetHandleFromPointer
	bra	(?L13)
?L11:
?LBE7:
	ld	AL,#H'0000
?L13:
	st	AL,@(H'0008,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?L9:
?LBE6:
?LBE5:
?LBE_gattHandleInternalAccessRes:
	leavel	#13
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 31 used[1] = 5 total = 36
;# Function pattern *movqi3 used[0] = 50 total = 50
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 5 total = 5
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 4 total = 6
	MODULE	gatt_connect
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattConnectRequest:
	enterl	#12
?LBB_GattConnectRequest:
	ld	X,@$XAP_AH
?LBB2:
	ld	AH,#H'0008
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	cmp	X,#H'0000
	beq	?L2
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
	bra	(?L3)
?L2:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0001
	bsr	$_BdaddrTypedSetEmpty
?L3:
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0008,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0009,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_MessageSend
?LBE2:
?LBE_GattConnectRequest:
	leavel	#12
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_gattConvertL2capConnectStatus:
; leaf function with empty stack frame
?LBB_gattConvertL2capConnectStatus:
	cmp	AL,#H'0803
	beq	?L9
	cmp	AL,#(H'0001+H'0803)
	bcc	?L16
	cmp	AL,#H'0002
	beq	?L7
	cmp	AL,#(H'0001+H'0002)
	bcc	?L17
	cmp	AL,#H'0000
	beq	?L6
	bra	(?L14)
?L17:
	cmp	AL,#H'0802
	beq	?L8
	bra	(?L14)
?L16:
	cmp	AL,#H'0817
	beq	?L10
	cmp	AL,#(H'0001+H'0817)
	bcc	?L18
	cmp	AL,#H'080C
	beq	?L13
	bra	(?L14)
?L18:
	cmp	AL,#H'0818
	beq	?L11
	cmp	AL,#H'081A
	beq	?L12
	bra	(?L14)
?L6:
	ld	AL,#H'0000
	bra	(?L4)
?L7:
	ld	AL,#H'001C
	bra	(?L4)
?L8:
	ld	AL,#H'001E
	bra	(?L4)
?L9:
	ld	AL,#H'001F
	bra	(?L4)
?L10:
	ld	AL,#H'0013
	bra	(?L4)
?L11:
	ld	AL,#H'0020
	bra	(?L4)
?L12:
	ld	AL,#H'0021
	bra	(?L4)
?L13:
	ld	AL,#H'0019
	bra	(?L4)
?L14:
	ld	AL,#H'0014
?L4:
?LBE_gattConvertL2capConnectStatus:
	rts
_gattSendConnectionCfm:
	enterl	#14
?LBB_gattSendConnectionCfm:
	st	AL,@(H'000B,Y)
?LBB3:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	tst	@(H'000E,Y)
	beq	?L27
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,@(H'000E,Y)
	bsr	$_memcpy
	bra	(?L28)
?L27:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0001
	bsr	$_BdaddrTypedSetEmpty
?L28:
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#H'5801
	bsr	$_MessageSend
?LBE3:
?LBE_gattSendConnectionCfm:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gattHandleInternalConnectReq:
	enterl	#26
?LBB_gattHandleInternalConnectReq:
	st	AL,@(H'0016,Y)
	st	AH,@(H'0017,Y)
?LBB4:
	bsr	$_gattMaxConnections
	cmp	AL,#H'0000
	beq	?L30
	ld	AL,#H'0000
	st	AL,@(0,Y)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0017,Y)
	ld	AL,@(0,X)
	ld	AH,#H'0017
	bsr	_gattSendConnectionCfm
	bra	(?L29)
?L30:
	ld	X,@(H'0016,Y)
	tst	@(H'0003,X)
	bne	?L32
?LBB5:
	ld	AL,#H'0008
	st	AL,@(H'0004,Y)
	ld	AL,#H'0905
	st	AL,@(H'0005,Y)
	ld	X,@(H'0017,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0016,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0017,Y)
	add	AH,#H'0001
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_BdaddrConvertTypedVmToBluestack
	ld	X,@(H'0017,Y)
	ld	AL,@(H'0006,X)
	cmp	AL,#(H'0001+H'0006)
	bcc	?L33
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE41,X)
	brxl
	.SEG	CONST
?JTBASE41:
	.CODE
?L41:
	.SEG	CONST
	dc	lwrd(?L34-?L41)
	dc	lwrd(?L35-?L41)
	dc	lwrd(?L36-?L41)
	dc	lwrd(?L37-?L41)
	dc	lwrd(?L38-?L41)
	dc	lwrd(?L39-?L41)
	dc	lwrd(?L40-?L41)
	.CODE
?L34:
	ld	AL,#H'0000
	bra	(?L45)
?L35:
	ld	AL,#H'0008
	bra	(?L45)
?L36:
	ld	AL,#H'000C
	bra	(?L45)
?L37:
	ld	AL,#H'0010
	bra	(?L45)
?L38:
	ld	AL,#H'0014
	bra	(?L45)
?L39:
	ld	AL,#H'0018
	bra	(?L45)
?L40:
	ld	AL,#H'001C
?L45:
	st	AL,@(H'000C,Y)
?L33:
	ld	X,@(H'0017,Y)
	tst	@(H'0007,X)
	beq	?L43
	ld	AL,@(H'000C,Y)
	or	AL,#H'0002
	st	AL,@(H'000C,Y)
?L43:
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_VmSendAttPrim
?LBE5:
	bra	(?L29)
?L32:
?LBB6:
	ld	AL,#H'0008
	st	AL,@(H'000D,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000E
	ld	AH,@(H'0017,Y)
	bsr	$_memcpy
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'000E
	st	AH,@(0,Y)
	ld	AH,@(H'0016,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendConditionallyOnTask
?L29:
?LBE6:
?LBE4:
?LBE_gattHandleInternalConnectReq:
	leavel	#26
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_gattHandleAttConnectCfm:
	enterl	#16
?LBB_gattHandleAttConnectCfm:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	X,@$XAP_AH
?LBB7:
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0001
	beq	?L46
	ld	X,@(H'0009,Y)
?LBB8:
	ld	AL,@(H'0003,X)
	st	AL,@(H'000D,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	X,@(H'000A,Y)
	ld	AL,@(H'000A,X)
	cmp	AL,#H'0000
	beq	?L51
	cmp	AL,#H'0817
	bne	?L54
	ld	AL,@(H'0008,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	bne	?L50
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0003,X)
	bsr	$_gattAddCid
?L50:
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	ld	AH,#H'0001
	bsr	$_gattLockCid
	ld	AL,#H'0013
	st	AL,@(H'000C,Y)
	bra	(?L48)
?L51:
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'000B,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(H'000D,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	bsr	$_gattUnlockCid
	ld	AL,#H'0000
	st	AL,@(H'000C,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0009,X)
	and	AL,#H'03FF
	asl	#H'0003
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0002,X)
	and	AH,#-H'1FF9
	or	AH,@$XAP_AL
	st	AH,@(H'0002,X)
	ld	AL,@(H'000C,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0007,X)
	and	AL,#H'001C
	cmp	AL,#H'0000
	beq	?L52
	cmp	AL,#H'0004
	beq	?L52
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	and	AL,#-H'2001
	bra	(?L60)
?L52:
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0002,X)
	or	AL,#H'2000
?L60:
	st	AL,@(H'0002,X)
	bra	(?L48)
?L54:
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	bsr	$_gattFindConn
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L55
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	st	AL,@(H'000D,Y)
?L55:
	tst	@(H'000B,Y)
	beq	?L57
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0002
	beq	?L56
?L57:
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(H'0003,X)
?L56:
	ld	X,@(H'000A,Y)
	ld	AL,@(H'000A,X)
	bsr	_gattConvertL2capConnectStatus
	st	AL,@(H'000C,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0008,X)
	bsr	$_gattDeleteCid
?L48:
	tst	@(H'000D,Y)
	bne	?L59
	bsr	$_gattGetAppTask
	st	AL,@(H'000D,Y)
?L59:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,@(H'000C,Y)
	bsr	_gattSendConnectionCfm
?L46:
?LBE8:
?LBE7:
?LBE_gattHandleAttConnectCfm:
	leavel	#16
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_gattHandleAttConnectInd:
	enterl	#14
?LBB_gattHandleAttConnectInd:
	st	AL,@(H'000B,Y)
?LBB9:
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_BdaddrConvertTypedBluestackToVm
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0007,X)
	st	AH,@(H'0008,Y)
	ld	AL,@(H'0009,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000A,Y)
	and	AH,#H'001C
	cmp	AH,#H'0000
	beq	?L66
	cmp	AH,#H'0004
	beq	?L66
	bsr	$_gattGetAppTask
	ld	AH,@$XAP_AL
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	bsr	$_gattAddCid
	cmp	AL,#H'0000
	beq	?L67
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0009,X)
	ld	AH,#H'0003
	bsr	$_gattLockCid
	bra	(?L66)
?L67:
	bsr	$_gattGetAppTask
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0007,X)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0009,X)
	bsr	$_GattConnectResponse
	bra	(?L65)
?L66:
	bsr	$_gattGetAppTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,#H'5802
	bsr	$_MessageSend
?L65:
?LBE9:
?LBE_gattHandleAttConnectInd:
	leavel	#14
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_GattConnectResponse:
	enterl	#21
?LBB_GattConnectResponse:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
	ld	AL,@(H'0015,Y)
?LBB10:
	and	AL,#H'001C
	cmp	AL,#H'0000
	beq	?L71
	cmp	AL,#H'0004
	beq	?L71
	tst	@(H'0016,Y)
	bne	?L72
	ld	AL,@$XAP_AH
	bsr	$_GattDisconnectRequest
	bra	(?L70)
?L72:
	ld	AL,@(H'0010,Y)
	bsr	$_gattUnlockCid
	bra	(?L70)
?L71:
?LBB11:
	ld	AH,#H'0004
	st	AH,@(H'0004,Y)
	ld	AL,#H'0916
	st	AL,@(H'0005,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0007,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'000F,Y)
	bsr	$_gattAddCid
	st	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,@(H'0010,Y)
	ld	AH,#H'0002
	bsr	$_gattLockCid
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0002,X)
	or	AL,#H'2000
	st	AL,@(H'0002,X)
	tst	@(H'0016,Y)
	beq	?L77
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	bra	(?L77)
?L75:
?LBB12:
	ld	AH,#H'0000
	st	AH,@(H'0012,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0009
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,@$XAP_UY
	add	AL,#H'0009
	st	AL,@(H'0012,Y)
?L78:
	ld	X,@(H'0012,Y)
	st	X,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'0017
	bsr	_gattSendConnectionCfm
?L77:
?LBE12:
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_VmSendAttPrim
?L70:
?LBE11:
?LBE10:
?LBE_GattConnectResponse:
	leavel	#21
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
	ENDMOD

;# Function pattern *movqi2 used[0] = 79 used[1] = 10 total = 89
;# Function pattern *movqi3 used[0] = 119 total = 119
;# Function pattern *addqi0 used[0] = 17 total = 17
;# Function pattern *addqi2 used[0] = 6 total = 6
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 30 total = 30
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 22 total = 22
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 12 used[1] = 7 total = 19
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 13 total = 13
	MODULE	gatt_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattInitEx:
	enterl	#10
?LBB_GattInitEx:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB2:
	tst	@_theGatt
	bne	?L3
	ld	AL,#H'0066
	bsr	$_PanicUnlessMalloc
	st	AL,@_theGatt
	ld	AH,#H'0066
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@_theGatt
	bsr	$_MessageAttTask
?L3:
	ld	X,@_theGatt
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,X)
	ld	X,@_theGatt
	ld	AH,#hwrd($_gattMessageHandler)
	ld	AL,#lwrd($_gattMessageHandler)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@_theGatt
	ld	AL,@(H'0004,X)
	and	AL,#H'1FFF
	or	AL,#H'2000
	st	AL,@(H'0004,X)
	ld	X,@_theGatt
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0065,X)
	ld	X,@_theGatt
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0006,X)
	ld	X,@_theGatt
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0005,X)
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,#H'0900
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?LBE3:
?LBE2:
?LBE_GattInitEx:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_GattInit:
	enterl	#4
?LBB_GattInit:
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	X,#H'0000
	st	X,@(H'0001,Y)
	bsr	$_GattInitEx
?LBE_GattInit:
	leavel	#4
$_gattGetTask:
; leaf function with empty stack frame
?LBB_gattGetTask:
	ld	AL,@_theGatt
?LBE_gattGetTask:
	rts
$_gattGetAppTask:
	enterl	#2
?LBB_gattGetAppTask:
	ld	X,@_theGatt
	ld	AL,@(H'0002,X)
?LBE_gattGetAppTask:
	leavel	#2
$_gattInitCidTaskMap:
	enterl	#3
?LBB_gattInitCidTaskMap:
?LBB4:
	ld	AL,@_theGatt
	add	AL,#H'0005
	ld	AH,#H'0060
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L13:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000C
	ld	X,@_theGatt
	add	X,@$XAP_AL
	ld	AL,#-H'0001
	st	AL,@(H'0005,X)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0005
	bcz	?L13
?LBE4:
?LBE_gattInitCidTaskMap:
	leavel	#3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattMaxConnections:
	enterl	#2
?LBB_gattMaxConnections:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@_theGatt
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'001F
	cmp	AH,#H'0005
	ble	?L18
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L18:
	ld	AL,@(-1,Y)
?LBE_gattMaxConnections:
	leavel	#2
$_gattFindConn:
	enterl	#6
?LBB_gattFindConn:
	ld	AH,@$XAP_AL
	ld	AL,@_theGatt
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0010
	st	AL,@(H'0002,Y)
	ld	AL,#H'0006
	st	AL,@(H'0003,Y)
	ld	AL,#-H'0001
	bsr	$_UtilFind
?LBE_gattFindConn:
	leavel	#6
$_gattFindConnAddr:
	enterl	#12
?LBB_gattFindConnAddr:
	st	AL,@(H'0006,Y)
?LBB5:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0009,Y)
?L29:
	ld	AL,@(H'0009,Y)
	lsl	#H'0010
	asr	#H'000C
	add	AL,@_theGatt
	add	AL,#H'0005
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	add	AL,#-H'0007
	cmp	AL,#(H'0001+H'0001)
	bcc	?L26
	ld	AH,@$XAP_UXL
	add	AH,#H'0006
	ld	AL,@(H'0006,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L26
	ld	AL,@(H'0008,Y)
	bra	(?L21)
?L26:
	ld	X,@(H'0008,Y)
	ld	AL,@(0,X)
	ld	AH,@$XAP_UY
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L24
	tst	@(H'0005,Y)
	bne	?L24
	tst	@(0,Y)
	bne	?L24
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L24
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0007,Y)
?L24:
	ld	X,@(H'0009,Y)
	add	X,#H'0001
	st	X,@(H'0009,Y)
	cmp	X,#H'0005
	bcz	?L29
	ld	AL,@(H'0007,Y)
?L21:
?LBE5:
?LBE_gattFindConnAddr:
	leavel	#12
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattCidIsValid:
	enterl	#2
?LBB_gattCidIsValid:
	bsr	$_gattFindConn
	cmp	AL,#H'0000
	beq	?L34
	ld	AL,#H'0001
?L34:
?LBE_gattCidIsValid:
	leavel	#2
$_gattAddCid:
	enterl	#4
?LBB_gattAddCid:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB6:
	ld	X,@_theGatt
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	and	AH,#H'001F
	cmp	AH,#H'0006
	beq	?L37
?LBB7:
	ld	AL,#-H'0001
	bsr	$_gattFindConn
	st	AL,@H'fff8
	ld	AL,@(0,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0001,X)
	ld	X,@_theGatt
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	add	AL,#H'0001
	and	AL,#H'001F
	asl	#H'0008
	ld	AH,@(H'0004,X)
	and	AH,#-H'1F01
	or	AH,@$XAP_AL
	st	AH,@(H'0004,X)
	ld	AL,@H'fff8
	bra	(?L35)
?L37:
?LBE7:
	ld	AL,#H'0000
?L35:
?LBE6:
?LBE_gattAddCid:
	leavel	#4
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_gattDeleteCid:
	enterl	#5
?LBB_gattDeleteCid:
	st	AL,@(H'0001,Y)
?LBB8:
	bsr	$_gattFindConn
	st	AL,@(H'0002,Y)
	tst	@(H'0001,Y)
	beq	?L39
	cmp	AL,#H'0000
	beq	?L39
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	bsr	$_free
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#-H'0001
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@_theGatt
	ld	AH,@(H'0004,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'001F
	add	AL,#-H'0001
	and	AL,#H'001F
	asl	#H'0008
	ld	AH,@(H'0004,X)
	and	AH,#-H'1F01
	or	AH,@$XAP_AL
	st	AH,@(H'0004,X)
?L39:
?LBE8:
?LBE_gattDeleteCid:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_gattGetCidData:
	enterl	#2
?LBB_gattGetCidData:
?LBB9:
	bsr	$_gattFindConn
	cmp	AL,#H'0000
	beq	?L42
	add	AL,#H'0003
	bra	(?L41)
?L42:
	ld	AL,#H'0000
?L41:
?LBE9:
?LBE_gattGetCidData:
	leavel	#2
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_gattLockCid:
	enterl	#3
?LBB_gattLockCid:
	st	AH,@(0,Y)
?LBB10:
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	tst	@(H'0004,X)
	beq	?L44
	ld	AL,#H'0000
	bra	(?L43)
?L44:
	ld	AL,@(0,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0001
?L43:
?LBE10:
?LBE_gattLockCid:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_gattUnlockCid:
	enterl	#4
?LBB_gattUnlockCid:
?LBB11:
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	bsr	$_free
	ld	AH,@(H'0001,Y)
	add	AH,#H'0003
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bsr	$_memset
?LBE11:
?LBE_gattUnlockCid:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_gattGetCidMappedTask:
	enterl	#2
?LBB_gattGetCidMappedTask:
?LBB12:
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
?LBE12:
?LBE_gattGetCidMappedTask:
	leavel	#2
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_gattSendInitCfm:
	enterl	#8
?LBB_gattSendInitCfm:
?LBB13:
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5800
	bsr	$_MessageSend
?LBE13:
?LBE_gattSendInitCfm:
	leavel	#8
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_gattHandleAttRegisterCfm:
	enterl	#9
?LBB_gattHandleAttRegisterCfm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AH
?LBB14:
	tst	@(H'0002,X)
	beq	?L50
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'1FFF
	st	AL,@(H'0004,X)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0015
	bsr	_gattSendInitCfm
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0065,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	bne	?L49
	tst	@(H'0005,X)
	beq	?L49
	ld	AL,@(H'0006,X)
	bsr	$_free
	bra	(?L49)
?L50:
	ld	X,@(H'0006,Y)
	tst	@(H'0005,X)
	beq	?L54
?LBB15:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0902
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,X)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE15:
	bra	(?L49)
?L54:
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0004,X)
	and	AL,#H'1FFF
	or	AL,#H'4000
	st	AL,@(H'0004,X)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0000
	bsr	_gattSendInitCfm
	bsr	$_gattInitCidTaskMap
?L49:
?LBE14:
?LBE_gattHandleAttRegisterCfm:
	leavel	#9
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_gattHandleAttAddDbCfm:
	enterl	#2
?LBB_gattHandleAttAddDbCfm:
	ld	X,@$XAP_AH
	tst	@(H'0002,X)
	beq	?L57
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'1FFF
	st	AL,@(H'0004,X)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0016
	bsr	_gattSendInitCfm
	bra	(?L56)
?L57:
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	and	AL,#H'1FFF
	or	AL,#H'4000
	st	AL,@(H'0004,X)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0000
	bsr	_gattSendInitCfm
	bsr	$_gattInitCidTaskMap
?L56:
?LBE_gattHandleAttAddDbCfm:
	leavel	#2
$_GattGetCidForBdaddr:
	enterl	#11
?LBB_GattGetCidForBdaddr:
	st	AL,@(H'0006,Y)
?LBB16:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
?L66:
	ld	AL,@(H'0007,Y)
	lsl	#H'0010
	asr	#H'000C
	ld	X,@_theGatt
	add	X,@$XAP_AL
	tst	@(H'0005,X)
	beq	?L62
	ld	AL,@(H'0005,X)
	cmp	AL,#-H'0001
	beq	?L62
	st	X,@(H'0008,Y)
?LBB17:
	ld	AL,@(H'0005,X)
	ld	AH,@$XAP_UY
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L62
	ld	AL,@(H'0006,Y)
	ld	AH,@$XAP_UY
	bsr	$_BdaddrTypedIsSame
	cmp	AL,#H'0000
	beq	?L62
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0005,X)
	bra	(?L59)
?L62:
	ld	AL,@(H'0007,Y)
?LBE17:
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0005
	bcz	?L66
	ld	AL,#H'0000
?L59:
?LBE16:
?LBE_GattGetCidForBdaddr:
	leavel	#11
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
	.SEG	VAR
_theGatt:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 78 used[1] = 12 total = 90
;# Function pattern *movqi3 used[0] = 95 total = 95
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 12 used[2] = 3 total = 15
;# Function pattern *andqi3 used[0] = 14 total = 14
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *mulqi3_const used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 23 total = 23
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 9 used[1] = 10 total = 19
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	gatt_primary_discovery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_uuid_primary_service:
	dc	H'0000
	dc	H'2800
_sdp_search:
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0000
	dc	H'0007
_sdp_search_attr:
	dc	H'0035
	dc	H'0006
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0009
	dc	H'0000
	dc	H'0001
?LC0:
	dc	H'0001
	dc	H'0006
	dc	H'0006
	dc	H'0003
	dc	H'0001
	dc	H'0006
	dc	H'0003
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0006
	dc	H'0003
	.CODE
$_gattHandleClSdpServiceSearchAttributeCfm:
	enterl	#45
?LBB_gattHandleClSdpServiceSearchAttributeCfm:
	st	AL,@(H'0024,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0025,Y)
	ld	X,@(H'0024,Y)
	add	X,#H'0003
	st	X,@(H'0027,Y)
	ld	AL,@$XAP_UXL
	bsr	$_gattFindConnAddr
	bsr	$_PanicNull
	st	AL,@(H'0026,Y)
	ld	AL,#H'0011
	st	AL,@(H'0001,Y)
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0027,Y)
	bsr	$_memmove
	ld	X,@(H'0024,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0011,Y)
	ld	AL,#H'000A
	st	AL,@(H'0012,Y)
	tst	@(0,X)
	bne	?L2
?LBB3:
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0013
	ld	AH,#(?LC0)
	bsr	$_memcpy
	ld	AL,@(H'0024,Y)
	add	AL,#H'0008
	st	AL,@(H'001F,Y)
	ld	AL,@(H'0024,Y)
	ld	X,@$XAP_AL
	add	AL,@(H'0007,X)
	add	AL,#H'0008
	st	AL,@(H'0020,Y)
	ld	AL,#H'0000
	st	AL,@(H'0028,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
	add	X,#H'0007
	st	X,@(H'0029,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0006
	st	AL,@(H'002A,Y)
?L17:
	ld	X,@$XAP_UY
	add	X,#H'0021
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'001F
	ld	AH,@$XAP_UY
	add	AH,#H'0023
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L18
	ld	X,@(H'0028,Y)
	ld	AL,@$XAP_UY
	add	X,@$XAP_AL
	ld	AL,@(H'0023,Y)
	cmp	AL,@(H'0013,X)
	bne	?L18
	ld	X,@(H'0028,Y)
	cmp	X,#H'0008
	beq	?L11
	cmp	X,#(H'0001+H'0008)
	bcc	?L15
	cmp	X,#H'0007
	beq	?L10
	bra	(?L9)
?L15:
	ld	AL,@(H'0028,Y)
	cmp	AL,#H'000B
	beq	?L12
	bra	(?L9)
?L10:
	ld	AL,@$XAP_UY
	add	AL,#H'0021
	bsr	$_RegionReadUnsigned
	st	AL,@(H'0006,Y)
	bra	(?L9)
?L11:
	ld	AL,@$XAP_UY
	add	AL,#H'0021
	bsr	$_RegionReadUnsigned
	st	AL,@(H'0007,Y)
	bra	(?L9)
?L12:
	ld	X,@$XAP_UY
	add	X,#H'0021
	st	X,@(0,Y)
	ld	AL,@(H'0029,Y)
	ld	AH,@(H'002A,Y)
	bsr	$_gatt_get_sdp_uuid
	ld	AL,#H'0000
	st	AL,@(H'0012,Y)
?L9:
	ld	AL,@(H'0023,Y)
	cmp	AL,#H'0006
	bne	?L5
	ld	AL,@(H'0021,Y)
	st	AL,@(H'001F,Y)
?L5:
	ld	AL,@(H'0028,Y)
	add	AL,#H'0001
	st	AL,@(H'0028,Y)
	cmp	AL,#H'000B
	bcz	?L17
?LBE3:
	bra	(?L18)
?L2:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0007
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
?L18:
	ld	X,@(H'0026,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0006
	beq	?L21
	cmp	AL,#(H'0001+H'0006)
	bcc	?L26
	cmp	AL,#H'0005
	beq	?L20
	bra	(?L24)
?L26:
	cmp	AL,#H'0007
	beq	?L22
	cmp	AL,#H'0008
	beq	?L23
	bra	(?L24)
?L20:
	ld	AL,#-H'0001
	st	AL,@(H'0025,Y)
?L21:
	ld	X,@(H'0025,Y)
	add	X,#H'5808
	st	X,@(H'0025,Y)
	ld	X,@(H'0026,Y)
?LBB4:
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	add	AH,#H'0004
	ld	X,#H'000D
	st	X,@(0,Y)
	bsr	$_memmove
?LBE4:
	bra	(?L19)
?L22:
	ld	AL,#H'5809
	st	AL,@(H'0025,Y)
	bra	(?L19)
?L23:
	ld	X,#H'580A
	st	X,@(H'0025,Y)
	bra	(?L19)
?L24:
	ld	AL,#H'0000
	st	AL,@(H'0025,Y)
	bsr	$_Panic
?L19:
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(0,Y)
	ld	X,@(H'0026,Y)
	ld	AL,@(H'0003,X)
	ld	AH,@(H'0025,Y)
	bsr	$_MessageSend
	ld	X,@(H'0024,Y)
	tst	@(H'0001,X)
	bne	?L1
	ld	X,@(H'0026,Y)
	ld	AL,@(H'0004,X)
	add	AL,#-H'0007
	cmp	AL,#(H'0001+H'0001)
	bcc	?L28
	ld	AL,@(0,X)
	bsr	$_gattDeleteCid
?L28:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0026,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L1:
?LBE2:
?LBE_gattHandleClSdpServiceSearchAttributeCfm:
	leavel	#45
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
_get_temp_conn:
	enterl	#3
?LBB_get_temp_conn:
	st	AL,@(0,Y)
?LBB5:
	bsr	$_gattGetTask
	st	AL,@H'fff9
	ld	AL,#H'003F
	st	AL,@H'fff8
	ld	AL,#H'0001
	st	AL,@(-1,Y)
?L46:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000C
	ld	X,@H'fff9
	add	X,@$XAP_AL
	ld	AL,@(H'0005,X)
	cmp	AL,@H'fff8
	bcc	?L43
	add	AL,#-H'0001
	st	AL,@H'fff8
?L43:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#H'0005
	bcz	?L46
	ld	AL,@H'fff8
	ld	AH,@(0,Y)
	bsr	$_gattAddCid
?LBE5:
?LBE_get_temp_conn:
	leavel	#3
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_GattDiscoverAllPrimaryServicesRequest:
	enterl	#27
?LBB_GattDiscoverAllPrimaryServicesRequest:
	st	AL,@(H'0016,Y)
	st	AH,@(H'0017,Y)
?LBB6:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0018,Y)
	cmp	AL,#H'0000
	beq	?L52
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L52
?LBB7:
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0017,Y)
	st	AL,@(H'0004,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0018,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendConditionallyOnTask
?LBE7:
	bra	(?L51)
?L52:
?LBB8:
	ld	AL,#H'000E
	st	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0017,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0015,Y)
	ld	X,@$XAP_UY
	add	X,#H'0008
	st	X,@(0,Y)
	ld	AL,@(H'0016,Y)
	ld	AH,#H'5807
	bsr	$_MessageSend
?L51:
?LBE8:
?LBE6:
?LBE_GattDiscoverAllPrimaryServicesRequest:
	leavel	#27
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE6
$_gattHandleInternalDiscoverAllPrimaryServicesReq:
	enterl	#15
?LBB_gattHandleInternalDiscoverAllPrimaryServicesReq:
	st	AL,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'000C,Y)
	ld	AH,#H'0005
	st	AH,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'000C,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L55
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L55
	bsr	$_gattGetTask
	ld	AH,#H'0014
	st	AH,@(0,Y)
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AH,#(_sdp_search)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0008
	st	AH,@(H'0003,Y)
	ld	AH,#(_sdp_search_attr)
	st	AH,@(H'0004,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
	bra	(?L54)
?L55:
	ld	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_primary_service)
	st	AL,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0001
	bsr	$_gatt_read_by_group_type_req
?L54:
?LBE9:
?LBE_gattHandleInternalDiscoverAllPrimaryServicesReq:
	leavel	#15
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_gattHandleAttReadByGroupTypeCfm:
	enterl	#14
?LBB_gattHandleAttReadByGroupTypeCfm:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0007,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0005,X)
	cmp	AL,#-H'0001
	bne	?L59
	ld	AH,#H'0001
?L59:
	st	AH,@(H'0002,Y)
	tst	@(H'0009,Y)
	beq	?L60
	ld	AH,@(H'0009,Y)
	add	AH,#H'000C
	bra	(?L61)
?L60:
	ld	AH,#H'0000
?L61:
	st	AH,@(H'0003,Y)
	ld	AL,#H'5807
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_gatt_message_prepare
	cmp	AL,#H'0000
	beq	?L63
	ld	AL,#H'0001
	ld	AH,#H'000E
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'000C,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0009,Y)
	st	AL,@(H'000D,X)
	add	X,#H'0004
	st	X,@(-1,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	ld	X,@(H'0007,Y)
	ld	X,@(H'0006,X)
	st	X,@(0,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(-1,Y)
	bsr	$_gatt_get_att_uuid
	tst	@(H'0005,Y)
	bne	?L62
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0005,X)
	add	AH,#H'0001
	ld	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_primary_service)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gatt_read_by_group_type_req
	bra	(?L63)
?L62:
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5807
	bsr	$_gatt_message_send
	tst	@(H'0006,Y)
	bne	?L63
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L63:
	ld	AL,@(H'000A,Y)
	bsr	$_free
?LBE10:
?LBE_gattHandleAttReadByGroupTypeCfm:
	leavel	#14
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_GattDiscoverPrimaryServiceRequest:
	enterl	#35
?LBB_GattDiscoverPrimaryServiceRequest:
	st	AL,@(H'001D,Y)
	st	AH,@(H'001E,Y)
?LBB11:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'001F,Y)
	cmp	AL,#H'0000
	beq	?L68
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L67
?L68:
	ld	AL,#H'7F7B
	st	AL,@(H'0020,Y)
	bra	(?L69)
?L67:
	ld	AL,@(H'0023,Y)
	add	AL,#-H'0001
	cmp	AL,#H'0002
	bcz	?L70
	ld	X,#H'7F78
	st	X,@(H'0020,Y)
	bra	(?L69)
?L70:
?LBB12:
	ld	AL,#H'000B
	st	AL,@(H'0002,Y)
	ld	AL,@(H'001D,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'001E,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0023,Y)
	st	X,@(H'0005,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'0024,Y)
	bsr	$_memmove
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'001F,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0004
	bsr	$_MessageSendConditionallyOnTask
	bra	(?L66)
?L69:
?LBE12:
?LBB13:
	ld	AL,#H'000E
	st	AL,@(H'000E,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000F
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'001E,Y)
	st	AL,@(H'000F,Y)
	ld	X,@(H'0020,Y)
	st	X,@(H'001C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000F
	st	AL,@(0,Y)
	ld	AL,@(H'001D,Y)
	ld	AH,#H'5808
	bsr	$_MessageSend
?L66:
?LBE13:
?LBE11:
?LBE_GattDiscoverPrimaryServiceRequest:
	leavel	#35
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE11
_search_sdp_service:
	enterl	#20
?LBB_search_sdp_service:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
	ld	AH,@(H'0014,Y)
?LBB14:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	bsr	$_memmove
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0010,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,#(_sdp_search)
	bsr	$_memmove
	ld	AH,@(H'0010,Y)
	add	AH,#H'0005
	st	AH,@(-1,Y)
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0001
	bne	?L74
	ld	X,#H'0003
	st	X,@(H'000F,Y)
	ld	AL,#H'0019
	ld	X,@(H'0010,Y)
	st	AL,@(H'0005,X)
	add	X,#H'0006
	st	X,@(-1,Y)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	asl	#H'0010
	st	AH,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	bra	(?L75)
?L74:
	ld	AH,@(H'000E,Y)
	cmp	AH,#H'0002
	bne	?L76
	ld	AL,#H'0005
	st	AL,@(H'000F,Y)
	ld	AL,#H'001A
	bra	(?L85)
?L76:
	ld	AL,#H'0011
	st	AL,@(H'000F,Y)
	ld	AL,#H'001C
?L85:
	ld	X,@(-1,Y)
	st	AL,@(0,X)
	ld	AH,#H'0001
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
?L75:
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@$XAP_UY
	add	X,#H'0005
	st	X,@H'fff9
?L82:
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@H'fff9
	st	X,@(H'0011,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	lsr	#H'0018
	and	AL,#H'00FF
	ld	X,@(-1,Y)
	st	AL,@(0,X)
	ld	AH,#H'0001
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(H'0011,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	and	AL,#H'00FF
	ld	X,@(-1,Y)
	st	AL,@(0,X)
	ld	AH,#H'0001
	add	AH,@(-1,Y)
	st	AH,@(-1,Y)
	ld	X,@(H'0011,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	lsr	#H'0008
	and	AL,#H'00FF
	ld	X,@(-1,Y)
	st	AL,@(0,X)
	ld	AH,#H'0001
	add	AH,@(-1,Y)
	ld	X,@(H'0011,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	add	AH,#H'0001
	st	AH,@(-1,Y)
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0003
	bcz	?L82
	ld	AL,@(H'000F,Y)
	ld	X,@(H'0010,Y)
	add	AL,@(H'0001,X)
	st	AL,@(H'0001,X)
	bsr	$_gattGetTask
	ld	AH,#H'0014
	st	AH,@(0,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0008
	st	AH,@(H'0003,Y)
	ld	AH,#(_sdp_search_attr)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?LBE14:
?LBE_search_sdp_service:
	leavel	#20
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_gattHandleInternalDiscoverPrimaryServiceReq:
	enterl	#15
?LBB_gattHandleInternalDiscoverPrimaryServiceReq:
	st	AL,@(H'000A,Y)
	ld	X,@$XAP_AL
?LBB15:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	st	AL,@(H'000B,Y)
	ld	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0006,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0007
	ld	AH,@(H'000A,Y)
	add	AH,#H'0003
	st	AH,@(H'000C,Y)
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_memmove
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'000D
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L90
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	bsr	$_VmGetBdAddrtFromCid
	cmp	AL,#H'0000
	beq	?L90
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0002,X)
	bsr	_search_sdp_service
	bra	(?L89)
?L90:
	ld	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'2800
	st	AL,@(H'0001,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0001,X)
	ld	AH,#H'0001
	bsr	$_gatt_find_by_type_value_req
?L89:
?LBE15:
?LBE_gattHandleInternalDiscoverPrimaryServiceReq:
	leavel	#15
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_gattHandleAttFindByTypeValueCfm:
	enterl	#13
?LBB_gattHandleAttFindByTypeValueCfm:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'0009,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0004,X)
	cmp	AL,#-H'0001
	bne	?L94
	ld	AH,#H'0001
?L94:
	st	AH,@(H'0002,Y)
	tst	@(H'0009,Y)
	beq	?L95
	ld	AL,@(H'0009,Y)
	add	AL,#H'000C
	bra	(?L96)
?L95:
	ld	AL,#H'0000
?L96:
	st	AL,@(H'0003,Y)
	ld	AL,#H'5808
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_gatt_message_prepare
	cmp	AL,#H'0000
	beq	?L100
	ld	AL,#H'0001
	ld	AH,#H'000E
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0004
	ld	AH,@(H'0008,Y)
	add	AH,#H'0007
	st	AH,@(H'000A,Y)
	ld	AH,#H'0008
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000C,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0009,Y)
	st	AL,@(H'000D,X)
	tst	@(H'0005,Y)
	bne	?L97
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0004,X)
	add	AH,#H'0001
	ld	AL,#-H'0001
	st	AL,@(0,Y)
	ld	AL,#H'2800
	st	AL,@(H'0001,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gatt_find_by_type_value_req
	bra	(?L92)
?L97:
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5808
	bsr	$_gatt_message_send
	tst	@(H'0006,Y)
	bne	?L92
	ld	AL,#H'0000
?L100:
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L92:
?LBE16:
?LBE_gattHandleAttFindByTypeValueCfm:
	leavel	#13
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
$_GattDiscoverAllBrEdrServicesRequest:
	enterl	#28
?LBB_GattDiscoverAllBrEdrServicesRequest:
	st	AL,@(H'0017,Y)
	st	AH,@(H'0018,Y)
?LBB17:
	bsr	_get_temp_conn
	st	AL,@(H'0019,Y)
	cmp	AL,#H'0000
	bne	?L103
?LBB18:
	ld	AL,#H'0011
	st	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	ld	AH,@(H'0018,Y)
	bsr	$_memmove
	ld	AL,#H'0017
	st	AL,@(H'0016,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0017,Y)
	ld	AH,#H'5809
	bsr	$_MessageSend
	bra	(?L102)
?L103:
	ld	AL,@(H'0019,Y)
?LBE18:
	add	AL,#H'0006
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0018,Y)
	bsr	$_memmove
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0019,Y)
	ld	AH,@(H'0017,Y)
	bsr	$_gattSetConnState
	bsr	$_gattGetTask
	ld	AH,#H'0014
	st	AH,@(0,Y)
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AH,#(_sdp_search)
	st	AH,@(H'0002,Y)
	ld	AH,#H'0008
	st	AH,@(H'0003,Y)
	ld	AH,#(_sdp_search_attr)
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0018,Y)
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?L102:
?LBE17:
?LBE_GattDiscoverAllBrEdrServicesRequest:
	leavel	#28
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_GattDiscoverBrEdrServiceRequest:
	enterl	#24
?LBB_GattDiscoverBrEdrServiceRequest:
	st	AL,@(H'0013,Y)
	st	AH,@(H'0014,Y)
?LBB19:
	ld	AL,#H'0000
	st	AL,@(H'0015,Y)
	ld	AL,@(H'0018,Y)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0002)
	bcc	?L106
	ld	AL,@(H'0013,Y)
	bsr	_get_temp_conn
	st	AL,@(H'0015,Y)
	cmp	AL,#H'0000
	bne	?L105
?L106:
?LBB20:
	ld	AL,#H'0011
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0014,Y)
	bsr	$_memmove
	tst	@(H'0015,Y)
	beq	?L107
	ld	AL,#H'0017
	bra	(?L108)
?L107:
	ld	AL,#H'7F78
?L108:
	st	AL,@(H'0012,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	ld	AH,#H'580A
	bsr	$_MessageSend
	bra	(?L104)
?L105:
	ld	AL,@(H'0015,Y)
?LBE20:
	add	AL,#H'0006
	ld	AH,#H'0004
	st	AH,@(0,Y)
	ld	AH,@(H'0014,Y)
	bsr	$_memmove
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'0015,Y)
	ld	AH,@(H'0013,Y)
	bsr	$_gattSetConnState
	ld	AL,@(H'0019,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0014,Y)
	ld	AH,@(H'0018,Y)
	bsr	_search_sdp_service
?L104:
?LBE19:
?LBE_GattDiscoverBrEdrServiceRequest:
	leavel	#24
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
	ENDMOD

;# Function pattern *movqi2 used[0] = 213 used[1] = 42 total = 255
;# Function pattern *movqi3 used[0] = 244 total = 244
;# Function pattern *movqi8 used[0] = 6 total = 6
;# Function pattern *movhi used[2] = 3 used[3] = 1 total = 4
;# Function pattern *addqi0 used[0] = 37 total = 37
;# Function pattern *addqi2 used[0] = 37 used[2] = 8 total = 45
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *lshrhi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 25 total = 25
;# Function pattern *call1 used[0] = 30 total = 30
;# Function pattern *call_value1 used[0] = 52 total = 52
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 13 used[1] = 9 total = 22
;# Function pattern movstrqi+4 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 18 total = 18
	MODULE	gatt_server_config
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattExchangeMtuRequest:
	enterl	#12
?LBB_GattExchangeMtuRequest:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB2:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L2
?LBB3:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'000C,Y)
	st	X,@(H'0005,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendConditionallyOnTask
?LBE3:
	bra	(?L1)
?L2:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'7F7B
	bsr	_gattSendExchangeMtuCfm
?L1:
?LBE2:
?LBE_GattExchangeMtuRequest:
	leavel	#12
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
_gattSendExchangeMtuCfm:
	enterl	#9
?LBB_gattSendExchangeMtuCfm:
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_AH
?LBB4:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	bsr	$_gatt_message_status
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'5805
	bsr	$_MessageSend
?LBE4:
?LBE_gattSendExchangeMtuCfm:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattHandleInternalExchangeMtuReq:
	enterl	#5
?LBB_gattHandleInternalExchangeMtuReq:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L6
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	ld	AH,#H'001A
	bsr	_gattSendExchangeMtuCfm
	bra	(?L5)
?L6:
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_gatt_exchange_mtu_req
?L5:
?LBE5:
?LBE_gattHandleInternalExchangeMtuReq:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattHandleAttExchangeMtuCfm:
	enterl	#7
?LBB_gattHandleAttExchangeMtuCfm:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0004,X)
	bsr	_gattSendExchangeMtuCfm
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	or	AL,#H'4000
	st	AL,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	and	AL,#H'03FF
	asl	#H'0003
	ld	AH,@(H'0004,Y)
	and	AH,#-H'1FF9
	or	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	st	AH,@(H'0002,X)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?LBE6:
?LBE_gattHandleAttExchangeMtuCfm:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_GattExchangeMtuResponse:
	enterl	#2
?LBB_GattExchangeMtuResponse:
	bsr	$_gatt_exchange_mtu_rsp
?LBE_GattExchangeMtuResponse:
	leavel	#2
$_gattHandleAttExchangeMtuInd:
	enterl	#8
?LBB_gattHandleAttExchangeMtuInd:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB7:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	AH,#H'5806
	bsr	$_MessageSend
?LBE7:
?LBE_gattHandleAttExchangeMtuInd:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 43 used[1] = 3 total = 46
;# Function pattern *movqi3 used[0] = 48 total = 48
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	bdaddr_typed_is_same
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_BdaddrTypedIsSame:
	enterl	#3
?LBB_BdaddrTypedIsSame:
	st	AL,@H'fff8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bne	?L2
	ld	AL,#H'0001
	add	AL,@H'fff8
	add	AH,#H'0001
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L2:
	ld	AL,@(0,Y)
?LBE_BdaddrTypedIsSame:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 2 total = 6
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	gatt_common
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_att_base_uuid:
	dc	H'0000
	dc	H'1000
	dc	H'8000
	dc	H'0080
	dc	H'5F9B
	dc	H'34FB
	.CODE
$_gatt_get_att_uuid:
	enterl	#6
?LBB_gatt_get_att_uuid:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
?LBB2:
	cmp	AH,#H'0004
	beq	?L4
	cmp	AH,#(H'0001+H'0004)
	bcc	?L17
	cmp	AH,#H'0002
	beq	?L4
	bra	(?L15)
?L17:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0010
	beq	?L6
	bra	(?L15)
?L4:
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	or	AL,@(0,X)
	ld	AH,#H'0000
	ld	X,@(H'0001,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#H'0001
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0004
	bne	?L5
	ld	X,@(H'0007,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0002,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	ld	X,@(H'0001,Y)
	or	AL,@(1,X)
	or	AH,@(0,X)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#H'0002
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?L5:
	ld	AL,#H'1000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	AL,#H'0080
	st	AL,@(H'0005,X)
	ld	AL,#-H'8000
	st	AL,@(H'0004,X)
	ld	AL,#H'34FB
	st	AL,@(H'0007,X)
	ld	AL,#H'5F9B
	st	AL,@(H'0006,X)
	bra	(?L1)
?L6:
	ld	AH,#H'0000
	st	AH,@H'fffa
	ld	AL,#H'0003
	st	AL,@H'fffb
?L11:
	ld	X,@H'fffb
	sub	X,@H'fffa
	add	X,@$XAP_UXL
	add	X,@(H'0001,Y)
	st	X,@(H'0003,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	or	AL,@(0,X)
	ld	AH,#H'0000
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0002,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	asl	#H'0018
	or	AL,@H'fff9
	or	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AH,@(H'0007,Y)
	add	AH,#H'0004
	st	AH,@(H'0007,Y)
	ld	AL,#H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,#H'0003
	bcz	?L11
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	ld	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,#(_att_base_uuid)
	bsr	$_memcmp
	cmp	AL,#H'0000
	bne	?L12
	ld	AL,#H'0002
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	and	AL,#H'0000
	cmp	AH,#H'0000
	bne	?L1
	cmp	AL,#H'0000
	bne	?L1
	ld	AL,#H'0001
	bra	(?L20)
?L12:
	ld	AL,#H'0003
	bra	(?L20)
?L15:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0000
?L20:
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?L1:
?LBE2:
?LBE_gatt_get_att_uuid:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_gatt_get_sdp_uuid:
	enterl	#6
?LBB_gatt_get_sdp_uuid:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	add	AL,#H'0002
	ld	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,#(_att_base_uuid)
	bsr	$_memmove
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	cmp	AL,@(H'0001,X)
	bcc	?L37
?L32:
	ld	AL,@(H'0006,Y)
	bsr	$_RegionReadUnsigned
	ld	X,@(H'0003,Y)
	add	X,@$XAP_UXL
	add	X,@(H'0001,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@(H'0006,Y)
	ld	AL,@(0,X)
	add	AL,#H'0004
	st	AL,@(0,X)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
	cmp	AL,@(H'0001,X)
	bcs	?L32
?L37:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	ld	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,#(_att_base_uuid)
	bsr	$_memcmp
	cmp	AL,#H'0000
	bne	?L33
	ld	AL,#H'0002
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	and	AL,#H'0000
	cmp	AH,#H'0000
	bne	?L27
	cmp	AL,#H'0000
	bne	?L27
	ld	AL,#H'0001
	bra	(?L38)
?L33:
	ld	AL,#H'0003
?L38:
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
?L27:
?LBE3:
?LBE_gatt_get_sdp_uuid:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gatt_read8:
	enterl	#2
?LBB_gatt_read8:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB4:
	ld	X,@(0,X)
	ld	AL,@(0,X)
	ld	AH,#H'0001
	add	AH,@$XAP_UXL
	ld	X,@H'fff8
	st	AH,@(0,X)
?LBE4:
?LBE_gatt_read8:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gatt_read16:
	enterl	#2
?LBB_gatt_read16:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
?LBB5:
	ld	X,@(0,X)
	ld	AL,@(H'0001,X)
	asl	#H'0008
	or	AL,@(0,X)
	ld	AH,#H'0002
	add	AH,@$XAP_UXL
	ld	X,@H'fff8
	st	AH,@(0,X)
?LBE5:
?LBE_gatt_read16:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 34 used[1] = 5 total = 39
;# Function pattern *movqi3 used[0] = 57 total = 57
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 2 used[3] = 7 total = 9
;# Function pattern *andhi3 used[0] = 2 total = 2
;# Function pattern *iorhi3 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 10 used[2] = 3 total = 13
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2_1 used[0] = 2 total = 2
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern zero_extendqihi2+1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 total = 2
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 7 total = 7
;# Function pattern movstrqi+6 used[0] = 2 total = 2
	MODULE	gatt_disconnect
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattDisconnectRequest:
	enterl	#8
?LBB_GattDisconnectRequest:
?LBB2:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'0001
	bsr	$_MessageSend
?LBE2:
?LBE_GattDisconnectRequest:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_gattHandleInternalDisconnectReq:
	enterl	#8
?LBB_gattHandleInternalDisconnectReq:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,@(0,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L2
?LBB4:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0906
	st	AL,@(H'0001,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?L2:
?LBE4:
?LBE3:
?LBE_gattHandleInternalDisconnectReq:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattHandleAttDisconnectInd:
	enterl	#11
?LBB_gattHandleAttDisconnectInd:
	st	AH,@(H'0007,Y)
	ld	X,@$XAP_AH
?LBB5:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L4
?LBB6:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	cmp	AH,#H'0000
	beq	?L7
	cmp	AH,#H'080C
	beq	?L8
	bra	(?L9)
?L7:
	ld	AL,#H'0000
	bra	(?L12)
?L8:
	ld	AL,#H'0019
	bra	(?L12)
?L9:
	ld	AL,#H'0018
?L12:
	st	AL,@(H'0005,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	or	AL,#-H'8000
	st	AL,@(H'0002,X)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0012
	bsr	$_MessageSendConditionallyOnTask
?L4:
?LBE6:
?LBE5:
?LBE_gattHandleAttDisconnectInd:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_gattHandleInternalDeleteConn:
	enterl	#9
?LBB_gattHandleInternalDeleteConn:
	st	AL,@(H'0006,Y)
?LBB7:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	ld	AH,#H'5803
	bsr	$_MessageSend
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattDeleteCid
?LBE7:
?LBE_gattHandleInternalDeleteConn:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 23 total = 23
;# Function pattern *movqi3 used[0] = 30 total = 30
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	gatt_downstream
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gatt_exchange_mtu_req:
	enterl	#7
?LBB_gatt_exchange_mtu_req:
?LBB2:
	ld	X,#H'0004
	st	X,@(0,Y)
	ld	X,#H'0907
	st	X,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE2:
?LBE_gatt_exchange_mtu_req:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_gatt_exchange_mtu_rsp:
	enterl	#7
?LBB_gatt_exchange_mtu_rsp:
?LBB3:
	ld	X,#H'0004
	st	X,@(0,Y)
	ld	X,#H'0908
	st	X,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE3:
?LBE_gatt_exchange_mtu_rsp:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gatt_read_by_group_type_req:
	enterl	#18
?LBB_gatt_read_by_group_type_req:
?LBB4:
	ld	X,#H'000E
	st	X,@(H'0001,Y)
	ld	X,#H'090F
	st	X,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'0013,Y)
	st	X,@(H'0007,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,@(H'0014,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?LBE4:
?LBE_gatt_read_by_group_type_req:
	leavel	#18
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gatt_find_by_type_value_req:
	enterl	#21
?LBB_gatt_find_by_type_value_req:
?LBB5:
	ld	X,#H'0008
	st	X,@(H'0009,Y)
	ld	X,#H'090A
	st	X,@(H'000A,Y)
	st	AL,@(H'000C,Y)
	st	AH,@(H'000D,Y)
	ld	AL,@(H'0015,Y)
	st	AL,@(H'000E,Y)
	ld	X,@(H'0016,Y)
	st	X,@(H'000F,Y)
	ld	AL,@(H'0017,Y)
	cmp	AL,#H'0001
	bne	?L5
	ld	AL,#H'0002
	bra	(?L18)
?L5:
	ld	AL,@(H'0017,Y)
	cmp	AL,#H'0002
	bne	?L7
	ld	AL,#H'0004
?L18:
	st	AL,@(H'0010,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	st	X,@(H'0012,Y)
	bra	(?L6)
?L7:
	ld	AL,#H'0010
	st	AL,@(H'0010,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	st	AL,@(H'0012,Y)
?L6:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0018,Y)
	bsr	$_memmove
	ld	AL,@(H'0010,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0011,Y)
	ld	X,#H'0000
	st	X,@H'fff8
	cmp	X,@(H'0010,Y)
	bcc	?L17
?L15:
	ld	X,@(H'0011,Y)
	ld	AH,@H'fff8
	add	AH,@$XAP_UXL
	ld	X,@(H'0012,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'00FF
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	AL,@H'fff8
	and	AL,#H'0003
	cmp	AL,#H'0003
	bne	?L13
	ld	AL,@(H'0012,Y)
	add	AL,#-H'0002
	st	AL,@(H'0012,Y)
	bra	(?L11)
?L13:
	ld	X,@(H'0012,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	lsr	#H'0008
	st	AH,@(0,X)
	st	AL,@(1,X)
?L11:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@(H'0010,Y)
	bcs	?L15
?L17:
	ld	AL,@(H'0011,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0011,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	bsr	$_VmSendAttPrim
?LBE5:
?LBE_gatt_find_by_type_value_req:
	leavel	#21
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gatt_read_by_type_req:
	enterl	#18
?LBB_gatt_read_by_type_req:
?LBB6:
	ld	X,#H'000E
	st	X,@(H'0001,Y)
	ld	X,#H'090B
	st	X,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'0013,Y)
	st	X,@(H'0007,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,@(H'0014,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?LBE6:
?LBE_gatt_read_by_type_req:
	leavel	#18
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_gatt_read_req:
	enterl	#7
?LBB_gatt_read_req:
?LBB7:
	ld	X,#H'0004
	st	X,@(0,Y)
	ld	X,#H'090C
	st	X,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE7:
?LBE_gatt_read_req:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_gatt_write_req:
	enterl	#11
?LBB_gatt_write_req:
?LBB8:
	ld	X,#H'0007
	st	X,@(H'0001,Y)
	ld	X,#H'0910
	st	X,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0007,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'000C,Y)
	st	X,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_memmove
	ld	AL,@(H'0008,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?LBE8:
?LBE_gatt_write_req:
	leavel	#11
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_gatt_prepare_write_req:
	enterl	#11
?LBB_gatt_prepare_write_req:
?LBB9:
	ld	X,#H'0007
	st	X,@(H'0001,Y)
	ld	X,#H'0911
	st	X,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0007,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'000C,Y)
	st	X,@(0,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_memmove
	ld	AL,@(H'0008,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?LBE9:
?LBE_gatt_prepare_write_req:
	leavel	#11
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_gatt_execute_write_req:
	enterl	#7
?LBB_gatt_execute_write_req:
?LBB10:
	ld	X,#H'0004
	st	X,@(0,Y)
	ld	X,#H'0912
	st	X,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE10:
?LBE_gatt_execute_write_req:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_gatt_find_info_req:
	enterl	#8
?LBB_gatt_find_info_req:
?LBB11:
	ld	X,#H'0005
	st	X,@(0,Y)
	ld	X,#H'0909
	st	X,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE11:
?LBE_gatt_find_info_req:
	leavel	#8
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_gatt_read_blob_req:
	enterl	#8
?LBB_gatt_read_blob_req:
?LBB12:
	ld	X,#H'0005
	st	X,@(0,Y)
	ld	X,#H'090D
	st	X,@(H'0001,Y)
	st	AL,@(H'0003,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?LBE12:
?LBE_gatt_read_blob_req:
	leavel	#8
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_gatt_read_multi_req:
	enterl	#10
?LBB_gatt_read_multi_req:
	st	AH,@(H'0007,Y)
?LBB13:
	ld	AH,#H'0005
	st	AH,@(H'0001,Y)
	ld	AH,#H'090E
	st	AH,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	bsr	$_VmGetHandleFromPointer
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_VmSendAttPrim
?LBE13:
?LBE_gatt_read_multi_req:
	leavel	#10
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
	ENDMOD

;# Function pattern *movqi2 used[0] = 77 used[1] = 5 total = 82
;# Function pattern *movqi3 used[0] = 43 total = 43
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 17 total = 17
;# Function pattern *addqi2 used[0] = 1 used[2] = 2 total = 3
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 12 total = 12
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern movstrqi+2 used[0] = 8 total = 8
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	gatt_message
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gatt_message_internal:
	enterl	#5
?LBB_gatt_message_internal:
	st	AH,@(H'0002,Y)
	ld	X,@(H'0005,Y)
?LBB2:
	st	AL,@(0,X)
	bsr	$_gattGetTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_MessageSendConditionallyOnTask
?LBE2:
?LBE_gatt_message_internal:
	leavel	#5
$_gatt_message_prepare:
	enterl	#5
?LBB_gatt_message_prepare:
	st	AL,@(H'0001,Y)
	st	AH,@H'fff8
	ld	AH,@(H'0006,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0001
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
	cmp	AH,#H'0000
	beq	?L4
	cmp	AH,#-H'0087
	beq	?L6
	bra	(?L7)
?L4:
	tst	@(H'0007,Y)
	bne	?L3
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	st	AL,@(0,X)
?L6:
	ld	AL,#H'0001
	ld	X,@H'fff8
	st	AL,@(0,X)
	bra	(?L3)
?L7:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L3:
	tst	@(H'0008,Y)
	beq	?L9
	tst	@(H'0002,Y)
	bne	?L10
	ld	X,@H'fff8
	ld	AH,@(0,X)
	ld	X,@(H'0005,Y)
	or	AH,@(0,X)
	and	AH,#H'0001
	bra	(?L11)
?L10:
	ld	AH,#H'0000
?L11:
	ld	X,@(H'0008,Y)
	st	AH,@(0,X)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_gatt_message_send
	tst	@(H'0002,Y)
	beq	?L9
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
	ld	AL,#H'0000
	bra	(?L2)
?L9:
	ld	AL,#H'0001
?L2:
?LBE3:
?LBE_gatt_message_prepare:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gatt_message_send:
	enterl	#4
?LBB_gatt_message_send:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	tst	@(H'0005,X)
	beq	?L14
	ld	AL,@(H'0005,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0001,Y)
	st	AL,@(H'0005,X)
?L14:
?LBE_gatt_message_send:
	leavel	#4
$_gatt_message_status:
; leaf function with empty stack frame
?LBB_gatt_message_status:
	cmp	AL,#H'0000
	beq	?L19
	cmp	AL,#-H'0087
	bne	?L20
?L19:
	ld	AL,#H'0000
	bra	(?L16)
?L20:
	and	AL,#H'7FFF
?L16:
?LBE_gatt_message_status:
	rts
$_gattSetConnState:
	enterl	#2
?LBB_gattSetConnState:
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AH,@(H'0003,X)
	st	AL,@(H'0004,X)
?LBE_gattSetConnState:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 21 used[1] = 7 total = 28
;# Function pattern *movqi3 used[0] = 25 total = 25
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 5 total = 7
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	gatt_message_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleAttReadCfm:
	enterl	#3
?LBB_handleAttReadCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,@(H'0002,X)
	bsr	$_gattGetCidData
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0009
	beq	?L4
	cmp	AL,#H'000C
	bne	?L1
	ld	AL,@(0,Y)
	bsr	$_gattHandleAttReadCfmRead
	bra	(?L1)
?L4:
	ld	AL,@(0,Y)
	bsr	$_gattHandleAttReadCfmInclude
?L1:
?LBE2:
?LBE_handleAttReadCfm:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handleAttReadByTypeCfm:
	enterl	#3
?LBB_handleAttReadByTypeCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,@(H'0002,X)
	bsr	$_gattGetCidData
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(H'0001,X)
	cmp	AL,#H'000A
	beq	?L12
	cmp	AL,#(H'0001+H'000A)
	bcc	?L16
	cmp	AL,#H'0009
	beq	?L11
	bra	(?L9)
?L16:
	cmp	AL,#H'000D
	beq	?L13
	bra	(?L9)
?L11:
	ld	AL,@(0,Y)
	bsr	$_gattHandleAttReadByTypeCfmInclude
	bra	(?L9)
?L12:
	ld	AL,@(0,Y)
	bsr	$_gattHandleAttReadByTypeCfmCharacteristic
	bra	(?L9)
?L13:
	ld	AL,@(0,Y)
	bsr	$_gattHandleAttReadByTypeCfmRead
?L9:
?LBE3:
?LBE_handleAttReadByTypeCfm:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gattMessageHandler:
	enterl	#2
?LBB_gattMessageHandler:
	st	AH,@H'fff9
?LBB4:
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AH,@(H'0004,X)
	lsr	#H'000D
	cmp	AH,#H'0001
	beq	?L23
	cmp	AH,#H'0001
	bcs	?L20
	cmp	AH,#H'0002
	beq	?L30
	bra	(?L20)
?L23:
	ld	AH,@H'fff9
	cmp	AH,#-H'7FEE
	bne	?L20
	ld	AL,@(-1,Y)
	cmp	AL,#H'0980
	beq	?L26
	cmp	AL,#H'0982
	beq	?L27
	bra	(?L20)
?L26:
	ld	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	bsr	$_gattHandleAttRegisterCfm
	bra	(?L20)
?L27:
	ld	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	bsr	$_gattHandleAttAddDbCfm
	bra	(?L20)
?L30:
	ld	X,@H'fff9
	cmp	X,#H'0009
	beq	?L65
	cmp	X,#(H'0001+H'0009)
	bcc	?L74
	cmp	X,#H'0004
	beq	?L60
	cmp	X,#(H'0001+H'0004)
	bcc	?L75
	cmp	X,#H'0001
	beq	?L56
	cmp	X,#H'0001
	bcs	?L55
	cmp	X,#H'0002
	beq	?L58
	cmp	X,#H'0003
	beq	?L59
	bra	(?L20)
?L75:
	cmp	X,#H'0006
	beq	?L63
	cmp	X,#H'0006
	bcs	?L62
	cmp	X,#H'0007
	beq	?L61
	cmp	X,#H'0008
	beq	?L64
	bra	(?L20)
?L74:
	ld	AL,@H'fff9
	cmp	X,#H'0010
	beq	?L70
	cmp	X,#(H'0001+H'0010)
	bcc	?L76
	cmp	X,#H'000B
	beq	?L67
	cmp	X,#H'000B
	bcs	?L66
	cmp	X,#H'000C
	beq	?L68
	cmp	X,#H'000F
	beq	?L69
	bra	(?L20)
?L76:
	cmp	AL,#H'0012
	beq	?L57
	cmp	AL,#H'0012
	bcs	?L71
	cmp	AL,#H'5036
	beq	?L54
	cmp	AL,#-H'7FEE
	bne	?L20
	ld	AL,#-H'0985
	add	AL,@(-1,Y)
	cmp	AL,#(H'0001+H'0012)
	bcc	?L20
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE53,X)
	brxl
	.SEG	CONST
?JTBASE53:
	.CODE
?L53:
	.SEG	CONST
	dc	lwrd(?L34-?L53)
	dc	lwrd(?L36-?L53)
	dc	lwrd(?L20-?L53)
	dc	lwrd(?L35-?L53)
	dc	lwrd(?L37-?L53)
	dc	lwrd(?L38-?L53)
	dc	lwrd(?L42-?L53)
	dc	lwrd(?L40-?L53)
	dc	lwrd(?L41-?L53)
	dc	lwrd(?L43-?L53)
	dc	lwrd(?L44-?L53)
	dc	lwrd(?L45-?L53)
	dc	lwrd(?L39-?L53)
	dc	lwrd(?L46-?L53)
	dc	lwrd(?L47-?L53)
	dc	lwrd(?L48-?L53)
	dc	lwrd(?L50-?L53)
	dc	lwrd(?L51-?L53)
	dc	lwrd(?L49-?L53)
	.CODE
?L34:
	ld	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	bsr	$_gattHandleAttConnectCfm
	bra	(?L20)
?L35:
	ld	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	bsr	$_gattHandleAttDisconnectInd
	bra	(?L20)
?L36:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttConnectInd
	bra	(?L20)
?L37:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttExchangeMtuCfm
	bra	(?L20)
?L38:
	ld	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	bsr	$_gattHandleAttExchangeMtuInd
	bra	(?L20)
?L39:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttReadByGroupTypeCfm
	bra	(?L20)
?L40:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttFindByTypeValueCfm
	bra	(?L20)
?L41:
	ld	AL,@(H'0002,Y)
	bsr	_handleAttReadByTypeCfm
	bra	(?L20)
?L42:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttFindInfoCfm
	bra	(?L20)
?L43:
	ld	AL,@(H'0002,Y)
	bsr	_handleAttReadCfm
	bra	(?L20)
?L44:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttReadBlobCfm
	bra	(?L20)
?L45:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttReadMultiCfm
	bra	(?L20)
?L46:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttWriteCfm
	bra	(?L20)
?L47:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttPrepareWriteCfm
	bra	(?L20)
?L48:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttExecuteWriteCfm
	bra	(?L20)
?L49:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttAccessInd
	bra	(?L20)
?L50:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttHandleValueCfm
	bra	(?L20)
?L51:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleAttHandleValueInd
	bra	(?L20)
?L54:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleClSdpServiceSearchAttributeCfm
	bra	(?L20)
?L55:
	ld	AL,@H'fff8
	ld	AH,@(H'0002,Y)
	bsr	$_gattHandleInternalConnectReq
	bra	(?L20)
?L56:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalDisconnectReq
	bra	(?L20)
?L57:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalDeleteConn
	bra	(?L20)
?L58:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalExchangeMtuReq
	bra	(?L20)
?L59:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalDiscoverAllPrimaryServicesReq
	bra	(?L20)
?L60:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalDiscoverPrimaryServiceReq
	bra	(?L20)
?L61:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalDiscoverAllDescriptorsReq
	bra	(?L20)
?L62:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalFindIncludesReq
	bra	(?L20)
?L63:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleGattDiscoverAllCharacteristicsReq
	bra	(?L20)
?L64:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalReadReq
	bra	(?L20)
?L65:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalReadByUuidReq
	bra	(?L20)
?L66:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalReadLongReq
	bra	(?L20)
?L67:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalReadMultipleReq
	bra	(?L20)
?L68:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalWriteReq
	bra	(?L20)
?L69:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalExecuteWriteReq
	bra	(?L20)
?L70:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalAccessRes
	bra	(?L20)
?L71:
	ld	AL,@(H'0002,Y)
	bsr	$_gattHandleInternalHandleValueReq
?L20:
?LBE4:
?LBE_gattMessageHandler:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 11 used[1] = 53 total = 64
;# Function pattern *movqi3 used[0] = 7 total = 7
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 47 total = 47
;# Function pattern *call1 used[0] = 43 total = 43
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 5 total = 5
;# Function pattern movstrqi+5 used[0] = 30 total = 30
	MODULE	gatt_characteristic_discovery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_uuid_characteristic:
	dc	H'0000
	dc	H'2803
	.CODE
$_GattDiscoverAllCharacteristicsRequest:
	enterl	#28
?LBB_GattDiscoverAllCharacteristicsRequest:
	st	AL,@(H'0017,Y)
	st	AH,@(H'0018,Y)
?LBB2:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0019,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L2
?LBB3:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0017,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0018,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'001C,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'001D,Y)
	st	AL,@(H'0006,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0019,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0006
	bsr	$_MessageSendConditionallyOnTask
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'000F
	st	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0018,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0016,Y)
	ld	X,@$XAP_UY
	add	X,#H'0008
	st	X,@(0,Y)
	ld	AL,@(H'0017,Y)
	ld	AH,#H'580D
	bsr	$_MessageSend
?L1:
?LBE4:
?LBE2:
?LBE_GattDiscoverAllCharacteristicsRequest:
	leavel	#28
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE2
$_gattHandleGattDiscoverAllCharacteristicsReq:
	enterl	#7
?LBB_gattHandleGattDiscoverAllCharacteristicsReq:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	st	AL,@(H'0004,Y)
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_characteristic)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0006,X)
	bsr	$_gatt_read_by_type_req
?LBE5:
?LBE_gattHandleGattDiscoverAllCharacteristicsReq:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattHandleAttReadByTypeCfmCharacteristic:
	enterl	#14
?LBB_gattHandleAttReadByTypeCfmCharacteristic:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'000A,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000B,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	cmp	AL,@(H'0007,X)
	bcs	?L7
	ld	AH,#H'0001
?L7:
	st	AH,@(H'0002,Y)
	tst	@(H'000A,Y)
	beq	?L8
	ld	AH,@(H'000A,Y)
	add	AH,#H'000D
	bra	(?L9)
?L8:
	ld	AH,#H'0000
?L9:
	st	AH,@(H'0003,Y)
	ld	AL,#H'580D
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_gatt_message_prepare
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,#H'0001
	ld	AH,#H'000F
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'000A,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'000D,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	bsr	$_gatt_message_status
	ld	X,@(H'000A,Y)
	st	AL,@(H'000E,X)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	ld	X,@(H'000A,Y)
	st	AH,@(H'0001,X)
	cmp	AL,#H'0000
	bne	?L10
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_gatt_read8
	ld	X,@(H'000A,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_gatt_read16
	ld	X,@(H'000A,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0005
	ld	AH,@$XAP_UXL
	add	AH,#H'0004
	ld	X,@(H'0008,Y)
	ld	X,@(H'0005,X)
	add	X,#-H'0003
	st	X,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	bsr	$_gatt_get_att_uuid
?L10:
	tst	@(H'0005,Y)
	bne	?L11
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	add	AH,#H'0001
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_characteristic)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gatt_read_by_type_req
	bra	(?L12)
?L11:
	ld	AL,@(H'0009,Y)
	ld	AH,#H'580D
	bsr	$_gatt_message_send
	tst	@(H'0006,Y)
	bne	?L12
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L12:
	ld	AL,@(H'000B,Y)
	bsr	$_free
?LBE6:
?LBE_gattHandleAttReadByTypeCfmCharacteristic:
	leavel	#14
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 54 used[1] = 6 total = 60
;# Function pattern *movqi3 used[0] = 71 total = 71
;# Function pattern *addqi0 used[0] = 7 total = 7
;# Function pattern *addqi2 used[0] = 6 total = 6
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 13 total = 13
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 3 total = 7
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	gatt_characteristic_read
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_gattSendReadCharacteristicValueCfm:
	enterl	#6
?LBB_gattSendReadCharacteristicValueCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	tst	@(H'0008,Y)
	beq	?L2
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	bra	(?L3)
?L2:
	ld	AL,#H'0005
?L3:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	add	AL,#H'0004
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	ld	AH,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0003,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	bsr	$_gatt_message_status
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'580F
	bsr	$_MessageSend
?LBE2:
?LBE_gattSendReadCharacteristicValueCfm:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_GattReadCharacteristicValueRequest:
	enterl	#14
?LBB_GattReadCharacteristicValueRequest:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB3:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L5
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L5
?LBB4:
	ld	AL,#H'0003
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0006,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0007,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_MessageSendConditionallyOnTask
?LBE4:
	bra	(?L4)
?L5:
	ld	AL,@(H'000E,Y)
	st	AL,@(0,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'000A,Y)
	bsr	_gattSendReadCharacteristicValueCfm
?L4:
?LBE3:
?LBE_GattReadCharacteristicValueRequest:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_gattHandleInternalReadReq:
	enterl	#5
?LBB_gattHandleInternalReadReq:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_gatt_read_req
?LBE5:
?LBE_gattHandleInternalReadReq:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattHandleAttReadCfmRead:
	enterl	#9
?LBB_gattHandleAttReadCfmRead:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0002,X)
	bsr	_gattSendReadCharacteristicValueCfm
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
	ld	AL,@(H'0006,Y)
	bsr	$_free
?LBE6:
?LBE_gattHandleAttReadCfmRead:
	leavel	#9
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_gattSendReadUsingCharacteristicUuidCfm:
	enterl	#6
?LBB_gattSendReadUsingCharacteristicUuidCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	tst	@(H'0009,Y)
	beq	?L10
	ld	AL,@(H'0009,Y)
	add	AL,#H'0005
	bra	(?L11)
?L10:
	ld	AL,#H'0006
?L11:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	add	AL,#H'0005
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	ld	AH,@(H'0009,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0004,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0008,Y)
	bsr	$_gatt_message_status
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5810
	bsr	$_MessageSend
?LBE7:
?LBE_gattSendReadUsingCharacteristicUuidCfm:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_GattReadUsingCharacteristicUuidRequest:
	enterl	#24
?LBB_GattReadUsingCharacteristicUuidRequest:
	st	AL,@(H'0013,Y)
	st	AH,@(H'0014,Y)
?LBB8:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0015,Y)
	cmp	AL,#H'0000
	beq	?L14
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L13
?L14:
	ld	AH,#H'7F7B
	bra	(?L15)
?L13:
	ld	AL,@(H'001A,Y)
	add	AL,#-H'0001
	cmp	AL,#H'0002
	bcz	?L16
	ld	AH,#H'7F78
	bra	(?L15)
?L16:
?LBB9:
	ld	AL,#H'000D
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0013,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0014,Y)
	st	AL,@(H'0007,Y)
	ld	X,@(H'0018,Y)
	st	X,@(H'0008,Y)
	ld	AL,@(H'0019,Y)
	st	AL,@(H'0009,Y)
	ld	X,@(H'001A,Y)
	st	X,@(H'000A,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000B
	ld	AH,@(H'001B,Y)
	bsr	$_memmove
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	st	AH,@(0,Y)
	ld	AH,@(H'0015,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_MessageSendConditionallyOnTask
	bra	(?L12)
?L15:
	ld	AL,@(H'0018,Y)
?LBE9:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0013,Y)
	ld	AH,@(H'0014,Y)
	bsr	_gattSendReadUsingCharacteristicUuidCfm
?L12:
?LBE8:
?LBE_GattReadUsingCharacteristicUuidRequest:
	leavel	#24
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_gattHandleInternalReadByUuidReq:
	enterl	#8
?LBB_gattHandleInternalReadByUuidReq:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	AL,#H'000D
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0007,X)
	ld	AH,@$XAP_UXL
	add	AH,#H'0008
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@(H'0005,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_gatt_read_by_type_req
?LBE10:
?LBE_gattHandleInternalReadByUuidReq:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_gattHandleAttReadByTypeCfmRead:
	enterl	#13
?LBB_gattHandleAttReadByTypeCfmRead:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB11:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0006,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000A,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	ld	X,@(H'0008,Y)
	cmp	AL,@(H'0006,X)
	bcs	?L22
	ld	AH,#H'0001
?L22:
	st	AH,@(H'0002,Y)
	tst	@(H'0009,Y)
	beq	?L23
	ld	AL,@(H'0009,Y)
	add	AL,#H'0002
	bra	(?L24)
?L23:
	ld	AL,#H'0000
?L24:
	st	AL,@(H'0003,Y)
	ld	AL,#H'5810
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_gatt_message_prepare
	cmp	AL,#H'0000
	beq	?L26
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0005,X)
	add	AH,#H'0006
	ld	AL,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0009,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0004,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0005
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	tst	@(H'0005,Y)
	bne	?L25
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	add	AH,#H'0001
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0008
	st	AL,@(H'0002,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gatt_read_by_type_req
	bra	(?L26)
?L25:
	ld	AL,@(H'0008,Y)
	ld	AH,#H'5810
	bsr	$_gatt_message_send
	tst	@(H'0006,Y)
	bne	?L26
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L26:
	ld	AL,@(H'000A,Y)
	bsr	$_free
?LBE11:
?LBE_gattHandleAttReadByTypeCfmRead:
	leavel	#13
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_GattReadLongCharacteristicValueRequest:
	enterl	#20
?LBB_GattReadLongCharacteristicValueRequest:
	st	AL,@(H'000F,Y)
	st	AH,@(H'0010,Y)
?LBB12:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	beq	?L30
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L30
?LBB13:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'0014,Y)
	st	X,@(H'0005,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0011,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000A
	bsr	$_MessageSendConditionallyOnTask
?LBE13:
	bra	(?L29)
?L30:
?LBB14:
	ld	AL,#H'0007
	st	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'000B,Y)
	ld	X,@(H'0014,Y)
	st	X,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	ld	AH,#H'5811
	bsr	$_MessageSend
?L29:
?LBE14:
?LBE12:
?LBE_GattReadLongCharacteristicValueRequest:
	leavel	#20
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE12
$_gattHandleInternalReadLongReq:
	enterl	#5
?LBB_gattHandleInternalReadLongReq:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB15:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	AL,#H'000E
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AH,@(H'0006,X)
	ld	AL,#H'0000
	st	AL,@(H'0007,X)
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0007,X)
	bsr	$_gatt_read_blob_req
?LBE15:
?LBE_gattHandleInternalReadLongReq:
	leavel	#5
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_gattHandleAttReadBlobCfm:
	enterl	#8
?LBB_gattHandleAttReadBlobCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB16:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0004,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0004,X)
	add	AH,#H'0007
	ld	AL,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	tst	@(H'0004,X)
	beq	?L34
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	ld	AH,@(H'0004,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	ld	X,@(H'0001,Y)
	add	AL,@(H'0004,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0007,X)
	ld	AL,#H'0001
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	and	AH,#H'03FF
	add	AH,#-H'0001
	ld	X,@(H'0001,Y)
	cmp	AH,@(H'0004,X)
	bcz	?L35
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
?L35:
	ld	X,#H'0000
	st	X,@(H'0003,Y)
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'5811
	bsr	$_gatt_message_send
?L34:
	ld	X,@(H'0001,Y)
	tst	@(H'0003,X)
	bne	?L36
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	and	AH,#H'03FF
	add	AH,#-H'0001
	ld	X,@(H'0001,Y)
	cmp	AH,@(H'0004,X)
	bne	?L36
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0007,X)
	bsr	$_gatt_read_blob_req
	bra	(?L37)
?L36:
	tst	@(H'0005,Y)
	bne	?L38
	ld	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'5811
	bsr	$_gatt_message_send
?L38:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L37:
	ld	AL,@(H'0004,Y)
	bsr	$_free
?LBE16:
?LBE_gattHandleAttReadBlobCfm:
	leavel	#8
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
_gattSendReadMultipleCharacteristicValuesCfm:
	enterl	#6
?LBB_gattSendReadMultipleCharacteristicValuesCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB17:
	tst	@(H'0007,Y)
	beq	?L42
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	bra	(?L43)
?L42:
	ld	AL,#H'0004
?L43:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	add	AL,#H'0003
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memmove
	ld	AH,@(H'0007,Y)
	ld	X,@(H'0003,Y)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	bsr	$_gatt_message_status
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5812
	bsr	$_MessageSend
?LBE17:
?LBE_gattSendReadMultipleCharacteristicValuesCfm:
	leavel	#6
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
$_GattReadMultipleCharacteristicValuesRequest:
	enterl	#9
?LBB_GattReadMultipleCharacteristicValuesRequest:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB18:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L45
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L45
?LBB19:
	tst	@(H'0009,Y)
	beq	?L46
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	bra	(?L47)
?L46:
	ld	AL,#H'0004
?L47:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	bsr	$_gattGetTask
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000B
	bsr	$_MessageSendConditionallyOnTask
?LBE19:
	bra	(?L44)
?L45:
	ld	AL,#H'7F7B
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	_gattSendReadMultipleCharacteristicValuesCfm
?L44:
?LBE18:
?LBE_GattReadMultipleCharacteristicValuesRequest:
	leavel	#9
;.stabn	192,0,0,?LBB18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;.stabn	224,0,0,?LBE18
$_gattHandleInternalReadMultipleReq:
	enterl	#4
?LBB_gattHandleInternalReadMultipleReq:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB20:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	AH,#H'000F
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_gatt_read_multi_req
?LBE20:
?LBE_gattHandleInternalReadMultipleReq:
	leavel	#4
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_gattHandleAttReadMultiCfm:
	enterl	#8
?LBB_gattHandleAttReadMultiCfm:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB21:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0005,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	bsr	_gattSendReadMultipleCharacteristicValuesCfm
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE21:
?LBE_gattHandleAttReadMultiCfm:
	leavel	#8
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
	ENDMOD

;# Function pattern *movqi2 used[0] = 186 used[1] = 36 total = 222
;# Function pattern *movqi3 used[0] = 247 total = 247
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 26 total = 26
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 34 total = 34
;# Function pattern *call_value1 used[0] = 51 total = 51
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 9 used[1] = 10 total = 19
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	gatt_characteristic_write
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_internalWriteReq:
	enterl	#13
?LBB_internalWriteReq:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB2:
	ld	AL,@(H'000D,Y)
	bsr	$_gattFindConn
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L2
?LBB3:
	tst	@(H'0010,Y)
	beq	?L3
	ld	AL,@(H'0010,Y)
	add	AL,#H'0006
	bra	(?L4)
?L3:
	ld	AL,#H'0007
?L4:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	add	AL,#H'0006
	ld	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0011,Y)
	bsr	$_memmove
	ld	AH,@(H'0010,Y)
	ld	X,@(H'000A,Y)
	st	AH,@(H'0005,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(0,X)
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0004,X)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,X)
	bsr	$_gattGetTask
	ld	X,@(H'000A,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000C
	bsr	$_MessageSendConditionallyOnTask
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000D,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#-H'0010
	cmp	AL,#(H'0001+H'0004)
	bcc	?L12
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE13,X)
	brxl
	.SEG	CONST
?JTBASE13:
	.CODE
?L13:
	.SEG	CONST
	dc	lwrd(?L7-?L13)
	dc	lwrd(?L8-?L13)
	dc	lwrd(?L9-?L13)
	dc	lwrd(?L10-?L13)
	dc	lwrd(?L11-?L13)
	.CODE
?L7:
	ld	AH,#H'5813
	bra	(?L14)
?L8:
	ld	AL,#H'5814
	bra	(?L15)
?L9:
	ld	AH,#H'5815
	bra	(?L14)
?L10:
	ld	AL,#H'5816
?L15:
	st	AL,@(H'0008,Y)
	bra	(?L6)
?L11:
	ld	AH,#H'5817
?L14:
	st	AH,@(H'0008,Y)
	bra	(?L6)
?L12:
	bsr	$_Panic
?L6:
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_MessageSend
?L1:
?LBE4:
?LBE2:
?LBE_internalWriteReq:
	leavel	#13
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE2
$_GattWriteWithoutResponseRequest:
	enterl	#7
?LBB_GattWriteWithoutResponseRequest:
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0010
	bsr	_internalWriteReq
?LBE_GattWriteWithoutResponseRequest:
	leavel	#7
$_GattSignedWriteWithoutResponseRequest:
	enterl	#7
?LBB_GattSignedWriteWithoutResponseRequest:
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0011
	bsr	_internalWriteReq
?LBE_GattSignedWriteWithoutResponseRequest:
	leavel	#7
$_GattWriteCharacteristicValueRequest:
	enterl	#7
?LBB_GattWriteCharacteristicValueRequest:
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0012
	bsr	_internalWriteReq
?LBE_GattWriteCharacteristicValueRequest:
	leavel	#7
$_gattHandleInternalWriteReq:
	enterl	#8
?LBB_gattHandleInternalWriteReq:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	add	AL,#-H'0010
	cmp	AL,#(H'0001+H'0004)
	bcc	?L26
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE27,X)
	brxl
	.SEG	CONST
?JTBASE27:
	.CODE
?L27:
	.SEG	CONST
	dc	lwrd(?L21-?L27)
	dc	lwrd(?L22-?L27)
	dc	lwrd(?L23-?L27)
	dc	lwrd(?L24-?L27)
	dc	lwrd(?L25-?L27)
	.CODE
?L21:
	ld	AL,#H'0040
	bra	(?L28)
?L22:
	ld	X,#H'00C0
	st	X,@(H'0005,Y)
	bra	(?L20)
?L23:
	ld	AL,#H'0000
?L28:
	st	AL,@(H'0005,Y)
	bra	(?L20)
?L24:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	_handleInternalWriteReqLong
	bra	(?L19)
?L25:
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	_handleInternalWriteReqPrepare
	bra	(?L19)
?L26:
	ld	X,#H'0000
	st	X,@(H'0005,Y)
	bsr	$_Panic
?L20:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0003,X)
	bsr	$_gatt_write_req
	ld	AL,#H'0001
	ld	AH,#H'0003
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
?L19:
?LBE5:
?LBE_gattHandleInternalWriteReq:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattHandleAttWriteCfm:
	enterl	#7
?LBB_gattHandleAttWriteCfm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0011
	beq	?L32
	cmp	AL,#(H'0001+H'0011)
	bcc	?L36
	cmp	AL,#H'0010
	beq	?L31
	bra	(?L34)
?L36:
	cmp	AL,#H'0012
	beq	?L33
	bra	(?L34)
?L31:
	ld	AL,#H'5813
	bra	(?L37)
?L32:
	ld	X,#H'5814
	st	X,@(H'0004,Y)
	bra	(?L30)
?L33:
	ld	AL,#H'5815
?L37:
	st	AL,@(H'0004,Y)
	bra	(?L30)
?L34:
	ld	X,#H'0000
	st	X,@(H'0004,Y)
	bsr	$_Panic
?L30:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0004,Y)
	bsr	$_gatt_message_send
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?LBE6:
?LBE_gattHandleAttWriteCfm:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_GattWriteLongCharacteristicValueRequest:
	enterl	#7
?LBB_GattWriteLongCharacteristicValueRequest:
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0013
	bsr	_internalWriteReq
?LBE_GattWriteLongCharacteristicValueRequest:
	leavel	#7
_handleInternalWriteReqLong:
	enterl	#9
?LBB_handleInternalWriteReqLong:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@$XAP_AL
?LBB7:
	add	AH,#H'0006
	st	AH,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0003,X)
	bsr	$_gatt_prepare_write_req
	ld	AL,#H'0001
	ld	AH,#H'0003
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AH,#H'0000
	st	AH,@(H'0002,X)
?LBE7:
?LBE_handleInternalWriteReqLong:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_handleAttPrepareWriteCfmLong:
	enterl	#10
?LBB_handleAttPrepareWriteCfmLong:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB8:
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AH
	tst	@(H'0005,X)
	bne	?L44
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0003
	and	AH,#H'03FF
	ld	X,@(H'0005,Y)
	add	AH,@(H'0001,X)
	add	AH,#-H'0005
	st	AH,@(H'0001,X)
	cmp	AH,@(H'0002,X)
	bcc	?L45
	st	AH,@(0,Y)
	ld	AL,@(H'0002,X)
	sub	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	add	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AH,@(0,X)
	bsr	$_gatt_prepare_write_req
	bra	(?L47)
?L45:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0001
	bra	(?L50)
?L44:
	ld	X,@(H'0005,Y)
	tst	@(H'0001,X)
	beq	?L48
	ld	X,@(H'0003,Y)
?LBB9:
	ld	X,@(H'0005,X)
	st	X,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'0000
?L50:
	bsr	$_gatt_execute_write_req
?LBE9:
	bra	(?L47)
?L48:
	ld	X,@(H'0003,Y)
?LBB10:
	ld	X,@(H'0005,X)
	st	X,@(H'0007,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0007,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'5816
	bsr	$_gatt_message_send
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	bsr	$_free
?L47:
	ld	X,@(H'0004,Y)
?LBE10:
	ld	AL,@(H'0007,X)
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?LBE8:
?LBE_handleAttPrepareWriteCfmLong:
	leavel	#10
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE8
_handleAttExecuteWriteCfmLong:
	enterl	#6
?LBB_handleAttExecuteWriteCfmLong:
	st	AL,@(H'0001,Y)
?LBB11:
	add	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	X,@(H'0005,X)
	st	X,@(H'0003,Y)
	tst	@(H'0002,X)
	bne	?L53
	ld	X,@$XAP_AH
	ld	AL,@(H'0004,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0003,Y)
	st	AL,@(H'0002,X)
?L53:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5816
	bsr	$_gatt_message_send
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	bsr	$_free
?LBE11:
?LBE_handleAttExecuteWriteCfmLong:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_GattReliableWritePrepareRequest:
	enterl	#7
?LBB_GattReliableWritePrepareRequest:
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0014
	bsr	_internalWriteReq
?LBE_GattReliableWritePrepareRequest:
	leavel	#7
_handleInternalWriteReqPrepare:
	enterl	#9
?LBB_handleInternalWriteReqPrepare:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@$XAP_AL
?LBB12:
	add	AH,#H'0006
	st	AH,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0005,Y)
	st	AL,@(H'0003,X)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0003,X)
	bsr	$_gatt_prepare_write_req
	ld	AL,#H'0001
	ld	AH,#H'0003
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0003,X)
	ld	X,@H'fff8
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
?LBE12:
?LBE_handleInternalWriteReqPrepare:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_handleAttPrepareWriteCfmPrepare:
	enterl	#7
?LBB_handleAttPrepareWriteCfmPrepare:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB13:
	add	AL,#H'0006
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	X,@(H'0005,X)
	st	X,@(H'0004,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0007,X)
	bsr	$_VmGetPointerFromHandle
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	st	AL,@(H'0007,X)
	tst	@(H'0005,X)
	bne	?L57
	ld	AL,@(H'0004,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'0001,X)
	bne	?L58
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	cmp	AL,@(H'0002,X)
	bne	?L58
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0003,X)
	bsr	$_memcmp8
	cmp	AL,#H'0000
	beq	?L57
?L58:
	ld	AL,#H'001B
	bra	(?L60)
?L57:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0005,X)
	bsr	$_gatt_message_status
?L60:
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'5817
	bsr	$_gatt_message_send
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	bsr	$_free
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0007,X)
	bsr	$_free
?LBE13:
?LBE_handleAttPrepareWriteCfmPrepare:
	leavel	#7
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_sendReliableWriteExecuteCfm:
	enterl	#9
?LBB_sendReliableWriteExecuteCfm:
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000A,Y)
?LBB14:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0003,Y)
	bsr	$_gatt_message_status
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'5818
	bsr	$_MessageSend
?LBE14:
?LBE_sendReliableWriteExecuteCfm:
	leavel	#9
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_GattReliableWriteExecuteRequest:
	enterl	#12
?LBB_GattReliableWriteExecuteRequest:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB15:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L65
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L65
?LBB16:
	ld	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	tst	@(H'000C,Y)
	beq	?L66
	ld	AL,#H'0001
?L66:
	st	AL,@(H'0005,Y)
	bsr	$_gattGetTask
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	X,@(0,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000F
	bsr	$_MessageSendConditionallyOnTask
?LBE16:
	bra	(?L64)
?L65:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_sendReliableWriteExecuteCfm
?L64:
?LBE15:
?LBE_GattReliableWriteExecuteRequest:
	leavel	#12
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
$_gattHandleInternalExecuteWriteReq:
	enterl	#4
?LBB_gattHandleInternalExecuteWriteReq:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB17:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	AH,#H'0015
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	AH,@(H'0002,X)
	bsr	$_gatt_execute_write_req
?LBE17:
?LBE_gattHandleInternalExecuteWriteReq:
	leavel	#4
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
_handleAttExecuteWriteCfmExecute:
	enterl	#5
?LBB_handleAttExecuteWriteCfmExecute:
	st	AL,@(H'0002,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	ld	AH,@(H'0002,X)
	bsr	_sendReliableWriteExecuteCfm
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?LBE_handleAttExecuteWriteCfmExecute:
	leavel	#5
$_gattHandleAttPrepareWriteCfm:
	enterl	#3
?LBB_gattHandleAttPrepareWriteCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB18:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0013
	beq	?L72
	cmp	AL,#H'0014
	beq	?L73
	bra	(?L74)
?L72:
	ld	AL,@$XAP_UXL
	ld	AH,@(0,Y)
	bsr	_handleAttPrepareWriteCfmLong
	bra	(?L70)
?L73:
	ld	AL,@$XAP_UXL
	ld	AH,@(0,Y)
	bsr	_handleAttPrepareWriteCfmPrepare
	bra	(?L70)
?L74:
	bsr	$_Panic
?L70:
?LBE18:
?LBE_gattHandleAttPrepareWriteCfm:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
$_gattHandleAttExecuteWriteCfm:
	enterl	#3
?LBB_gattHandleAttExecuteWriteCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
?LBB19:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0013
	beq	?L80
	cmp	AL,#H'0015
	beq	?L81
	bra	(?L82)
?L80:
	ld	AL,@$XAP_UXL
	ld	AH,@(0,Y)
	bsr	_handleAttExecuteWriteCfmLong
	bra	(?L78)
?L81:
	ld	AL,@$XAP_UXL
	ld	AH,@(0,Y)
	bsr	_handleAttExecuteWriteCfmExecute
	bra	(?L78)
?L82:
	bsr	$_Panic
?L78:
?LBE19:
?LBE_gattHandleAttExecuteWriteCfm:
	leavel	#3
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
	ENDMOD

;# Function pattern *movqi2 used[0] = 183 used[1] = 41 total = 224
;# Function pattern *movqi3 used[0] = 241 total = 241
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 17 total = 17
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 28 total = 28
;# Function pattern *call1 used[0] = 46 total = 46
;# Function pattern *call_value1 used[0] = 35 total = 35
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 6 total = 11
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 10 total = 10
	MODULE	gatt_descriptor_discovery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattDiscoverAllCharacteristicDescriptorsRequest:
	enterl	#26
?LBB_GattDiscoverAllCharacteristicDescriptorsRequest:
	st	AL,@(H'0015,Y)
	st	AH,@(H'0016,Y)
?LBB2:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0017,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L2
?LBB3:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0015,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'001A,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'001B,Y)
	st	AL,@(H'0006,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0017,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0007
	bsr	$_MessageSendConditionallyOnTask
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'000D
	st	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0014,Y)
	ld	X,@$XAP_UY
	add	X,#H'0008
	st	X,@(0,Y)
	ld	AL,@(H'0015,Y)
	ld	AH,#H'580E
	bsr	$_MessageSend
?L1:
?LBE4:
?LBE2:
?LBE_GattDiscoverAllCharacteristicDescriptorsRequest:
	leavel	#26
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE2
$_gattHandleInternalDiscoverAllDescriptorsReq:
	enterl	#5
?LBB_gattHandleInternalDiscoverAllDescriptorsReq:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	AL,#H'000B
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0002,Y)
	st	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0002,Y)
	ld	AH,@(H'0006,X)
	bsr	$_gatt_find_info_req
?LBE5:
?LBE_gattHandleInternalDiscoverAllDescriptorsReq:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattHandleAttFindInfoCfm:
	enterl	#12
?LBB_gattHandleAttFindInfoCfm:
	st	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'0009,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'000D,X)
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	ld	X,@(H'0008,Y)
	cmp	AL,@(H'0007,X)
	bcs	?L7
	ld	AH,#H'0001
?L7:
	st	AH,@(H'0002,Y)
	tst	@(H'0009,Y)
	beq	?L8
	ld	AL,@(H'0009,Y)
	add	AL,#H'000B
	bra	(?L9)
?L8:
	ld	AL,#H'0000
?L9:
	st	AL,@(H'0003,Y)
	ld	AL,#H'580E
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_gatt_message_prepare
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0001
	ld	AH,#H'000D
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0009,Y)
	st	AL,@(0,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0004,X)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	AH,@(H'0007,Y)
	add	AH,#H'0005
	ld	X,#H'0008
	st	X,@(0,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(H'000B,X)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'000D,X)
	bsr	$_gatt_message_status
	ld	X,@(H'0009,Y)
	st	AL,@(H'000C,X)
	tst	@(H'0005,Y)
	bne	?L10
	ld	X,@(H'0007,Y)
	ld	AH,@(H'0003,X)
	add	AH,#H'0001
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gatt_find_info_req
	bra	(?L5)
?L10:
	ld	AL,@(H'0008,Y)
	ld	AH,#H'580E
	bsr	$_gatt_message_send
	tst	@(H'0006,Y)
	bne	?L5
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L5:
?LBE6:
?LBE_gattHandleAttFindInfoCfm:
	leavel	#12
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi2 used[0] = 45 used[1] = 5 total = 50
;# Function pattern *movqi3 used[0] = 66 total = 66
;# Function pattern *addqi0 used[0] = 5 total = 5
;# Function pattern *addqi2 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 3 total = 6
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	gatt_notification_indication
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_gattSendCfm:
	enterl	#8
?LBB_gattSendCfm:
	st	AL,@H'fff8
	ld	X,@(H'000A,Y)
?LBB2:
	ld	AL,#H'581C
	st	AL,@(-1,Y)
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	st	X,@(H'0004,Y)
	tst	@(H'0009,Y)
	bne	?L2
	ld	AL,#H'581A
	st	AL,@(-1,Y)
?L2:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(-1,Y)
	bsr	$_MessageSend
?LBE2:
?LBE_gattSendCfm:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_GattNotificationRequest:
	enterl	#9
?LBB_GattNotificationRequest:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB3:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L4
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L4
?LBB4:
	tst	@(H'000A,Y)
	beq	?L5
	ld	AL,@(H'000A,Y)
	add	AL,#H'0005
	bra	(?L6)
?L5:
	ld	AL,#H'0006
?L6:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	add	AL,#H'0005
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	ld	AH,@(H'000A,Y)
	ld	X,@(H'0006,Y)
	st	AH,@(H'0004,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	AL,#H'0000
	st	AL,@(H'0003,X)
	bsr	$_gattGetTask
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0011
	bsr	$_MessageSendConditionallyOnTask
?LBE4:
	bra	(?L3)
?L4:
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'7F73
	bsr	_gattSendCfm
?L3:
?LBE3:
?LBE_GattNotificationRequest:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_GattIndicationRequest:
	enterl	#9
?LBB_GattIndicationRequest:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB5:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L9
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L9
?LBB6:
	tst	@(H'000A,Y)
	beq	?L10
	ld	AL,@(H'000A,Y)
	add	AL,#H'0005
	bra	(?L11)
?L10:
	ld	AL,#H'0006
?L11:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	add	AL,#H'0005
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	ld	AH,@(H'000A,Y)
	ld	X,@(H'0006,Y)
	st	AH,@(H'0004,X)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,X)
	ld	AL,#H'0001
	st	AL,@(H'0003,X)
	bsr	$_gattGetTask
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0011
	bsr	$_MessageSendConditionallyOnTask
?LBE6:
	bra	(?L8)
?L9:
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'7F73
	bsr	_gattSendCfm
?L8:
?LBE5:
?LBE_GattIndicationRequest:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_gattHandleInternalHandleValueReq:
	enterl	#17
?LBB_gattHandleInternalHandleValueReq:
	st	AL,@(H'000B,Y)
	ld	X,@$XAP_AL
?LBB7:
	ld	AL,@(H'0001,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L14
?LBB8:
	ld	AL,#H'0016
	st	AL,@(H'000C,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattGetCidData
	bsr	$_PanicNull
	st	AL,@(H'000D,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	ld	AH,@$XAP_AL
	ld	AL,#H'0007
	st	AL,@(H'0003,Y)
	ld	AL,#H'0913
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	bne	?L15
	ld	AL,#H'0017
	st	AL,@(H'000C,Y)
?L15:
	ld	X,@(H'000C,Y)
	st	X,@(0,Y)
	ld	AL,@$XAP_AH
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L16
?LBB9:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000E,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0005
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	bsr	$_memmove
	ld	AL,@(H'000E,Y)
	bsr	$_VmGetHandleFromPointer
	bra	(?L19)
?L16:
?LBE9:
	ld	AL,#H'0000
?L19:
	st	AL,@(H'000A,Y)
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'000D,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_VmSendAttPrim
?LBE8:
	bra	(?L13)
?L14:
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(0,X)
	ld	AH,#H'7F7B
	bsr	_gattSendCfm
?L13:
?LBE7:
?LBE_gattHandleInternalHandleValueReq:
	leavel	#17
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_gattHandleAttHandleValueCfm:
	enterl	#9
?LBB_gattHandleAttHandleValueCfm:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB10:
	ld	AL,@(H'0002,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L21
?LBB11:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattGetCidData
	bsr	$_PanicNull
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	tst	@(H'0003,X)
	beq	?L23
	ld	AL,@(H'0003,X)
	cmp	AL,#-H'0086
	bne	?L24
	ld	AL,#H'7F7A
	st	AL,@(H'0004,Y)
	bra	(?L23)
?L24:
	ld	X,#H'0014
	st	X,@(H'0004,Y)
?L23:
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattGetCidMappedTask
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(0,Y)
	ld	X,@(H'0005,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0001,X)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0004,Y)
	bsr	_gattSendCfm
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'7F7A
	beq	?L21
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L21:
?LBE11:
?LBE10:
?LBE_gattHandleAttHandleValueCfm:
	leavel	#9
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_gattHandleAttHandleValueInd:
	enterl	#7
?LBB_gattHandleAttHandleValueInd:
	st	AL,@(H'0001,Y)
?LBB12:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	tst	@(H'0005,X)
	beq	?L30
	ld	AL,@(H'0006,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0002,Y)
?L30:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L31
?LBB13:
	ld	AH,#H'5819
	st	AH,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	tst	@(H'0005,X)
	beq	?L32
	ld	AL,@(H'0005,X)
	add	AL,#H'0003
	bra	(?L33)
?L32:
	ld	AL,#H'0004
?L33:
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	add	AL,#H'0003
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0005,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memmove
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0001
	bne	?L34
	ld	AH,#H'581B
	st	AH,@(H'0003,Y)
?L34:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gattGetCidMappedTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_MessageSend
?L31:
?LBE13:
	ld	AL,@(H'0002,Y)
	bsr	$_free
?LBE12:
?LBE_gattHandleAttHandleValueInd:
	leavel	#7
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
$_GattIndicationResponse:
	enterl	#8
?LBB_GattIndicationResponse:
	st	AL,@(H'0005,Y)
?LBB14:
	bsr	$_gattCidIsValid
	cmp	AL,#H'0000
	beq	?L36
?LBB15:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0914
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_VmSendAttPrim
?L36:
?LBE15:
?LBE14:
?LBE_GattIndicationResponse:
	leavel	#8
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
	ENDMOD

;# Function pattern *movqi2 used[0] = 86 used[1] = 13 total = 99
;# Function pattern *movqi3 used[0] = 115 total = 115
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 9 total = 9
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 28 total = 28
;# Function pattern movstrqi+2 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 9 used[1] = 6 total = 15
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	gatt_relationship_discovery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
_uuid_include:
	dc	H'0000
	dc	H'2802
	.CODE
$_GattFindIncludedServicesRequest:
	enterl	#27
?LBB_GattFindIncludedServicesRequest:
	st	AL,@(H'0016,Y)
	st	AH,@(H'0017,Y)
?LBB2:
	ld	AL,@$XAP_AH
	bsr	$_gattFindConn
	st	AL,@(H'0018,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L2
?LBB3:
	ld	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0016,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0017,Y)
	st	AL,@(H'0004,Y)
	ld	X,@(H'001B,Y)
	st	X,@(H'0005,Y)
	ld	AL,@(H'001C,Y)
	st	AL,@(H'0006,Y)
	bsr	$_gattGetTask
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,@(H'0018,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'0005
	bsr	$_MessageSendConditionallyOnTask
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'000E
	st	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0017,Y)
	st	AL,@(H'0008,Y)
	ld	AL,#H'7F7B
	st	AL,@(H'0015,Y)
	ld	X,@$XAP_UY
	add	X,#H'0008
	st	X,@(0,Y)
	ld	AL,@(H'0016,Y)
	ld	AH,#H'580B
	bsr	$_MessageSend
?L1:
?LBE4:
?LBE2:
?LBE_GattFindIncludedServicesRequest:
	leavel	#27
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE2
$_gattHandleInternalFindIncludesReq:
	enterl	#7
?LBB_gattHandleInternalFindIncludesReq:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,@(H'0001,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_gattSetConnState
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0006,X)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0003,X)
	ld	X,@(H'0004,Y)
	st	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_include)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0006,X)
	bsr	$_gatt_read_by_type_req
?LBE5:
?LBE_gattHandleInternalFindIncludesReq:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattHandleAttReadByTypeCfmInclude:
	enterl	#14
?LBB_gattHandleAttReadByTypeCfmInclude:
	st	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
?LBB6:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'000A,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0006,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000B,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0003,X)
	ld	X,@(H'0009,Y)
	cmp	AL,@(H'0007,X)
	bcs	?L7
	ld	AH,#H'0001
?L7:
	st	AH,@(H'0002,Y)
	tst	@(H'000A,Y)
	beq	?L8
	ld	AH,@(H'000A,Y)
	add	AH,#H'000C
	bra	(?L9)
?L8:
	ld	AH,#H'0000
?L9:
	st	AH,@(H'0003,Y)
	ld	AL,#H'580B
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0006
	bsr	$_gatt_message_prepare
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,#H'0001
	ld	AH,#H'000E
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'000A,Y)
	ld	X,@(H'0009,Y)
	st	AL,@(H'0005,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'000A,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'000C,X)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	bsr	$_gatt_message_status
	ld	X,@(H'000A,Y)
	st	AL,@(H'000D,X)
	cmp	AL,#H'0000
	bne	?L10
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_gatt_read16
	ld	X,@(H'000A,Y)
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	bsr	$_gatt_read16
	ld	X,@(H'000A,Y)
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0004
	ld	AH,@$XAP_UXL
	add	AH,#H'0003
	ld	X,@(H'0008,Y)
	ld	X,@(H'0005,X)
	add	X,#-H'0004
	st	X,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	bsr	$_gatt_get_att_uuid
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'0001)
	bcc	?L11
	tst	@(H'0005,Y)
	bne	?L10
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0003,X)
	add	AH,#H'0001
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0001
	bne	?L13
	ld	AL,#H'0001
	bra	(?L14)
?L13:
	ld	AL,#H'0003
?L14:
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_include)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0002,X)
	bsr	$_gatt_read_by_type_req
	bra	(?L10)
?L11:
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0004,X)
	cmp	AL,#-H'0087
	beq	?L10
	ld	AL,@(H'0002,X)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_gatt_read_req
	ld	X,@(H'0008,Y)
	ld	AL,@(H'0003,X)
	add	AL,#H'0001
	ld	X,@(H'0009,Y)
	st	AL,@(H'0006,X)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
?L10:
	tst	@(H'0005,Y)
	beq	?L18
	ld	AL,@(H'0009,Y)
	ld	AH,#H'580B
	bsr	$_gatt_message_send
	tst	@(H'0006,Y)
	bne	?L18
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L18:
	ld	AL,@(H'000B,Y)
	bsr	$_free
?LBE6:
?LBE_gattHandleAttReadByTypeCfmInclude:
	leavel	#14
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$_gattHandleAttReadCfmInclude:
	enterl	#10
?LBB_gattHandleAttReadCfmInclude:
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AL
?LBB7:
	ld	AL,@(H'0002,X)
	bsr	$_gattFindConn
	bsr	$_PanicNull
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	X,@(H'0005,X)
	st	X,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0005,X)
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	tst	@(H'0005,Y)
	beq	?L24
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@(-1,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	ld	X,@(H'0003,Y)
	ld	X,@(H'0004,X)
	st	X,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(-1,Y)
	bsr	$_gatt_get_att_uuid
	ld	X,@(H'0005,Y)
	tst	@(H'000C,X)
	beq	?L25
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#(_uuid_include)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0006,X)
	bsr	$_gatt_read_by_type_req
	bra	(?L24)
?L25:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'580B
	bsr	$_gatt_message_send
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_gattSetConnState
?L24:
	ld	AL,@(H'0006,Y)
	bsr	$_free
?LBE7:
?LBE_gattHandleAttReadCfmInclude:
	leavel	#10
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 67 used[1] = 10 total = 77
;# Function pattern *movqi3 used[0] = 101 total = 101
;# Function pattern *addqi0 used[0] = 7 total = 7
;# Function pattern *addqi2 used[0] = 10 total = 10
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 15 total = 15
;# Function pattern *call_value1 used[0] = 17 total = 17
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 6 total = 10
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	gatt_apple_notification_client_destroy
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattAncsDestroy:
	enterl	#4
?LBB_GattAncsDestroy:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	tst	@(0,Y)
	beq	?L2
	ld	AL,@(0,Y)
	bsr	$_GattManagerUnregisterClient
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0000
	bra	(?L5)
?L3:
	ld	AL,#H'0004
?L5:
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	bsr	$_MessageFlushTask
?L2:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_GattAncsDestroy:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 3 total = 6
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	gatt_apple_notification_client_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattAncsInit:
	enterl	#10
?LBB_GattAncsInit:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB2:
	ld	AH,#H'0002
	st	AH,@(H'0007,Y)
	tst	@(H'0006,Y)
	beq	?L2
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#hwrd($_appleNotificationClientMsgHandler)
	ld	AL,#lwrd($_appleNotificationClientMsgHandler)
	ld	X,@(H'0005,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,X)
	ld	AL,#-H'0001
	st	AL,@(H'0003,X)
	st	AL,@(H'0006,X)
	st	AL,@(H'0005,X)
	st	AL,@(H'0004,X)
	st	AL,@(H'0007,X)
	st	X,@(H'0001,Y)
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0001,X)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0002,X)
	ld	AH,@(H'000C,Y)
	st	AH,@(H'0003,X)
	ld	AL,@$XAP_UXL
	bsr	$_GattManagerRegisterClient
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_GattManagerDiscoverAllCharacteristics
	ld	AH,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	st	AH,@(H'0008,X)
	bra	(?L2)
?L3:
	ld	AL,#H'0004
	st	AL,@(H'0007,Y)
?L2:
?LBE3:
?LBE2:
	ld	AL,@(H'0007,Y)
?LBE_GattAncsInit:
	leavel	#10
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 18 used[1] = 3 total = 21
;# Function pattern *movqi3 used[0] = 13 total = 13
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 1 total = 3
	MODULE	gatt_apple_notification_client_notification
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_makeAncsSetNotificationCfmMsg:
	enterl	#14
?LBB_makeAncsSetNotificationCfmMsg:
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000E,Y)
?LBB2:
	cmp	AL,#H'0001
	beq	?L3
	cmp	AL,#H'0002
	beq	?L4
	bra	(?L1)
?L3:
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	X,@(H'000B,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E2
	bra	(?L7)
?L4:
?LBE3:
?LBB4:
	ld	AL,#H'0002
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0007
	ld	X,@(H'000B,Y)
	st	X,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E3
?L7:
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'000B,Y)
	st	AL,@(H'0008,X)
?L1:
?LBE4:
?LBE2:
?LBE_makeAncsSetNotificationCfmMsg:
	leavel	#14
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_handleAncsNotification:
	enterl	#18
?LBB_handleAncsNotification:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
	ld	X,@$XAP_AH
?LBB5:
	tst	@(H'0002,X)
	beq	?L10
	ld	AL,@(H'0001,X)
	ld	X,@(H'0009,Y)
	cmp	AL,@(H'0003,X)
	bne	?L12
	ld	AL,#H'0001
	ld	X,@$XAP_AH
	asl	@(H'0005,X)
	ld	X,@(H'0009,Y)
	and	AL,@(H'0009,X)
	cmp	AL,#H'0000
	beq	?L10
?LBB6:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,X)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0006,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0007,X)
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0008,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0009,X)
	asl	#H'0008
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'000A,X)
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E0
	bra	(?L30)
?L12:
	ld	X,@(H'000A,Y)
?LBE6:
	ld	AL,@(H'0001,X)
	ld	X,@(H'0009,Y)
	cmp	AL,@(H'0006,X)
	bne	?L10
	ld	AL,@(H'0008,X)
	add	AL,#-H'0009
	cmp	AL,#(H'0001+H'0001)
	bcc	?L16
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bsr	$_makeAncsWriteCPCfmMsg
?L16:
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0003,X)
	cmp	AL,#H'0000
	beq	?L18
	cmp	AL,#H'0001
	beq	?L19
	bra	(?L27)
?L18:
	ld	X,@(H'000A,Y)
?LBB7:
	ld	AL,@(H'0002,X)
	add	AL,#-H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'000A,Y)
	ld	AH,#H'0000
	ld	AL,@(H'0004,X)
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0005,X)
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0006,X)
	asl	#H'0008
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,#H'0000
	ld	AL,@(H'0007,X)
	or	AL,@H'fff9
	or	AH,@H'fff8
	ld	X,@(H'000B,Y)
	st	AH,@(H'0001,X)
	st	AL,@(H'0002,X)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0002,X)
	add	AL,#-H'0005
	st	AL,@(H'000F,Y)
	ld	X,@(H'000B,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0004
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	ld	X,@(H'000F,Y)
	st	X,@(0,Y)
	bsr	$_memcpy
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E4
	bra	(?L30)
?L19:
?LBE7:
?LBB8:
	ld	AH,#H'0000
	st	AH,@(H'000C,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000D,Y)
	ld	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'000A,Y)
	tst	@(H'0004,X)
	beq	?L21
?L24:
	ld	AH,@(H'000C,Y)
	add	AH,#H'0001
	st	AH,@(H'000C,Y)
	ld	X,@(H'000A,Y)
	add	X,@$XAP_AH
	tst	@(H'0004,X)
	beq	?L21
	cmp	AH,#-H'0001
	bne	?L24
?L21:
	ld	AL,@(H'000C,Y)
	cmp	AL,#-H'0001
	beq	?L25
	ld	AL,@(H'000D,Y)
	add	AL,#H'0002
	ld	AH,@(H'000A,Y)
	add	AH,#H'0004
	ld	X,@(H'000C,Y)
	add	X,#H'0001
	st	X,@(0,Y)
	bsr	$_memcpy
	ld	X,@(H'000A,Y)
	ld	AL,@(H'0002,X)
	add	AL,#-H'0001
	st	AL,@H'fff8
	ld	X,@(H'000D,Y)
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,@(H'000C,Y)
	add	AL,#H'0003
	ld	AH,@(H'000A,Y)
	add	AH,@(H'000C,Y)
	add	AH,#H'0005
	ld	X,@(H'000C,Y)
	nadd	X,@H'fff8
	add	X,#-H'0001
	st	X,@(0,Y)
	bsr	$_memcpy
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E5
	bra	(?L30)
?L25:
	ld	AL,@(H'000D,Y)
	bsr	$_free
?LBE8:
	bra	(?L10)
?L27:
	ld	X,@(H'000A,Y)
?LBB9:
	ld	AL,@(H'0002,X)
	add	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000E,Y)
	ld	AH,@(H'0009,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
	ld	X,@(H'000A,Y)
	ld	X,@(H'0002,X)
	st	X,@(H'000F,Y)
	ld	AH,@$XAP_UXL
	ld	X,@(H'000E,Y)
	st	AH,@(H'0001,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	ld	AH,@(H'000A,Y)
	add	AH,#H'0003
	ld	X,@(H'000F,Y)
	st	X,@(0,Y)
	bsr	$_memcpy
	ld	AH,@(H'000E,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E7
?L30:
	bsr	$_MessageSend
?L10:
?LBE9:
?LBE5:
?LBE_handleAncsNotification:
	leavel	#18
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_ancsSetNotificationRequest:
	enterl	#11
?LBB_ancsSetNotificationRequest:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB10:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	X,#H'0004
	st	X,@(H'0008,Y)
	ld	AL,#-H'0001
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	bsr	$_GattManagerGetClientData
	cmp	AL,#H'0000
	bne	?L37
	bsr	$_Panic
?L37:
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	beq	?L39
	cmp	AL,#H'0002
	beq	?L46
	bra	(?L38)
?L39:
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0003,X)
	cmp	AH,#-H'0001
	beq	?L38
	ld	AL,@(H'0004,X)
	cmp	AL,#-H'0001
	bne	?L41
	ld	X,@$XAP_UY
	add	X,#H'0002
	add	AH,#H'0001
	st	AH,@(H'0007,Y)
	cmp	AH,@(H'0001,X)
	bcz	?L42
	ld	AL,@(H'0001,X)
	st	AL,@(H'0007,Y)
?L42:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0001
	bra	(?L66)
?L41:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0004,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0005,Y)
	bsr	$_writeClientConfigNotifyValue
	cmp	AL,#H'0000
	beq	?L38
	ld	AL,#H'0003
	bra	(?L62)
?L46:
	ld	X,@(H'0004,Y)
	ld	AH,@(H'0006,X)
	cmp	AH,#-H'0001
	beq	?L47
	ld	AL,@(H'0007,X)
	cmp	AL,#-H'0001
	bne	?L48
	ld	X,@$XAP_UY
	add	X,#H'0002
	add	AH,#H'0001
	st	AH,@(H'0007,Y)
	cmp	AH,@(H'0001,X)
	bcz	?L49
	ld	AL,@(H'0001,X)
	st	AL,@(H'0007,Y)
?L49:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0002
?L66:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_findEndHandleForCharDesc
	tst	@(H'0007,Y)
	beq	?L38
	cmp	AL,#H'0000
	beq	?L38
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_ancsDiscoverAllCharacteristicDescriptors
	st	AL,@(H'0006,Y)
	bra	(?L38)
?L48:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0005,Y)
	bsr	$_writeClientConfigNotifyValue
	cmp	AL,#H'0000
	beq	?L38
	ld	AL,#H'0004
	bra	(?L62)
?L47:
	ld	AL,#H'0005
	st	AL,@(H'0008,Y)
?L38:
	tst	@(H'0006,Y)
	beq	?L56
	tst	@(H'0005,Y)
	beq	?L57
	ld	X,@(H'000B,Y)
	cmp	X,#H'0001
	bne	?L58
	ld	AL,#H'0005
	bra	(?L62)
?L58:
	ld	AL,#H'0007
	bra	(?L62)
?L57:
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	bne	?L61
	ld	AL,#H'0006
	bra	(?L62)
?L61:
	ld	AL,#H'0008
?L62:
	ld	X,@(H'0004,Y)
	st	AL,@(H'0008,X)
	bra	(?L36)
?L56:
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_makeAncsSetNotificationCfmMsg
?L36:
?LBE10:
?LBE_ancsSetNotificationRequest:
	leavel	#11
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_GattAncsSetNSNotificationEnableRequest:
	enterl	#9
?LBB_GattAncsSetNSNotificationEnableRequest:
?LBB11:
	ld	X,#H'0002
	st	X,@(H'0002,Y)
	ld	X,@$XAP_UY
	add	X,#H'0003
	st	AH,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	st	AH,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AH,#H'0008
	add	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendConditionally
?LBE11:
?LBE_GattAncsSetNSNotificationEnableRequest:
	leavel	#9
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_GattAncsSetDSNotificationEnableRequest:
	enterl	#9
?LBB_GattAncsSetDSNotificationEnableRequest:
?LBB12:
	ld	X,#H'0001
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AH,#H'0008
	add	AH,@$XAP_AL
	st	AH,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendConditionally
?LBE12:
?LBE_GattAncsSetDSNotificationEnableRequest:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi2 used[0] = 81 used[1] = 10 total = 91
;# Function pattern *movqi3 used[0] = 111 total = 111
;# Function pattern *movqi8 used[0] = 2 total = 2
;# Function pattern *movhi used[3] = 8 total = 8
;# Function pattern *iorhi3 used[0] = 6 total = 6
;# Function pattern *addqi0 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 22 used[2] = 2 total = 24
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[1] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 4 total = 4
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 6 total = 6
;# Function pattern jump used[0] = 16 total = 16
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern zero_extendqihi2+1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 6 total = 12
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 17 total = 17
	MODULE	gatt_apple_notification_client_write
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_makeAncsWriteCPCfmMsg:
	enterl	#9
?LBB_makeAncsWriteCPCfmMsg:
	st	AL,@(H'0006,Y)
?LBB2:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0009
	beq	?L3
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'000A
	bne	?L4
	ld	AL,#H'0001
	bra	(?L6)
?L4:
	ld	AL,#H'0002
?L6:
	st	AL,@(H'0003,Y)
?L3:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E6
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0008,X)
?LBE2:
?LBE_makeAncsWriteCPCfmMsg:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_get_ancs_error_code:
; leaf function with empty stack frame
?LBB_get_ancs_error_code:
	cmp	AL,#H'00A1
	beq	?L13
	cmp	AL,#(H'0001+H'00A1)
	bcc	?L18
	cmp	AL,#H'0000
	beq	?L11
	cmp	AL,#H'00A0
	beq	?L12
	bra	(?L16)
?L18:
	cmp	AL,#H'00A2
	beq	?L14
	cmp	AL,#H'00A3
	beq	?L15
	bra	(?L16)
?L11:
	ld	AL,#H'0000
	bra	(?L9)
?L12:
	ld	AL,#H'0006
	bra	(?L9)
?L13:
	ld	AL,#H'0007
	bra	(?L9)
?L14:
	ld	AL,#H'0002
	bra	(?L9)
?L15:
	ld	AL,#H'0008
	bra	(?L9)
?L16:
	ld	AL,#H'0004
?L9:
?LBE_get_ancs_error_code:
	rts
_handleWriteClientConfigResp:
	enterl	#4
?LBB_handleWriteClientConfigResp:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0003
	beq	?L25
	cmp	AL,#H'0004
	beq	?L26
	bra	(?L23)
?L25:
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	_get_ancs_error_code
	ld	AH,@$XAP_AL
	ld	AL,#H'0001
	bra	(?L29)
?L26:
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	_get_ancs_error_code
	ld	AH,@$XAP_AL
	ld	AL,#H'0002
?L29:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_makeAncsSetNotificationCfmMsg
?L23:
?LBE_handleWriteClientConfigResp:
	leavel	#4
_handleWriteControlPointResp:
	enterl	#3
?LBB_handleWriteControlPointResp:
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	bsr	_get_ancs_error_code
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	$_makeAncsWriteCPCfmMsg
?LBE_handleWriteControlPointResp:
	leavel	#3
_writeClientValue:
	enterl	#4
?LBB_writeClientValue:
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	$_GattManagerWriteCharacteristicValue
	ld	AL,#H'0001
?LBE_writeClientValue:
	leavel	#4
$_writeClientConfigNotifyValue:
	enterl	#6
?LBB_writeClientConfigNotifyValue:
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	cmp	AH,#H'0000
	beq	?L35
	ld	AL,#H'0001
?L35:
	st	AL,@(H'0002,Y)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_writeClientValue
?LBE3:
?LBE_writeClientConfigNotifyValue:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_writeClientConfigIndValue:
	enterl	#6
?LBB_writeClientConfigIndValue:
	st	AL,@H'fff8
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L37
	ld	AL,#H'0002
	bra	(?L38)
?L37:
	ld	AL,#H'0000
?L38:
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	AL,@(H'0001,X)
	ld	AL,#H'0002
	st	AL,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'0006,Y)
	bsr	_writeClientValue
?LBE4:
?LBE_writeClientConfigIndValue:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ancsWriteCharValue:
	enterl	#5
?LBB_ancsWriteCharValue:
	st	AH,@H'fff8
	ld	AH,@(H'0005,Y)
	ld	X,@H'fff8
	ld	X,@(H'0001,X)
	st	X,@(0,Y)
	ld	X,#H'0002
	add	X,@H'fff8
	st	X,@(H'0001,Y)
	bsr	_writeClientValue
?LBE_ancsWriteCharValue:
	leavel	#5
$_handleAncsWriteValueResp:
	enterl	#2
?LBB_handleAncsWriteValueResp:
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0003
	bcs	?L40
	cmp	AL,#H'0004
	bcz	?L43
	add	AL,#-H'0009
	cmp	AL,#(H'0001+H'0001)
	bcc	?L40
	bra	(?L45)
?L43:
	ld	AL,@$XAP_UXL
	bsr	_handleWriteClientConfigResp
	bra	(?L40)
?L45:
	ld	AL,@$XAP_UXL
	bsr	_handleWriteControlPointResp
?L40:
?LBE_handleAncsWriteValueResp:
	leavel	#2
$_GattAncsGetNotificationAttributes:
	enterl	#6
?LBB_GattAncsGetNotificationAttributes:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
?LBB5:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0005
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0000
	st	AL,@(H'0002,X)
	ld	AL,@(H'0007,Y)
	and	AL,#H'00FF
	st	AL,@(H'0006,X)
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	lsr	#H'0008
	and	AL,#H'00FF
	st	AL,@(H'0005,X)
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	lsr	#H'0010
	and	AL,#H'00FF
	st	AL,@(H'0004,X)
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	lsr	#H'0018
	and	AL,#H'00FF
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0007
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memcpy
	ld	AL,#H'0009
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendConditionally
?LBE5:
?LBE_GattAncsGetNotificationAttributes:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_GattAncsGetAppAttributes:
	enterl	#8
?LBB_GattAncsGetAppAttributes:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB6:
	cmp	AH,#H'0000
	beq	?L51
?LBB7:
	add	AH,@(H'0009,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	ld	X,@(H'0004,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0001
	st	AL,@(H'0002,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_memcpy
	ld	AL,@(H'0004,Y)
	add	AL,@(H'0003,Y)
	add	AL,#H'0003
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	$_memcpy
	ld	AL,#H'000A
	ld	X,@(H'0004,Y)
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendConditionally
?L51:
?LBE7:
?LBE6:
?LBE_GattAncsGetAppAttributes:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_GattAncsPerformNotificationAction:
	enterl	#5
?LBB_GattAncsPerformNotificationAction:
	st	AL,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	ld	X,@$XAP_AL
	ld	AL,#H'0006
	st	AL,@(H'0001,X)
	ld	AL,#H'0002
	st	AL,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	and	AL,#H'00FF
	st	AL,@(H'0006,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	lsr	#H'0008
	and	AL,#H'00FF
	st	AL,@(H'0005,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	lsr	#H'0010
	and	AL,#H'00FF
	st	AL,@(H'0004,X)
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	lsr	#H'0018
	and	AL,#H'00FF
	st	AL,@(H'0003,X)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0007,X)
	ld	AL,#H'0000
	st	AL,@(0,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendConditionally
?LBE8:
?LBE_GattAncsPerformNotificationAction:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
	ENDMOD

;# Function pattern *movqi2 used[0] = 75 used[1] = 15 total = 90
;# Function pattern *movqi3 used[0] = 62 total = 62
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 6 total = 6
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 13 used[2] = 1 total = 14
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *lshrhi3 used[0] = 6 total = 6
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern movstrqi+2 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 4 total = 4
;# Function pattern movstrqi+4 used[1] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 10 total = 10
	MODULE	gatt_apple_notification_client_discover
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_makeAncsInitCfmMsg:
	enterl	#9
?LBB_makeAncsInitCfmMsg:
	st	AL,@(H'0006,Y)
?LBB2:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	X,@(H'0006,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'65E1
	bsr	$_MessageSend
	ld	AL,#H'0000
	ld	X,@(H'0006,Y)
	st	AL,@(H'0008,X)
?LBE2:
?LBE_makeAncsInitCfmMsg:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_findEndHandleForCharDesc:
	enterl	#4
?LBB_findEndHandleForCharDesc:
	st	AL,@H'fffb
	st	AH,@(0,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@H'fffb
	ld	X,@(H'000A,X)
	st	X,@H'fff9
	st	AL,@H'fffa
?L18:
	tst	@(H'0001,Y)
	beq	?L6
	ld	AL,@(H'0001,Y)
	add	AL,@$XAP_AL
	ld	X,#-H'0002
	add	X,@$XAP_AL
	ld	AL,#H'00FC
	asl	@$XAP_UXL
	ld	AH,@$XAP_AL
	and	AH,@H'fff9
	st	AH,@H'fff9
?L6:
	tst	@H'fff9
	beq	?L7
	ld	AL,@(H'0001,Y)
	add	AL,@$XAP_AL
	st	AL,@H'fff8
	ld	AL,#H'0003
	asl	@H'fff8
	ld	AH,@$XAP_AL
	and	AH,@H'fff9
	lsr	@H'fff8
	cmp	AH,@(H'0005,Y)
	bne	?L7
	ld	X,#H'0002
	add	X,@H'fff8
	ld	AL,#H'0003
	asl	@$XAP_UXL
	ld	AH,@$XAP_AL
	and	AH,@H'fff9
	lsr	@$XAP_UXL
	cmp	AH,#H'0002
	beq	?L11
	cmp	AH,#(H'0001+H'0002)
	bcc	?L17
	cmp	AH,#H'0001
	beq	?L10
	bra	(?L13)
?L17:
	cmp	AH,#H'0003
	beq	?L12
	bra	(?L13)
?L10:
	ld	X,@H'fffb
	ld	X,@(H'0003,X)
	bra	(?L22)
?L11:
	ld	X,@H'fffb
	ld	X,@(H'0006,X)
?L22:
	ld	AL,#-H'0001
	add	AL,@$XAP_UXL
	bra	(?L21)
?L12:
	ld	X,@H'fffb
	ld	X,@(H'0005,X)
	bra	(?L22)
?L13:
	ld	AL,@(0,Y)
	cmp	AL,@(H'0004,Y)
	bcc	?L14
	ld	AL,@(H'0004,Y)
	bra	(?L21)
?L14:
	ld	AL,@(0,Y)
?L21:
	st	AL,@H'fffa
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
?L7:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	bcz	?L18
?LBE3:
	ld	AL,@H'fffa
?LBE_findEndHandleForCharDesc:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_nextAfterDiscoverCharacteristics:
	enterl	#2
?LBB_nextAfterDiscoverCharacteristics:
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0001
	bne	?L29
	cmp	X,#H'0000
	beq	?L32
	ld	AL,@(H'0003,X)
	cmp	AL,#-H'0001
	beq	?L32
	ld	AL,@$XAP_UXL
	ld	AH,#H'0000
	bra	(?L36)
?L32:
	ld	AL,@$XAP_UXL
	ld	AH,#H'0004
?L36:
	bsr	_makeAncsInitCfmMsg
?L29:
?LBE_nextAfterDiscoverCharacteristics:
	leavel	#2
_processDiscoveredDescriptor:
	enterl	#5
?LBB_processDiscoveredDescriptor:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	cmp	AL,#(H'0001+H'0008)
	bcc	?L39
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE55,X)
	brxl
	.SEG	CONST
?JTBASE55:
	.CODE
?L55:
	.SEG	CONST
	dc	lwrd(?L39-?L55)
	dc	lwrd(?L39-?L55)
	dc	lwrd(?L39-?L55)
	dc	lwrd(?L39-?L55)
	dc	lwrd(?L39-?L55)
	dc	lwrd(?L43-?L55)
	dc	lwrd(?L43-?L55)
	dc	lwrd(?L49-?L55)
	dc	lwrd(?L49-?L55)
	.CODE
?L43:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bne	?L39
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	cmp	AH,#H'0000
	bne	?L39
	cmp	AL,#H'2902
	bne	?L39
	ld	AH,#H'0000
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0005
	bne	?L47
	ld	AH,#H'0001
?L47:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_writeClientConfigNotifyValue
	cmp	AL,#H'0000
	beq	?L39
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0003
	bra	(?L56)
?L49:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bne	?L39
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	cmp	AH,#H'0000
	bne	?L39
	cmp	AL,#H'2902
	bne	?L39
	ld	AH,#H'0000
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0008,X)
	cmp	AL,#H'0007
	bne	?L53
	ld	AH,#H'0001
?L53:
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_writeClientConfigNotifyValue
	cmp	AL,#H'0000
	beq	?L39
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0007,X)
	ld	AL,#H'0004
?L56:
	st	AL,@(H'0008,X)
?L39:
?LBE_processDiscoveredDescriptor:
	leavel	#5
_nextAfterDiscoverDescriptors:
	enterl	#3
?LBB_nextAfterDiscoverDescriptors:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
	ld	AL,@(H'0008,X)
	cmp	AL,#(H'0001+H'0008)
	bcc	?L63
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE73,X)
	brxl
	.SEG	CONST
?JTBASE73:
	.CODE
?L73:
	.SEG	CONST
	dc	lwrd(?L63-?L73)
	dc	lwrd(?L63-?L73)
	dc	lwrd(?L65-?L73)
	dc	lwrd(?L63-?L73)
	dc	lwrd(?L63-?L73)
	dc	lwrd(?L67-?L73)
	dc	lwrd(?L67-?L73)
	dc	lwrd(?L69-?L73)
	dc	lwrd(?L69-?L73)
	.CODE
?L65:
	ld	AL,#H'0000
	ld	X,@$XAP_AH
	st	AL,@(H'0008,X)
	bra	(?L63)
?L67:
	ld	AL,#H'0001
	bra	(?L74)
?L69:
	ld	AL,#H'0002
?L74:
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0003
	bsr	$_makeAncsSetNotificationCfmMsg
?L63:
?LBE_nextAfterDiscoverDescriptors:
	leavel	#3
$_handleAncsDiscoverAllCharacteristicsResp:
	enterl	#2
?LBB_handleAncsDiscoverAllCharacteristicsResp:
	st	AL,@H'fff8
	st	AH,@H'fffb
	ld	X,@$XAP_AL
?LBB4:
	ld	X,@(H'000B,X)
	st	X,@H'fff9
	ld	X,@$XAP_AH
	tst	@(H'000E,X)
	bne	?L76
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0003
	bne	?L76
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	cmp	AH,#H'99A2
	bne	?L78
	cmp	AL,#H'1DBD
	bne	?L78
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	cmp	AH,#H'8C58
	bne	?L78
	cmp	AL,#H'25E6
	bne	?L78
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	cmp	AH,#H'6301
	bne	?L78
	cmp	AL,#H'42D9
	bne	?L78
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	cmp	AH,#H'9FBF
	bne	?L78
	cmp	AL,#H'120D
	bne	?L78
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0003,X)
	ld	AL,@H'fff9
	add	AL,@H'fff9
	st	AL,@H'fffa
	ld	AL,#H'0001
	bra	(?L84)
?L78:
	ld	X,@H'fffb
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	cmp	AH,#H'CE7C
	bne	?L80
	cmp	AL,#H'7BFB
	bne	?L80
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	cmp	AH,#H'BE44
	bne	?L80
	cmp	AL,#H'B36A
	bne	?L80
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	cmp	AH,#H'24D6
	bne	?L80
	cmp	AL,#H'4BB5
	bne	?L80
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	cmp	AH,#H'22EA
	bne	?L80
	cmp	AL,#H'C6E9
	bne	?L80
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0006,X)
	ld	AL,@H'fff9
	add	AL,@H'fff9
	st	AL,@H'fffa
	ld	AL,#H'0002
	bra	(?L84)
?L80:
	ld	X,@H'fffb
	ld	AH,@(H'000B,X)
	ld	AL,@(H'000C,X)
	cmp	AH,#H'FDAA
	bne	?L79
	cmp	AL,#H'D9D9
	bne	?L79
	ld	AH,@(H'0009,X)
	ld	AL,@(H'000A,X)
	cmp	AH,#H'9821
	bne	?L79
	cmp	AL,#H'9BBD
	bne	?L79
	ld	AH,@(H'0007,X)
	ld	AL,@(H'0008,X)
	cmp	AH,#H'45E1
	bne	?L79
	cmp	AL,#H'49A8
	bne	?L79
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	cmp	AH,#H'69D1
	bne	?L79
	cmp	AL,#H'D8F3
	bne	?L79
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	st	AL,@(H'0005,X)
	ld	AL,@H'fff9
	add	AL,@H'fff9
	st	AL,@H'fffa
	ld	AL,#H'0003
?L84:
	asl	@H'fffa
	or	AL,@(H'000A,X)
	st	AL,@(H'000A,X)
	ld	X,#H'0001
	add	X,@H'fff9
	st	X,@H'fff9
?L79:
	ld	X,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'000B,X)
	ld	AL,@H'ffff
?L76:
	ld	X,@H'fffb
	tst	@(H'000D,X)
	bne	?L75
	ld	AL,#H'0000
	ld	X,@H'fff8
	st	AL,@(H'000B,X)
	ld	AL,@H'fff8
	bsr	_nextAfterDiscoverCharacteristics
?L75:
?LBE4:
?LBE_handleAncsDiscoverAllCharacteristicsResp:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_ancsDiscoverAllCharacteristicDescriptors:
	enterl	#3
?LBB_ancsDiscoverAllCharacteristicDescriptors:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_GattManagerDiscoverAllCharacteristicDescriptors
	ld	AL,#H'0001
?LBE_ancsDiscoverAllCharacteristicDescriptors:
	leavel	#3
$_handleAncsDiscoverAllCharacteristicDescriptorsResp:
	enterl	#4
?LBB_handleAncsDiscoverAllCharacteristicDescriptorsResp:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	tst	@(H'000C,X)
	bne	?L100
	bsr	_processDiscoveredDescriptor
?L100:
	ld	X,@(H'0001,Y)
	tst	@(H'000B,X)
	bne	?L99
	ld	AL,@(0,Y)
	bsr	_nextAfterDiscoverDescriptors
?L99:
?LBE_handleAncsDiscoverAllCharacteristicDescriptorsResp:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 56 used[1] = 17 used[3] = 1 total = 74
;# Function pattern *movqi3 used[0] = 63 total = 63
;# Function pattern *movqi8 used[0] = 4 total = 4
;# Function pattern *movhi used[2] = 14 total = 14
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 3 used[2] = 7 total = 10
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 12 total = 12
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 3 used[1] = 6 total = 9
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 13 total = 13
;# Function pattern movstrqi+7 used[0] = 14 total = 14
	MODULE	gatt_apple_notification_client_msg_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleGattManagerMsg:
	enterl	#2
?LBB_handleGattManagerMsg:
	ld	X,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
	cmp	AH,#H'640A
	beq	?L5
	cmp	AH,#(H'0001+H'640A)
	bcc	?L10
	cmp	AH,#H'6403
	beq	?L4
	bra	(?L1)
?L10:
	cmp	AH,#H'640B
	beq	?L6
	cmp	AH,#H'6411
	beq	?L7
	bra	(?L1)
?L4:
	ld	AH,@$XAP_UXL
	bsr	$_handleAncsNotification
	bra	(?L1)
?L5:
	ld	AH,@$XAP_UXL
	bsr	$_handleAncsDiscoverAllCharacteristicsResp
	bra	(?L1)
?L6:
	ld	AH,@$XAP_UXL
	bsr	$_handleAncsDiscoverAllCharacteristicDescriptorsResp
	bra	(?L1)
?L7:
	ld	AH,@$XAP_UXL
	bsr	$_handleAncsWriteValueResp
?L1:
?LBE2:
?LBE_handleGattManagerMsg:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handleGattMsg:
; leaf function with empty stack frame
?LBB_handleGattMsg:
?LBE_handleGattMsg:
	rts
_handleInternalAncsMsg:
	enterl	#4
?LBB_handleInternalAncsMsg:
?LBB3:
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L16
	cmp	AH,#H'0001
	beq	?L20
	cmp	AH,#H'0001
	bcs	?L19
	cmp	AH,#H'0002
	beq	?L21
	bra	(?L16)
?L19:
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0001,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0009,X)
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bra	(?L28)
?L20:
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
?L28:
	ld	X,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_ancsSetNotificationRequest
	bra	(?L16)
?L21:
	ld	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0008,X)
	ld	AL,@(H'0005,X)
	cmp	AL,#-H'0001
	beq	?L22
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0004,Y)
	bsr	$_ancsWriteCharValue
	cmp	AL,#H'0000
	bne	?L16
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0003
	bra	(?L27)
?L22:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0005
?L27:
	bsr	$_makeAncsWriteCPCfmMsg
?L16:
?LBE3:
?LBE_handleInternalAncsMsg:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_appleNotificationClientMsgHandler:
	enterl	#3
?LBB_appleNotificationClientMsgHandler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'6400
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0014)
	bcc	?L34
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleGattManagerMsg
	bra	(?L33)
?L34:
	ld	AL,#-H'5800
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'001C)
	bcc	?L36
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleGattMsg
	bra	(?L33)
?L36:
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleInternalAncsMsg
?L33:
?LBE_appleNotificationClientMsgHandler:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 16 used[1] = 7 total = 23
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *addqi2 used[2] = 2 total = 2
;# Function pattern jump used[0] = 11 total = 11
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 total = 3
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 8 total = 8
	MODULE	gatt_manager
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattManagerInit:
	enterl	#3
?LBB_GattManagerInit:
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0000
	bra	(?L1)
?L2:
	st	AL,@(0,Y)
	ld	AH,#hwrd($_gattManagerMessageHandler)
	ld	AL,#lwrd($_gattManagerMessageHandler)
	bsr	$_gattManagerDataInit
	bsr	$_gattManagerDataInitialisationState_Registration
	ld	AL,#H'0001
?L1:
?LBE_GattManagerInit:
	leavel	#3
$_GattManagerDeInit:
	enterl	#2
?LBB_GattManagerDeInit:
	bsr	$_gattManagerDataDeInit
?LBE_GattManagerDeInit:
	leavel	#2
$_GattManagerRegisterConstDB:
	enterl	#4
?LBB_GattManagerRegisterConstDB:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L6
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0001
	bne	?L6
	bsr	$_gattManagerDataGetDB
	cmp	AL,#H'0000
	bne	?L6
	tst	@(0,Y)
	beq	?L6
	tst	@(H'0001,Y)
	bne	?L5
?L6:
	ld	AL,#H'0000
	bra	(?L4)
?L5:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_gattManagerDataSetConstDB
	ld	AL,#H'0001
?L4:
?LBE_GattManagerRegisterConstDB:
	leavel	#4
$_GattManagerRegisterWithGatt:
	enterl	#5
?LBB_GattManagerRegisterWithGatt:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L9
	ld	AL,#H'0001
	bsr	$_registerWithGattCfm
?L9:
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0001
	beq	?L10
	ld	AL,#H'0002
	bsr	$_registerWithGattCfm
?L10:
	bsr	$_gattManagerDataInitialisationState_Registering
	bsr	$_gattManagerDataGetTask
	st	AL,@(H'0001,Y)
	bsr	$_gattManagerDataGetDBSize
	st	AL,@(H'0002,Y)
	bsr	$_gattManagerDataGetDB
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_GattInit
?LBE_GattManagerRegisterWithGatt:
	leavel	#5
$_GattManagerDisconnectRequest:
	enterl	#3
?LBB_GattManagerDisconnectRequest:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@(0,Y)
	bsr	$_GattDisconnectRequest
?L12:
?LBE_GattManagerDisconnectRequest:
	leavel	#3
$_GattManagerIndicationResponse:
	enterl	#3
?LBB_GattManagerIndicationResponse:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(0,Y)
	bsr	$_GattIndicationResponse
?L14:
?LBE_GattManagerIndicationResponse:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 6 total = 14
;# Function pattern *movqi3 used[0] = 6 total = 6
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern movstrqi+3 used[0] = 6 used[1] = 2 total = 8
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	gatt_manager_client
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_clientParamsValid:
	enterl	#2
?LBB_clientParamsValid:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L3
	tst	@(0,X)
	beq	?L3
	tst	@(H'0001,X)
	beq	?L3
	tst	@(H'0002,X)
	beq	?L3
	tst	@(H'0003,X)
	beq	?L3
	ld	AL,@(H'0002,X)
	cmp	AL,@(H'0003,X)
	bcs	?L2
?L3:
	ld	AL,#H'0000
	bra	(?L1)
?L2:
	ld	AL,#H'0001
?L1:
?LBE_clientParamsValid:
	leavel	#2
_serverParamsValid:
	enterl	#2
?LBB_serverParamsValid:
	ld	X,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L7
	cmp	AH,#H'0000
	beq	?L7
	cmp	X,#H'0002
	bcz	?L6
?L7:
	ld	AL,#H'0000
	bra	(?L5)
?L6:
	ld	AL,#H'0001
?L5:
?LBE_serverParamsValid:
	leavel	#2
_gattClientDataValid:
	enterl	#2
?LBB_gattClientDataValid:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L11
	cmp	AH,@(H'0002,X)
	bcs	?L11
	cmp	AH,@(H'0003,X)
	bcz	?L10
?L11:
	ld	AL,#H'0000
	bra	(?L9)
?L10:
	ld	AL,#H'0001
?L9:
?LBE_gattClientDataValid:
	leavel	#2
$_GattManagerRegisterClient:
	enterl	#3
?LBB_GattManagerRegisterClient:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L15
	ld	AL,#H'0001
	bra	(?L14)
?L15:
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	beq	?L16
	ld	AL,#H'0002
	bra	(?L14)
?L16:
	ld	AL,@(0,Y)
	bsr	_clientParamsValid
	cmp	AL,#H'0000
	bne	?L17
	ld	AL,#H'0003
	bra	(?L14)
?L17:
	ld	AL,@(0,Y)
	bsr	$_gattManagerDataAddClient
	cmp	AL,#H'0000
	bne	?L18
	ld	AL,#H'0004
	bra	(?L14)
?L18:
	ld	AL,#H'0000
?L14:
?LBE_GattManagerRegisterClient:
	leavel	#3
$_GattManagerGetClientData:
	enterl	#4
?LBB_GattManagerGetClientData:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L24
	tst	@(0,Y)
	beq	?L24
	tst	@(H'0001,Y)
	beq	?L24
	ld	AL,@(0,Y)
	bsr	$_gattManagerDataGetClientByTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L23
?L24:
	ld	AL,#H'0000
	bra	(?L20)
?L23:
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,X)
	ld	X,@(H'0001,Y)
	st	AL,@(0,X)
	ld	X,@$XAP_AH
	ld	AL,@(H'0003,X)
	ld	X,@(H'0001,Y)
	st	AL,@(H'0001,X)
	ld	AL,#H'0001
?L20:
?LBE2:
?LBE_GattManagerGetClientData:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_GattManagerUnregisterClient:
	enterl	#3
?LBB_GattManagerUnregisterClient:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L26
	ld	AL,#H'0001
	bra	(?L25)
?L26:
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0000
	bne	?L27
	ld	AL,#H'0002
	bra	(?L25)
?L27:
	ld	AL,@(0,Y)
	bsr	$_gattManagerDataRemoveClient
	cmp	AL,#H'0000
	bne	?L28
	ld	AL,#H'0003
	bra	(?L25)
?L28:
	ld	AL,#H'0000
?L25:
?LBE_GattManagerUnregisterClient:
	leavel	#3
$_GattManagerConnectToRemoteServer:
	enterl	#16
?LBB_GattManagerConnectToRemoteServer:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB3:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L31
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	beq	?L30
?L31:
	bsr	$_Panic
?L30:
	bsr	$_gattManagerDataGetRemoteServerConnectHandler
	cmp	AL,#H'0000
	beq	?L32
	bsr	$_Panic
?L32:
	ld	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000C,Y)
	bsr	_serverParamsValid
	cmp	AL,#H'0000
	bne	?L33
	bsr	$_Panic
?L33:
	bsr	$_gattManagerDataGetAdvertisingState
	cmp	AL,#H'0002
	bne	?L34
?LBB4:
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	ld	AH,@(H'000C,Y)
	bsr	$_memcpy
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0009,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'000A,Y)
	bsr	$_gattManagerDataGetTask
	st	AL,@(H'000D,Y)
	bsr	$_gattManagerDataGetAdvertisingRequestedFlag
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'0002
	bsr	$_MessageSendConditionally
?LBE4:
	bra	(?L29)
?L34:
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0011,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_GattConnectRequest
	ld	AL,@(H'000B,Y)
	bsr	$_gattManagerDataSetRemoteServerConnectHandler
?L29:
?LBE3:
?LBE_GattManagerConnectToRemoteServer:
	leavel	#16
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_GattManagerDiscoverAllCharacteristics:
	enterl	#22
?LBB_GattManagerDiscoverAllCharacteristics:
	st	AL,@(H'0012,Y)
?LBB5:
	bsr	$_PanicNull
	ld	AL,@(H'0012,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'0013,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L39
	tst	@(H'0013,Y)
	beq	?L39
	bsr	$_gattManagerDataGetTask
	ld	X,@(H'0013,Y)
	ld	AH,@(H'0002,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,X)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattDiscoverAllCharacteristicsRequest
	bra	(?L38)
?L39:
?LBB6:
	ld	AL,#H'000F
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0014
	st	AL,@(H'0011,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0012,Y)
	ld	AH,#H'640A
	bsr	$_MessageSend
?L38:
?LBE6:
?LBE5:
?LBE_GattManagerDiscoverAllCharacteristics:
	leavel	#22
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_GattManagerDiscoverAllCharacteristicDescriptors:
	enterl	#21
?LBB_GattManagerDiscoverAllCharacteristicDescriptors:
	st	AL,@(H'0010,Y)
	st	AH,@(H'0011,Y)
?LBB7:
	bsr	$_PanicNull
	ld	AL,@(H'0010,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'0012,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L43
	tst	@(H'0012,Y)
	beq	?L43
	ld	AH,@(H'0011,Y)
	cmp	AH,@(H'0015,Y)
	beq	?L46
	bcc	?L43
?L46:
	ld	X,@(H'0012,Y)
	cmp	AH,@(H'0002,X)
	bcs	?L43
	ld	AH,@(H'0015,Y)
	cmp	AH,@(H'0003,X)
	beq	?L48
	bcc	?L43
?L48:
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0011,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0015,Y)
	st	AH,@(H'0001,Y)
	ld	X,@(H'0012,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattDiscoverAllCharacteristicDescriptorsRequest
	bra	(?L42)
?L43:
?LBB8:
	ld	AL,#H'000D
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0014
	st	AL,@(H'000F,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,#H'640B
	bsr	$_MessageSend
?L42:
?LBE8:
?LBE7:
?LBE_GattManagerDiscoverAllCharacteristicDescriptors:
	leavel	#21
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
$_GattManagerReadCharacteristicValue:
	enterl	#12
?LBB_GattManagerReadCharacteristicValue:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB9:
	bsr	$_PanicNull
	ld	AL,@(H'0007,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'0009,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L50
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0008,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L50
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattReadCharacteristicValueRequest
	bra	(?L49)
?L50:
?LBB10:
	ld	AL,#H'0005
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0014
	st	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'640C
	bsr	$_MessageSend
?L49:
?LBE10:
?LBE9:
?LBE_GattManagerReadCharacteristicValue:
	leavel	#12
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
$_GattManagerReadUsingCharacteristicUuid:
	enterl	#16
?LBB_GattManagerReadUsingCharacteristicUuid:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB11:
	bsr	$_PanicNull
	ld	AL,@(H'000B,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000D,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L55
	tst	@(H'000D,Y)
	beq	?L55
	ld	AH,@(H'000C,Y)
	cmp	AH,@(H'0010,Y)
	beq	?L58
	bcc	?L55
?L58:
	ld	X,@(H'000D,Y)
	cmp	AH,@(H'0002,X)
	bcs	?L55
	ld	AH,@(H'0010,Y)
	cmp	AH,@(H'0003,X)
	beq	?L60
	bcc	?L55
?L60:
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0001,Y)
	ld	X,@(H'0011,Y)
	st	X,@(H'0002,Y)
	ld	AH,@(H'0012,Y)
	st	AH,@(H'0003,Y)
	ld	X,@(H'000D,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattReadUsingCharacteristicUuidRequest
	bra	(?L54)
?L55:
?LBB12:
	ld	AL,#H'0006
	st	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0014
	st	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	st	AH,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#H'640D
	bsr	$_MessageSend
?L54:
?LBE12:
?LBE11:
?LBE_GattManagerReadUsingCharacteristicUuid:
	leavel	#16
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
$_GattManagerReadLongCharacteristicValue:
	enterl	#14
?LBB_GattManagerReadLongCharacteristicValue:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB13:
	bsr	$_PanicNull
	ld	AL,@(H'0009,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000B,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L62
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000A,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L62
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattReadLongCharacteristicValueRequest
	bra	(?L61)
?L62:
?LBB14:
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0014
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'640E
	bsr	$_MessageSend
?L61:
?LBE14:
?LBE13:
?LBE_GattManagerReadLongCharacteristicValue:
	leavel	#14
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
$_GattManagerWriteWithoutResponse:
	enterl	#13
?LBB_GattManagerWriteWithoutResponse:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB15:
	bsr	$_PanicNull
	ld	AL,@(H'0008,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000A,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L67
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L67
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattWriteWithoutResponseRequest
	bra	(?L66)
?L67:
?LBB16:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0014
	st	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'640F
	bsr	$_MessageSend
?L66:
?LBE16:
?LBE15:
?LBE_GattManagerWriteWithoutResponse:
	leavel	#13
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
$_GattManagerSignedWriteWithoutResponse:
	enterl	#13
?LBB_GattManagerSignedWriteWithoutResponse:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB17:
	bsr	$_PanicNull
	ld	AL,@(H'0008,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000A,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L72
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L72
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattSignedWriteWithoutResponseRequest
	bra	(?L71)
?L72:
?LBB18:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0014
	st	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'6410
	bsr	$_MessageSend
?L71:
?LBE18:
?LBE17:
?LBE_GattManagerSignedWriteWithoutResponse:
	leavel	#13
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_GattManagerWriteCharacteristicValue:
	enterl	#13
?LBB_GattManagerWriteCharacteristicValue:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB19:
	bsr	$_PanicNull
	ld	AL,@(H'0008,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000A,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L77
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L77
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattWriteCharacteristicValueRequest
	bra	(?L76)
?L77:
?LBB20:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0014
	st	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'6411
	bsr	$_MessageSend
?L76:
?LBE20:
?LBE19:
?LBE_GattManagerWriteCharacteristicValue:
	leavel	#13
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
$_GattManagerWriteLongCharacteristicValue:
	enterl	#13
?LBB_GattManagerWriteLongCharacteristicValue:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB21:
	bsr	$_PanicNull
	ld	AL,@(H'0008,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000A,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L82
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L82
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000D,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattWriteLongCharacteristicValueRequest
	bra	(?L81)
?L82:
?LBB22:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0004,Y)
	ld	AL,#H'0014
	st	AL,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'6412
	bsr	$_MessageSend
?L81:
?LBE22:
?LBE21:
?LBE_GattManagerWriteLongCharacteristicValue:
	leavel	#13
;.stabn	192,0,0,?LBB21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	224,0,0,?LBE21
$_GattManagerReliableWritePrepare:
	enterl	#14
?LBB_GattManagerReliableWritePrepare:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB23:
	bsr	$_PanicNull
	ld	AL,@(H'0009,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'000B,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L87
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000A,Y)
	bsr	_gattClientDataValid
	cmp	AL,#H'0001
	bne	?L87
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0003,Y)
	ld	X,@(H'000B,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattReliableWritePrepareRequest
	bra	(?L86)
?L87:
?LBB24:
	ld	AL,#H'0003
	st	AL,@(H'0004,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0005
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0014
	st	AL,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,#H'6413
	bsr	$_MessageSend
?L86:
?LBE24:
?LBE23:
?LBE_GattManagerReliableWritePrepare:
	leavel	#14
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
$_GattManagerReliableWriteExecute:
	enterl	#11
?LBB_GattManagerReliableWriteExecute:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB25:
	bsr	$_PanicNull
	ld	AL,@(H'0006,Y)
	bsr	$_gattManagerDataGetClientByTask
	st	AL,@(H'0008,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	bne	?L92
	tst	@(H'0008,Y)
	beq	?L92
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	ld	AH,@(H'0001,X)
	bsr	$_GattReliableWriteExecuteRequest
	bra	(?L91)
?L92:
?LBB26:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0014
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'6414
	bsr	$_MessageSend
?L91:
?LBE26:
?LBE25:
?LBE_GattManagerReliableWriteExecute:
	leavel	#11
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
$_GattManagerConnectToRemoteServerInternal:
	enterl	#5
?LBB_GattManagerConnectToRemoteServerInternal:
	st	AL,@(H'0002,Y)
	bsr	$_PanicNull
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	bsr	$_GattManagerConnectToRemoteServer
?LBE_GattManagerConnectToRemoteServerInternal:
	leavel	#5
$_gattManagerClientRemoteServerConnected:
	enterl	#14
?LBB_gattManagerClientRemoteServerConnected:
	st	AL,@(H'000B,Y)
	ld	AH,#H'0009
?LBB27:
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0009
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	bsr	$_gattManagerDataGetRemoteServerConnectHandler
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'6402
	bsr	$_MessageSend
	ld	AL,#H'0000
	bsr	$_gattManagerDataSetRemoteServerConnectHandler
?LBE27:
?LBE_gattManagerClientRemoteServerConnected:
	leavel	#14
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
$_gattManagerClientRemoteServerNotification:
	enterl	#6
?LBB_gattManagerClientRemoteServerNotification:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB28:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	tst	@(H'0002,Y)
	bne	?L98
	bsr	$_gattManagerDataGetApplicationTask
	st	AL,@(H'0002,Y)
?L98:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'6403
	bsr	$_MessageSend
?LBE28:
?LBE_gattManagerClientRemoteServerNotification:
	leavel	#6
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
$_gattManagerClientRemoteServerIndication:
	enterl	#6
?LBB_gattManagerClientRemoteServerIndication:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB29:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	tst	@(H'0002,Y)
	bne	?L100
	bsr	$_gattManagerDataGetApplicationTask
	st	AL,@(H'0002,Y)
?L100:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,X)
	add	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'6404
	bsr	$_MessageSend
?LBE29:
?LBE_gattManagerClientRemoteServerIndication:
	leavel	#6
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
$_gattManagerClientDiscoverAllCharacteristicsConfirm:
	enterl	#21
?LBB_gattManagerClientDiscoverAllCharacteristicsConfirm:
	st	AL,@(H'0011,Y)
	ld	X,@$XAP_AL
?LBB30:
	ld	AL,@(H'0002,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0012,Y)
	cmp	AL,#H'0000
	beq	?L101
	ld	AL,#H'000F
?LBB31:
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,#H'000F
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0011,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0012,Y)
	ld	AH,#H'640A
	bsr	$_MessageSend
?L101:
?LBE31:
?LBE30:
?LBE_gattManagerClientDiscoverAllCharacteristicsConfirm:
	leavel	#21
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE30
$_gattManagerClientDiscoverAllCharacteristicsDescriptorsConfirm:
	enterl	#19
?LBB_gattManagerClientDiscoverAllCharacteristicsDescriptorsConfirm:
	st	AL,@(H'000F,Y)
	ld	X,@$XAP_AL
?LBB32:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0010,Y)
	cmp	AL,#H'0000
	beq	?L104
	ld	AL,#H'000D
?LBB33:
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,#H'000D
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'000F,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	ld	AH,#H'640B
	bsr	$_MessageSend
?L104:
?LBE33:
?LBE32:
?LBE_gattManagerClientDiscoverAllCharacteristicsDescriptorsConfirm:
	leavel	#19
;.stabn	192,0,0,?LBB32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;.stabn	224,0,0,?LBE32
$_gattManagerClientReadCharacteristicValueConfirm:
	enterl	#6
?LBB_gattManagerClientReadCharacteristicValueConfirm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB34:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L107
	ld	X,@(H'0001,Y)
?LBB35:
	ld	AL,@(H'0003,X)
	add	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0003,X)
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'640C
	bsr	$_MessageSend
?L107:
?LBE35:
?LBE34:
?LBE_gattManagerClientReadCharacteristicValueConfirm:
	leavel	#6
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
$_gattManagerClientReadUsingCharacteristicUuidConfirm:
	enterl	#6
?LBB_gattManagerClientReadUsingCharacteristicUuidConfirm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB36:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L110
	ld	X,@(H'0001,Y)
?LBB37:
	ld	AL,@(H'0004,X)
	add	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0004,X)
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'640D
	bsr	$_MessageSend
?L110:
?LBE37:
?LBE36:
?LBE_gattManagerClientReadUsingCharacteristicUuidConfirm:
	leavel	#6
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
$_gattManagerClientReadLongCharacteristicValueConfirm:
	enterl	#6
?LBB_gattManagerClientReadLongCharacteristicValueConfirm:
	st	AL,@(H'0001,Y)
	ld	X,@$XAP_AL
?LBB38:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L113
	ld	X,@(H'0001,Y)
?LBB39:
	ld	AL,@(H'0005,X)
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0005,X)
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'640E
	bsr	$_MessageSend
?L113:
?LBE39:
?LBE38:
?LBE_gattManagerClientReadLongCharacteristicValueConfirm:
	leavel	#6
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE38
$_gattManagerClientWriteWithoutResponseConfirm:
	enterl	#10
?LBB_gattManagerClientWriteWithoutResponseConfirm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB40:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L116
?LBB41:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'640F
	bsr	$_MessageSend
?L116:
?LBE41:
?LBE40:
?LBE_gattManagerClientWriteWithoutResponseConfirm:
	leavel	#10
;.stabn	192,0,0,?LBB40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	224,0,0,?LBE40
$_gattManagerClientSignedWriteWithoutResponseConfirm:
	enterl	#10
?LBB_gattManagerClientSignedWriteWithoutResponseConfirm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB42:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L119
?LBB43:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'6410
	bsr	$_MessageSend
?L119:
?LBE43:
?LBE42:
?LBE_gattManagerClientSignedWriteWithoutResponseConfirm:
	leavel	#10
;.stabn	192,0,0,?LBB42
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
;.stabn	224,0,0,?LBE42
$_gattManagerClientWriteCharacteristicValueConfirm:
	enterl	#10
?LBB_gattManagerClientWriteCharacteristicValueConfirm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB44:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L122
?LBB45:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'6411
	bsr	$_MessageSend
?L122:
?LBE45:
?LBE44:
?LBE_gattManagerClientWriteCharacteristicValueConfirm:
	leavel	#10
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	224,0,0,?LBE44
$_gattManagerClientWriteLongCharacteristicValueConfirm:
	enterl	#10
?LBB_gattManagerClientWriteLongCharacteristicValueConfirm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB46:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L125
?LBB47:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'6412
	bsr	$_MessageSend
?L125:
?LBE47:
?LBE46:
?LBE_gattManagerClientWriteLongCharacteristicValueConfirm:
	leavel	#10
;.stabn	192,0,0,?LBB46
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;.stabn	224,0,0,?LBE46
$_gattManagerClientReliableWritePrepareConfirm:
	enterl	#10
?LBB_gattManagerClientReliableWritePrepareConfirm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB48:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L128
?LBB49:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'6413
	bsr	$_MessageSend
?L128:
?LBE49:
?LBE48:
?LBE_gattManagerClientReliableWritePrepareConfirm:
	leavel	#10
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
$_gattManagerClientReliableWriteExecuteConfirm:
	enterl	#10
?LBB_gattManagerClientReliableWriteExecuteConfirm:
	st	AL,@(H'0006,Y)
	ld	X,@$XAP_AL
?LBB50:
	ld	AL,@(H'0001,X)
	ld	AH,@(0,X)
	bsr	$_gattManagerDataGetClientByCid
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L131
?LBB51:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,#H'6414
	bsr	$_MessageSend
?L131:
?LBE51:
?LBE50:
?LBE_gattManagerClientReliableWriteExecuteConfirm:
	leavel	#10
;.stabn	192,0,0,?LBB50
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;.stabn	224,0,0,?LBE50
	ENDMOD

;# Function pattern *movqi2 used[0] = 252 used[1] = 78 total = 330
;# Function pattern *movqi3 used[0] = 239 total = 239
;# Function pattern *addqi0 used[0] = 40 total = 40
;# Function pattern *addqi2 used[0] = 16 total = 16
;# Function pattern jump used[0] = 23 total = 23
;# Function pattern *call1 used[0] = 44 total = 44
;# Function pattern *call_value1 used[0] = 119 total = 119
;# Function pattern movstrqi+3 used[0] = 26 used[1] = 12 total = 38
;# Function pattern movstrqi+4 used[2] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 27 total = 27
	MODULE	gatt_manager_server
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_serverAccessInd:
	enterl	#6
?LBB_serverAccessInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	X,@$XAP_AL
?LBB2:
?LBB3:
	ld	AL,@(H'0004,X)
?LBE3:
	add	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
?LBB4:
	ld	AL,@(H'0004,X)
?LBE4:
	add	AL,#H'0006
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0001,Y)
?LBB5:
?LBB6:
	ld	AL,@(H'0004,X)
?LBE6:
	add	AL,#H'0005
?LBE5:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#H'6401
	bsr	$_MessageSend
?LBE2:
?LBE_serverAccessInd:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_serverRegistrationParamsValid:
	enterl	#2
?LBB_serverRegistrationParamsValid:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L8
	tst	@(H'0002,X)
	beq	?L8
	tst	@(H'0001,X)
	beq	?L8
	tst	@(0,X)
	bne	?L7
?L8:
	ld	AL,#H'0000
	bra	(?L6)
?L7:
	ld	AL,#H'0001
?L6:
?LBE_serverRegistrationParamsValid:
	leavel	#2
_serverConnectionParamsValid:
	enterl	#2
?LBB_serverConnectionParamsValid:
	ld	X,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L11
	cmp	X,#H'0003
	bne	?L12
	cmp	AH,#H'0000
	bne	?L11
?L12:
	cmp	X,#H'0004
	beq	?L11
	cmp	X,#H'0005
	bne	?L10
?L11:
	ld	AL,#H'0001
	bra	(?L9)
?L10:
	ld	AL,#H'0000
?L9:
?LBE_serverConnectionParamsValid:
	leavel	#2
_remoteClientValid:
; leaf function with empty stack frame
?LBB_remoteClientValid:
	cmp	AL,#H'0000
	bne	?L18
	cmp	AH,#H'0000
	bne	?L18
	tst	@(0,Y)
	beq	?L17
?L18:
	ld	AL,#H'0001
	bra	(?L16)
?L17:
	ld	AL,#H'0000
?L16:
?LBE_remoteClientValid:
	rts
_remoteClientConnectCfmFail:
	enterl	#14
?LBB_remoteClientConnectCfmFail:
	st	AL,@(H'000B,Y)
?LBB7:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0014
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,#H'6405
	bsr	$_MessageSend
?LBE7:
?LBE_remoteClientConnectCfmFail:
	leavel	#14
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_remoteClientConnectCfm:
	enterl	#14
?LBB_remoteClientConnectCfm:
	st	AL,@(H'000B,Y)
?LBB8:
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0001
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	bsr	$_memcpy
	ld	X,@(H'000B,Y)
	ld	AL,@(H'0006,X)
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0008,X)
	st	AL,@(H'000A,Y)
	bsr	$_gattManagerDataGetRemoteClientConnectTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'6405
	bsr	$_MessageSend
?LBE8:
?LBE_remoteClientConnectCfm:
	leavel	#14
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_cancelRemoteClientConnectCfm:
	enterl	#8
?LBB_cancelRemoteClientConnectCfm:
?LBB9:
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'6406
	bsr	$_MessageSend
?LBE9:
?LBE_cancelRemoteClientConnectCfm:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_remoteClientNotificationCfm:
	enterl	#9
?LBB_remoteClientNotificationCfm:
	ld	X,@$XAP_AL
	st	AH,@(H'0006,Y)
?LBB10:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'6407
	bsr	$_MessageSend
?LBE10:
?LBE_remoteClientNotificationCfm:
	leavel	#9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
_remoteClientIndicationCfm:
	enterl	#9
?LBB_remoteClientIndicationCfm:
	ld	X,@$XAP_AL
	st	AH,@(H'0006,Y)
?LBB11:
	ld	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@$XAP_UXL
	bsr	$_memmove
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'6408
	bsr	$_MessageSend
?LBE11:
?LBE_remoteClientIndicationCfm:
	leavel	#9
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
_gattConnectCfmPanicOnWrongCid:
	enterl	#3
?LBB_gattConnectCfmPanicOnWrongCid:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataGetRemoteClientConnectCid
	ld	X,@(0,Y)
	ld	AH,@(H'0007,X)
	cmp	AH,@$XAP_AL
	beq	?L24
	bsr	$_Panic
?L24:
?LBE_gattConnectCfmPanicOnWrongCid:
	leavel	#3
_gattConnectCfmSuccess:
	enterl	#3
?LBB_gattConnectCfmSuccess:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsCancelPending
	cmp	AL,#H'0000
	beq	?L28
	bsr	$_gattManagerDataGetRemoteClientConnectTask
	ld	AH,#H'0004
	bsr	_cancelRemoteClientConnectCfm
?L28:
	bsr	$_gattManagerDataAdvertisingState_Idle
	ld	AL,@(0,Y)
	bsr	_remoteClientConnectCfm
?LBE_gattConnectCfmSuccess:
	leavel	#3
_gattConnectCfmFailure:
	enterl	#3
?LBB_gattConnectCfmFailure:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsCancelPending
	cmp	AL,#H'0000
	beq	?L30
	bsr	$_gattManagerDataPendingCancelled
	bsr	$_gattManagerDataGetRemoteClientConnectTask
	ld	AH,#H'0000
	bsr	_cancelRemoteClientConnectCfm
	bra	(?L31)
?L30:
	ld	AL,@(0,Y)
	bsr	_remoteClientConnectCfm
?L31:
	bsr	$_gattManagerDataAdvertisingState_Idle
?LBE_gattConnectCfmFailure:
	leavel	#3
_gattConnectCfmUnknown:
	enterl	#3
?LBB_gattConnectCfmUnknown:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsCancelPending
	cmp	AL,#H'0000
	beq	?L33
	bsr	$_gattManagerDataGetRemoteClientConnectTask
	ld	AH,#H'0004
	bsr	_cancelRemoteClientConnectCfm
	bra	(?L32)
?L33:
	ld	AL,@(0,Y)
	bsr	_remoteClientConnectCfm
?L32:
?LBE_gattConnectCfmUnknown:
	leavel	#3
_clearRemoteClientConnectData:
	enterl	#2
?LBB_clearRemoteClientConnectData:
	ld	AL,#H'0000
	bsr	$_gattManagerDataSetRemoteClientConnectTask
	ld	AL,#H'0000
	bsr	$_gattManagerDataSetRemoteClientConnectCid
?LBE_clearRemoteClientConnectData:
	leavel	#2
$_GattManagerRegisterServer:
	enterl	#3
?LBB_GattManagerRegisterServer:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L37
	ld	AL,#H'0001
	bra	(?L36)
?L37:
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0001
	beq	?L38
	ld	AL,#H'0002
	bra	(?L36)
?L38:
	ld	AL,@(0,Y)
	bsr	_serverRegistrationParamsValid
	cmp	AL,#H'0000
	beq	?L42
	bsr	$_gattManagerDataGetDB
	cmp	AL,#H'0000
	bne	?L40
	ld	AL,#H'0004
	bra	(?L36)
?L40:
	ld	AL,@(0,Y)
	bsr	$_gattManagerDataAddServer
	cmp	AL,#H'0000
	bne	?L41
?L42:
	ld	AL,#H'0003
	bra	(?L36)
?L41:
	ld	AL,#H'0000
?L36:
?LBE_GattManagerRegisterServer:
	leavel	#3
$_GattManagerWaitForRemoteClient:
	enterl	#16
?LBB_GattManagerWaitForRemoteClient:
	st	AL,@(H'000B,Y)
	st	AH,@(H'000C,Y)
?LBB12:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L45
	bsr	$_Panic
?L45:
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	beq	?L46
	bsr	$_Panic
?L46:
	ld	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'000C,Y)
	bsr	_serverConnectionParamsValid
	cmp	AL,#H'0000
	bne	?L47
	bsr	$_Panic
?L47:
	bsr	$_gattManagerDataServerCount
	cmp	AL,#H'0000
	bne	?L48
	bsr	$_Panic
?L48:
	bsr	$_gattManagerDataGetAdvertisingState
	cmp	AL,#H'0000
	bne	?L49
	ld	AL,@(H'000B,Y)
	bsr	$_gattManagerDataSetRemoteClientConnectTask
	bsr	$_gattManagerDataGetRemoteServerConnectHandler
	cmp	AL,#H'0000
	beq	?L50
?LBB13:
	ld	AL,#H'0008
	st	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0003,Y)
	tst	@(H'000C,Y)
	beq	?L51
	ld	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	ld	AH,@(H'000C,Y)
	bsr	$_memcpy
?L51:
	ld	AH,@(H'0010,Y)
	st	AH,@(H'000A,Y)
	bsr	$_gattManagerDataGetTask
	st	AL,@(H'000D,Y)
	bsr	$_gattManagerDataGetPointerToRemoteServerConnectHandler
	ld	AH,@$XAP_UY
	add	AH,#H'0003
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendConditionallyOnTask
	bsr	$_gattManagerDataAdvertisingState_Queued
?LBE13:
	bra	(?L44)
?L50:
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'0010,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'000C,Y)
	bsr	$_GattConnectRequest
	bsr	$_gattManagerDataAdvertisingState_Requested
	bra	(?L44)
?L49:
	ld	AL,@(H'000B,Y)
	bsr	_remoteClientConnectCfmFail
?L44:
?LBE12:
?LBE_GattManagerWaitForRemoteClient:
	leavel	#16
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_GattManagerCancelWaitForRemoteClient:
	enterl	#5
?LBB_GattManagerCancelWaitForRemoteClient:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L56
	bsr	$_Panic
?L56:
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0003
	beq	?L57
	bsr	$_Panic
?L57:
	bsr	$_gattManagerDataServerCount
	cmp	AL,#H'0000
	bne	?L58
	bsr	$_Panic
?L58:
	bsr	$_gattManagerDataIsCancelPending
	cmp	AL,#H'0000
	bne	?L55
	bsr	$_gattManagerDataGetAdvertisingState
	cmp	AL,#H'0001
	beq	?L63
	cmp	AL,#H'0001
	bcs	?L66
	cmp	AL,#H'0002
	beq	?L61
	cmp	AL,#H'0003
	beq	?L62
	bra	(?L67)
?L61:
	bsr	$_gattManagerDataGetTask
	ld	AH,#H'0000
	bsr	$_MessageCancelFirst
	bsr	$_gattManagerDataGetTask
	st	AL,@(H'0002,Y)
	bsr	$_gattManagerDataGetAdvertisingRequestedFlag
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_MessageSendConditionally
	bra	(?L55)
?L62:
	bsr	$_gattManagerDataCancelPending
	bsr	$_gattManagerDataGetRemoteClientConnectCid
	bsr	$_GattDisconnectRequest
	bra	(?L55)
?L63:
	bsr	$_gattManagerDataGetTask
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	cmp	AL,#H'0000
	beq	?L67
	bsr	$_gattManagerDataGetRemoteClientConnectTask
	ld	AH,#H'0000
	bsr	_cancelRemoteClientConnectCfm
	bsr	_clearRemoteClientConnectData
	bsr	$_gattManagerDataAdvertisingState_Idle
	bra	(?L55)
?L66:
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,#H'0002
	bsr	_cancelRemoteClientConnectCfm
	bra	(?L55)
?L67:
	bsr	$_Panic
?L55:
?LBE_GattManagerCancelWaitForRemoteClient:
	leavel	#5
$_GattManagerServerAccessResponse:
	enterl	#7
?LBB_GattManagerServerAccessResponse:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB14:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0004,Y)
	bsr	_remoteClientValid
	cmp	AL,#H'0000
	beq	?L78
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_gattManagerDataGetServerDatabaseHandle
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L77
?L78:
	ld	AL,#H'0000
	bra	(?L74)
?L77:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_GattAccessResponse
	ld	AL,#H'0001
?L74:
?LBE14:
?LBE_GattManagerServerAccessResponse:
	leavel	#7
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
$_GattManagerRemoteClientNotify:
	enterl	#13
?LBB_GattManagerRemoteClientNotify:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB15:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L80
	bsr	$_Panic
?L80:
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0009,Y)
	bsr	_remoteClientValid
	cmp	AL,#H'0000
	bne	?L81
	bsr	$_Panic
?L81:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_gattManagerDataGetServerDatabaseHandle
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L82
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_GattNotificationRequest
	bra	(?L79)
?L82:
?LBB16:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AL,#H'0014
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'6407
	bsr	$_MessageSend
?L79:
?LBE16:
?LBE15:
?LBE_GattManagerRemoteClientNotify:
	leavel	#13
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
$_GattManagerRemoteClientIndicate:
	enterl	#13
?LBB_GattManagerRemoteClientIndicate:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB17:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L85
	bsr	$_Panic
?L85:
	ld	AH,@(H'000D,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'0009,Y)
	bsr	_remoteClientValid
	cmp	AL,#H'0000
	bne	?L86
	bsr	$_Panic
?L86:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_gattManagerDataGetServerDatabaseHandle
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L87
	bsr	$_gattManagerDataGetTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000E,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'000F,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_GattIndicationRequest
	bra	(?L84)
?L87:
?LBB18:
	ld	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	add	AH,#H'0004
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	ld	AL,#H'0014
	st	AL,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,#H'6408
	bsr	$_MessageSend
?L84:
?LBE18:
?LBE17:
?LBE_GattManagerRemoteClientIndicate:
	leavel	#13
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
$_gattManagerWaitForRemoteClientInternal:
	enterl	#4
?LBB_gattManagerWaitForRemoteClientInternal:
	st	AL,@(H'0001,Y)
	bsr	$_PanicNull
	bsr	$_gattManagerDataAdvertisingState_Idle
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0001
	bne	?L90
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	bra	(?L91)
?L90:
	ld	AH,#H'0000
?L91:
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0007,X)
	st	AL,@(0,Y)
	ld	AL,@(0,X)
	bsr	$_GattManagerWaitForRemoteClient
?LBE_gattManagerWaitForRemoteClientInternal:
	leavel	#4
$_gattManagerServerConnectInd:
	enterl	#13
?LBB_gattManagerServerConnectInd:
	st	AL,@(H'000A,Y)
	ld	AH,#H'0008
?LBB19:
	st	AH,@(H'0001,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5802
	bsr	$_MessageSend
?LBE19:
?LBE_gattManagerServerConnectInd:
	leavel	#13
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
$_gattManagerServerIndicationCfm:
	enterl	#7
?LBB_gattManagerServerIndicationCfm:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB20:
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_gattManagerDataResolveServerHandle
	cmp	AL,#H'0000
	beq	?L95
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0001,Y)
	bra	(?L97)
?L95:
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
?L97:
	bsr	_remoteClientIndicationCfm
?LBE20:
?LBE_gattManagerServerIndicationCfm:
	leavel	#7
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
$_gattManagerServerNotificationCfm:
	enterl	#7
?LBB_gattManagerServerNotificationCfm:
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AL
?LBB21:
	ld	AL,@(H'0002,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_gattManagerDataResolveServerHandle
	cmp	AL,#H'0000
	beq	?L99
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0001,Y)
	bra	(?L101)
?L99:
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_AL
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
?L101:
	bsr	_remoteClientNotificationCfm
?LBE21:
?LBE_gattManagerServerNotificationCfm:
	leavel	#7
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
$_gattManagerServerAccessInd:
	enterl	#8
?LBB_gattManagerServerAccessInd:
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AL
?LBB22:
	tst	@(H'0001,X)
	beq	?L103
?LBB23:
	ld	AL,@(H'0001,X)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_gattManagerDataResolveServerHandle
	cmp	AL,#H'0000
	beq	?L104
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0001,Y)
	bra	(?L112)
?L104:
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_AL
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
?L112:
	bsr	_serverAccessInd
?LBE23:
	bra	(?L102)
?L103:
?LBB24:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_gattManagerDataServerIteratorStart
	cmp	AL,#H'0000
	beq	?L102
	bra	(?L108)
?L111:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	bsr	_serverAccessInd
?L108:
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	bsr	$_gattManagerDataServerIteratorNext
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L111
?L102:
?LBE24:
?LBE22:
?LBE_gattManagerServerAccessInd:
	leavel	#8
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
$_gattManagerServerAdvertising:
	enterl	#2
?LBB_gattManagerServerAdvertising:
	bsr	$_gattManagerDataSetRemoteClientConnectCid
	bsr	$_gattManagerDataAdvertisingState_Advertising
?LBE_gattManagerServerAdvertising:
	leavel	#2
$_gattManagerServerRemoteClientConnected:
	enterl	#3
?LBB_gattManagerServerRemoteClientConnected:
	st	AL,@(0,Y)
	bsr	_gattConnectCfmPanicOnWrongCid
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L115
	ld	AL,@$XAP_UXL
	bsr	_gattConnectCfmSuccess
	bra	(?L116)
?L115:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0014
	bne	?L117
	ld	AL,@$XAP_UXL
	bsr	_gattConnectCfmFailure
	bra	(?L116)
?L117:
	ld	AL,@(0,Y)
	bsr	_gattConnectCfmUnknown
?L116:
	bsr	_clearRemoteClientConnectData
?LBE_gattManagerServerRemoteClientConnected:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 137 used[1] = 41 total = 178
;# Function pattern *movqi3 used[0] = 119 total = 119
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 23 total = 23
;# Function pattern *addqi2 used[0] = 5 total = 5
;# Function pattern jump used[0] = 27 total = 27
;# Function pattern *call1 used[0] = 62 total = 62
;# Function pattern *call_value1 used[0] = 69 total = 69
;# Function pattern movstrqi+3 used[0] = 35 used[1] = 7 total = 42
;# Function pattern movstrqi+5 used[0] = 13 total = 13
	MODULE	gatt_manager_data
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
_gatt_manager_data:
	DS	1
	.CODE
$_gattManagerDataInit:
	enterl	#5
?LBB_gattManagerDataInit:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	tst	@(H'0002,Y)
	beq	?L3
	tst	@(H'0005,Y)
	bne	?L2
?L3:
	ld	AL,#H'0000
	bra	(?L1)
?L2:
	ld	AL,@_gatt_manager_data
	bsr	$_PanicNotNull
	ld	AL,#H'000F
	bsr	$_malloc
	st	AL,@_gatt_manager_data
	bsr	$_PanicNull
	ld	AL,@_gatt_manager_data
	ld	AH,#H'000F
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@_gatt_manager_data
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AL,@_gatt_manager_data
?L1:
?LBE_gattManagerDataInit:
	leavel	#5
$_gattManagerDataIsInit:
; leaf function with empty stack frame
?LBB_gattManagerDataIsInit:
	ld	AL,@_gatt_manager_data
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0001
?L5:
?LBE_gattManagerDataIsInit:
	rts
$_gattManagerDataDeInit:
	enterl	#2
?LBB_gattManagerDataDeInit:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L6
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0009,X)
	bsr	$_free
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000B,X)
	bsr	$_free
	ld	AL,@_gatt_manager_data
	bsr	$_free
	ld	AL,#H'0000
	st	AL,@_gatt_manager_data
?L6:
?LBE_gattManagerDataDeInit:
	leavel	#2
$_gattManagerDataInitialisationState_NotInitialised:
	enterl	#2
?LBB_gattManagerDataInitialisationState_NotInitialised:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L8
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#H'0FFF
	st	AL,@(H'0003,X)
?L8:
?LBE_gattManagerDataInitialisationState_NotInitialised:
	leavel	#2
$_gattManagerDataInitialisationState_Registration:
	enterl	#2
?LBB_gattManagerDataInitialisationState_Registration:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L10
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#H'0FFF
	or	AL,#H'1000
	st	AL,@(H'0003,X)
?L10:
?LBE_gattManagerDataInitialisationState_Registration:
	leavel	#2
$_gattManagerDataInitialisationState_Registering:
	enterl	#2
?LBB_gattManagerDataInitialisationState_Registering:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#H'0FFF
	or	AL,#H'2000
	st	AL,@(H'0003,X)
?L12:
?LBE_gattManagerDataInitialisationState_Registering:
	leavel	#2
$_gattManagerDataInitialisationState_Initialised:
	enterl	#2
?LBB_gattManagerDataInitialisationState_Initialised:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L14
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#H'0FFF
	or	AL,#H'3000
	st	AL,@(H'0003,X)
?L14:
?LBE_gattManagerDataInitialisationState_Initialised:
	leavel	#2
$_gattManagerDataGetInitialisationState:
	enterl	#2
?LBB_gattManagerDataGetInitialisationState:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L17
	ld	X,@_gatt_manager_data
	ld	AH,@(H'0003,X)
	lsr	#H'000C
	bra	(?L16)
?L17:
	ld	AH,#H'0000
?L16:
	ld	AL,@$XAP_AH
?LBE_gattManagerDataGetInitialisationState:
	leavel	#2
$_gattManagerDataGetTask:
	enterl	#2
?LBB_gattManagerDataGetTask:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@_gatt_manager_data
	bra	(?L18)
?L19:
	ld	AL,#H'0000
?L18:
?LBE_gattManagerDataGetTask:
	leavel	#2
$_gattManagerDataGetApplicationTask:
	enterl	#2
?LBB_gattManagerDataGetApplicationTask:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L21
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0002,X)
	bra	(?L20)
?L21:
	ld	AL,#H'0000
?L20:
?LBE_gattManagerDataGetApplicationTask:
	leavel	#2
_checkAdvertisingRequested:
	enterl	#2
?LBB_checkAdvertisingRequested:
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#H'0F00
	cmp	AL,#H'0200
	bne	?L23
	ld	AL,#H'0001
	bra	(?L25)
?L23:
	ld	X,@_gatt_manager_data
	ld	AL,#H'0000
?L25:
	st	AL,@(H'0004,X)
?LBE_checkAdvertisingRequested:
	leavel	#2
$_gattManagerDataAdvertisingState_Idle:
	enterl	#2
?LBB_gattManagerDataAdvertisingState_Idle:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L27
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#-H'0F01
	st	AL,@(H'0003,X)
	bsr	_checkAdvertisingRequested
?L27:
?LBE_gattManagerDataAdvertisingState_Idle:
	leavel	#2
$_gattManagerDataAdvertisingState_Queued:
	enterl	#2
?LBB_gattManagerDataAdvertisingState_Queued:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L29
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#-H'0F01
	or	AL,#H'0100
	st	AL,@(H'0003,X)
	bsr	_checkAdvertisingRequested
?L29:
?LBE_gattManagerDataAdvertisingState_Queued:
	leavel	#2
$_gattManagerDataAdvertisingState_Requested:
	enterl	#2
?LBB_gattManagerDataAdvertisingState_Requested:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L31
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#-H'0F01
	or	AL,#H'0200
	st	AL,@(H'0003,X)
	bsr	_checkAdvertisingRequested
?L31:
?LBE_gattManagerDataAdvertisingState_Requested:
	leavel	#2
$_gattManagerDataAdvertisingState_Advertising:
	enterl	#2
?LBB_gattManagerDataAdvertisingState_Advertising:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L33
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0003,X)
	and	AL,#-H'0F01
	or	AL,#H'0300
	st	AL,@(H'0003,X)
	bsr	_checkAdvertisingRequested
?L33:
?LBE_gattManagerDataAdvertisingState_Advertising:
	leavel	#2
$_gattManagerDataGetAdvertisingState:
	enterl	#2
?LBB_gattManagerDataGetAdvertisingState:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L36
	ld	X,@_gatt_manager_data
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bra	(?L35)
?L36:
	ld	AL,#H'0000
?L35:
?LBE_gattManagerDataGetAdvertisingState:
	leavel	#2
$_gattManagerDataGetAdvertisingRequestedFlag:
	enterl	#2
?LBB_gattManagerDataGetAdvertisingRequestedFlag:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L38
	ld	AL,@_gatt_manager_data
	add	AL,#H'0004
	bra	(?L37)
?L38:
	ld	AL,#H'0000
?L37:
?LBE_gattManagerDataGetAdvertisingRequestedFlag:
	leavel	#2
$_gattManagerDataCancelPending:
	enterl	#2
?LBB_gattManagerDataCancelPending:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L39
	ld	X,@_gatt_manager_data
	ld	AL,#H'0001
	st	AL,@(H'0005,X)
?L39:
?LBE_gattManagerDataCancelPending:
	leavel	#2
$_gattManagerDataPendingCancelled:
	enterl	#2
?LBB_gattManagerDataPendingCancelled:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L41
	ld	X,@_gatt_manager_data
	ld	AL,#H'0000
	st	AL,@(H'0005,X)
?L41:
?LBE_gattManagerDataPendingCancelled:
	leavel	#2
$_gattManagerDataIsCancelPending:
	enterl	#2
?LBB_gattManagerDataIsCancelPending:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L44
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0005,X)
	bra	(?L43)
?L44:
	ld	AL,#H'0000
?L43:
?LBE_gattManagerDataIsCancelPending:
	leavel	#2
$_gattManagerDataSetConstDB:
	enterl	#4
?LBB_gattManagerDataSetConstDB:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L45
	ld	X,@_gatt_manager_data
	ld	AL,@(0,Y)
	st	AL,@(H'0007,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0006,X)
?L45:
?LBE_gattManagerDataSetConstDB:
	leavel	#4
$_gattManagerDataGetDB:
	enterl	#2
?LBB_gattManagerDataGetDB:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L48
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0007,X)
	bra	(?L47)
?L48:
	ld	AL,#H'0000
?L47:
?LBE_gattManagerDataGetDB:
	leavel	#2
$_gattManagerDataGetDBSize:
	enterl	#2
?LBB_gattManagerDataGetDBSize:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L50
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0006,X)
	bra	(?L49)
?L50:
	ld	AL,#H'0000
?L49:
?LBE_gattManagerDataGetDBSize:
	leavel	#2
$_gattManagerDataServerIteratorStart:
	enterl	#2
?LBB_gattManagerDataServerIteratorStart:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L52
	ld	AL,#H'0000
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L51)
?L52:
	ld	AL,#H'0000
?L51:
?LBE_gattManagerDataServerIteratorStart:
	leavel	#2
$_gattManagerDataServerIteratorNext:
	enterl	#3
?LBB_gattManagerDataServerIteratorNext:
	st	AL,@H'fff8
?LBB2:
	ld	AH,#H'0000
	cmp	AL,#H'0000
	beq	?L54
	ld	AL,@_gatt_manager_data
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	AL,@$XAP_UXL
	ld	X,@(0,Y)
	cmp	AL,@(H'0008,X)
	bcc	?L54
	smult	#H'0003
	ld	AH,@$XAP_AL
	ld	X,@(0,Y)
	add	AH,@(H'0009,X)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	ld	X,@H'fff8
	st	AL,@(0,X)
?L54:
?LBE2:
	ld	AL,@$XAP_AH
?LBE_gattManagerDataServerIteratorNext:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_gattManagerDataServerHandlesValid:
	enterl	#3
?LBB_gattManagerDataServerHandlesValid:
	st	AL,@H'fff9
?LBB3:
	ld	X,@_gatt_manager_data
	tst	@(H'0008,X)
	beq	?L68
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff8
	cmp	AL,@(H'0008,X)
	bcc	?L68
	ld	X,@H'fff9
	ld	X,@(H'0001,X)
	st	X,@(0,Y)
?L66:
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	X,@H'fff8
	ld	AH,@(H'0009,X)
	add	AH,@$XAP_AL
	ld	AL,@(0,Y)
	ld	X,@$XAP_AH
	cmp	AL,@(H'0001,X)
	bcs	?L65
	cmp	AL,@(H'0002,X)
	bcz	?L64
?L65:
	ld	X,@_gatt_manager_data
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	AH,@(H'0009,X)
	add	AH,@$XAP_AL
	ld	X,@H'fff9
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	cmp	AL,@(H'0001,X)
	bcs	?L61
	cmp	AL,@(H'0002,X)
	beq	?L73
	bcc	?L61
?L73:
?L64:
	ld	AL,#H'0000
	bra	(?L57)
?L61:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff8
	cmp	AL,@(H'0008,X)
	bcs	?L66
?L68:
	ld	AL,#H'0001
?L57:
?LBE3:
?LBE_gattManagerDataServerHandlesValid:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gattManagerDataAddServer:
	enterl	#5
?LBB_gattManagerDataAddServer:
	st	AL,@(0,Y)
?LBB4:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L79
	tst	@(0,Y)
	beq	?L79
	bsr	$_gattManagerDataGetDB
	cmp	AL,#H'0000
	beq	?L79
	ld	AL,@(0,Y)
	bsr	_gattManagerDataServerHandlesValid
	cmp	AL,#H'0000
	bne	?L78
?L79:
	ld	AL,#H'0000
	bra	(?L75)
?L78:
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0008,X)
	smult	#H'0003
	ld	AH,@$XAP_AL
	add	AH,#H'0003
	ld	AL,@(H'0009,X)
	bsr	$_realloc
	st	AL,@(H'0001,Y)
	bsr	$_PanicNull
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0009,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0008,X)
	smult	#H'0003
	ld	X,@(H'0009,X)
	add	X,@$XAP_AL
	st	X,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	ld	X,@(H'0002,Y)
	st	AH,@(0,X)
	ld	X,@_gatt_manager_data
	ld	X,@(H'0009,X)
	add	X,@$XAP_AL
	st	X,@(H'0002,Y)
	ld	X,@(0,Y)
	ld	AH,@(H'0001,X)
	ld	X,@(H'0002,Y)
	st	AH,@(H'0001,X)
	ld	X,@_gatt_manager_data
	ld	AH,@(H'0009,X)
	add	AH,@$XAP_AL
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0008,X)
	add	AL,#H'0001
	st	AL,@(H'0008,X)
	ld	AL,#H'0001
?L75:
?LBE4:
?LBE_gattManagerDataAddServer:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattManagerDataServerCount:
	enterl	#2
?LBB_gattManagerDataServerCount:
	ld	X,@_gatt_manager_data
	ld	AL,@(H'0008,X)
?LBE_gattManagerDataServerCount:
	leavel	#2
$_gattManagerDataGetServerDatabaseHandle:
	enterl	#2
?LBB_gattManagerDataGetServerDatabaseHandle:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB5:
	tst	@_gatt_manager_data
	beq	?L92
	ld	AL,@_gatt_manager_data
	ld	X,@$XAP_AL
	tst	@(H'0009,X)
	beq	?L92
	tst	@H'fff8
	beq	?L92
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fffa
	cmp	AL,@(H'0008,X)
	bcc	?L92
?L90:
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	X,@H'fffa
	ld	AH,@(H'0009,X)
	add	AH,@$XAP_AL
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	cmp	AL,@H'fff8
	bne	?L86
?LBB6:
	ld	AL,@(H'0001,X)
	add	AL,@H'fff9
	add	AL,#-H'0001
	cmp	AL,@(H'0001,X)
	bcs	?L86
	cmp	AL,@(H'0002,X)
	bcz	?L81
?L86:
?LBE6:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fffa
	cmp	AL,@(H'0008,X)
	bcs	?L90
?L92:
	ld	AL,#H'0000
?L81:
?LBE5:
?LBE_gattManagerDataGetServerDatabaseHandle:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
$_gattManagerDataFindServerTask:
	enterl	#3
?LBB_gattManagerDataFindServerTask:
	st	AL,@H'fff9
?LBB7:
	tst	@_gatt_manager_data
	beq	?L109
	ld	AL,@_gatt_manager_data
	ld	X,@$XAP_AL
	tst	@(H'0009,X)
	bne	?L100
	bra	(?L109)
?L110:
	ld	X,@H'fff8
	add	AL,@(H'0009,X)
	bra	(?L99)
?L100:
	ld	AH,#H'0000
	st	AH,@(-1,Y)
	ld	AL,@_gatt_manager_data
	st	AL,@(-3,Y)
	ld	X,@$XAP_AL
	cmp	AH,@(H'0008,X)
	bcc	?L109
?L107:
	ld	AH,@(-3,Y)
	st	AH,@H'fff8
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	X,@(-3,Y)
	ld	X,@(H'0009,X)
	add	X,@$XAP_AL
	st	X,@(0,Y)
	ld	AH,@H'fff9
	cmp	AH,@(H'0001,X)
	bcs	?L104
	cmp	AH,@(H'0002,X)
	bcz	?L110
?L104:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@(-3,Y)
	cmp	AL,@(H'0008,X)
	bcs	?L107
?L109:
	ld	AL,#H'0000
?L99:
?LBE7:
?LBE_gattManagerDataFindServerTask:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
$_gattManagerDataResolveServerHandle:
	enterl	#3
?LBB_gattManagerDataResolveServerHandle:
	st	AL,@H'fff8
?LBB8:
	tst	@_gatt_manager_data
	beq	?L125
	ld	AL,@_gatt_manager_data
	ld	X,@$XAP_AL
	tst	@(H'0009,X)
	beq	?L125
	tst	@H'fff8
	bne	?L116
	bra	(?L125)
?L126:
	ld	X,@H'fff8
	ld	AL,@(H'0001,X)
	ld	X,@(0,Y)
	sub	AL,@(H'0001,X)
	add	AL,#H'0001
	ld	X,@H'fff8
	st	AL,@(H'0002,X)
	ld	AL,@_gatt_manager_data
	ld	X,@$XAP_AL
	ld	AL,@(H'0009,X)
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	ld	AL,#H'0001
	bra	(?L115)
?L116:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff9
	cmp	AL,@(H'0008,X)
	bcc	?L125
?L123:
	ld	AL,@(-1,Y)
	smult	#H'0003
	ld	AH,@$XAP_AL
	ld	X,@H'fff9
	ld	X,@(H'0009,X)
	add	X,@$XAP_AL
	st	X,@(0,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	cmp	AL,@(H'0001,X)
	beq	?L128
	bcc	?L120
?L128:
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@H'fff8
	cmp	AL,@(H'0001,X)
	bcc	?L126
?L120:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff9
	cmp	AL,@(H'0008,X)
	bcs	?L123
?L125:
	ld	AL,#H'0000
?L115:
?LBE8:
?LBE_gattManagerDataResolveServerHandle:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
_allocateNewClientEntry:
	enterl	#3
?LBB_allocateNewClientEntry:
?LBB9:
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	AL,@(H'000B,X)
	bsr	$_realloc
	st	AL,@(0,Y)
	bsr	$_PanicNull
	ld	X,@_gatt_manager_data
	ld	AL,@(0,Y)
	st	AL,@(H'000B,X)
?LBE9:
?LBE_allocateNewClientEntry:
	leavel	#3
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
_removeClientLookupElement:
	enterl	#2
?LBB_removeClientLookupElement:
?LBB10:
	add	AL,#H'0001
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff8
	cmp	AL,@(H'000A,X)
	bcc	?L142
?L137:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	AL,@(H'000B,X)
	st	AL,@(-2,Y)
	ld	AH,#-H'0004
	add	AH,@$XAP_AL
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	st	AL,@(-H'0004,X)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@(-2,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@(-2,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff8
	cmp	AL,@(H'000A,X)
	bcs	?L137
?L142:
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	add	AL,#-H'0001
	st	AL,@(H'000A,X)
	ld	X,@_gatt_manager_data
	tst	@(H'000A,X)
	beq	?L138
	ld	AL,@(H'000A,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	ld	AL,@(H'000B,X)
	bsr	$_realloc
	cmp	AL,#H'0000
	bne	?L139
	ld	AL,#H'0000
	bra	(?L132)
?L139:
	ld	X,@_gatt_manager_data
	bra	(?L143)
?L138:
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000B,X)
	bsr	$_free
	ld	X,@_gatt_manager_data
	ld	AL,#H'0000
?L143:
	st	AL,@(H'000B,X)
	ld	AL,#H'0001
?L132:
?LBE10:
?LBE_removeClientLookupElement:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_gattManagerDataAddClient:
	enterl	#3
?LBB_gattManagerDataAddClient:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L148
	tst	@(0,Y)
	bne	?L147
?L148:
	ld	AL,#H'0000
	bra	(?L146)
?L147:
	bsr	_allocateNewClientEntry
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@(H'000B,X)
	add	AH,@$XAP_AL
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	st	AL,@(0,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@(H'000B,X)
	add	AH,@$XAP_AL
	ld	X,@(0,Y)
	ld	AL,@(H'0001,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0001,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@(H'000B,X)
	add	AH,@$XAP_AL
	ld	X,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0002,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@(H'000B,X)
	add	AH,@$XAP_AL
	ld	X,@(0,Y)
	ld	AL,@(H'0003,X)
	ld	X,@$XAP_AH
	st	AL,@(H'0003,X)
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000A,X)
	add	AL,#H'0001
	st	AL,@(H'000A,X)
	ld	AL,#H'0001
?L146:
?LBE_gattManagerDataAddClient:
	leavel	#3
$_gattManagerDataRemoveClient:
	enterl	#4
?LBB_gattManagerDataRemoveClient:
	st	AL,@(0,Y)
?LBB11:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L151
	ld	X,@_gatt_manager_data
	tst	@(H'000B,X)
	beq	?L151
	tst	@(0,Y)
	bne	?L150
?L151:
	ld	AL,#H'0000
	bra	(?L149)
?L150:
	ld	X,#H'0000
	st	X,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fff8
	ld	AL,@(-1,Y)
	cmp	AL,@(H'000A,X)
	bcc	?L153
?L158:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fff8
	add	AL,@(H'000B,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@(0,Y)
	bne	?L154
	ld	AL,@(-1,Y)
	bsr	_removeClientLookupElement
	cmp	AL,#H'0000
	beq	?L153
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	bra	(?L153)
?L154:
	ld	X,#H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	ld	AL,@_gatt_manager_data
	st	AL,@H'fff8
	ld	AL,@$XAP_UXL
	ld	X,@H'fff8
	cmp	AL,@(H'000A,X)
	bcs	?L158
?L153:
	ld	AL,@(H'0001,Y)
?L149:
?LBE11:
?LBE_gattManagerDataRemoveClient:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
$_gattManagerDataGetClientByTask:
	enterl	#3
?LBB_gattManagerDataGetClientByTask:
	st	AL,@(0,Y)
?LBB12:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L173
	tst	@(0,Y)
	bne	?L164
	bra	(?L173)
?L174:
	ld	X,@H'fff8
	ld	AL,@(H'000B,X)
	add	AL,@$XAP_AH
	bra	(?L163)
?L164:
	ld	AL,#H'0000
	st	AL,@(-2,Y)
	ld	X,@_gatt_manager_data
	st	X,@(-1,Y)
	cmp	AL,@(H'000A,X)
	bcc	?L173
?L171:
	ld	X,@(-1,Y)
	st	X,@H'fff8
	ld	AL,@(-2,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AL,@(H'000B,X)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,@(0,Y)
	beq	?L174
	ld	AL,#H'0001
	add	AL,@(-2,Y)
	st	AL,@(-2,Y)
	ld	X,@_gatt_manager_data
	st	X,@(-1,Y)
	cmp	AL,@(H'000A,X)
	bcs	?L171
?L173:
	ld	AL,#H'0000
?L163:
?LBE12:
?LBE_gattManagerDataGetClientByTask:
	leavel	#3
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
$_gattManagerDataGetClientByCid:
	enterl	#2
?LBB_gattManagerDataGetClientByCid:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB13:
	tst	@_gatt_manager_data
	beq	?L188
	ld	AL,@_gatt_manager_data
	ld	X,@$XAP_AL
	tst	@(H'000B,X)
	bne	?L179
	bra	(?L188)
?L189:
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	bra	(?L178)
?L179:
	ld	AL,#H'0000
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fffa
	cmp	AL,@(H'000A,X)
	bcc	?L188
?L186:
	ld	AL,@(-1,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@H'fffa
	ld	AH,@(H'000B,X)
	add	AH,@$XAP_AL
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	cmp	AL,@H'fff8
	beq	?L191
	bcc	?L183
?L191:
	ld	AL,@(H'0003,X)
	cmp	AL,@H'fff8
	bcs	?L183
	ld	AL,@(H'0001,X)
	cmp	AL,@H'fff9
	beq	?L189
?L183:
	ld	AL,#H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	ld	X,@_gatt_manager_data
	st	X,@H'fffa
	cmp	AL,@(H'000A,X)
	bcs	?L186
?L188:
	ld	AL,#H'0000
?L178:
?LBE13:
?LBE_gattManagerDataGetClientByCid:
	leavel	#2
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
$_gattManagerDataSetRemoteServerConnectHandler:
	enterl	#3
?LBB_gattManagerDataSetRemoteServerConnectHandler:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L195
	ld	X,@_gatt_manager_data
	ld	AL,@(0,Y)
	st	AL,@(H'000E,X)
?L195:
?LBE_gattManagerDataSetRemoteServerConnectHandler:
	leavel	#3
$_gattManagerDataGetRemoteServerConnectHandler:
	enterl	#2
?LBB_gattManagerDataGetRemoteServerConnectHandler:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L198
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000E,X)
	bra	(?L197)
?L198:
	ld	AL,#H'0000
?L197:
?LBE_gattManagerDataGetRemoteServerConnectHandler:
	leavel	#2
$_gattManagerDataGetPointerToRemoteServerConnectHandler:
	enterl	#2
?LBB_gattManagerDataGetPointerToRemoteServerConnectHandler:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,@_gatt_manager_data
	add	AL,#H'000E
	bra	(?L199)
?L200:
	ld	AL,#H'0000
?L199:
?LBE_gattManagerDataGetPointerToRemoteServerConnectHandler:
	leavel	#2
$_gattManagerDataGetRemoteClientConnectTask:
	enterl	#2
?LBB_gattManagerDataGetRemoteClientConnectTask:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L202
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000C,X)
	bra	(?L201)
?L202:
	ld	AL,#H'0000
?L201:
?LBE_gattManagerDataGetRemoteClientConnectTask:
	leavel	#2
$_gattManagerDataSetRemoteClientConnectTask:
	enterl	#3
?LBB_gattManagerDataSetRemoteClientConnectTask:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L203
	ld	X,@_gatt_manager_data
	ld	AL,@(0,Y)
	st	AL,@(H'000C,X)
?L203:
?LBE_gattManagerDataSetRemoteClientConnectTask:
	leavel	#3
$_gattManagerDataGetRemoteClientConnectCid:
	enterl	#2
?LBB_gattManagerDataGetRemoteClientConnectCid:
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L206
	ld	X,@_gatt_manager_data
	ld	AL,@(H'000D,X)
	bra	(?L205)
?L206:
	ld	AL,#H'0000
?L205:
?LBE_gattManagerDataGetRemoteClientConnectCid:
	leavel	#2
$_gattManagerDataSetRemoteClientConnectCid:
	enterl	#3
?LBB_gattManagerDataSetRemoteClientConnectCid:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	beq	?L207
	ld	X,@_gatt_manager_data
	ld	AL,@(0,Y)
	st	AL,@(H'000D,X)
?L207:
?LBE_gattManagerDataSetRemoteClientConnectCid:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 139 used[1] = 37 total = 176
;# Function pattern *movqi3 used[0] = 191 total = 191
;# Function pattern *movqi8 used[0] = 25 total = 25
;# Function pattern *movhi used[2] = 1 used[3] = 2 total = 3
;# Function pattern *addqi2 used[0] = 15 used[2] = 26 total = 41
;# Function pattern *andqi3 used[0] = 10 total = 10
;# Function pattern *iorqi3 used[0] = 6 total = 6
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 18 total = 18
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 30 total = 30
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 42 total = 42
;# Function pattern movstrqi+3 used[0] = 38 used[1] = 19 total = 57
;# Function pattern movstrqi+4 used[2] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 31 total = 31
	MODULE	gatt_manager_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleGattInitCfm:
	enterl	#3
?LBB_handleGattInitCfm:
	st	AL,@(0,Y)
	bsr	$_gattManagerDataGetInitialisationState
	cmp	AL,#H'0002
	beq	?L2
	bsr	$_Panic
?L2:
	ld	X,@(0,Y)
	tst	@(0,X)
	beq	?L3
	bsr	$_gattManagerDataInitialisationState_Registration
	ld	AL,#H'0004
	bra	(?L5)
?L3:
	bsr	$_gattManagerDataInitialisationState_Initialised
	ld	AL,#H'0000
?L5:
	bsr	$_registerWithGattCfm
?LBE_handleGattInitCfm:
	leavel	#3
_handleGattConnectCfm:
	enterl	#3
?LBB_handleGattConnectCfm:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	ld	AL,@(0,X)
	cmp	AL,#H'0013
	bne	?L8
	bsr	$_gattManagerDataGetAdvertisingState
	cmp	AL,#H'0002
	bne	?L7
	ld	X,@(0,Y)
	ld	AL,@(H'0007,X)
	bsr	$_gattManagerServerAdvertising
	bra	(?L7)
?L8:
	bsr	$_gattManagerDataGetRemoteClientConnectCid
	ld	X,@(0,Y)
	ld	AH,@(H'0007,X)
	cmp	AH,@$XAP_AL
	bne	?L12
	ld	AL,@$XAP_UXL
	bsr	$_gattManagerServerRemoteClientConnected
	bra	(?L7)
?L12:
	ld	AL,@(0,Y)
	bsr	$_gattManagerClientRemoteServerConnected
?L7:
?LBE_handleGattConnectCfm:
	leavel	#3
_gattManageDisconnectInd:
	enterl	#8
?LBB_gattManageDisconnectInd:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'6409
	bsr	$_MessageSend
?LBE2:
?LBE_gattManageDisconnectInd:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_gattManagerExchangeMtuInd:
	enterl	#8
?LBB_gattManagerExchangeMtuInd:
	ld	AH,@$XAP_AL
?LBB3:
	ld	X,#H'0002
	st	X,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_memmove
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5806
	bsr	$_MessageSend
?LBE3:
?LBE_gattManagerExchangeMtuInd:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_gattManagerExchangeMtuCfm:
	enterl	#8
?LBB_gattManagerExchangeMtuCfm:
	ld	AH,@$XAP_AL
?LBB4:
	ld	X,#H'0003
	st	X,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_memmove
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'5805
	bsr	$_MessageSend
?LBE4:
?LBE_gattManagerExchangeMtuCfm:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_gattMessageHandler:
	enterl	#3
?LBB_gattMessageHandler:
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_PanicNull
	ld	AL,@(0,Y)
	add	AL,#-H'5800
	cmp	AL,#(H'0001+H'001C)
	bcc	?L20
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE45,X)
	brxl
	.SEG	CONST
?JTBASE45:
	.CODE
?L45:
	.SEG	CONST
	dc	lwrd(?L22-?L45)
	dc	lwrd(?L23-?L45)
	dc	lwrd(?L40-?L45)
	dc	lwrd(?L24-?L45)
	dc	lwrd(?L41-?L45)
	dc	lwrd(?L25-?L45)
	dc	lwrd(?L26-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L29-?L45)
	dc	lwrd(?L30-?L45)
	dc	lwrd(?L31-?L45)
	dc	lwrd(?L32-?L45)
	dc	lwrd(?L33-?L45)
	dc	lwrd(?L20-?L45)
	dc	lwrd(?L34-?L45)
	dc	lwrd(?L35-?L45)
	dc	lwrd(?L36-?L45)
	dc	lwrd(?L37-?L45)
	dc	lwrd(?L38-?L45)
	dc	lwrd(?L39-?L45)
	dc	lwrd(?L27-?L45)
	dc	lwrd(?L42-?L45)
	dc	lwrd(?L28-?L45)
	dc	lwrd(?L43-?L45)
	.CODE
?L22:
	ld	AL,@(H'0003,Y)
	bsr	_handleGattInitCfm
	bra	(?L20)
?L23:
	ld	AL,@(H'0003,Y)
	bsr	_handleGattConnectCfm
	bra	(?L20)
?L24:
	ld	AL,@(H'0003,Y)
	bsr	_gattManageDisconnectInd
	bra	(?L20)
?L25:
	ld	AL,@(H'0003,Y)
	bsr	_gattManagerExchangeMtuCfm
	bra	(?L20)
?L26:
	ld	AL,@(H'0003,Y)
	bsr	_gattManagerExchangeMtuInd
	bra	(?L20)
?L27:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientRemoteServerNotification
	bra	(?L20)
?L28:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientRemoteServerIndication
	bra	(?L20)
?L29:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientDiscoverAllCharacteristicsConfirm
	bra	(?L20)
?L30:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientDiscoverAllCharacteristicsDescriptorsConfirm
	bra	(?L20)
?L31:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientReadCharacteristicValueConfirm
	bra	(?L20)
?L32:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientReadUsingCharacteristicUuidConfirm
	bra	(?L20)
?L33:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientReadLongCharacteristicValueConfirm
	bra	(?L20)
?L34:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientWriteWithoutResponseConfirm
	bra	(?L20)
?L35:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientSignedWriteWithoutResponseConfirm
	bra	(?L20)
?L36:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientWriteCharacteristicValueConfirm
	bra	(?L20)
?L37:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientWriteLongCharacteristicValueConfirm
	bra	(?L20)
?L38:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientReliableWritePrepareConfirm
	bra	(?L20)
?L39:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerClientReliableWriteExecuteConfirm
	bra	(?L20)
?L40:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerServerConnectInd
	bra	(?L20)
?L41:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerServerAccessInd
	bra	(?L20)
?L42:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerServerNotificationCfm
	bra	(?L20)
?L43:
	ld	AL,@(H'0003,Y)
	bsr	$_gattManagerServerIndicationCfm
?L20:
?LBE_gattMessageHandler:
	leavel	#3
_gattManagerInternalMessageHandler:
	enterl	#2
?LBB_gattManagerInternalMessageHandler:
	ld	AL,@(H'0002,Y)
	cmp	AH,#H'0001
	beq	?L49
	cmp	AH,#H'0001
	bcs	?L48
	cmp	AH,#H'0002
	beq	?L50
	bra	(?L46)
?L48:
	bsr	$_GattManagerCancelWaitForRemoteClient
	bra	(?L46)
?L49:
	bsr	$_gattManagerWaitForRemoteClientInternal
	bra	(?L46)
?L50:
	bsr	$_GattManagerConnectToRemoteServerInternal
?L46:
?LBE_gattManagerInternalMessageHandler:
	leavel	#2
$_registerWithGattCfm:
	enterl	#8
?LBB_registerWithGattCfm:
?LBB5:
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	bsr	$_gattManagerDataGetApplicationTask
	ld	AH,@$XAP_UY
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,#H'6400
	bsr	$_MessageSend
?LBE5:
?LBE_registerWithGattCfm:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattManagerMessageHandler:
	enterl	#5
?LBB_gattManagerMessageHandler:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	bsr	$_gattManagerDataIsInit
	cmp	AL,#H'0000
	bne	?L58
	bsr	$_Panic
?L58:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'5800
	cmp	AL,#(H'0001+H'001D)
	bcc	?L59
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_gattMessageHandler
	bra	(?L57)
?L59:
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0002)
	bcc	?L57
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_gattManagerInternalMessageHandler
?L57:
?LBE_gattManagerMessageHandler:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 31 used[1] = 28 total = 59
;# Function pattern *movqi3 used[0] = 26 total = 26
;# Function pattern *addqi0 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern jump used[0] = 28 total = 28
;# Function pattern *call1 used[0] = 39 total = 39
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern tablejump_1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 7 total = 7
	MODULE	gatt_battery_server_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattBatteryServerInit:
	enterl	#5
?LBB_GattBatteryServerInit:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB2:
	ld	AL,#H'0002
	cmp	AH,#H'0000
	beq	?L2
	tst	@H'fff8
	beq	?L2
	ld	AH,#hwrd($_batteryServerMsgHandler)
	ld	AL,#lwrd($_batteryServerMsgHandler)
	ld	X,@H'fff8
?LBB3:
	st	AH,@(0,X)
	st	AL,@(1,X)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0002,X)
	ld	AL,@H'ffff
	tst	@(H'0005,Y)
	beq	?L3
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	asl	#H'000F
	ld	X,@H'fff8
	ld	AH,@(H'0003,X)
	and	AH,#H'7FFF
	or	AH,@$XAP_AL
	st	AH,@(H'0003,X)
	bra	(?L4)
?L3:
	ld	X,@H'fff8
	ld	AL,@(H'0003,X)
	and	AL,#H'7FFF
	st	AL,@(H'0003,X)
?L4:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	bsr	$_GattManagerRegisterServer
	cmp	AL,#H'0000
	bne	?L5
	ld	AL,#H'0000
	bra	(?L2)
?L5:
	ld	AL,#H'0001
?L2:
?LBE3:
?LBE2:
?LBE_GattBatteryServerInit:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 7 used[1] = 3 used[3] = 2 total = 12
;# Function pattern *movqi3 used[0] = 9 total = 9
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 2 total = 4
	MODULE	gatt_battery_server_notify
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattBatteryServerSendLevelNotification:
	enterl	#9
?LBB_GattBatteryServerSendLevelNotification:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB2:
	ld	AL,#H'0002
	st	AL,@(H'0005,Y)
	tst	@(H'0003,Y)
	beq	?L2
	ld	AL,@(H'000A,Y)
	cmp	AL,#(H'0001+H'0064)
	bcc	?L2
	cmp	AH,#H'0000
	beq	?L2
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0003,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L3
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
	cmp	AL,@(H'0004,Y)
	bcc	?L2
?L10:
	ld	X,@(H'0009,Y)
	add	X,@(H'0006,Y)
	tst	@(0,X)
	bne	?L8
	ld	X,#H'0002
	st	X,@(H'0005,Y)
	bra	(?L6)
?L8:
	ld	X,@(H'0009,Y)
	add	X,@(H'0006,Y)
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	$_GattManagerRemoteClientNotify
?L6:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	cmp	AL,@(H'0004,Y)
	bcs	?L10
	bra	(?L2)
?L3:
	ld	X,#H'0003
	st	X,@(H'0005,Y)
?L2:
?LBE2:
	ld	AL,@(H'0005,Y)
?LBE_GattBatteryServerSendLevelNotification:
	leavel	#9
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 12 used[1] = 2 total = 14
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *movqi8 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 2 total = 4
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	gatt_battery_server_read
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattBatteryServerReadLevelResponse:
	enterl	#5
?LBB_GattBatteryServerReadLevelResponse:
	st	AH,@H'fff8
	ld	X,@(H'0005,Y)
?LBB2:
	ld	AH,#H'0014
	st	AH,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0002
	bra	(?L1)
?L2:
	cmp	X,#(H'0001+H'0064)
	bcc	?L3
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
?L3:
	st	X,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@H'fff8
	bsr	$_sendBatteryLevelAccessRsp
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_GattBatteryServerReadLevelResponse:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_GattBatteryServerReadClientConfigResponse:
	enterl	#3
?LBB_GattBatteryServerReadClientConfigResponse:
	st	AH,@H'fff8
	ld	X,@(H'0003,Y)
?LBB3:
	ld	AH,#H'0002
	cmp	AL,#H'0000
	beq	?L5
	st	X,@(0,Y)
	ld	AH,@H'fff8
	bsr	$_sendBatteryConfigAccessRsp
	ld	AH,#H'0000
?L5:
?LBE3:
	ld	AL,@$XAP_AH
?LBE_GattBatteryServerReadClientConfigResponse:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_GattBatteryServerReadPresentationResponse:
	enterl	#4
?LBB_GattBatteryServerReadPresentationResponse:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
?LBB4:
	ld	AH,#H'0002
	tst	@H'fff8
	beq	?L7
	st	X,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_sendBatteryPresentationAccessRsp
	ld	AH,#H'0000
?L7:
?LBE4:
	ld	AL,@$XAP_AH
?LBE_GattBatteryServerReadPresentationResponse:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 13 used[1] = 4 total = 17
;# Function pattern *movqi3 used[0] = 13 total = 13
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 1 total = 3
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	gatt_battery_server_access
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendBatteryAccessRsp:
	enterl	#6
?LBB_sendBatteryAccessRsp:
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	bsr	$_GattManagerServerAccessResponse
?LBE_sendBatteryAccessRsp:
	leavel	#6
_sendBatteryAccessErrorRsp:
	enterl	#6
?LBB_sendBatteryAccessErrorRsp:
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@(0,X)
	bsr	_sendBatteryAccessRsp
?LBE_sendBatteryAccessErrorRsp:
	leavel	#6
_batteryServiceAccess:
	enterl	#6
?LBB_batteryServiceAccess:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	_sendBatteryAccessRsp
	bra	(?L4)
?L5:
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,#H'0003
	bra	(?L9)
?L7:
	ld	AL,#H'0006
?L9:
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_sendBatteryAccessErrorRsp
?L4:
?LBE_batteryServiceAccess:
	leavel	#6
_batteryLevelAccess:
	enterl	#8
?LBB_batteryLevelAccess:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB2:
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L11
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	AH,#H'6440
	bsr	$_MessageSend
?LBE3:
	bra	(?L10)
?L11:
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L13
	ld	AL,#H'0003
	bra	(?L15)
?L13:
	ld	AL,#H'0006
?L15:
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_sendBatteryAccessErrorRsp
?L10:
?LBE2:
?LBE_batteryLevelAccess:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_batteryClientConfigAccess:
	enterl	#18
?LBB_batteryClientConfigAccess:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
	ld	X,@$XAP_AH
?LBB4:
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L17
?LBB5:
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0005
	st	AL,@(0,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'6441
	bsr	$_MessageSend
?LBE5:
	bra	(?L16)
?L17:
	ld	X,@(H'000F,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0002
	bne	?L20
?LBB6:
	ld	AL,#H'0003
	st	AL,@(H'0009,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'000A,Y)
	ld	AL,@(0,X)
	st	AL,@(H'000B,Y)
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	st	AL,@H'fff8
	ld	AL,@(H'0006,X)
	asl	#H'0008
	or	AL,@H'fff8
	st	AL,@(H'000C,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'000A
	st	AL,@(0,Y)
	ld	X,@(H'000E,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'6442
	bsr	$_MessageSend
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000E,Y)
	ld	X,@(H'000F,Y)
	ld	AH,@(0,X)
	bsr	_sendBatteryAccessRsp
?LBE6:
	bra	(?L16)
?L20:
	ld	AL,#H'000D
	bra	(?L23)
?L19:
	ld	AL,#H'0006
?L23:
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	ld	AH,@(H'000F,Y)
	bsr	_sendBatteryAccessErrorRsp
?L16:
?LBE4:
?LBE_batteryClientConfigAccess:
	leavel	#18
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
_batteryPresentationAccess:
	enterl	#8
?LBB_batteryPresentationAccess:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB7:
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L26
?LBB8:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	AH,#H'6443
	bsr	$_MessageSend
?LBE8:
	bra	(?L25)
?L26:
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L28
	ld	AL,#H'0003
	bra	(?L30)
?L28:
	ld	AL,#H'0006
?L30:
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
	bsr	_sendBatteryAccessErrorRsp
?L25:
?LBE7:
?LBE_batteryPresentationAccess:
	leavel	#8
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_handleBatteryAccess:
	enterl	#3
?LBB_handleBatteryAccess:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@$XAP_AH
	ld	AL,@(H'0001,X)
	cmp	AL,#H'0003
	beq	?L34
	cmp	AL,#(H'0001+H'0003)
	bcc	?L41
	cmp	AL,#H'0001
	beq	?L33
	bra	(?L39)
?L41:
	cmp	AL,#H'0004
	beq	?L38
	cmp	AL,#H'0005
	beq	?L35
	bra	(?L39)
?L33:
	ld	AL,@H'fff8
	bsr	_batteryServiceAccess
	bra	(?L31)
?L34:
	ld	AL,@H'fff8
	bsr	_batteryLevelAccess
	bra	(?L31)
?L35:
	ld	X,@H'fff8
	ld	AH,@(H'0003,X)
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L39
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_batteryClientConfigAccess
	bra	(?L31)
?L38:
	ld	AL,@H'fff8
	bsr	_batteryPresentationAccess
	bra	(?L31)
?L39:
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_sendBatteryAccessErrorRsp
?L31:
?LBE_handleBatteryAccess:
	leavel	#3
$_sendBatteryLevelAccessRsp:
	enterl	#6
?LBB_sendBatteryLevelAccessRsp:
	ld	X,#H'0003
	st	X,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@(H'0001,Y)
	ld	X,#H'0001
	st	X,@(H'0002,Y)
	ld	X,@$XAP_UY
	add	X,#H'0006
	st	X,@(H'0003,Y)
	bsr	_sendBatteryAccessRsp
?LBE_sendBatteryLevelAccessRsp:
	leavel	#6
$_sendBatteryConfigAccessRsp:
	enterl	#8
?LBB_sendBatteryConfigAccessRsp:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	ld	AH,@(H'0008,Y)
	ld	AL,@$XAP_AH
?LBB9:
	and	AL,#H'00FF
	st	AL,@(H'0004,Y)
	lsr	#H'0008
	and	AH,#H'00FF
	st	AH,@(H'0005,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@H'fff8
	bsr	_sendBatteryAccessRsp
?LBE9:
?LBE_sendBatteryConfigAccessRsp:
	leavel	#8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_sendBatteryPresentationAccessRsp:
	enterl	#13
?LBB_sendBatteryPresentationAccessRsp:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	X,@(H'000D,Y)
	ld	AH,@(H'000E,Y)
	ld	AL,#H'0004
?LBB10:
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,#H'00AD
	st	AL,@(H'0006,Y)
	ld	AL,#H'0027
	st	AL,@(H'0007,Y)
	st	X,@(H'0008,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	st	AL,@(H'0009,Y)
	lsr	#H'0008
	and	AH,#H'00FF
	st	AH,@(H'000A,Y)
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0007
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_sendBatteryAccessRsp
?LBE10:
?LBE_sendBatteryPresentationAccessRsp:
	leavel	#13
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
	ENDMOD

;# Function pattern *movqi2 used[0] = 80 used[1] = 21 used[3] = 2 total = 103
;# Function pattern *movqi3 used[0] = 70 total = 70
;# Function pattern *addqi0 used[0] = 7 total = 7
;# Function pattern *andqi3 used[0] = 13 total = 13
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 15 total = 15
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 9 total = 9
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 5 total = 5
	MODULE	gatt_battery_server_msg_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_batteryServerMsgHandler:
	enterl	#2
?LBB_batteryServerMsgHandler:
	ld	X,@(H'0002,Y)
?LBB2:
	cmp	AH,#H'6401
	bne	?L1
	ld	AH,@$XAP_UXL
	bsr	$_handleBatteryAccess
?L1:
?LBE2:
?LBE_batteryServerMsgHandler:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	gatt_server_access
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleGattServiceAccessRequest:
	enterl	#6
?LBB_handleGattServiceAccessRequest:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	cmp	AL,#H'0000
	beq	?L2
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	bra	(?L8)
?L3:
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0003
	bra	(?L7)
?L5:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0006
?L7:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
?L8:
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_GattManagerServerAccessResponse
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_handleGattServiceAccessRequest:
	leavel	#6
_handleGattServiceChangedAccessRequest:
	enterl	#6
?LBB_handleGattServiceChangedAccessRequest:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	cmp	AH,#H'0000
	beq	?L10
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0002
	bra	(?L15)
?L11:
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L13
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0003
	bra	(?L15)
?L13:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0006
?L15:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_GattManagerServerAccessResponse
	ld	AL,#H'0001
	bra	(?L9)
?L10:
	ld	AL,#H'0000
?L9:
?LBE_handleGattServiceChangedAccessRequest:
	leavel	#6
_handleGattServiceChangedCCfgAccessRequest:
	enterl	#8
?LBB_handleGattServiceChangedCCfgAccessRequest:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L17
	cmp	AL,#H'0000
	beq	?L17
?LBB3:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AH,@(0,X)
	bsr	$_gattServerSendReadClientConfigInd
	bra	(?L19)
?L18:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L20
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0002
	bne	?L21
?LBB4:
	ld	AL,@(H'0005,X)
	and	AL,#H'00FF
	st	AL,@H'fff9
	ld	AL,@(H'0006,X)
	asl	#H'0008
	or	AL,@H'fff9
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@(H'0005,Y)
	ld	AH,@(0,X)
	bsr	$_gattServerSendWriteClientConfigInd
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	bra	(?L25)
?L21:
	ld	X,@(H'0005,Y)
?LBE4:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'000D
	bra	(?L24)
?L20:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	ld	AL,#H'0006
?L24:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
?L25:
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_GattManagerServerAccessResponse
?L19:
	ld	AL,#H'0001
	bra	(?L16)
?L17:
?LBE3:
	ld	AL,#H'0000
?L16:
?LBE2:
?LBE_handleGattServiceChangedCCfgAccessRequest:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
$_gattServerHandleGattManagerAccessInd:
	enterl	#2
?LBB_gattServerHandleGattManagerAccessInd:
	ld	X,@$XAP_AH
	cmp	AH,#H'0000
	beq	?L28
	ld	AH,@(H'0001,X)
	cmp	AH,#H'0003
	beq	?L31
	cmp	AH,#(H'0001+H'0003)
	bcc	?L35
	cmp	AH,#H'0001
	beq	?L30
	bra	(?L28)
?L35:
	cmp	AH,#H'0004
	beq	?L32
	bra	(?L28)
?L30:
	ld	AH,@$XAP_UXL
	bsr	_handleGattServiceAccessRequest
	bra	(?L27)
?L31:
	ld	AH,@$XAP_UXL
	bsr	_handleGattServiceChangedAccessRequest
	bra	(?L27)
?L32:
	ld	AH,@$XAP_UXL
	bsr	_handleGattServiceChangedCCfgAccessRequest
	bra	(?L27)
?L28:
	ld	AL,#H'0000
?L27:
?LBE_gattServerHandleGattManagerAccessInd:
	leavel	#2
$_GattServerReadClientConfigResponse:
	enterl	#10
?LBB_GattServerReadClientConfigResponse:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@$XAP_AH
?LBB5:
	and	AL,#H'00FF
	st	AL,@(H'0004,Y)
	lsr	#H'0008
	and	AH,#H'00FF
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_PanicNull
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_GattManagerServerAccessResponse
?LBE5:
?LBE_GattServerReadClientConfigResponse:
	leavel	#10
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 45 used[1] = 8 total = 53
;# Function pattern *movqi3 used[0] = 55 total = 55
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *andqi3 used[0] = 9 total = 9
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 15 total = 15
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern movstrqi+3 used[0] = 13 total = 13
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	gatt_server_indication
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	CONST
?LC0:
	dc	H'0000
	dc	H'0000
	dc	H'00FF
	dc	H'00FF
	.CODE
$_GattServerSendServiceChangedIndication:
	enterl	#9
?LBB_GattServerSendServiceChangedIndication:
	st	AL,@H'fff8
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,@?LC0
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_UY
	add	X,#H'0003
	ld	AL,@?LC0+H'0001
	st	AL,@(H'0001,X)
	ld	AL,@?LC0+H'0002
	st	AL,@(H'0002,X)
	ld	AL,@?LC0+H'0003
	st	AL,@(H'0003,X)
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	$_GattManagerRemoteClientIndicate
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_GattServerSendServiceChangedIndication:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gattServerHandleGattManagerIndicationCfm:
	enterl	#3
?LBB_gattServerHandleGattManagerIndicationCfm:
	st	AL,@H'fff8
?LBB4:
	cmp	AL,#H'0000
	beq	?L4
	cmp	AH,#H'0000
	beq	?L4
	ld	X,@$XAP_AH
?LBB5:
	ld	AL,@(0,X)
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	X,@$XAP_AH
	ld	AH,@(H'0001,X)
	bsr	$_gattServerSendServiceChangedIndicationCfm
	bra	(?L3)
?L4:
?LBE5:
	ld	AL,#H'0000
?L3:
?LBE4:
?LBE_gattServerHandleGattManagerIndicationCfm:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 12 used[1] = 2 total = 14
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	gatt_server_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattServerInit:
	enterl	#9
?LBB_GattServerInit:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
	cmp	AH,#H'0000
	beq	?L2
	ld	AH,#hwrd($_gattServerMsgHandler)
	ld	AL,#lwrd($_gattServerMsgHandler)
?LBB3:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_gattServerSetGattServerTask
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_gattServerSetClientTask
	ld	AL,@(H'0005,Y)
	bsr	$_gattServerGetGattServerTask
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_GattManagerRegisterServer
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0000
	bra	(?L1)
?L3:
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0002
?L1:
?LBE2:
?LBE_GattServerInit:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 used[1] = 4 total = 9
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	gatt_server_api
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattServerSendReadClientConfigInd:
	enterl	#8
?LBB_gattServerSendReadClientConfigInd:
	ld	X,@$XAP_AL
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'6640
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_gattServerSendReadClientConfigInd:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gattServerSendWriteClientConfigInd:
	enterl	#8
?LBB_gattServerSendWriteClientConfigInd:
	ld	X,@$XAP_AL
?LBB4:
	cmp	AL,#H'0000
	beq	?L4
?LBB5:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'6641
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L3)
?L4:
?LBE5:
	ld	AL,#H'0000
?L3:
?LBE4:
?LBE_gattServerSendWriteClientConfigInd:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_gattServerSendServiceChangedIndicationCfm:
	enterl	#8
?LBB_gattServerSendServiceChangedIndicationCfm:
	ld	X,@$XAP_AL
?LBB6:
	cmp	AL,#H'0000
	beq	?L6
?LBB7:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'6642
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L5)
?L6:
?LBE7:
	ld	AL,#H'0000
?L5:
?LBE6:
?LBE_gattServerSendServiceChangedIndicationCfm:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
	ENDMOD

;# Function pattern *movqi2 used[0] = 18 total = 18
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *addqi0 used[0] = 3 total = 3
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	gatt_server_msg_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattServerMsgHandler:
	enterl	#2
?LBB_gattServerMsgHandler:
	ld	X,@(H'0002,Y)
	cmp	AH,#H'6401
	beq	?L3
	cmp	AH,#H'6408
	beq	?L4
	bra	(?L1)
?L3:
	ld	AH,@$XAP_UXL
	bsr	$_gattServerHandleGattManagerAccessInd
	bra	(?L1)
?L4:
	ld	AH,@$XAP_UXL
	bsr	$_gattServerHandleGattManagerIndicationCfm
?L1:
?LBE_gattServerMsgHandler:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	gatt_server_private
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattServerSetGattServerTask:
	enterl	#2
?LBB_gattServerSetGattServerTask:
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	cmp	X,#H'0000
	beq	?L2
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_gattServerSetGattServerTask:
	leavel	#2
$_gattServerGetGattServerTask:
; leaf function with empty stack frame
?LBB_gattServerGetGattServerTask:
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0000
?L3:
?LBE_gattServerGetGattServerTask:
	rts
$_gattServerSetClientTask:
	enterl	#2
?LBB_gattServerSetClientTask:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L6
	st	AH,@(H'0002,X)
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE_gattServerSetClientTask:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	gatt_gap_server_access
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_handleGapServiceAccessRequest:
	enterl	#6
?LBB_handleGapServiceAccessRequest:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L3
	ld	AH,#H'0000
	bra	(?L4)
?L3:
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L5
	ld	AH,#H'0003
	bra	(?L4)
?L5:
	ld	AH,#H'0006
?L4:
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8
	ld	AH,@(0,X)
	bsr	$_GattManagerServerAccessResponse
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_handleGapServiceAccessRequest:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handleDeviceNameAccessRequest:
	enterl	#8
?LBB_handleDeviceNameAccessRequest:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB3:
	cmp	AL,#H'0000
	beq	?L8
	cmp	AH,#H'0000
	beq	?L8
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L9
	ld	AL,@(H'0003,X)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_gattGapServerSendReadDeviceNameInd
	cmp	AL,#H'0000
	beq	?L10
	ld	AH,#H'0000
	bra	(?L12)
?L10:
	ld	AH,#H'000E
	bra	(?L12)
?L9:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L13
	ld	AH,#H'0003
	bra	(?L12)
?L13:
	ld	AH,#H'0006
?L12:
	cmp	AH,#H'0000
	beq	?L15
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_GattManagerServerAccessResponse
?L15:
	ld	AL,#H'0001
	bra	(?L7)
?L8:
	ld	AL,#H'0000
?L7:
?LBE3:
?LBE_handleDeviceNameAccessRequest:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_handleDeviceAppearanceAccessRequest:
	enterl	#8
?LBB_handleDeviceAppearanceAccessRequest:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB4:
	cmp	AL,#H'0000
	beq	?L17
	cmp	AH,#H'0000
	beq	?L17
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_gattGapServerSendReadAppearanceInd
	cmp	AL,#H'0000
	beq	?L19
	ld	AH,#H'0000
	bra	(?L21)
?L19:
	ld	AH,#H'000E
	bra	(?L21)
?L18:
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0002,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L22
	ld	AH,#H'0003
	bra	(?L21)
?L22:
	ld	AH,#H'0006
?L21:
	cmp	AH,#H'0000
	beq	?L24
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(0,X)
	bsr	$_GattManagerServerAccessResponse
?L24:
	ld	AL,#H'0001
	bra	(?L16)
?L17:
	ld	AL,#H'0000
?L16:
?LBE4:
?LBE_handleDeviceAppearanceAccessRequest:
	leavel	#8
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_gattGapServerHandleGattManagerAccessInd:
	enterl	#2
?LBB_gattGapServerHandleGattManagerAccessInd:
	ld	X,@$XAP_AH
	cmp	AH,#H'0000
	beq	?L26
	ld	AH,@(H'0001,X)
	cmp	AH,#H'0003
	beq	?L29
	cmp	AH,#(H'0001+H'0003)
	bcc	?L33
	cmp	AH,#H'0001
	beq	?L28
	bra	(?L26)
?L33:
	cmp	AH,#H'0005
	beq	?L30
	bra	(?L26)
?L28:
	ld	AH,@$XAP_UXL
	bsr	_handleGapServiceAccessRequest
	bra	(?L25)
?L29:
	ld	AH,@$XAP_UXL
	bsr	_handleDeviceNameAccessRequest
	bra	(?L25)
?L30:
	ld	AH,@$XAP_UXL
	bsr	_handleDeviceAppearanceAccessRequest
	bra	(?L25)
?L26:
	ld	AL,#H'0000
?L25:
?LBE_gattGapServerHandleGattManagerAccessInd:
	leavel	#2
$_GattGapServerReadDeviceNameResponse:
	enterl	#6
?LBB_GattGapServerReadDeviceNameResponse:
	ld	X,@$XAP_AL
?LBB5:
	ld	AL,#H'0000
	st	AL,@H'fff8
	cmp	X,#H'0000
	beq	?L38
	cmp	AH,#H'0000
	beq	?L38
	tst	@(H'0006,Y)
	bne	?L39
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	bra	(?L42)
?L39:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,Y)
?L42:
	ld	AL,@$XAP_UXL
	bsr	$_GattManagerServerAccessResponse
	cmp	AL,#H'0000
	beq	?L41
	ld	AL,#H'0000
	bra	(?L37)
?L41:
	ld	AL,#H'0004
	bra	(?L37)
?L38:
	ld	AL,#H'0002
?L37:
?LBE5:
?LBE_GattGapServerReadDeviceNameResponse:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_GattGapServerReadAppearanceResponse:
	enterl	#6
?LBB_GattGapServerReadAppearanceResponse:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L44
	cmp	AH,#H'0000
	beq	?L44
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UXL
	bsr	$_GattManagerServerAccessResponse
	cmp	AL,#H'0000
	beq	?L45
	ld	AL,#H'0000
	bra	(?L43)
?L45:
	ld	AL,#H'0004
	bra	(?L43)
?L44:
	ld	AL,#H'0002
?L43:
?LBE_GattGapServerReadAppearanceResponse:
	leavel	#6
	ENDMOD

;# Function pattern *movqi2 used[0] = 40 used[1] = 5 used[3] = 2 total = 47
;# Function pattern *movqi3 used[0] = 58 total = 58
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern jump used[0] = 21 total = 21
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern movstrqi+3 used[0] = 23 used[1] = 1 total = 24
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 3 total = 3
	MODULE	gatt_gap_server_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattGapServerInit:
	enterl	#9
?LBB_GattGapServerInit:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
	cmp	AH,#H'0000
	beq	?L2
	ld	AH,#hwrd($_gattGapServerMsgHandler)
	ld	AL,#lwrd($_gattGapServerMsgHandler)
?LBB3:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_gattGapServerSetGapServerTask
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_gattGapServerSetClientTask
	ld	AL,@(H'0005,Y)
	bsr	$_gattGapServerGetGapServerTask
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_GattManagerRegisterServer
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0000
	bra	(?L1)
?L3:
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0002
?L1:
?LBE2:
?LBE_GattGapServerInit:
	leavel	#9
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 5 used[1] = 4 total = 9
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	gatt_gap_server_api
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattGapServerSendReadDeviceNameInd:
	enterl	#8
?LBB_gattGapServerSendReadDeviceNameInd:
	ld	X,@$XAP_AL
?LBB2:
	tst	@(H'0002,X)
	beq	?L2
?LBB3:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'6420
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L1)
?L2:
?LBE3:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_gattGapServerSendReadDeviceNameInd:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_gattGapServerSendReadAppearanceInd:
	enterl	#8
?LBB_gattGapServerSendReadAppearanceInd:
	ld	X,@$XAP_AL
?LBB4:
	tst	@(H'0002,X)
	beq	?L4
?LBB5:
	ld	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'6421
	bsr	$_MessageSend
	ld	AL,#H'0001
	bra	(?L3)
?L4:
?LBE5:
	ld	AL,#H'0000
?L3:
?LBE4:
?LBE_gattGapServerSendReadAppearanceInd:
	leavel	#8
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 11 total = 11
;# Function pattern *movqi3 used[0] = 11 total = 11
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[1] = 2 total = 2
	MODULE	gatt_gap_server_msg_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattGapServerMsgHandler:
	enterl	#2
?LBB_gattGapServerMsgHandler:
	ld	X,@(H'0002,Y)
	cmp	AH,#H'6401
	bne	?L1
	ld	AH,@$XAP_UXL
	bsr	$_gattGapServerHandleGattManagerAccessInd
?L1:
?LBE_gattGapServerMsgHandler:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	gatt_gap_server_private
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattGapServerSetGapServerTask:
	enterl	#2
?LBB_gattGapServerSetGapServerTask:
	ld	X,@$XAP_AL
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	cmp	X,#H'0000
	beq	?L2
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_gattGapServerSetGapServerTask:
	leavel	#2
$_gattGapServerGetGapServerTask:
; leaf function with empty stack frame
?LBB_gattGapServerGetGapServerTask:
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0000
?L3:
?LBE_gattGapServerGetGapServerTask:
	rts
$_gattGapServerSetClientTask:
	enterl	#2
?LBB_gattGapServerSetClientTask:
	ld	X,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L6
	st	AH,@(H'0002,X)
	ld	AL,#H'0001
	bra	(?L5)
?L6:
	ld	AL,#H'0000
?L5:
?LBE_gattGapServerSetClientTask:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 3 total = 3
	MODULE	csr_multi_channel_gain
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_system_gain_from_master:
	enterl	#2
?LBB_system_gain_from_master:
?LBB2:
	asl	#H'0010
	asr	#H'0010
	sdiv	#H'00B4
	ld	X,@$XAP_AL
	add	X,#H'000F
	ld	AH,@$XAP_UXL
	xor	AH,#-H'0001
	asr	#H'000F
	and	X,@$XAP_AH
?LBE2:
	ld	AL,@$XAP_UXL
?LBE_system_gain_from_master:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_get_i2s_chan:
	enterl	#2
?LBB_get_i2s_chan:
?LBB3:
	add	AL,@$XAP_AL
	ld	X,@$_config
	add	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0002
	and	AH,#H'0003
	ld	AL,@(0,X)
	and	AL,#H'0003
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	beq	?L11
	cmp	AL,#H'0001
	bne	?L7
	ld	AL,#H'0001
	bra	(?L3)
?L4:
	cmp	AH,#H'0001
	bne	?L7
	cmp	AL,#H'0000
	bne	?L9
	ld	AL,#H'0002
	bra	(?L3)
?L9:
	cmp	AL,#H'0001
	bne	?L7
	ld	AL,#H'0003
	bra	(?L3)
?L7:
	bsr	$_Panic
?L11:
	ld	AL,#H'0000
?L3:
?LBE3:
?LBE_get_i2s_chan:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_get_trim:
	enterl	#2
?LBB_get_trim:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB4:
	ld	X,@$XAP_AL
	add	X,@$XAP_AL
	add	X,@$_config
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	tst	@H'fff8
	beq	?L16
	cmp	AH,#H'0002
	bne	?L16
	ld	AL,#H'0000
	bra	(?L15)
?L16:
	ld	X,@H'fff9
	add	X,@H'fff9
	add	X,@$_config
	ld	AL,@(H'0001,X)
?L15:
?LBE4:
?LBE_get_trim:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_get_all_trims:
	enterl	#3
?LBB_get_all_trims:
	st	AH,@(0,Y)
	cmp	AL,#H'0000
	bne	?L19
	ld	AL,#H'0000
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
	ld	AL,#H'0002
	ld	AH,@(0,Y)
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0005,X)
	ld	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0006,X)
	ld	AL,#H'0004
	ld	AH,@(0,Y)
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0007,X)
	bra	(?L18)
?L19:
	cmp	AL,#H'0001
	bne	?L18
	ld	AL,#H'0005
	ld	AH,@(0,Y)
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'0006
	ld	AH,@(0,Y)
	bsr	_get_trim
	ld	X,@(H'0003,Y)
	st	AL,@(H'0004,X)
?L18:
?LBE_get_all_trims:
	leavel	#3
$_CsrMultiChanGainGetDigital:
	enterl	#7
?LBB_CsrMultiChanGainGetDigital:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0007,Y)
?LBB5:
	tst	@$_config
	beq	?L30
	ld	AH,@(H'0003,Y)
	cmp	AH,#(H'0001+H'0001)
	bcc	?L30
	tst	@(H'0008,Y)
	beq	?L30
	ld	X,@(H'0008,Y)
	st	AL,@(H'0002,X)
	ld	X,@$_config
	add	X,@(H'0003,Y)
	ld	AL,@(H'000E,X)
	cmp	AL,#H'0001
	beq	?L28
	cmp	AL,#H'0001
	bcs	?L27
	cmp	AL,#H'0002
	beq	?L29
	bra	(?L30)
?L27:
	ld	AL,@(H'0004,Y)
	bsr	_system_gain_from_master
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bra	(?L33)
?L28:
	ld	X,@$_config
	ld	AL,@(H'0010,X)
	bsr	_system_gain_from_master
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	AH,@(H'0004,Y)
	st	AH,@(H'0001,X)
	bra	(?L32)
?L29:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	ld	AH,@(H'0004,Y)
	bsr	$_CodecCalcHybridValues
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0008,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0001,Y)
	st	AL,@(H'0001,X)
?L32:
	st	X,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
?L33:
	bsr	_get_all_trims
	bra	(?L23)
?L30:
	bsr	$_Panic
?L23:
?LBE5:
?LBE_CsrMultiChanGainGetDigital:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_CsrMultiChanGainGetDigitalOnly:
	enterl	#5
?LBB_CsrMultiChanGainGetDigitalOnly:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	tst	@$_config
	beq	?L39
	cmp	AL,#(H'0001+H'0001)
	bcc	?L39
	tst	@(H'0006,Y)
	bne	?L38
?L39:
	bsr	$_Panic
	bra	(?L37)
?L38:
	ld	AL,@(H'0002,Y)
	bsr	_system_gain_from_master
	ld	X,@(H'0006,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	st	X,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	_get_all_trims
?L37:
?LBE_CsrMultiChanGainGetDigitalOnly:
	leavel	#5
_set_hardware_gain:
	enterl	#6
?LBB_set_hardware_gain:
	st	AL,@H'fff8
	st	AH,@(H'0002,Y)
?LBB6:
	ld	X,@$XAP_AL
	add	X,@$XAP_AL
	add	X,@$_config
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0001
	beq	?L42
	cmp	AH,#H'0002
	beq	?L43
	bra	(?L40)
?L42:
?LBB7:
	ld	AL,@H'fff8
	bsr	$_csrMultiChanGetSink
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	bsr	_system_gain_from_master
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0303
	bsr	$_SinkConfigure
	bsr	$_PanicNull
?LBE7:
	bra	(?L40)
?L43:
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0006,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	bsr	_get_i2s_chan
	ld	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_CsrSetVolumeI2SChannel
?L40:
?LBE6:
?LBE_set_hardware_gain:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
_set_all_hardware_gains:
	enterl	#4
?LBB_set_all_hardware_gains:
	st	AH,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L49
	tst	@(H'0004,Y)
	beq	?L50
	tst	@(H'0005,Y)
	beq	?L52
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	bra	(?L51)
?L52:
	ld	X,@$_config
	ld	AL,@(H'0001,X)
	bra	(?L51)
?L50:
	ld	AL,#H'0000
?L51:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	bsr	_set_hardware_gain
	tst	@(H'0004,Y)
	beq	?L54
	tst	@(H'0005,Y)
	beq	?L56
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	bra	(?L55)
?L56:
	ld	X,@$_config
	ld	AL,@(H'0003,X)
	bra	(?L55)
?L54:
	ld	AL,#H'0000
?L55:
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	_set_hardware_gain
	tst	@(H'0004,Y)
	beq	?L58
	tst	@(H'0005,Y)
	beq	?L60
	ld	X,@(H'0005,Y)
	bra	(?L80)
?L60:
	ld	X,@$_config
?L80:
	ld	AL,@(H'0005,X)
	bra	(?L59)
?L58:
	ld	AL,#H'0000
?L59:
	st	AL,@(0,Y)
	ld	AL,#H'0002
	ld	AH,@(H'0001,Y)
	bsr	_set_hardware_gain
	tst	@(H'0004,Y)
	beq	?L62
	tst	@(H'0005,Y)
	beq	?L64
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0006,X)
	bra	(?L63)
?L64:
	ld	X,@$_config
	ld	AL,@(H'0007,X)
	bra	(?L63)
?L62:
	ld	AL,#H'0000
?L63:
	st	AL,@(0,Y)
	ld	AL,#H'0003
	ld	AH,@(H'0001,Y)
	bsr	_set_hardware_gain
	tst	@(H'0004,Y)
	beq	?L66
	tst	@(H'0005,Y)
	beq	?L68
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0007,X)
	bra	(?L67)
?L68:
	ld	X,@$_config
	ld	AL,@(H'0009,X)
	bra	(?L67)
?L66:
	ld	AL,#H'0000
?L67:
	st	AL,@(0,Y)
	ld	AL,#H'0004
	bra	(?L81)
?L49:
	cmp	AL,#H'0001
	bne	?L48
	tst	@(H'0004,Y)
	beq	?L72
	tst	@(H'0005,Y)
	beq	?L74
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0003,X)
	bra	(?L73)
?L74:
	ld	X,@$_config
	ld	AL,@(H'000B,X)
	bra	(?L73)
?L72:
	ld	AL,#H'0000
?L73:
	st	AL,@(0,Y)
	ld	AL,#H'0005
	ld	AH,@(H'0001,Y)
	bsr	_set_hardware_gain
	tst	@(H'0004,Y)
	beq	?L76
	tst	@(H'0005,Y)
	beq	?L78
	ld	X,@(H'0005,Y)
	ld	AL,@(H'0004,X)
	bra	(?L77)
?L78:
	ld	X,@$_config
	ld	AL,@(H'000D,X)
	bra	(?L77)
?L76:
	ld	AL,#H'0000
?L77:
	st	AL,@(0,Y)
	ld	AL,#H'0006
?L81:
	ld	AH,@(H'0001,Y)
	bsr	_set_hardware_gain
?L48:
?LBE_set_all_hardware_gains:
	leavel	#4
$_CsrMultiChanGainSetHardware:
	enterl	#8
?LBB_CsrMultiChanGainSetHardware:
	st	AL,@(H'0004,Y)
?LBB8:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	tst	@$_config
	beq	?L91
	ld	AL,@(H'0004,Y)
	cmp	AL,#(H'0001+H'0001)
	bcc	?L91
	ld	X,@$_config
	add	X,@(H'0004,Y)
	ld	AL,@(H'000E,X)
	cmp	AL,#H'0001
	beq	?L89
	cmp	AL,#H'0001
	bcs	?L87
	cmp	AL,#H'0002
	beq	?L90
	bra	(?L91)
?L87:
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	cmp	AH,#-H'1C20
	beq	?L86
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
	bra	(?L86)
?L89:
	ld	X,@$_config
	ld	AH,@(H'0010,X)
	bra	(?L86)
?L90:
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	bsr	$_CodecCalcHybridValues
	ld	AL,@(H'0003,Y)
	bsr	$_VolumeConvertDACGainToDB
	ld	AH,@$XAP_AL
	bra	(?L86)
?L91:
	bsr	$_Panic
	bra	(?L83)
?L86:
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	bsr	_set_all_hardware_gains
?L83:
?LBE8:
?LBE_CsrMultiChanGainSetHardware:
	leavel	#8
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
$_CsrMultiChanGainSetHardwareOnly:
	enterl	#4
?LBB_CsrMultiChanGainSetHardwareOnly:
	ld	X,@$XAP_AL
?LBB9:
	ld	AL,#H'0000
	cmp	AH,#-H'1C20
	beq	?L98
	ld	AL,#H'0001
?L98:
	tst	@$_config
	beq	?L100
	cmp	X,#H'0001
	bcz	?L99
?L100:
	bsr	$_Panic
	bra	(?L97)
?L99:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UXL
	bsr	_set_all_hardware_gains
?L97:
?LBE9:
?LBE_CsrMultiChanGainSetHardwareOnly:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
$_CsrMultiChanGainGetType:
	enterl	#2
?LBB_CsrMultiChanGainGetType:
	tst	@$_config
	beq	?L105
	cmp	AL,#H'0001
	bcz	?L104
?L105:
	bsr	$_Panic
	ld	AL,#H'0003
	bra	(?L103)
?L104:
	ld	X,@$_config
	add	X,@$XAP_AL
	ld	AL,@(H'000E,X)
?L103:
?LBE_CsrMultiChanGainGetType:
	leavel	#2
$_csrMultiChanGainMuteHardware:
	enterl	#5
?LBB_csrMultiChanGainMuteHardware:
	st	AL,@(H'0002,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#-H'1C20
	bsr	_set_hardware_gain
	ld	AL,@(H'0002,Y)
	bsr	$_csrMultiChanGetSink
	ld	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	ld	AH,#H'0700
	bsr	$_SinkConfigure
	bsr	$_PanicNull
?LBE_csrMultiChanGainMuteHardware:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 58 used[1] = 25 total = 83
;# Function pattern *movqi3 used[0] = 109 total = 109
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[3] = 1 total = 1
;# Function pattern *addqi0 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 9 used[2] = 4 total = 13
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *divqi3_const used[0] = 1 total = 1
;# Function pattern *extendqihi2 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern one_cmplqi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2_1 used[0] = 1 total = 1
;# Function pattern jump used[0] = 34 total = 34
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 20 total = 20
;# Function pattern movstrqi+3 used[0] = 5 used[1] = 22 total = 27
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 18 total = 18
	MODULE	csr_multi_channel_plugin
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.SEG	VAR
$_config:
	DS	1
	.CODE
$_CsrMultiChanInitialisePlugin:
	enterl	#2
?LBB_CsrMultiChanInitialisePlugin:
	cmp	AL,#H'0000
	beq	?L4
	st	AL,@$_config
	ld	AL,#H'0000
	st	AL,@_state+H'0001
	st	AL,@_state
	st	AL,@_state+H'0003
	st	AL,@_state+H'0002
	bsr	_i2sHardwareInitialise
	cmp	AL,#H'0000
	bne	?L3
?L4:
	ld	AL,#H'0000
	bra	(?L1)
?L3:
	ld	AL,#H'0001
?L1:
?LBE_CsrMultiChanInitialisePlugin:
	leavel	#2
$_CsrMultiChanConnectDsp:
	enterl	#6
?LBB_CsrMultiChanConnectDsp:
	st	AL,@(H'0001,Y)
?LBB2:
	tst	@$_config
	beq	?L19
	ld	AH,@_state
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L19
	ld	X,@(H'0001,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L20
	cmp	AL,#H'0000
	beq	?L19
?L20:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
?L15:
?LBB3:
	ld	AL,@(H'0002,Y)
	bsr	_getAudioHardwareType
	cmp	AL,#-H'0001
	beq	?L11
	ld	AL,@(H'0002,Y)
	bsr	_getDspPort
	cmp	AL,#-H'0001
	beq	?L11
	bsr	$_StreamKalimbaSink
	bsr	$_StreamSourceFromSink
	ld	X,@(H'0003,Y)
	add	X,@(H'0002,Y)
	st	AL,@(0,X)
?L11:
	ld	AL,@(H'0002,Y)
?LBE3:
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0006
	bcz	?L15
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	bsr	_connect
	cmp	AL,#H'0000
	bne	?L16
	ld	AL,@(H'0003,Y)
	bsr	$_free
?L19:
	ld	AL,#H'0000
	bra	(?L5)
?L16:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#(_state+H'0001)
	ld	AH,@(H'0001,Y)
	bsr	$_memcpy
	ld	AL,@_state
	or	AL,#-H'8000
	st	AL,@_state
	ld	AL,@(H'0003,Y)
	bsr	$_free
	ld	AL,#H'0001
?L5:
?LBE2:
?LBE_CsrMultiChanConnectDsp:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
$_CsrMultiChanConnectStereoSource:
	enterl	#7
?LBB_CsrMultiChanConnectStereoSource:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	tst	@$_config
	beq	?L29
	ld	AH,@_state
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L29
	tst	@(H'0001,Y)
	bne	?L27
	tst	@(H'0002,Y)
	beq	?L29
?L27:
	ld	X,@(H'0007,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L30
	cmp	AL,#H'0000
	beq	?L29
?L30:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0001,Y)
	ld	X,@(H'0003,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0001,X)
	ld	AL,@$XAP_UXL
	ld	AH,@(H'0007,Y)
	bsr	_connect
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_free
	tst	@(H'0004,Y)
	bne	?L28
?L29:
	ld	AL,#H'0000
	bra	(?L24)
?L28:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#(_state+H'0001)
	ld	AH,@(H'0007,Y)
	bsr	$_memcpy
	ld	AL,@_state
	or	AL,#-H'8000
	st	AL,@_state
	ld	AL,#H'0001
?L24:
?LBE4:
?LBE_CsrMultiChanConnectStereoSource:
	leavel	#7
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
$_CsrMultiChanConnectSourceToMultiChannelOutput:
	enterl	#7
?LBB_CsrMultiChanConnectSourceToMultiChannelOutput:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	tst	@$_config
	beq	?L35
	ld	AH,@_state
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L35
	tst	@(H'0001,Y)
	beq	?L35
	ld	X,@(H'0007,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	cmp	AH,#H'0000
	bne	?L36
	cmp	AL,#H'0000
	beq	?L35
?L36:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	X,@(H'0003,Y)
	add	X,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	bsr	_connect
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_free
	tst	@(H'0004,Y)
	bne	?L34
?L35:
	ld	AL,#H'0000
	bra	(?L31)
?L34:
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#(_state+H'0001)
	ld	AH,@(H'0007,Y)
	bsr	$_memcpy
	ld	AL,@_state
	or	AL,#-H'8000
	st	AL,@_state
	ld	AL,#H'0001
?L31:
?LBE5:
?LBE_CsrMultiChanConnectSourceToMultiChannelOutput:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
$_CsrMultiChanDisconnect:
	enterl	#5
?LBB_CsrMultiChanDisconnect:
?LBB6:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	tst	@$_config
	beq	?L37
	ld	AH,@_state
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L51
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L46:
?LBB7:
	ld	AL,@(0,Y)
	bsr	$_csrMultiChanGetSink
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L42
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	asl	@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@_state+H'0003
	lsr	#H'0009
	ld	AL,@$XAP_UXL
	and	AL,@$XAP_AH
	cmp	AL,@$XAP_UXL
	beq	?L42
	ld	AL,@(0,Y)
	bsr	$_csrMultiChanGainMuteHardware
	ld	AL,#H'0000
	ld	AH,@(H'0002,Y)
	bsr	$_StreamDisconnect
	ld	AL,@(H'0002,Y)
	bsr	$_SinkClose
	bsr	$_PanicNull
?L42:
	ld	AL,@(0,Y)
?LBE7:
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0006
	bcz	?L46
	tst	@(H'0001,Y)
	bne	?L47
?L51:
	ld	AL,#H'0000
	bra	(?L37)
?L47:
	ld	AH,@_state
	and	AH,#H'7FFF
	st	AH,@_state
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L48
	bsr	$_CsrShutdownI2SDevice
	ld	AL,@_state
	and	AL,#-H'4001
	st	AL,@_state
?L48:
	ld	AL,#H'0001
?L37:
?LBE6:
?LBE_CsrMultiChanDisconnect:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
$_CsrMultiChanGetAudioSink:
	enterl	#3
?LBB_CsrMultiChanGetAudioSink:
?LBB8:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L62:
?LBB9:
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,#H'0001
	asl	@(0,Y)
	ld	X,@$XAP_AL
	ld	AH,@_state+H'0003
	lsr	#H'0009
	ld	AL,@$XAP_UXL
	and	AL,@$XAP_AH
	cmp	AL,@$XAP_UXL
	bne	?L59
	ld	AL,#H'0001
	st	AL,@H'fff8
?L59:
	tst	@H'fff8
	bne	?L57
	ld	AL,@(0,Y)
	bsr	$_csrMultiChanGetSink
	cmp	AL,#H'0000
	bne	?L54
?L57:
	ld	AL,@(0,Y)
?LBE9:
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'0006
	bcz	?L62
	ld	AL,#H'0000
?L54:
?LBE8:
?LBE_CsrMultiChanGetAudioSink:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
$_CsrMultiChanConfigRequiresI2s:
	enterl	#2
?LBB_CsrMultiChanConfigRequiresI2s:
?LBB10:
	tst	@$_config
	bne	?L68
	bra	(?L78)
?L77:
	ld	AL,#H'0001
	bra	(?L67)
?L68:
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@$_config
	st	AL,@H'fff9
?L74:
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@H'fff9
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0002
	beq	?L77
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0006
	bcz	?L74
?L78:
	ld	AL,#H'0000
?L67:
?LBE10:
?LBE_CsrMultiChanConfigRequiresI2s:
	leavel	#2
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
$_CsrMultiChanI2sActive:
; leaf function with empty stack frame
?LBB_CsrMultiChanI2sActive:
	tst	@$_config
	bne	?L82
	ld	AL,#H'0000
	bra	(?L81)
?L82:
	ld	AH,@_state
	lsr	#H'000E
	ld	AL,@$XAP_AH
	and	AL,#H'0001
?L81:
?LBE_CsrMultiChanI2sActive:
	rts
$_CsrMultiChannelGetSampleRate:
	enterl	#3
?LBB_CsrMultiChannelGetSampleRate:
	st	AL,@(0,Y)
	bsr	_i2sOutputEnabled
	cmp	AL,#H'0000
	beq	?L84
	ld	X,@(0,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0006
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L84
	ld	AL,@(H'0001,X)
	bsr	$_CsrI2SGetOutputResamplingFrequencyForI2s
	ld	AH,#H'0000
	bra	(?L83)
?L84:
	ld	X,@(0,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
?L83:
?LBE_CsrMultiChannelGetSampleRate:
	leavel	#3
$_CsrMultiChanGetOutputType:
	enterl	#2
?LBB_CsrMultiChanGetOutputType:
	tst	@$_config
	beq	?L94
	cmp	AL,#H'0007
	beq	?L94
	ld	X,@$XAP_AL
	add	X,@$XAP_AL
	add	X,@$_config
	ld	AH,@(0,X)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	cmp	AL,#(H'0001+H'0004)
	bcc	?L94
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE95,X)
	brxl
	.SEG	CONST
?JTBASE95:
	.CODE
?L95:
	.SEG	CONST
	dc	lwrd(?L94-?L95)
	dc	lwrd(?L89-?L95)
	dc	lwrd(?L90-?L95)
	dc	lwrd(?L94-?L95)
	dc	lwrd(?L91-?L95)
	.CODE
?L89:
	ld	AL,#H'0001
	bra	(?L85)
?L90:
	ld	AL,#H'0002
	bra	(?L85)
?L91:
	ld	AL,#H'0003
	bra	(?L85)
?L94:
	ld	AL,#H'0000
?L85:
?LBE_CsrMultiChanGetOutputType:
	leavel	#2
$_CsrMultiChanGetDspOutputTypesMsg:
	enterl	#5
?LBB_CsrMultiChanGetDspOutputTypesMsg:
	st	AL,@(0,Y)
?LBB11:
	tst	@$_config
	beq	?L99
	cmp	AL,#H'0000
	bne	?L98
?L99:
	ld	AL,#H'0000
	bra	(?L97)
?L98:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L104:
	ld	X,@(H'0001,Y)
	add	X,@(0,Y)
	st	X,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_CsrMultiChanGetOutputType
	ld	X,@(H'0002,Y)
	st	AL,@(0,X)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0006
	bcz	?L104
	ld	AL,#H'0001
?L97:
?LBE11:
?LBE_CsrMultiChanGetDspOutputTypesMsg:
	leavel	#5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
_connect:
	enterl	#9
?LBB_connect:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,@$XAP_AH
	bsr	$_CsrMultiChannelGetSampleRate
	ld	X,@(H'0003,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,@$XAP_UXL
	bsr	_i2sOutputEnabled
	cmp	AL,#H'0000
	beq	?L109
	ld	AH,@_state
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	bne	?L109
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	bsr	$_CsrInitialiseI2SDevice
	ld	AL,@_state
	or	AL,#H'4000
	st	AL,@_state
?L109:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L120:
	ld	X,#H'0000
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@(H'0004,Y)
	st	AL,@H'fff9
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@H'fff9
	and	AL,@$XAP_AH
	cmp	AL,@H'fff9
	bne	?L115
	ld	AL,#H'0001
	st	AL,@H'fff8
?L115:
	ld	X,@(H'0002,Y)
	add	X,@(H'0004,Y)
	tst	@(0,X)
	beq	?L113
	tst	@H'fff8
	bne	?L113
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	bsr	_configureSink
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L113
	tst	@(H'0006,Y)
	beq	?L119
	ld	AL,@(H'0006,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_SinkSynchronise
	bsr	$_PanicNull
?L119:
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
?L113:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0006
	bcz	?L120
	tst	@(H'0006,Y)
	bne	?L121
	ld	AL,#H'0000
	bra	(?L108)
?L121:
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L136:
	ld	X,#H'0000
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@(H'0004,Y)
	st	AL,@H'fff9
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@H'fff9
	and	AL,@$XAP_AH
	cmp	AL,@H'fff9
	bne	?L126
	ld	AL,#H'0001
	st	AL,@H'fff8
?L126:
	ld	X,@(H'0002,Y)
	add	X,@(H'0004,Y)
	tst	@(0,X)
	beq	?L124
	tst	@H'fff8
	bne	?L124
	ld	AL,@(H'0004,Y)
	bsr	$_csrMultiChanGetSink
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L124
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0002,X)
	lsr	#H'0007
	and	AH,#H'0003
	cmp	AH,#H'0001
	beq	?L131
	cmp	AH,#H'0001
	bcs	?L134
	cmp	AH,#H'0002
	beq	?L132
	bra	(?L134)
?L131:
	ld	X,@(H'0002,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	bsr	$_TransformAdpcmDecode
	bsr	$_TransformStart
	bra	(?L141)
?L132:
	ld	X,@(H'0002,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	bsr	$_StreamConnectAndDispose
	bra	(?L141)
?L134:
	ld	X,@(H'0002,Y)
	add	X,@(H'0004,Y)
	ld	AL,@(0,X)
	ld	AH,@(H'0005,Y)
	bsr	$_StreamConnect
?L141:
	bsr	$_PanicNull
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0700
	bsr	$_SinkConfigure
	bsr	$_PanicNull
?L124:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0006
	bcz	?L136
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,#(_state+H'0001)
	ld	AH,@(H'0003,Y)
	bsr	$_memcpy
	ld	AL,@_state
	or	AL,#-H'8000
	st	AL,@_state
	ld	AL,#H'0001
?L108:
?LBE12:
?LBE_connect:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
_i2sHardwareInitialise:
	enterl	#3
?LBB_i2sHardwareInitialise:
?LBB13:
	ld	AL,#H'0000
	st	AL,@H'fff8
?L156:
	ld	AL,@H'fff8
	add	AL,@H'fff8
	ld	X,@$_config
	add	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0002
	bne	?L152
	ld	AH,@(0,X)
	lsr	#H'0002
	and	AH,#H'0003
	cmp	AH,#H'0001
	bne	?L152
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0004
	ld	AH,#H'0004
	bsr	$_PioSetFunction
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,#H'0005
	ld	AH,#H'0005
	bsr	$_PioSetFunction
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,#H'0006
	ld	AH,#H'0006
	bsr	$_PioSetFunction
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,#H'0007
	ld	AH,#H'0007
	bsr	$_PioSetFunction
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,#H'0001
	st	AL,@(0,Y)
?L155:
	ld	AL,@(0,Y)
	bra	(?L149)
?L152:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0006
	bcz	?L156
	ld	AL,#H'0001
?L149:
?LBE13:
?LBE_i2sHardwareInitialise:
	leavel	#3
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
_i2sOutputEnabled:
	enterl	#2
?LBB_i2sOutputEnabled:
	st	AL,@H'fffa
?LBB14:
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	X,@$_config
	st	X,@H'fff9
?L168:
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@H'fff9
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0002
	bne	?L165
	ld	AL,#H'0001
	asl	@H'fff8
	st	AL,@H'fffb
	ld	X,@H'fffa
	ld	AH,@(H'0002,X)
	lsr	#H'0009
	ld	AL,@H'fffb
	and	AL,@$XAP_AH
	cmp	AL,@H'fffb
	beq	?L165
	ld	AL,#H'0001
	bra	(?L162)
?L165:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#H'0006
	bcz	?L168
	ld	AL,#H'0000
?L162:
?LBE14:
?LBE_i2sOutputEnabled:
	leavel	#2
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
_configureSink:
	enterl	#7
?LBB_configureSink:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB15:
	bsr	$_csrMultiChanGetSink
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L175
	ld	AL,#H'0000
	bra	(?L174)
?L175:
	ld	X,@(H'0002,Y)
	add	X,@$XAP_UXL
	add	X,@$_config
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0002
	beq	?L177
	cmp	AH,#(H'0001+H'0002)
	bcc	?L182
	cmp	AH,#H'0001
	beq	?L179
	bra	(?L180)
?L182:
	cmp	AH,#H'0004
	beq	?L178
	bra	(?L180)
?L177:
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_CsrI2SAudioOutputConnectConfigureSink
	bra	(?L176)
?L178:
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0500
	bra	(?L183)
?L179:
	ld	X,@(H'0003,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0301
?L183:
	bsr	$_SinkConfigure
	bsr	$_PanicNull
	bra	(?L176)
?L180:
	bsr	$_Panic
?L176:
	ld	AL,@(H'0002,Y)
	bsr	$_csrMultiChanGainMuteHardware
	ld	AL,@(H'0004,Y)
?L174:
?LBE15:
?LBE_configureSink:
	leavel	#7
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
$_csrMultiChanGetSink:
	enterl	#6
?LBB_csrMultiChanGetSink:
	st	AL,@(H'0001,Y)
	bsr	_getAudioHardwareType
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	_getAudioHardwareInstance
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_getAudioHardwareChannel
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_StreamAudioSink
?LBE_csrMultiChanGetSink:
	leavel	#6
_getDspPort:
	enterl	#2
?LBB_getDspPort:
	cmp	AL,#(H'0001+H'0006)
	bcc	?L197
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE198,X)
	brxl
	.SEG	CONST
?JTBASE198:
	.CODE
?L198:
	.SEG	CONST
	dc	lwrd(?L190-?L198)
	dc	lwrd(?L191-?L198)
	dc	lwrd(?L192-?L198)
	dc	lwrd(?L193-?L198)
	dc	lwrd(?L196-?L198)
	dc	lwrd(?L194-?L198)
	dc	lwrd(?L195-?L198)
	.CODE
?L190:
	ld	AL,#H'0005
	bra	(?L188)
?L191:
	ld	AL,#H'0006
	bra	(?L188)
?L192:
	ld	AL,#H'0007
	bra	(?L188)
?L193:
	ld	AL,#H'0008
	bra	(?L188)
?L194:
	ld	AL,#H'0009
	bra	(?L188)
?L195:
	ld	AL,#H'000A
	bra	(?L188)
?L196:
	ld	AL,#H'0004
	bra	(?L188)
?L197:
	ld	AL,#-H'0001
?L188:
?LBE_getDspPort:
	leavel	#2
_getAudioHardwareType:
	enterl	#2
?LBB_getAudioHardwareType:
	add	AL,@$XAP_AL
	ld	X,@$_config
	add	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0001
	beq	?L201
	cmp	AH,#H'0001
	bcs	?L205
	cmp	AH,#H'0002
	beq	?L202
	cmp	AH,#H'0004
	beq	?L203
	bra	(?L205)
?L201:
	ld	AL,#H'0003
	bra	(?L199)
?L202:
	ld	AL,#H'0001
	bra	(?L199)
?L203:
	ld	AL,#H'0002
	bra	(?L199)
?L205:
	ld	AL,#-H'0001
?L199:
?LBE_getAudioHardwareType:
	leavel	#2
_getAudioHardwareInstance:
	enterl	#2
?LBB_getAudioHardwareInstance:
	add	AL,@$XAP_AL
	ld	X,@$_config
	add	X,@$XAP_AL
	ld	AH,@(0,X)
	lsr	#H'0002
	and	AH,#H'0003
	cmp	AH,#H'0000
	beq	?L213
	cmp	AH,#H'0001
	beq	?L214
	bra	(?L215)
?L213:
	ld	AL,#H'0000
	bra	(?L211)
?L214:
	ld	AL,#H'0001
	bra	(?L211)
?L215:
	ld	AL,#-H'0001
?L211:
?LBE_getAudioHardwareInstance:
	leavel	#2
_getAudioHardwareChannel:
	enterl	#2
?LBB_getAudioHardwareChannel:
	st	AL,@H'fff8
	ld	X,@$XAP_AL
	add	X,@$XAP_AL
	add	X,@$_config
	ld	AH,@(0,X)
	lsr	#H'0004
	and	AH,#H'000F
	cmp	AH,#H'0001
	beq	?L232
	cmp	AH,#H'0001
	bcs	?L219
	cmp	AH,#H'0002
	beq	?L232
	cmp	AH,#H'0004
	bne	?L219
?L232:
	ld	X,@H'fff8
	add	X,@H'fff8
	add	X,@$_config
	ld	AL,@(0,X)
	and	AL,#H'0003
	cmp	AL,#H'0000
	beq	?L234
	cmp	AL,#H'0001
	beq	?L235
	bra	(?L219)
?L234:
	ld	AL,#H'0000
	bra	(?L218)
?L235:
	ld	AL,#H'0001
	bra	(?L218)
?L219:
	ld	AL,#-H'0001
?L218:
?LBE_getAudioHardwareChannel:
	leavel	#2
	.SEG	VAR
_state:
	DS	4
	ENDMOD

;# Function pattern *movqi2 used[0] = 99 used[1] = 47 total = 146
;# Function pattern *movqi3 used[0] = 156 total = 156
;# Function pattern *movqi8 used[0] = 13 total = 13
;# Function pattern *movhi used[2] = 8 used[3] = 4 total = 12
;# Function pattern *addqi2 used[0] = 23 used[2] = 12 total = 35
;# Function pattern *andqi3 used[0] = 22 total = 22
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *lshrqi3 used[0] = 23 total = 23
;# Function pattern *ashlqi3 used[0] = 5 total = 5
;# Function pattern *zero_extendqihi2_1 used[0] = 1 total = 1
;# Function pattern jump used[0] = 42 total = 42
;# Function pattern *call1 used[0] = 11 total = 11
;# Function pattern *call_value1 used[0] = 49 total = 49
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 24 used[1] = 21 total = 45
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 37 total = 37
;# Function pattern movstrqi+6 used[0] = 3 total = 3
	MODULE	gatt_client_destroy
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_GattClientDestroy:
	enterl	#4
?LBB_GattClientDestroy:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	tst	@(0,Y)
	bne	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,@(0,Y)
	bsr	$_GattManagerUnregisterClient
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L3:
	ld	AL,@(0,Y)
	bsr	$_MessageFlushTask
	ld	AL,@(H'0001,Y)
?L1:
?LBE2:
?LBE_GattClientDestroy:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 3 total = 6
;# Function pattern *movqi3 used[0] = 3 total = 3
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 1 total = 2
	MODULE	gatt_client_init
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_gattClientSendInitSuccessCfm:
	enterl	#8
?LBB_gattClientSendInitSuccessCfm:
	ld	X,@$XAP_AL
?LBB2:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'6600
	bsr	$_MessageSend
?LBE2:
?LBE_gattClientSendInitSuccessCfm:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_gattClientSendInitDiscoveryErrorCfm:
	enterl	#8
?LBB_gattClientSendInitDiscoveryErrorCfm:
	ld	X,@$XAP_AL
?LBB3:
	ld	AL,#H'0003
	st	AL,@(H'0001,Y)
	st	X,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,#H'0002
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0002,X)
	ld	AH,#H'6600
	bsr	$_MessageSend
?LBE3:
?LBE_gattClientSendInitDiscoveryErrorCfm:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
$_GattClientInit:
	enterl	#10
?LBB_GattClientInit:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB4:
	ld	AH,#H'0000
	st	AH,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L5
	tst	@(H'0006,Y)
	beq	?L5
	tst	@(H'000A,Y)
	bne	?L4
?L5:
	ld	AL,#H'0001
	bra	(?L3)
?L4:
	ld	X,@$XAP_UY
	add	X,#H'0001
	ld	AL,#H'0000
	st	AL,@(H'0001,X)
	st	AL,@(H'0001,Y)
	st	AL,@(H'0004,Y)
	st	AL,@(H'0003,Y)
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0006,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AH,#hwrd($_gattClientMsgHandler)
	ld	AL,#lwrd($_gattClientMsgHandler)
	ld	X,@(H'0006,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0002,X)
	ld	AH,#H'0000
	st	AH,@(H'0004,X)
	st	X,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,X)
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_GattManagerRegisterClient
	cmp	AL,#H'0000
	bne	?L6
	ld	AH,#H'0001
	st	AH,@(H'0007,Y)
	tst	@(H'000B,Y)
	beq	?L7
	ld	X,@(H'000B,Y)
	ld	AL,@(0,X)
	ld	X,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AL,@$XAP_UXL
	ld	X,@(H'000B,Y)
	ld	AH,@(0,X)
	bsr	$_gattClientSendInitSuccessCfm
	bra	(?L6)
?L7:
	ld	AL,@(H'0006,Y)
	bsr	$_discoverAllGattCharacteristics
?L6:
	tst	@(H'0007,Y)
	bne	?L9
	ld	AL,#H'0003
	bra	(?L3)
?L9:
	ld	AL,#H'0000
?L3:
?LBE4:
?LBE_GattClientInit:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi2 used[0] = 29 used[1] = 2 total = 31
;# Function pattern *movqi3 used[0] = 28 total = 28
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0 used[0] = 4 total = 4
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 used[1] = 4 total = 6
	MODULE	gatt_client_discovery
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_discoverySetError:
	enterl	#2
?LBB_discoverySetError:
	ld	X,@$XAP_AL
	ld	AL,#H'0001
	st	AL,@(H'0004,X)
?LBE_discoverySetError:
	leavel	#2
_discoveryClearError:
	enterl	#2
?LBB_discoveryClearError:
	ld	X,@$XAP_AL
	ld	AL,#H'0000
	st	AL,@(H'0004,X)
?LBE_discoveryClearError:
	leavel	#2
_nextAfterDiscoverCharacteristics:
	enterl	#2
?LBB_nextAfterDiscoverCharacteristics:
	ld	X,@$XAP_AL
	tst	@(H'0004,X)
	bne	?L8
	tst	@(H'0003,X)
	bne	?L6
?L8:
	ld	AH,#H'0000
	bsr	$_gattClientSendInitDiscoveryErrorCfm
	bra	(?L3)
?L6:
	bsr	$_discoverAllGattCharacteristicDescriptors
?L3:
?LBE_nextAfterDiscoverCharacteristics:
	leavel	#2
_processDiscoveredDescriptor:
	enterl	#4
?LBB_processDiscoveredDescriptor:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0001
	bne	?L9
	ld	AH,@(H'0003,X)
	ld	AL,@(H'0004,X)
	cmp	AH,#H'0000
	bne	?L9
	cmp	AL,#H'2902
	bne	?L9
	ld	AL,@(0,Y)
	bsr	_discoveryClearError
	ld	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	ld	AH,@(H'0001,X)
	bsr	$_writeGattClientConfigValue
?L9:
?LBE_processDiscoveredDescriptor:
	leavel	#4
_nextAfterDiscoverDescriptors:
	enterl	#2
?LBB_nextAfterDiscoverDescriptors:
	ld	X,@$XAP_AL
	tst	@(H'0004,X)
	beq	?L14
	ld	AH,@(H'0003,X)
	bsr	$_gattClientSendInitDiscoveryErrorCfm
?L14:
?LBE_nextAfterDiscoverDescriptors:
	leavel	#2
$_discoverAllGattCharacteristics:
	enterl	#2
?LBB_discoverAllGattCharacteristics:
	bsr	$_GattManagerDiscoverAllCharacteristics
?LBE_discoverAllGattCharacteristics:
	leavel	#2
$_handleDiscoverAllGattCharacteristicsResp:
	enterl	#4
?LBB_handleDiscoverAllGattCharacteristicsResp:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	tst	@(H'000E,X)
	bne	?L18
	ld	AL,@(H'0004,X)
	cmp	AL,#H'0001
	bne	?L21
	ld	AH,@(H'0005,X)
	ld	AL,@(H'0006,X)
	cmp	AH,#H'0000
	bne	?L21
	cmp	AL,#H'2A05
	bne	?L21
	ld	AL,@(H'0002,X)
	ld	X,@(0,Y)
	st	AL,@(H'0003,X)
	bra	(?L21)
?L18:
	ld	AL,@(0,Y)
	bsr	_discoverySetError
?L21:
	ld	X,@(H'0001,Y)
	tst	@(H'000D,X)
	bne	?L17
	ld	AL,@(0,Y)
	bsr	_nextAfterDiscoverCharacteristics
?L17:
?LBE_handleDiscoverAllGattCharacteristicsResp:
	leavel	#4
$_discoverAllGattCharacteristicDescriptors:
	enterl	#6
?LBB_discoverAllGattCharacteristicDescriptors:
	st	AL,@(H'0003,Y)
?LBB2:
	ld	AH,@$XAP_UY
	add	AH,#H'0001
	bsr	$_GattManagerGetClientData
	cmp	AL,#H'0000
	beq	?L26
	ld	AL,@(H'0003,Y)
	bsr	_discoverySetError
	ld	X,@(H'0003,Y)
	ld	AH,@(H'0003,X)
	add	AH,#H'0001
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL
	bsr	$_GattManagerDiscoverAllCharacteristicDescriptors
	bra	(?L25)
?L26:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_gattClientSendInitDiscoveryErrorCfm
?L25:
?LBE2:
?LBE_discoverAllGattCharacteristicDescriptors:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_handleDiscoverAllGattCharacteristicDescriptorsResp:
	enterl	#4
?LBB_handleDiscoverAllGattCharacteristicDescriptorsResp:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	X,@$XAP_AH
	tst	@(H'000C,X)
	bne	?L29
	bsr	_processDiscoveredDescriptor
?L29:
	ld	X,@(H'0001,Y)
	tst	@(H'000B,X)
	bne	?L28
	ld	AL,@(0,Y)
	bsr	_nextAfterDiscoverDescriptors
?L28:
?LBE_handleDiscoverAllGattCharacteristicDescriptorsResp:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 7 total = 26
;# Function pattern *movqi3 used[0] = 15 total = 15
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 2 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 13 total = 13
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 used[1] = 7 total = 8
;# Function pattern movstrqi+5 used[0] = 2 total = 2
;# Function pattern movstrqi+7 used[0] = 2 total = 2
	MODULE	gatt_client_msg_handler
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_sendServerChangedMsg:
	enterl	#8
?LBB_sendServerChangedMsg:
	st	AL,@H'fff8
	ld	X,@(H'0008,Y)
?LBB2:
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0003,Y)
	st	X,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	X,@H'fff8
	ld	AL,@(H'0002,X)
	ld	AH,#H'6601
	bsr	$_MessageSend
?LBE2:
?LBE_sendServerChangedMsg:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_handleGattIndication:
	enterl	#5
?LBB_handleGattIndication:
	st	AL,@H'fff8
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AH,#-H'0001
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	ld	X,@H'fff8
	cmp	AL,@(H'0003,X)
	bne	?L3
	ld	X,@(H'0002,Y)
	ld	AL,@(H'0002,X)
	cmp	AL,#H'0003
	bcz	?L4
	ld	AH,@(H'0003,X)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	or	AL,@(H'0004,X)
	st	AL,@H'fff9
	ld	AH,@(H'0005,X)
	lsr	#H'0008
	or	AH,@(H'0006,X)
?L4:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	X,@(H'0002,Y)
	ld	AH,@(0,X)
	bsr	_sendServerChangedMsg
	bra	(?L5)
?L3:
	bsr	$_Panic
?L5:
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_GattManagerIndicationResponse
?LBE3:
?LBE_handleGattIndication:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
_handleGattManagerMsg:
	enterl	#2
?LBB_handleGattManagerMsg:
	ld	X,@(H'0002,Y)
?LBB4:
	cmp	AH,#H'640A
	beq	?L11
	cmp	AH,#(H'0001+H'640A)
	bcc	?L16
	cmp	AH,#H'6404
	beq	?L10
	bra	(?L8)
?L16:
	cmp	AH,#H'640B
	beq	?L12
	cmp	AH,#H'6411
	beq	?L13
	bra	(?L8)
?L10:
	ld	AH,@$XAP_UXL
	bsr	_handleGattIndication
	bra	(?L8)
?L11:
	ld	AH,@$XAP_UXL
	bsr	$_handleDiscoverAllGattCharacteristicsResp
	bra	(?L8)
?L12:
	ld	AH,@$XAP_UXL
	bsr	$_handleDiscoverAllGattCharacteristicDescriptorsResp
	bra	(?L8)
?L13:
	ld	AH,@$XAP_UXL
	bsr	$_handleWriteValueResp
?L8:
?LBE4:
?LBE_handleGattManagerMsg:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_handleGattMsg:
; leaf function with empty stack frame
?LBB_handleGattMsg:
?LBE_handleGattMsg:
	rts
$_gattClientMsgHandler:
	enterl	#3
?LBB_gattClientMsgHandler:
	st	AL,@H'fff8
	ld	X,@(H'0003,Y)
	ld	AL,#-H'6400
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0014)
	bcc	?L23
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleGattManagerMsg
	bra	(?L22)
?L23:
	ld	AL,#-H'5800
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'001C)
	bcc	?L22
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_handleGattMsg
?L22:
?LBE_gattClientMsgHandler:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 19 used[1] = 5 used[3] = 2 total = 26
;# Function pattern *movqi3 used[0] = 19 total = 19
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *addqi2 used[2] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 6 total = 6
	MODULE	gatt_client_write
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\ADK4.0.0\tools/include/firmware
;# -IC:\ADK4.0.0\tools/include/standard
;# -IC:\ADK4.0.0\tools/include/profiles/BlueLab-7.0.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -massisted-crt0 -mlarge-mode -mno-inline-block-copy-mode
;# -mfunction-ptr-pi -mal-first -mleaf-optim -mno-function-sizeof
;# -mworkaround-b96516 -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_writeGattClientConfigValue:
	enterl	#6
?LBB_writeGattClientConfigValue:
	ld	X,#H'0002
	st	X,@(H'0002,Y)
?LBB2:
	ld	X,#H'0000
	st	X,@(H'0003,Y)
	ld	X,#H'0002
	st	X,@(0,Y)
	ld	X,@$XAP_UY
	add	X,#H'0002
	st	X,@(H'0001,Y)
	bsr	$_GattManagerWriteCharacteristicValue
?LBE2:
?LBE_writeGattClientConfigValue:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
$_handleWriteValueResp:
	enterl	#2
?LBB_handleWriteValueResp:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	tst	@(H'0002,X)
	bne	?L3
	ld	X,@$XAP_AL
	ld	AH,@(H'0003,X)
	bsr	$_gattClientSendInitSuccessCfm
	bra	(?L2)
?L3:
	ld	X,@H'fff8
	ld	AH,@(H'0003,X)
	bsr	$_gattClientSendInitDiscoveryErrorCfm
?L2:
?LBE_handleWriteValueResp:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 7 used[1] = 1 total = 8
;# Function pattern *movqi3 used[0] = 5 total = 5
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern movstrqi+3 used[1] = 1 total = 1
	MODULE	atoi
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_atoi:
	enterl	#2
?LBB_atoi:
	ld	X,@$XAP_AL
?LBB2:
	ld	AH,#H'0000
	ld	AL,@(0,X)
	add	AL,#-H'0030
	cmp	AL,#(H'0001+H'0009)
	bcc	?L7
?L5:
	ld	AL,@$XAP_AH
	smult	#H'000A
	ld	AH,@(0,X)
	add	AH,@$XAP_AL
	add	AH,#-H'0030
	add	X,#H'0001
	ld	AL,@(0,X)
	add	AL,#-H'0030
	cmp	AL,#H'0009
	bcz	?L5
?L7:
?LBE2:
	ld	AL,@$XAP_AH
?LBE_atoi:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 4 used[2] = 1 total = 5
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	calloc
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_calloc:
	enterl	#5
?LBB_calloc:
	ld	X,@$XAP_AH
?LBB2:
	smult	@$XAP_UXL
	st	AL,@(H'0002,Y)
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
?L2:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_calloc:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 used[1] = 2 total = 6
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *mulqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	memcpy
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_memcpy:
	enterl	#2
?LBB_memcpy:
	st	AL,@H'fff9
	ld	AL,@(H'0002,Y)
	ld	X,@H'fff9
?LBB2:
	st	X,@H'fff8
	add	AL,#-H'0001
	st	AL,@(-1,Y)
	cmp	AL,#-H'0001
	beq	?L7
?L5:
	ld	X,@$XAP_AH
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	add	AH,#H'0001
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	ld	X,#-H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	cmp	X,#-H'0001
	bne	?L5
?L7:
?LBE2:
	ld	AL,@H'fff9
?LBE_memcpy:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 7 used[1] = 3 total = 10
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 2 used[2] = 2 total = 4
;# Function pattern movstrqi+5 used[0] = 2 total = 2
	MODULE	memset
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_memset:
	enterl	#4
?LBB_memset:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L2
	ld	X,@(H'0001,Y)
?LBB3:
	st	AL,@(0,X)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	add	AH,#-H'0001
	st	AH,@(0,Y)
	ld	AH,@$XAP_UXL
	bsr	$_memcpy
?L2:
?LBE3:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_memset:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 1 total = 7
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	strlen
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_strlen:
	enterl	#2
?LBB_strlen:
?LBB2:
	ld	AH,@$XAP_AL
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L7
?L5:
	add	AH,#H'0001
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L5
?L7:
	nadd	AL,@$XAP_AH
?LBE2:
?LBE_strlen:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *subqi3 used[1] = 1 total = 1
;# Function pattern movstrqi+3 used[1] = 2 total = 2
	MODULE	strcpy
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_strcpy:
	enterl	#2
?LBB_strcpy:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB2:
	ld	AH,@$XAP_AL
	ld	X,@H'fff9
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	cmp	AL,#H'0000
	beq	?L7
?L5:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	ld	X,#H'0001
	add	X,@H'fff9
	st	X,@H'fff9
	ld	AL,@(0,X)
	ld	X,@H'fff8
	st	AL,@(0,X)
	cmp	AL,#H'0000
	bne	?L5
?L7:
?LBE2:
	ld	AL,@$XAP_AH
?LBE_strcpy:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 8 used[1] = 3 total = 11
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[2] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 2 total = 2
	MODULE	strncmp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_strncmp:
	enterl	#2
?LBB_strncmp:
	st	AL,@H'fff8
	ld	AL,@(H'0002,Y)
	ld	X,#-H'0001
	add	X,@$XAP_AL
	st	X,@(-1,Y)
	cmp	X,#-H'0001
	beq	?L3
	ld	X,@H'fff8
	tst	@(0,X)
	bne	?L10
	ld	X,@$XAP_AH
	tst	@(0,X)
	beq	?L3
?L10:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bcc	?L6
	ld	AL,#-H'0001
	bra	(?L1)
?L6:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bcz	?L7
	ld	AL,#H'0001
	bra	(?L1)
?L7:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	add	AH,#H'0001
	ld	X,#-H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	cmp	X,#-H'0001
	beq	?L3
	ld	X,@$XAP_AL
	tst	@(0,X)
	bne	?L10
	ld	X,@$XAP_AH
	tst	@(0,X)
	bne	?L10
?L3:
	ld	AL,#H'0000
?L1:
?LBE_strncmp:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 9 used[1] = 3 total = 12
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movqi8 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 1 used[2] = 3 total = 4
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[1] = 4 total = 4
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	memcmp
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_memcmp:
	enterl	#2
?LBB_memcmp:
	ld	X,@(H'0002,Y)
?LBB2:
	st	AL,@H'fff8
	ld	AL,#-H'0001
	add	AL,@$XAP_UXL
	st	AL,@(-1,Y)
	cmp	AL,#-H'0001
	beq	?L11
?L9:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bcc	?L5
	ld	AL,#-H'0001
	bra	(?L1)
?L5:
	ld	X,@H'fff8
	ld	AL,@(0,X)
	ld	X,@$XAP_AH
	cmp	AL,@(0,X)
	bcz	?L7
	ld	AL,#H'0001
	bra	(?L1)
?L7:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	add	AH,#H'0001
	ld	X,#-H'0001
	add	X,@(-1,Y)
	st	X,@(-1,Y)
	cmp	X,#-H'0001
	bne	?L9
?L11:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_memcmp:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 2 total = 8
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movqi8 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 1 used[2] = 3 total = 4
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	memcmp8
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_memcmp8:
	enterl	#2
?LBB_memcmp8:
	ld	X,@(H'0002,Y)
?LBB2:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,#-H'0001
	add	AL,@$XAP_UXL
	st	AL,@(-1,Y)
	cmp	AL,#-H'0001
	beq	?L9
?L7:
	ld	X,@H'fff9
?LBB3:
	ld	AH,@(0,X)
	and	AH,#H'00FF
	ld	X,@H'fff8
	ld	AL,@(0,X)
	and	AL,#H'00FF
	cmp	AH,@$XAP_AL
	bge	?L5
	ld	AL,#-H'0001
	bra	(?L1)
?L5:
	cmp	AH,@$XAP_AL
	ble	?L6
	ld	AL,#H'0001
	bra	(?L1)
?L6:
	ld	AL,#H'0001
	add	AL,@H'fff9
	st	AL,@H'fff9
	ld	X,#H'0001
	add	X,@H'fff8
	st	X,@H'fff8
?LBE3:
	ld	AL,#-H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
	cmp	AL,#-H'0001
	bne	?L7
?L9:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_memcmp8:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 6 used[1] = 2 total = 8
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *movqi8 used[0] = 4 total = 4
;# Function pattern *addqi2 used[2] = 4 total = 4
;# Function pattern *andqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern movstrqi+5 used[0] = 4 total = 4
	MODULE	isdigit
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_isdigit:
; leaf function with empty stack frame
?LBB_isdigit:
	ld	AH,#H'0000
	add	AL,#-H'0030
	cmp	AL,#(H'0001+H'0009)
	bcc	?L2
	ld	AH,#H'0001
?L2:
	ld	AL,@$XAP_AH
?LBE_isdigit:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	printf
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_printf:
	enterl	#3
?LBB_printf:
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	add	AL,#H'0003
?LBB2:
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	$___print
?LBE2:
?LBE_printf:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	sprintf
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_sprintf:
	enterl	#3
?LBB_sprintf:
	ld	AH,@(H'0003,Y)
	ld	X,@$XAP_UY
?LBB2:
	add	X,#H'0004
	st	X,@(0,Y)
	bsr	$___print
?LBE2:
?LBE_sprintf:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	puts
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_puts:
	enterl	#3
?LBB_puts:
	st	AL,@(0,Y)
	ld	X,@$XAP_AL
	tst	@(0,X)
	beq	?L7
?L5:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	add	X,#H'0001
	st	X,@(0,Y)
	bsr	$_putchar
	ld	X,@(0,Y)
	tst	@(0,X)
	bne	?L5
?L7:
	ld	AL,#H'000A
	bsr	$_putchar
	ld	AL,#H'0001
?LBE_puts:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi3 used[0] = 4 total = 4
;# Function pattern *movqi8 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[1] = 2 total = 2
	MODULE	udiv
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$___udivhi3:
	enterl	#7
?LBB___udivhi3:
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?LBB2:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	add	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$__udivmod
?LBE2:
?LBE___udivhi3:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	MessageSend
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MessageSend:
	enterl	#5
?LBB_MessageSend:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	X,#-H'0001
	st	X,@(H'0002,Y)
	st	X,@(H'0001,Y)
	bsr	$_MessageSendLater
?LBE_MessageSend:
	leavel	#5
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
	MODULE	MessageCancelAll
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MessageCancelAll:
	enterl	#5
?LBB_MessageCancelAll:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0000
	bra	(?L6)
?L5:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
?L6:
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_MessageCancelFirst
	cmp	AL,#H'0000
	bne	?L5
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_MessageCancelAll:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 3 total = 6
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	MessageLoop
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MessageLoop:
	enterl	#6
?LBB_MessageLoop:
?L2:
?LBB2:
?LBB3:
	ld	AL,@$XAP_UY
	add	AL,#H'0001
	bsr	$_MessageWait
	ld	X,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	st	AL,@(-3,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	st	AH,@(-1,Y)
	st	AL,@(-2,Y)
	ld	AL,@$XAP_UXL
	ld	AH,@(-3,Y)
	bsr	?L5
?L5:
	add	X,@(-2,Y)
	st	X,@H'ffff
	ld	X,@$XAP_UXH
	addc	X,@(-1,Y)
	st	X,@(-1,Y)
	ld	XH,@(-1,Y)
	ld	X,@H'ffff
	bsr	-?L5,X
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_MessageFree
?LBE3:
	bra	(?L2)
?LBE2:
?LBE_MessageLoop:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi8 used[0] = 5 total = 5
;# Function pattern *movhi used[0] = 1 used[2] = 1 total = 2
;# Function pattern *addqi0 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call4 used[0] = 1 total = 1
	MODULE	MessageSendConditionallyOnTask
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_MessageSendConditionallyOnTask:
	enterl	#4
?LBB_MessageSendConditionallyOnTask:
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	$_MessageSendConditionally
?LBE_MessageSendConditionallyOnTask:
	leavel	#4
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 used[1] = 1 total = 3
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
	MODULE	StreamConnectAndDispose
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_StreamConnectAndDispose:
	enterl	#2
?LBB_StreamConnectAndDispose:
?LBB2:
	bsr	$___stream_connect_and_dispose
?LBE2:
?LBE_StreamConnectAndDispose:
	leavel	#2
	ENDMOD

;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	SourceIsValid
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_SourceIsValid:
	enterl	#2
?LBB_SourceIsValid:
	bsr	$_StreamSinkFromSource
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0001
?L2:
?LBE_SourceIsValid:
	leavel	#2
	ENDMOD

;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	SinkIsValid
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_SinkIsValid:
	enterl	#2
?LBB_SinkIsValid:
	bsr	$_StreamSourceFromSink
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0001
?L2:
?LBE_SinkIsValid:
	leavel	#2
	ENDMOD

;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
	MODULE	TestTxStart
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_TestTxStart:
	enterl	#6
?LBB_TestTxStart:
?LBB2:
	ld	X,#H'0001
	st	X,@(0,Y)
	ld	X,@$XAP_UY
	st	AL,@(H'0001,X)
	st	AH,@(H'0002,X)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0003,X)
	ld	AL,#H'0004
	ld	AH,@$XAP_UY
	bsr	$_TestPerform_
?LBE2:
?LBE_TestTxStart:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+2 used[0] = 1 total = 1
	MODULE	print
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_printChar:
	enterl	#2
?LBB_printChar:
	ld	AH,@$XAP_AL
?LBB2:
	ld	X,@$_info
	ld	X,@(0,X)
	ld	AL,@$XAP_UXL
	nadd	AL,#H'0000
	cmp	AL,#(H'0001+H'000F)
	bcc	?L2
	ld	AL,@$XAP_UXL
	nadd	AL,#H'0000
	bsr	$_VmPutChar
	bra	(?L3)
?L2:
	ld	AL,@$_info
	ld	X,@$XAP_AL
	ld	X,@(0,X)
	st	X,@(-1,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0004,X)
	add	AL,@(-1,Y)
	ld	X,@$XAP_AL
	st	AH,@(0,X)
?L3:
	ld	X,@$_info
	ld	AL,@(H'0004,X)
	add	AL,#H'0001
	st	AL,@(H'0004,X)
?LBE2:
?LBE_printChar:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
_printString:
	enterl	#3
?LBB_printString:
	st	AL,@(0,Y)
?LBB3:
	ld	AH,#H'0000
	ld	X,@$_info
	ld	AL,@$XAP_UXL
	cmp	AH,@(H'0003,X)
	bge	?L25
?L10:
	ld	X,@(0,Y)
	add	X,@$XAP_AH
	tst	@(0,X)
	bne	?L7
	ld	X,@$XAP_AL
	st	AH,@(H'0003,X)
?L7:
	add	AH,#H'0001
	ld	AL,@$_info
	ld	X,@$XAP_AL
	cmp	AH,@(H'0003,X)
	blt	?L10
?L25:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	sub	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	X,@$_info
	tst	@(H'0001,X)
	bmi	?L11
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L33
	bpl	?L15
?L33:
	bra	(?L11)
?L15:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L34
	bpl	?L15
?L34:
?L11:
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0003,X)
	cmp	AH,#H'0000
	beq	?L35
	bpl	?L19
?L35:
	bra	(?L28)
?L19:
	ld	X,@(0,Y)
	ld	AL,@(0,X)
	add	X,#H'0001
	st	X,@(0,Y)
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0003,X)
	cmp	AH,#H'0000
	beq	?L36
	bpl	?L19
?L36:
?L28:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L37
	bpl	?L23
?L37:
	bra	(?L30)
?L23:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L38
	bpl	?L23
?L38:
?L30:
?LBE3:
?LBE_printString:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	.SEG	CONST
_digits:
	dc	H'30
	dc	H'31
	dc	H'32
	dc	H'33
	dc	H'34
	dc	H'35
	dc	H'36
	dc	H'37
	dc	H'38
	dc	H'39
	dc	H'61
	dc	H'62
	dc	H'63
	dc	H'64
	dc	H'65
	dc	H'66
	dc	H'30
	dc	H'31
	dc	H'32
	dc	H'33
	dc	H'34
	dc	H'35
	dc	H'36
	dc	H'37
	dc	H'38
	dc	H'39
	dc	H'41
	dc	H'42
	dc	H'43
	dc	H'44
	dc	H'45
	dc	H'46
	.CODE
_printUnsigned8:
	enterl	#5
?LBB_printUnsigned8:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?LBB4:
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	smult	#H'0003
	st	AL,@(H'0002,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@(H'0002,Y)
	cmp	AH,#H'0000
	bne	?L72
	cmp	AL,#H'0000
	beq	?L64
?L72:
?L43:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'0002,Y)
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	add	AL,#H'0001
	st	AL,@(H'0003,X)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@(H'0002,Y)
	cmp	AH,#H'0000
	bne	?L43
	cmp	AL,#H'0000
	bne	?L43
?L64:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0003
	st	AL,@(H'0002,Y)
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	sub	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	X,@$_info
	tst	@(H'0001,X)
	bmi	?L44
	ld	AL,@(H'0001,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L45
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L74
	bpl	?L49
?L74:
	bra	(?L44)
?L49:
	ld	AL,#H'0030
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L75
	bpl	?L49
?L75:
	bra	(?L44)
?L45:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L76
	bpl	?L54
?L76:
	bra	(?L44)
?L54:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L77
	bpl	?L54
?L77:
?L44:
	tst	@(H'0002,Y)
	bmi	?L69
?L58:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@(H'0002,Y)
	ld	X,@$XAP_AL
	and	X,#H'0007
	ld	AL,@(_digits,X)
	bsr	_printChar
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0003
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bpl	?L58
?L69:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L78
	bpl	?L62
?L78:
	bra	(?L71)
?L62:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L79
	bpl	?L62
?L79:
?L71:
?LBE4:
?LBE_printUnsigned8:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
_printUnsigned16:
	enterl	#5
?LBB_printUnsigned16:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?LBB5:
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0002,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@(H'0002,Y)
	cmp	AH,#H'0000
	bne	?L113
	cmp	AL,#H'0000
	beq	?L105
?L113:
?L84:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@(H'0002,Y)
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	add	AL,#H'0001
	st	AL,@(H'0003,X)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@(H'0002,Y)
	cmp	AH,#H'0000
	bne	?L84
	cmp	AL,#H'0000
	bne	?L84
?L105:
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0004
	st	AL,@(H'0002,Y)
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	sub	AL,@(H'0003,X)
	st	AL,@(H'0002,X)
	ld	X,@$_info
	tst	@(H'0001,X)
	bmi	?L85
	ld	AL,@(H'0001,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L86
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L115
	bpl	?L90
?L115:
	bra	(?L85)
?L90:
	ld	AL,#H'0030
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L116
	bpl	?L90
?L116:
	bra	(?L85)
?L86:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L117
	bpl	?L95
?L117:
	bra	(?L85)
?L95:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L118
	bpl	?L95
?L118:
?L85:
	tst	@(H'0002,Y)
	bmi	?L110
?L99:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	lsr	@(H'0002,Y)
	and	AL,#H'000F
	ld	X,@$_info
	ld	X,@(H'0001,X)
	and	X,#H'0010
	add	X,#(_digits)
	add	X,@$XAP_AL
	ld	AL,@(0,X)
	bsr	_printChar
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0004
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bpl	?L99
?L110:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L119
	bpl	?L103
?L119:
	bra	(?L112)
?L103:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L120
	bpl	?L103
?L120:
?L112:
?LBE5:
?LBE_printUnsigned16:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
_printUnsigned10:
	enterl	#5
?LBB_printUnsigned10:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
?LBB6:
	ld	X,@$_info
	ld	AH,@(H'0001,X)
	ld	AL,@$XAP_AH
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L122
	ld	X,@(H'0002,X)
	st	X,@H'fff9
	ld	AL,@$XAP_AH
	and	AL,#H'000D
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,#-H'0001
	add	AL,@$XAP_UXL
	st	AL,@H'fff9
?L123:
	ld	X,@$_info
	ld	AL,@(H'0003,X)
	cmp	AL,@H'fff9
	bge	?L122
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0003,X)
	ld	AL,@H'ffff
?L122:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'3B9AC9FF)
	bcs	?L125
	bne	?L231
	cmp	AL,#lwrd(H'0001+H'3B9AC9FF)
	bcs	?L125
?L231:
	ld	AL,#H'000A
	bra	(?L228)
?L125:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'5F5E0FF)
	bcs	?L127
	bne	?L232
	cmp	AL,#lwrd(H'0001+H'5F5E0FF)
	bcs	?L127
?L232:
	ld	AL,#H'0009
	bra	(?L228)
?L127:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'98967F)
	bcs	?L129
	bne	?L233
	cmp	AL,#lwrd(H'0001+H'98967F)
	bcs	?L129
?L233:
	ld	AL,#H'0008
	bra	(?L228)
?L129:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'F423F)
	bcs	?L131
	bne	?L234
	cmp	AL,#lwrd(H'0001+H'F423F)
	bcs	?L131
?L234:
	ld	AL,#H'0007
	bra	(?L228)
?L131:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'1869F)
	bcs	?L133
	bne	?L235
	cmp	AL,#lwrd(H'0001+H'1869F)
	bcs	?L133
?L235:
	ld	AL,#H'0006
	bra	(?L228)
?L133:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'270F)
	bcs	?L135
	bne	?L236
	cmp	AL,#lwrd(H'0001+H'270F)
	bcs	?L135
?L236:
	ld	AL,#H'0005
	bra	(?L228)
?L135:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'03E7
	bcz	?L137
	ld	X,#H'0004
	bra	(?L227)
?L137:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0063
	bcz	?L139
	ld	AH,#H'0003
	bra	(?L226)
?L139:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0009
	bcz	?L141
	ld	AL,#H'0002
?L228:
	st	AL,@(H'0002,Y)
	bra	(?L126)
?L141:
	tst	@(H'0001,Y)
	beq	?L143
	ld	X,#H'0001
?L227:
	st	X,@(H'0002,Y)
	bra	(?L126)
?L143:
	ld	AH,#H'0000
?L226:
	st	AH,@(H'0002,Y)
?L126:
	ld	X,@$_info
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0003,X)
	bge	?L145
	ld	X,@(H'0003,X)
	st	X,@(H'0002,Y)
?L145:
	ld	X,@$_info
	ld	AH,@(H'0002,X)
	sub	AH,@(H'0002,Y)
	ld	AL,@(H'0001,X)
	and	AL,#H'0005
	cmp	AL,#H'0000
	beq	?L146
	add	AH,#-H'0001
?L146:
	st	AH,@(H'0002,X)
	ld	X,@$_info
	ld	AL,@(H'0001,X)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L147
	ld	AL,@(H'0002,X)
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	ld	AL,#H'0020
	bsr	_printChar
?L147:
	ld	X,@$_info
	tst	@(H'0001,X)
	bmi	?L148
	ld	AL,@(H'0001,X)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L149
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L241
	bpl	?L153
?L241:
	bra	(?L148)
?L153:
	ld	AL,#H'0030
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L242
	bpl	?L153
?L242:
	bra	(?L148)
?L149:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L243
	bpl	?L158
?L243:
	bra	(?L148)
?L158:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L244
	bpl	?L158
?L244:
?L148:
	ld	X,@$_info
	ld	AL,@(H'0001,X)
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L159
	ld	AL,#H'002D
	bra	(?L229)
?L159:
	ld	X,@$_info
	ld	AL,@(H'0001,X)
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L160
	ld	AL,#H'002B
?L229:
	bsr	_printChar
?L160:
	ld	X,@(H'0002,Y)
	cmp	X,#(H'0001+H'0009)
	bcc	?L163
	ld	X,@(?JTBASE214,X)
	brxl
	.SEG	CONST
?JTBASE214:
	.CODE
?L214:
	.SEG	CONST
	dc	lwrd(?L162-?L214)
	dc	lwrd(?L208-?L214)
	dc	lwrd(?L203-?L214)
	dc	lwrd(?L198-?L214)
	dc	lwrd(?L193-?L214)
	dc	lwrd(?L188-?L214)
	dc	lwrd(?L183-?L214)
	dc	lwrd(?L178-?L214)
	dc	lwrd(?L173-?L214)
	dc	lwrd(?L168-?L214)
	.CODE
?L163:
	ld	X,#H'0000
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,#hwrd(H'0001+H'3B9AC9FF)
	bcs	?L223
	bne	?L245
	cmp	AL,#lwrd(H'0001+H'3B9AC9FF)
	bcs	?L223
?L245:
?L167:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	add	AL,#H'3600
	nop
	addc	AH,#H'C465
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	add	X,#H'0001
	cmp	AH,#hwrd(H'0001+H'3B9AC9FF)
	bcs	?L246
	bne	?L167
	cmp	AL,#lwrd(H'0001+H'3B9AC9FF)
	bcc	?L167
?L246:
?L223:
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L168:
	ld	X,#-H'0001
?L169:
	add	X,#H'0001
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	add	AL,#H'1F00
	nop
	addc	AH,#H'FA0A
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	cmp	AH,#H'0000
	bpl	?L169
	add	AL,#H'E100
	nop
	addc	AH,#H'05F5
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L173:
	ld	X,#-H'0001
?L174:
	add	X,#H'0001
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	add	AL,#H'6980
	nop
	addc	AH,#H'FF67
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	cmp	AH,#H'0000
	bpl	?L174
	add	AL,#H'9680
	nop
	addc	AH,#H'0098
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L178:
	ld	X,#-H'0001
?L179:
	add	X,#H'0001
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	add	AL,#H'BDC0
	nop
	addc	AH,#H'FFF0
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	cmp	AH,#H'0000
	bpl	?L179
	add	AL,#H'4240
	nop
	addc	AH,#H'000F
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L183:
	ld	X,#-H'0001
?L184:
	add	X,#H'0001
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	add	AL,#H'7960
	nop
	addc	AH,#H'FFFE
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	cmp	AH,#H'0000
	bpl	?L184
	add	AL,#H'86A0
	nop
	addc	AH,#H'0001
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L188:
	ld	X,#-H'0001
?L189:
	add	X,#H'0001
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	add	AL,#H'D8F0
	nop
	addc	AH,#H'FFFF
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	cmp	AH,#H'0000
	bpl	?L189
	add	AL,#H'2710
	nop
	addc	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L193:
	ld	X,#-H'0001
	ld	AL,@(H'0001,Y)
	st	AL,@H'fff9
?L194:
	add	X,#H'0001
	ld	AH,#-H'03E8
	add	AH,@H'fff9
	st	AH,@H'fff9
	cmp	AH,#H'0000
	bpl	?L194
	asr	#H'0010
	add	AL,#H'03E8
	nop
	addc	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L198:
	ld	X,#-H'0001
	ld	AL,@(H'0001,Y)
	st	AL,@H'fff9
?L199:
	add	X,#H'0001
	ld	AH,#-H'0064
	add	AH,@H'fff9
	st	AH,@H'fff9
	cmp	AH,#H'0000
	bpl	?L199
	asr	#H'0010
	add	AL,#H'0064
	nop
	addc	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L203:
	ld	X,#-H'0001
	ld	AL,@(H'0001,Y)
	st	AL,@H'fff9
?L204:
	add	X,#H'0001
	ld	AH,#-H'000A
	add	AH,@H'fff9
	st	AH,@H'fff9
	cmp	AH,#H'0000
	bpl	?L204
	asr	#H'0010
	add	AL,#H'000A
	nop
	addc	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L208:
	ld	X,#-H'0001
	ld	AL,@(H'0001,Y)
	st	AL,@H'fff9
?L209:
	add	X,#H'0001
	ld	AH,#-H'0001
	add	AH,@H'fff9
	st	AH,@H'fff9
	cmp	AH,#H'0000
	bpl	?L209
	ld	AL,#H'0030
	add	AL,@$XAP_UXL
	bsr	_printChar
?L162:
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L252
	bpl	?L218
?L252:
	bra	(?L225)
?L218:
	ld	AL,#H'0020
	bsr	_printChar
	ld	X,@$_info
	ld	AL,@(H'0002,X)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,X)
	cmp	AH,#H'0000
	beq	?L253
	bpl	?L218
?L253:
?L225:
?LBE6:
?LBE_printUnsigned10:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
$___print:
	enterl	#8
?LBB___print:
	st	AH,@(H'0005,Y)
?LBB7:
	st	Y,@$_info
	st	AL,@(0,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	tst	@(0,X)
	beq	?L330
?L327:
	ld	X,@(H'0005,Y)
?LBB8:
	ld	AL,@(0,X)
	add	X,#H'0001
	st	X,@(H'0005,Y)
	cmp	AL,#H'0025
	bne	?L258
?LBB9:
	ld	AH,#H'0001
	st	AH,@H'fff8
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AH,#H'0000
?L272:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002D
	bne	?L262
	or	AH,#-H'8000
	bra	(?L337)
?L262:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002B
	bne	?L264
	or	AH,#H'0004
	bra	(?L337)
?L264:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0030
	bne	?L266
	or	AH,#H'0002
	bra	(?L337)
?L266:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0020
	bne	?L268
	or	AH,#H'0008
	bra	(?L337)
?L268:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0023
	bne	?L270
?L337:
	add	X,#H'0001
	st	X,@(H'0005,Y)
	bra	(?L259)
?L270:
	ld	AL,#H'0000
	st	AL,@H'fff8
?L259:
	tst	@H'fff8
	bne	?L272
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	bpl	?L273
	ld	AL,@$XAP_AH
	and	AL,#-H'0003
	st	AL,@(H'0001,Y)
?L273:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bra	(?L274)
?L277:
	ld	AL,@(H'0002,Y)
	smult	#H'000A
	ld	X,@(H'0005,Y)
	add	AL,@(0,X)
	add	AL,#-H'0030
	st	AL,@(H'0002,Y)
	add	X,#H'0001
	st	X,@(H'0005,Y)
?L274:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_isdigit
	cmp	AL,#H'0000
	bne	?L277
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002A
	bne	?L278
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
?L278:
	tst	@(H'0002,Y)
	bpl	?L279
	ld	AL,@(H'0002,Y)
	nadd	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	or	AL,#-H'8000
	st	AL,@(H'0001,Y)
?L279:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002E
	bne	?L280
	bra	(?L338)
?L284:
	ld	AL,@(H'0001,Y)
	or	AL,#H'0020
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	smult	#H'000A
	ld	X,@(H'0005,Y)
	add	AL,@(0,X)
	add	AL,#-H'0030
	st	AL,@(H'0003,Y)
?L338:
	add	X,#H'0001
	st	X,@(H'0005,Y)
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_isdigit
	cmp	AL,#H'0000
	bne	?L284
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'002A
	bne	?L280
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	AL,@(0,X)
	st	AL,@(H'0003,Y)
	tst	@(0,X)
	bmi	?L286
	ld	AL,@(H'0001,Y)
	or	AL,#H'0020
	st	AL,@(H'0001,Y)
?L286:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
?L280:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_tolower
	cmp	AL,#H'0068
	beq	?L288
	cmp	AL,#H'006C
	beq	?L289
	bra	(?L287)
?L288:
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	bra	(?L287)
?L289:
	ld	AL,@(H'0001,Y)
	or	AL,#H'0040
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
?L287:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_isupper
	cmp	AL,#H'0000
	beq	?L292
	ld	AL,@(H'0001,Y)
	or	AL,#H'0010
	st	AL,@(H'0001,Y)
?L292:
	ld	AL,@(H'0001,Y)
	and	AL,#H'0020
	cmp	AL,#H'0000
	bne	?L293
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	cmp	AL,#H'0073
	bne	?L294
	ld	AL,#H'7FFF
	bra	(?L295)
?L294:
	ld	AL,#H'0001
?L295:
	st	AL,@(H'0003,Y)
?L293:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	$_tolower
	add	AL,#-H'0063
	cmp	AL,#(H'0001+H'0015)
	bcc	?L324
	ld	X,@$XAP_AL
	ld	X,@(?JTBASE325,X)
	brxl
	.SEG	CONST
?JTBASE325:
	.CODE
?L325:
	.SEG	CONST
	dc	lwrd(?L313-?L325)
	dc	lwrd(?L308-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L308-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L301-?L325)
	dc	lwrd(?L298-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L323-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L304-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L324-?L325)
	dc	lwrd(?L298-?L325)
	.CODE
?L298:
	ld	AL,@(H'0001,Y)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L299
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	st	AH,@(H'0008,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	bra	(?L341)
?L299:
	ld	X,@(H'0008,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
?L341:
	bsr	_printUnsigned16
	bra	(?L296)
?L301:
	ld	AL,@(H'0001,Y)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L302
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	st	AH,@(H'0008,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	bra	(?L340)
?L302:
	ld	X,@(H'0008,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
?L340:
	bsr	_printUnsigned8
	bra	(?L296)
?L304:
	ld	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	and	AH,#-H'000D
	st	AH,@(H'0001,Y)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L305
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	st	AH,@(H'0008,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	bra	(?L312)
?L305:
	ld	X,@(H'0008,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	ld	AL,@(0,X)
	bra	(?L312)
?L308:
?LBB10:
	ld	AL,@(H'0001,Y)
	and	AL,#H'0040
	cmp	AL,#H'0000
	beq	?L309
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0002
	st	AH,@(H'0008,Y)
	ld	AH,@(0,X)
	ld	AL,@(1,X)
	bra	(?L339)
?L309:
	ld	X,@(H'0008,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	X,@(0,X)
	ld	AH,@$XAP_UXL
	asr	#H'0010
?L339:
	st	AH,@H'fff8
	st	AL,@H'fff9
	cmp	AH,#H'0000
	bpl	?L311
	ld	AL,@(H'0001,Y)
	and	AL,#-H'000D
	or	AL,#H'0001
	st	AL,@(H'0001,Y)
?L311:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bpl	?L312
	nadd	AL,#H'0000
	xor	AH,#H'FFFF
	addc	AH,#H'0000
?L312:
	bsr	_printUnsigned10
?LBE10:
	bra	(?L296)
?L313:
	ld	AL,@(H'0002,Y)
	ld	AH,#-H'0001
	add	AH,@$XAP_AL
	st	AH,@(H'0002,Y)
	tst	@(H'0001,Y)
	bmi	?L314
	add	AL,#-H'0002
	st	AL,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L356
	bpl	?L318
?L356:
	bra	(?L314)
?L318:
	ld	AL,#H'0020
	bsr	_printChar
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L357
	bpl	?L318
?L357:
?L314:
	ld	X,@(H'0008,Y)
	ld	AL,@$XAP_UXL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AL,@(0,X)
	bsr	_printChar
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L358
	bpl	?L322
?L358:
	bra	(?L296)
?L322:
	ld	AL,#H'0020
	bsr	_printChar
	ld	AL,@(H'0002,Y)
	ld	AH,@$XAP_AL
	add	AL,#-H'0001
	st	AL,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L359
	bpl	?L322
?L359:
	bra	(?L296)
?L323:
	ld	X,@(H'0008,Y)
	ld	AH,@$XAP_UXL
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	AL,@(0,X)
	bsr	_printString
	bra	(?L296)
?L324:
	ld	X,@(H'0005,Y)
	ld	AL,@(0,X)
	bsr	_printChar
?L296:
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
?LBE9:
	bra	(?L255)
?L258:
	bsr	_printChar
?L255:
	ld	X,@(H'0005,Y)
?LBE8:
	tst	@(0,X)
	bne	?L327
?L330:
?LBB11:
	ld	AH,@(0,Y)
	ld	AL,@$XAP_AH
	nadd	AL,#H'0000
	cmp	AL,#H'000F
	bcz	?L328
	ld	X,@(H'0004,Y)
	add	X,@$XAP_AH
	ld	AL,#H'0000
	st	AL,@(0,X)
?L328:
?LBE11:
	ld	AL,@(H'0004,Y)
?LBE7:
?LBE___print:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE7
	.SEG	VAR
$_info:
	DS	1
	ENDMOD

;# Function pattern *movqi2 used[0] = 165 used[1] = 15 used[3] = 1 total = 181
;# Function pattern *movqi3 used[0] = 179 total = 179
;# Function pattern *movqi8 used[0] = 44 total = 44
;# Function pattern *movhi used[2] = 24 used[3] = 18 total = 42
;# Function pattern *addhi3 used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 80 used[2] = 18 total = 98
;# Function pattern *andqi3 used[0] = 20 total = 20
;# Function pattern *iorqi3 used[0] = 10 total = 10
;# Function pattern *subqi3 used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 4 total = 4
;# Function pattern *extendqihi2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern *lshrhi3 used[0] = 6 total = 6
;# Function pattern negqi2 used[0] = 4 total = 4
;# Function pattern neghi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 50 total = 50
;# Function pattern *call1 used[0] = 36 total = 36
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern tablejump_1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 52 used[1] = 14 total = 66
;# Function pattern movstrqi+4 used[1] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 20 total = 20
;# Function pattern movstrqi+6 used[0] = 11 total = 11
;# Function pattern movstrqi+7 used[0] = 8 total = 8
	MODULE	__stream_connect_and_dispose
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
_cleanup_handler:
	enterl	#2
?LBB_cleanup_handler:
?LBB2:
	cmp	AH,#-H'7FDA
	bne	?L1
	ld	X,@(H'0002,Y)
?LBB3:
	ld	AL,@(0,X)
	bsr	$_StreamSinkFromSource
	cmp	AL,#H'0000
	beq	?L1
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
	ld	X,@(H'0002,Y)
	ld	AL,@(0,X)
	bsr	$_StreamConnectDispose
?L1:
?LBE3:
?LBE2:
?LBE_cleanup_handler:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	.SEG	CONST
_cleanup:
	dc	hwrd(_cleanup_handler)
	dc	lwrd(_cleanup_handler)
	.CODE
$___stream_connect_and_dispose:
	enterl	#5
?LBB___stream_connect_and_dispose:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB4:
	cmp	AL,#H'0000
	beq	?L6
?LBB5:
	bsr	$_StreamSinkFromSource
	st	AL,@(H'0002,Y)
	ld	AH,#(_cleanup)
	bsr	$_MessageSinkTask
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_StreamConnect
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,#H'0001
	bra	(?L5)
?L7:
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	bsr	$_MessageSinkTask
	ld	AL,@(0,Y)
	bsr	$_StreamConnectDispose
?L6:
?LBE5:
	ld	AL,#H'0000
?L5:
?LBE4:
?LBE___stream_connect_and_dispose:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 3 used[1] = 4 total = 7
;# Function pattern *movqi3 used[0] = 9 total = 9
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern movstrqi+3 used[0] = 3 total = 3
;# Function pattern movstrqi+5 used[0] = 1 total = 1
	MODULE	udivmod
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$__udivmod:
	enterl	#7
?LBB__udivmod:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?LBB2:
	cmp	AH,#hwrd(H'0001+H'0001)
	bcs	?L17
	bne	?L8
	cmp	AL,#lwrd(H'0001+H'0001)
	bcc	?L8
?L17:
	ld	AL,#H'0000
	ld	X,@(H'0009,Y)
	st	AL,@(H'0001,X)
	st	AL,@(0,X)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bra	(?L7)
?L8:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,@(H'0007,Y)
	bcs	?L18
	bne	?L10
	cmp	AL,@(H'0008,Y)
	bcc	?L10
?L18:
	ld	X,@(H'0009,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AL,#H'0000
	ld	AH,#H'0000
	bra	(?L7)
?L10:
?LBB3:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	_count_leading_zeros
	st	AL,@(H'0004,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_count_leading_zeros
	nadd	AL,@(H'0004,Y)
	st	AL,@(H'0004,Y)
?L12:
?LBB4:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	asl	@(H'0004,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,@H'fff8
	bcs	?L14
	bne	?L19
	cmp	AL,@H'fff9
	bcs	?L14
?L19:
	sub	AL,@H'fff9
	nop
	subc	AH,@H'fff8
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@(H'0004,Y)
	add	AL,@(H'0003,Y)
	nop
	addc	AH,@(H'0002,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?L14:
	ld	AL,@(H'0004,Y)
?LBE4:
	add	AL,#-H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	bne	?L12
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	ld	X,@(H'0009,Y)
	st	AH,@(0,X)
	st	AL,@(1,X)
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
?L7:
?LBE3:
?LBE2:
?LBE__udivmod:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
_count_leading_zeros:
	enterl	#2
?LBB_count_leading_zeros:
	st	AH,@H'fff8
	st	AL,@H'fff9
?LBB5:
	lsr	#H'0010
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	X,@H'fffb
	ld	AL,#H'000F
	st	AL,@(-1,Y)
	tst	@H'fffb
	bne	?L2
	ld	X,@H'fff9
	ld	AL,#H'001F
	st	AL,@(-1,Y)
?L2:
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L3
	ld	X,@$XAP_AH
	ld	AL,#-H'0008
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L3:
	ld	AH,@$XAP_UXL
	lsr	#H'0004
	cmp	AH,#H'0000
	beq	?L4
	ld	X,@$XAP_AH
	ld	AL,#-H'0004
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L4:
	ld	AH,@$XAP_UXL
	lsr	#H'0002
	cmp	AH,#H'0000
	beq	?L5
	ld	X,@$XAP_AH
	ld	AL,#-H'0002
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L5:
	ld	AH,@$XAP_UXL
	lsr	#H'0001
	cmp	AH,#H'0000
	beq	?L6
	ld	AL,#-H'0001
	add	AL,@(-1,Y)
	st	AL,@(-1,Y)
?L6:
?LBE5:
	ld	AL,@(-1,Y)
?LBE_count_leading_zeros:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi2 used[0] = 20 used[1] = 3 total = 23
;# Function pattern *movqi3 used[0] = 10 total = 10
;# Function pattern *movhi used[2] = 10 used[3] = 8 total = 18
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *subhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 used[2] = 4 total = 5
;# Function pattern *subqi3 used[1] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern movstrqi+3 used[0] = 4 used[1] = 1 total = 5
;# Function pattern movstrqi+5 used[0] = 1 total = 1
;# Function pattern movstrqi+7 used[0] = 1 used[1] = 2 total = 3
	MODULE	isupper
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_isupper:
; leaf function with empty stack frame
?LBB_isupper:
	ld	AH,#H'0000
	add	AL,#-H'0041
	cmp	AL,#(H'0001+H'0019)
	bcc	?L2
	ld	AH,#H'0001
?L2:
	ld	AL,@$XAP_AH
?LBE_isupper:
	rts
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern movstrqi+4 used[1] = 1 total = 1
	MODULE	tolower
	.LARGE
; GNU C version 3.3.3 (CSR version 30 for xap)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/firmware
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/profiles/BlueLab-7.0.1-Release
;# -I.
;# -IC:/work/p4/bc/bluelab701/result/x86win32/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -massisted-crt0 -mlarge-mode
;# -mno-inline-block-copy-mode -mfunction-ptr-pi -mal-first -mleaf-optim
;# -mno-function-sizeof -mworkaround-b96516 -ansi -auxbase-strip -g -g -O
;# -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident -fpeephole2
;# -fguess-branch-probability -fmath-errno -ftrapping-math -mlarge-mode
;# -mquiet-mode -mbitfield-mode -mleaf-optim -mfunction-ptr-pi
;# -massisted-crt0 -mworkaround-b96516 -mal-first

	.ENHANCED
	.CODE
$_tolower:
	enterl	#3
?LBB_tolower:
	st	AL,@(0,Y)
	bsr	$_isupper
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(0,Y)
	add	AL,#H'0020
	st	AL,@(0,Y)
?L2:
	ld	AL,@(0,Y)
?LBE_tolower:
	leavel	#3
	ENDMOD

;# Function pattern *movqi2 used[0] = 2 used[1] = 1 total = 3
;# Function pattern *movqi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern movstrqi+3 used[0] = 1 total = 1
